void print_minute(int minute) {
  long option = 0;
  switch (minute) {

    // Codegen for 00:00 for 26 quotations:
    case 0:
      option = random(0, 26);
      Serial.print(F("26 options for 00:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("00:00 - As midnight was striking bronze blows upon the dusky air, Dorian Gray, dressed commonly, and with a muffler wrapped round his throat, crept quietly out of his house. - , The Picture of Dorian Gray"));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on was
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on striking
// DEBUG: ['As', 'TIMESTRING', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on bronze
// DEBUG: 62
// DEBUG: (57, 17)
// DEBUG: Operating on blows
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on upon
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on the
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on dusky
// DEBUG: 185
// DEBUG: (180, 17)
// DEBUG: Operating on air,
// DEBUG: ['striking', 'bronze', 'blows', 'upon', 'the', 'dusky']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on Dorian
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on Gray,
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on dressed
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on commonly,
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on and
// DEBUG: ['air,', 'Dorian', 'Gray,', 'dressed', 'commonly,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on with
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on a
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on muffler
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on wrapped
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on round
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on his
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on throat,
// DEBUG: ['and', 'with', 'a', 'muffler', 'wrapped', 'round', 'his']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on crept
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on quietly
// DEBUG: 104
// DEBUG: (99, 53)
// DEBUG: Operating on out
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on of
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on his
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on house.
// DEBUG: 206
// DEBUG: ['midnight']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Picture of Dorian Gray']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "As TIMESTRING was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "striking bronze blows upon the dusky", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "air, Dorian Gray, dressed commonly,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "and with a muffler wrapped round his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- The Picture of Dorian Gray", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("00:00 - But wait till I tell you, he said. \"We had a midnight lunch too after all the jollification and when we sallied forth it was blue o'clock the morning after the night before\" - James Joyce, Ulysses "));
// DEBUG: (5, 5)
// DEBUG: Operating on But
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on wait
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on till
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on I
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on tell
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on you,
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on he
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on said.
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on \"We
// DEBUG: ['But', 'wait', 'till', 'I', 'tell', 'you,', 'he', 'said.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on had
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on a
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on lunch
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on too
// DEBUG: ['\\"We', 'had', 'a', 'TIMESTRING', 'lunch']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on after
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on all
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on jollification
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on and
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on when
// DEBUG: ['too', 'after', 'all', 'the', 'jollification', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on we
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on sallied
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on forth
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on it
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on was
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on blue
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on o'clock
// DEBUG: ['when', 'we', 'sallied', 'forth', 'it', 'was', 'blue']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on morning
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on after
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on the
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on night
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on before\"
// DEBUG: ["o'clock", 'the', 'morning', 'after', 'the', 'night']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['midnight']
// DEBUG: drawing cursor (40, 17)
// DEBUG: ['- James Joyce, Ulysses ']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "But wait till I tell you, he said.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "\"We had a TIMESTRING lunch", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "too after all the jollification and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "when we sallied forth it was blue", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "o'clock the morning after the night", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(40, 17, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- James Joyce, Ulysses ", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("00:00 - Midnight, you said. What is midnight to the young? And suddenly a festive blaze was flung Across five cedar trunks, snow patches showed, And a patrol car on our bumpy road Came to a crunching stop. Retake, retake! - , Pale Fire"));
// DEBUG: (5, 5)
// DEBUG: Operating on Midnight,
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on you
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on said.
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on What
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on is
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Midnight,', 'you', 'said.', 'What', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on to
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on young?
// DEBUG: ['TIMESTRING', 'to', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on And
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on suddenly
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on a
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on festive
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on blaze
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on was
// DEBUG: ['young?', 'And', 'suddenly', 'a', 'festive', 'blaze']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on flung
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on Across
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on five
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on cedar
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on trunks,
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on snow
// DEBUG: ['was', 'flung', 'Across', 'five', 'cedar', 'trunks,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on patches
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on showed,
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on And
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on a
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on patrol
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on car
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on on
// DEBUG: ['snow', 'patches', 'showed,', 'And', 'a', 'patrol', 'car']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on our
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on bumpy
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on road
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on Came
// DEBUG: 129
// DEBUG: (124, 65)
// DEBUG: Operating on to
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on a
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on crunching
// DEBUG: ['on', 'our', 'bumpy', 'road', 'Came', 'to', 'a']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on stop.
// DEBUG: 56
// DEBUG: (51, 77)
// DEBUG: Operating on Retake,
// DEBUG: 106
// DEBUG: (101, 77)
// DEBUG: Operating on retake!
// DEBUG: 156
// DEBUG: ['midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Pale Fire']
// DEBUG: drawing cursor (130, 192)
          paint.Paint_DrawString_EN(5, 5, "Midnight, you said. What is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING to the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "young? And suddenly a festive blaze", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "was flung Across five cedar trunks,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "snow patches showed, And a patrol car", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "on our bumpy road Came to a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(130, 192, "- Pale Fire", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("00:00 - That a man who could hardly see anything more than two feet away from him could be employed as a security guard suggested to me that our job was not to secure anything but to report for work every night, fill the bulky ledger with cryptic remarks like 'Patrolled perimeter 12.00 pm, No Incident' and go to the office every fortnight for our wages and listen to the talkative Ms Elgassier. - , A Squatter's Tale"));
// DEBUG: (5, 5)
// DEBUG: Operating on That
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on a
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on man
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on who
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on could
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on hardly
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on see
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on anything
// DEBUG: ['That', 'a', 'man', 'who', 'could', 'hardly', 'see']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on more
// DEBUG: 48
// DEBUG: (43, 17)
// DEBUG: Operating on than
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on two
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on feet
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on away
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on from
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on him
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on could
// DEBUG: ['anything', 'more', 'than', 'two', 'feet', 'away', 'from', 'him']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on be
// DEBUG: 31
// DEBUG: (26, 29)
// DEBUG: Operating on employed
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on as
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on a
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on security
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on guard
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on suggested
// DEBUG: ['could', 'be', 'employed', 'as', 'a', 'security', 'guard']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on to
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on me
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on that
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on our
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on job
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on was
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on not
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on to
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on secure
// DEBUG: ['suggested', 'to', 'me', 'that', 'our', 'job', 'was', 'not', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on anything
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on but
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on to
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on report
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on for
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on work
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on every
// DEBUG: ['secure', 'anything', 'but', 'to', 'report', 'for', 'work']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on night,
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on fill
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on bulky
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on ledger
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on with
// DEBUG: ['every', 'night,', 'fill', 'the', 'bulky', 'ledger']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on cryptic
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on remarks
// DEBUG: 115
// DEBUG: (110, 77)
// DEBUG: Operating on like
// DEBUG: 144
// DEBUG: (139, 77)
// DEBUG: Operating on 'Patrolled
// DEBUG: ['with', 'cryptic', 'remarks', 'like']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on perimeter
// DEBUG: 85
// DEBUG: (80, 89)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ["'Patrolled", 'perimeter']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on No
// DEBUG: 37
// DEBUG: (32, 101)
// DEBUG: Operating on Incident'
// DEBUG: 101
// DEBUG: (96, 101)
// DEBUG: Operating on and
// DEBUG: 123
// DEBUG: (118, 101)
// DEBUG: Operating on go
// DEBUG: 138
// DEBUG: (133, 101)
// DEBUG: Operating on to
// DEBUG: 153
// DEBUG: (148, 101)
// DEBUG: Operating on the
// DEBUG: 175
// DEBUG: (170, 101)
// DEBUG: Operating on office
// DEBUG: ['TIMESTRING,', 'No', "Incident'", 'and', 'go', 'to', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on every
// DEBUG: 53
// DEBUG: (48, 113)
// DEBUG: Operating on fortnight
// DEBUG: 117
// DEBUG: (112, 113)
// DEBUG: Operating on for
// DEBUG: 139
// DEBUG: (134, 113)
// DEBUG: Operating on our
// DEBUG: 161
// DEBUG: (156, 113)
// DEBUG: Operating on wages
// DEBUG: 197
// DEBUG: (192, 113)
// DEBUG: Operating on and
// DEBUG: ['office', 'every', 'fortnight', 'for', 'our', 'wages']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (9, 125)
// DEBUG: Operating on listen
// DEBUG: 57
// DEBUG: (52, 125)
// DEBUG: Operating on to
// DEBUG: 72
// DEBUG: (67, 125)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 125)
// DEBUG: Operating on talkative
// DEBUG: 158
// DEBUG: (153, 125)
// DEBUG: Operating on Ms
// DEBUG: 173
// DEBUG: (168, 125)
// DEBUG: Operating on Elgassier.
// DEBUG: ['and', 'listen', 'to', 'the', 'talkative', 'Ms']
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['12.00 pm']
// DEBUG: drawing cursor (80, 89)
// DEBUG: ["- A Squatter's Tale"]
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "That a man who could hardly see", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "anything more than two feet away from him", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "could be employed as a security guard", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "suggested to me that our job was not to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "secure anything but to report for work", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "every night, fill the bulky ledger", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "with cryptic remarks like", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "'Patrolled perimeter", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "TIMESTRING, No Incident' and go to the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "office every fortnight for our wages", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "and listen to the talkative Ms", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(80, 89, "12.00 pm", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- A Squatter's Tale", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("00:00 - 'Tis the year's midnight, and it is the day's, Lucy's, who scarce seven hours herself unmasks; The sun is spent, and now his flasks Send forth light squibs, no constant rays; - , Nocturnal on St Lucy's Day"));
// DEBUG: (5, 5)
// DEBUG: Operating on 'Tis
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on year's
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ["'Tis", 'the', "year's"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on it
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on is
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on the
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on day's,
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on Lucy's,
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on who
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on scarce
// DEBUG: ['TIMESTRING,', 'and', 'it', 'is', 'the', "day's,", "Lucy's,", 'who']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on seven
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on hours
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on herself
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on unmasks;
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on The
// DEBUG: ['scarce', 'seven', 'hours', 'herself', 'unmasks;']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on sun
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on is
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on spent,
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on and
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on now
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on his
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on flasks
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on Send
// DEBUG: ['The', 'sun', 'is', 'spent,', 'and', 'now', 'his', 'flasks']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on forth
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on light
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on squibs,
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on no
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on constant
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on rays;
// DEBUG: ['Send', 'forth', 'light', 'squibs,', 'no', 'constant']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['midnight']
// DEBUG: drawing cursor (99, 5)
// DEBUG: ["- Nocturnal on St Lucy's Day"]
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "'Tis the year's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, and it is the day's, Lucy's, who", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "scarce seven hours herself unmasks;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "The sun is spent, and now his flasks", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Send forth light squibs, no constant", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(99, 5, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Nocturnal on St Lucy's Day", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("00:00 - At midnight his wife and daughter might still be bustling about, preparing holiday delicacies in the kitchen, straightening up the house, or perhaps getting their kimonos ready or arranging flowers. Oki would sit in the living room and listen to the radio. As the bells rang he would look back at the departing year. He always found it a moving experience. - , Beauty and Sadness"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on his
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on wife
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on and
// DEBUG: ['At', 'TIMESTRING', 'his', 'wife']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on daughter
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on might
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on still
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on be
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on bustling
// DEBUG: ['and', 'daughter', 'might', 'still', 'be']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on about,
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on preparing
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on holiday
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on delicacies
// DEBUG: ['bustling', 'about,', 'preparing', 'holiday']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on kitchen,
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on straightening
// DEBUG: 207
// DEBUG: (202, 41)
// DEBUG: Operating on up
// DEBUG: ['delicacies', 'in', 'the', 'kitchen,', 'straightening']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on house,
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on or
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on perhaps
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on getting
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on their
// DEBUG: ['up', 'the', 'house,', 'or', 'perhaps', 'getting']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on kimonos
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on ready
// DEBUG: 102
// DEBUG: (97, 65)
// DEBUG: Operating on or
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on arranging
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on flowers.
// DEBUG: ['their', 'kimonos', 'ready', 'or', 'arranging']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on Oki
// DEBUG: 41
// DEBUG: (36, 77)
// DEBUG: Operating on would
// DEBUG: 77
// DEBUG: (72, 77)
// DEBUG: Operating on sit
// DEBUG: 99
// DEBUG: (94, 77)
// DEBUG: Operating on in
// DEBUG: 114
// DEBUG: (109, 77)
// DEBUG: Operating on the
// DEBUG: 136
// DEBUG: (131, 77)
// DEBUG: Operating on living
// DEBUG: 179
// DEBUG: (174, 77)
// DEBUG: Operating on room
// DEBUG: 208
// DEBUG: (203, 77)
// DEBUG: Operating on and
// DEBUG: ['flowers.', 'Oki', 'would', 'sit', 'in', 'the', 'living', 'room']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on listen
// DEBUG: 57
// DEBUG: (52, 89)
// DEBUG: Operating on to
// DEBUG: 72
// DEBUG: (67, 89)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 89)
// DEBUG: Operating on radio.
// DEBUG: 137
// DEBUG: (132, 89)
// DEBUG: Operating on As
// DEBUG: 152
// DEBUG: (147, 89)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 89)
// DEBUG: Operating on bells
// DEBUG: 210
// DEBUG: (205, 89)
// DEBUG: Operating on rang
// DEBUG: ['and', 'listen', 'to', 'the', 'radio.', 'As', 'the', 'bells']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on he
// DEBUG: 30
// DEBUG: (25, 101)
// DEBUG: Operating on would
// DEBUG: 66
// DEBUG: (61, 101)
// DEBUG: Operating on look
// DEBUG: 95
// DEBUG: (90, 101)
// DEBUG: Operating on back
// DEBUG: 124
// DEBUG: (119, 101)
// DEBUG: Operating on at
// DEBUG: 139
// DEBUG: (134, 101)
// DEBUG: Operating on the
// DEBUG: 161
// DEBUG: (156, 101)
// DEBUG: Operating on departing
// DEBUG: ['rang', 'he', 'would', 'look', 'back', 'at', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (15, 113)
// DEBUG: Operating on year.
// DEBUG: 56
// DEBUG: (51, 113)
// DEBUG: Operating on He
// DEBUG: 71
// DEBUG: (66, 113)
// DEBUG: Operating on always
// DEBUG: 114
// DEBUG: (109, 113)
// DEBUG: Operating on found
// DEBUG: 150
// DEBUG: (145, 113)
// DEBUG: Operating on it
// DEBUG: 165
// DEBUG: (160, 113)
// DEBUG: Operating on a
// DEBUG: 173
// DEBUG: (168, 113)
// DEBUG: Operating on moving
// DEBUG: ['departing', 'year.', 'He', 'always', 'found', 'it', 'a']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (12, 125)
// DEBUG: Operating on experience.
// DEBUG: 95
// DEBUG: ['midnight']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Beauty and Sadness']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING his wife", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "and daughter might still be", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "bustling about, preparing holiday", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "delicacies in the kitchen, straightening", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "up the house, or perhaps getting", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "their kimonos ready or arranging", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "flowers. Oki would sit in the living room", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "and listen to the radio. As the bells", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "rang he would look back at the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "departing year. He always found it a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Beauty and Sadness", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("00:00 - Bernardo: 'Tis now struck twelve; get thee to bed, Francisco. - Shakespeare, Hamlet "));
// DEBUG: (5, 5)
// DEBUG: Operating on Bernardo:
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on 'Tis
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on now
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on struck
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: ['Bernardo:', "'Tis", 'now', 'struck']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on get
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on thee
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on to
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on bed,
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on Francisco.
// DEBUG: 188
// DEBUG: ['twelve']
// DEBUG: drawing cursor (163, 5)
// DEBUG: ['- Shakespeare, Hamlet ']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "Bernardo: 'Tis now struck", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(163, 5, "twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Shakespeare, Hamlet ", &Font12, WHITE, BLACK);
          return;
        case 7:
          Serial.println(F("00:00 - Big Ben concluded the run-up, struck and went on striking. (...) But, odder still - Big Ben had once again struck midnight. The time outside still corresponded to that registered by the stopped gilt clock, inside. Inside and outside matched exactly, but both were badly wrong. H'm. - , Nights At The Circus"));
// DEBUG: (5, 5)
// DEBUG: Operating on Big
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Ben
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on concluded
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on run-up,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on struck
// DEBUG: ['Big', 'Ben', 'concluded', 'the', 'run-up,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on went
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on on
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on striking.
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on (...)
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on But,
// DEBUG: ['struck', 'and', 'went', 'on', 'striking.', '(...)']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on odder
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on still
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on -
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on Big
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on Ben
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on had
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on once
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on again
// DEBUG: ['But,', 'odder', 'still', '-', 'Big', 'Ben', 'had', 'once']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on struck
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on The
// DEBUG: ['again', 'struck', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on time
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on outside
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on still
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on corresponded
// DEBUG: ['The', 'time', 'outside', 'still']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (18, 65)
// DEBUG: Operating on to
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on that
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on registered
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on by
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on the
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on stopped
// DEBUG: ['corresponded', 'to', 'that', 'registered', 'by', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on gilt
// DEBUG: 47
// DEBUG: (42, 77)
// DEBUG: Operating on clock,
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on inside.
// DEBUG: 140
// DEBUG: (135, 77)
// DEBUG: Operating on Inside
// DEBUG: 183
// DEBUG: (178, 77)
// DEBUG: Operating on and
// DEBUG: 205
// DEBUG: (200, 77)
// DEBUG: Operating on outside
// DEBUG: ['stopped', 'gilt', 'clock,', 'inside.', 'Inside', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on matched
// DEBUG: 68
// DEBUG: (63, 89)
// DEBUG: Operating on exactly,
// DEBUG: 125
// DEBUG: (120, 89)
// DEBUG: Operating on but
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on both
// DEBUG: 176
// DEBUG: (171, 89)
// DEBUG: Operating on were
// DEBUG: 205
// DEBUG: (200, 89)
// DEBUG: Operating on badly
// DEBUG: ['outside', 'matched', 'exactly,', 'but', 'both', 'were']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on wrong.
// DEBUG: 59
// DEBUG: (54, 101)
// DEBUG: Operating on H'm.
// DEBUG: 88
// DEBUG: ['midnight']
// DEBUG: drawing cursor (54, 41)
// DEBUG: ['- Nights At The Circus']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "Big Ben concluded the run-up,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "struck and went on striking. (...)", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "But, odder still - Big Ben had once", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "again struck TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "The time outside still", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "corresponded to that registered by the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "stopped gilt clock, inside. Inside and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "outside matched exactly, but both were", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(54, 41, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Nights At The Circus", &Font12, WHITE, BLACK);
          return;
        case 8:
          Serial.println(F("00:00 - But in the end I understood this language. I understood it, I understood it, all wrong perhaps. That is not what matters. It told me to write the report. Does this mean I am freer now than I was? I do not know. I shall learn. Then I went back into the house and wrote, It is midnight. The rain is beating on the windows. It was not midnight. It was not raining. - Samuel Beckett, Molloy "));
// DEBUG: (5, 5)
// DEBUG: Operating on But
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on in
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on end
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on I
// DEBUG: 99
// DEBUG: (94, 5)
// DEBUG: Operating on understood
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on this
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on language.
// DEBUG: ['But', 'in', 'the', 'end', 'I', 'understood', 'this']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on I
// DEBUG: 28
// DEBUG: (23, 17)
// DEBUG: Operating on understood
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on it,
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on I
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on understood
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on it,
// DEBUG: ['language.', 'I', 'understood', 'it,', 'I', 'understood']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on all
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on wrong
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on perhaps.
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on That
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on is
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on not
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on what
// DEBUG: ['it,', 'all', 'wrong', 'perhaps.', 'That', 'is', 'not']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on matters.
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on It
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on told
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on me
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on to
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on write
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on the
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on report.
// DEBUG: ['what', 'matters.', 'It', 'told', 'me', 'to', 'write', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on Does
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on this
// DEBUG: 76
// DEBUG: (71, 53)
// DEBUG: Operating on mean
// DEBUG: 105
// DEBUG: (100, 53)
// DEBUG: Operating on I
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on am
// DEBUG: 128
// DEBUG: (123, 53)
// DEBUG: Operating on freer
// DEBUG: 164
// DEBUG: (159, 53)
// DEBUG: Operating on now
// DEBUG: 186
// DEBUG: (181, 53)
// DEBUG: Operating on than
// DEBUG: ['report.', 'Does', 'this', 'mean', 'I', 'am', 'freer', 'now']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on I
// DEBUG: 23
// DEBUG: (18, 65)
// DEBUG: Operating on was?
// DEBUG: 52
// DEBUG: (47, 65)
// DEBUG: Operating on I
// DEBUG: 60
// DEBUG: (55, 65)
// DEBUG: Operating on do
// DEBUG: 75
// DEBUG: (70, 65)
// DEBUG: Operating on not
// DEBUG: 97
// DEBUG: (92, 65)
// DEBUG: Operating on know.
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on I
// DEBUG: 141
// DEBUG: (136, 65)
// DEBUG: Operating on shall
// DEBUG: 177
// DEBUG: (172, 65)
// DEBUG: Operating on learn.
// DEBUG: ['than', 'I', 'was?', 'I', 'do', 'not', 'know.', 'I', 'shall']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on Then
// DEBUG: 46
// DEBUG: (41, 77)
// DEBUG: Operating on I
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on went
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on back
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on into
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on the
// DEBUG: 163
// DEBUG: (158, 77)
// DEBUG: Operating on house
// DEBUG: 199
// DEBUG: (194, 77)
// DEBUG: Operating on and
// DEBUG: ['learn.', 'Then', 'I', 'went', 'back', 'into', 'the', 'house']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on wrote,
// DEBUG: 57
// DEBUG: (52, 89)
// DEBUG: Operating on It
// DEBUG: 72
// DEBUG: (67, 89)
// DEBUG: Operating on is
// DEBUG: 87
// DEBUG: (82, 89)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['and', 'wrote,', 'It', 'is']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on The
// DEBUG: 44
// DEBUG: (39, 101)
// DEBUG: Operating on rain
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on is
// DEBUG: 88
// DEBUG: (83, 101)
// DEBUG: Operating on beating
// DEBUG: 138
// DEBUG: (133, 101)
// DEBUG: Operating on on
// DEBUG: 153
// DEBUG: (148, 101)
// DEBUG: Operating on the
// DEBUG: 175
// DEBUG: (170, 101)
// DEBUG: Operating on windows.
// DEBUG: ['TIMESTRING.', 'The', 'rain', 'is', 'beating', 'on', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (14, 113)
// DEBUG: Operating on It
// DEBUG: 34
// DEBUG: (29, 113)
// DEBUG: Operating on was
// DEBUG: 56
// DEBUG: (51, 113)
// DEBUG: Operating on not
// DEBUG: 78
// DEBUG: (73, 113)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['windows.', 'It', 'was', 'not']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (17, 125)
// DEBUG: Operating on It
// DEBUG: 37
// DEBUG: (32, 125)
// DEBUG: Operating on was
// DEBUG: 59
// DEBUG: (54, 125)
// DEBUG: Operating on not
// DEBUG: 81
// DEBUG: (76, 125)
// DEBUG: Operating on raining.
// DEBUG: 138
// DEBUG: ['midnight']
// DEBUG: drawing cursor (73, 113)
// DEBUG: ['- Samuel Beckett, Molloy ']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "But in the end I understood this", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "language. I understood it, I understood", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "it, all wrong perhaps. That is not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "what matters. It told me to write the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "report. Does this mean I am freer now", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "than I was? I do not know. I shall", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "learn. Then I went back into the house", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "and wrote, It is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "TIMESTRING. The rain is beating on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "windows. It was not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(73, 113, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Samuel Beckett, Molloy ", &Font12, WHITE, BLACK);
          return;
        case 9:
          Serial.println(F("00:00 - Cartridges not allowed after 0000h., to encourage sleep. - , Infinite Jest"));
// DEBUG: (5, 5)
// DEBUG: Operating on Cartridges
// DEBUG: 81
// DEBUG: (76, 5)
// DEBUG: Operating on not
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on allowed
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on after
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Cartridges', 'not', 'allowed', 'after']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on to
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on encourage
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on sleep.
// DEBUG: ['TIMESTRING,', 'to', 'encourage']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['0000h.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Infinite Jest']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Cartridges not allowed after", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, to encourage", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "0000h.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Infinite Jest", &Font12, WHITE, BLACK);
          return;
        case 10:
          Serial.println(F("00:00 - Francisco. You come most carefully upon your hour. Bernardo. 'Tis now struck twelve. Get thee to bed, Francisco. - William Shakespeare, Hamlet"));
// DEBUG: (5, 5)
// DEBUG: Operating on Francisco.
// DEBUG: 81
// DEBUG: (76, 5)
// DEBUG: Operating on You
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on come
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on most
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on carefully
// DEBUG: ['Francisco.', 'You', 'come', 'most']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on upon
// DEBUG: 49
// DEBUG: (44, 17)
// DEBUG: Operating on your
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on hour.
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on Bernardo.
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on 'Tis
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on now
// DEBUG: ['carefully', 'upon', 'your', 'hour.', 'Bernardo.', "'Tis"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on struck
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on Get
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on thee
// DEBUG: ['now', 'struck', 'TIMESTRING.', 'Get']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on bed,
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on Francisco.
// DEBUG: 130
// DEBUG: ['twelve']
// DEBUG: drawing cursor (52, 29)
// DEBUG: ['- William Shakespeare, Hamlet']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Francisco. You come most", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "carefully upon your hour. Bernardo. 'Tis", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "now struck TIMESTRING. Get", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(52, 29, "twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- William Shakespeare, Hamlet", &Font12, WHITE, BLACK);
          return;
        case 11:
          Serial.println(F("00:00 - Gately can hear the horns and raised voices and u-turn squeals way down below on Wash. That indicate it's around 0000h., the switching hour. - , Infinite Jest"));
// DEBUG: (5, 5)
// DEBUG: Operating on Gately
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on can
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on hear
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on the
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on horns
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on and
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on raised
// DEBUG: ['Gately', 'can', 'hear', 'the', 'horns', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on voices
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on and
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on u-turn
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on squeals
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on way
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on down
// DEBUG: ['raised', 'voices', 'and', 'u-turn', 'squeals', 'way']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on below
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on on
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on Wash.
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on That
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on indicate
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on it's
// DEBUG: ['down', 'below', 'on', 'Wash.', 'That', 'indicate']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on around
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on TIMESTRING.,
// DEBUG: Wrorking on the timestring
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on the
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on switching
// DEBUG: ["it's", 'around', 'TIMESTRING.,', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on hour.
// DEBUG: 56
// DEBUG: ['0000h']
// DEBUG: drawing cursor (53, 41)
// DEBUG: ['- Infinite Jest']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Gately can hear the horns and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "raised voices and u-turn squeals way", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "down below on Wash. That indicate", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "it's around TIMESTRING., the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(53, 41, "0000h", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Infinite Jest", &Font12, WHITE, BLACK);
          return;
        case 12:
          Serial.println(F("00:00 - Hamlet: What hour now? Horatio: I think it lacks of twelve. Marcellus: No, it is struck. - William Shakespeare, Hamlet"));
// DEBUG: (5, 5)
// DEBUG: Operating on Hamlet:
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on What
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on hour
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on now?
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on Horatio:
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on I
// DEBUG: ['Hamlet:', 'What', 'hour', 'now?', 'Horatio:']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (7, 17)
// DEBUG: Operating on think
// DEBUG: 48
// DEBUG: (43, 17)
// DEBUG: Operating on it
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on lacks
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on of
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['I', 'think', 'it', 'lacks', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on Marcellus:
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on No,
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on it
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on is
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on struck.
// DEBUG: 195
// DEBUG: ['twelve']
// DEBUG: drawing cursor (109, 17)
// DEBUG: ['- William Shakespeare, Hamlet']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Hamlet: What hour now? Horatio:", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "I think it lacks of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(109, 17, "twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- William Shakespeare, Hamlet", &Font12, WHITE, BLACK);
          return;
        case 13:
          Serial.println(F("00:00 - He is certain he heard footsteps: they come nearer, and then die away. The ray of light beneath his door is extinguished. It is midnight; some one has turned out the gas; the last servant has gone to bed, and he must lie all night in agony with no one to bring him any help. - Marcel Proust, Swann's Way "));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on is
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on certain
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on he
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on heard
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on footsteps:
// DEBUG: ['He', 'is', 'certain', 'he', 'heard']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on they
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on come
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on nearer,
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on and
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on then
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on die
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on away.
// DEBUG: ['footsteps:', 'they', 'come', 'nearer,', 'and', 'then', 'die']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on The
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on ray
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on of
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on light
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on beneath
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on his
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on door
// DEBUG: ['away.', 'The', 'ray', 'of', 'light', 'beneath', 'his']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on is
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on extinguished.
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on It
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on is
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: ['door', 'is', 'extinguished.', 'It', 'is']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on some
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on one
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on has
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on turned
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on out
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on the
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on gas;
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING;', 'some', 'one', 'has', 'turned', 'out', 'the', 'gas;']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on last
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on servant
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on has
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on gone
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on to
// DEBUG: 159
// DEBUG: (154, 65)
// DEBUG: Operating on bed,
// DEBUG: 188
// DEBUG: (183, 65)
// DEBUG: Operating on and
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on he
// DEBUG: ['the', 'last', 'servant', 'has', 'gone', 'to', 'bed,', 'and']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on must
// DEBUG: 42
// DEBUG: (37, 77)
// DEBUG: Operating on lie
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on all
// DEBUG: 86
// DEBUG: (81, 77)
// DEBUG: Operating on night
// DEBUG: 122
// DEBUG: (117, 77)
// DEBUG: Operating on in
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on agony
// DEBUG: 173
// DEBUG: (168, 77)
// DEBUG: Operating on with
// DEBUG: 202
// DEBUG: (197, 77)
// DEBUG: Operating on no
// DEBUG: ['he', 'must', 'lie', 'all', 'night', 'in', 'agony', 'with']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on one
// DEBUG: 35
// DEBUG: (30, 89)
// DEBUG: Operating on to
// DEBUG: 50
// DEBUG: (45, 89)
// DEBUG: Operating on bring
// DEBUG: 86
// DEBUG: (81, 89)
// DEBUG: Operating on him
// DEBUG: 108
// DEBUG: (103, 89)
// DEBUG: Operating on any
// DEBUG: 130
// DEBUG: (125, 89)
// DEBUG: Operating on help.
// DEBUG: 166
// DEBUG: ['midnight']
// DEBUG: drawing cursor (147, 41)
// DEBUG: ["- Marcel Proust, Swann's Way "]
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "He is certain he heard", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "footsteps: they come nearer, and then die", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "away. The ray of light beneath his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "door is extinguished. It is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "TIMESTRING; some one has turned out the gas;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "the last servant has gone to bed, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "he must lie all night in agony with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(147, 41, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Marcel Proust, Swann's Way ", &Font12, WHITE, BLACK);
          return;
        case 14:
          Serial.println(F("00:00 - I am conceived to the chimes of midnight on the clock on the mantelpiece in the room across the hall. The clock once belonged to my great-grandmother (a woman called Alice) and its tired chime counts me into the world. - Kate Atkinson, "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on am
// DEBUG: 33
// DEBUG: (28, 5)
// DEBUG: Operating on conceived
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on to
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on the
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on chimes
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on of
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['I', 'am', 'conceived', 'to', 'the', 'chimes', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on on
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on clock
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on on
// DEBUG: ['TIMESTRING', 'on', 'the', 'clock']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on mantelpiece
// DEBUG: 113
// DEBUG: (108, 29)
// DEBUG: Operating on in
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on the
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on room
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on across
// DEBUG: ['on', 'the', 'mantelpiece', 'in', 'the', 'room']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on hall.
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on The
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on clock
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on once
// DEBUG: 162
// DEBUG: (157, 41)
// DEBUG: Operating on belonged
// DEBUG: ['across', 'the', 'hall.', 'The', 'clock', 'once']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 53)
// DEBUG: Operating on my
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on great-grandmother
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on (a
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on woman
// DEBUG: ['belonged', 'to', 'my', 'great-grandmother', '(a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on called
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on Alice)
// DEBUG: 102
// DEBUG: (97, 65)
// DEBUG: Operating on and
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on its
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on tired
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on chime
// DEBUG: ['woman', 'called', 'Alice)', 'and', 'its', 'tired']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on counts
// DEBUG: 59
// DEBUG: (54, 77)
// DEBUG: Operating on me
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on into
// DEBUG: 103
// DEBUG: (98, 77)
// DEBUG: Operating on the
// DEBUG: 125
// DEBUG: (120, 77)
// DEBUG: Operating on world.
// DEBUG: 168
// DEBUG: ['midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Kate Atkinson']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "I am conceived to the chimes of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING on the clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "on the mantelpiece in the room", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "across the hall. The clock once", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "belonged to my great-grandmother (a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "woman called Alice) and its tired", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Kate Atkinson", &Font12, WHITE, BLACK);
          return;
        case 15:
          Serial.println(F("00:00 - 'Myself!' she gasped, 'and the clock is striking twelve! It's true, then! that's dreadful!' - , Wuthering Heights"));
// DEBUG: (5, 5)
// DEBUG: Operating on 'Myself!'
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on she
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on gasped,
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on 'and
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on the
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on clock
// DEBUG: ["'Myself!'", 'she', 'gasped,', "'and", 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on is
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on striking
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on TIMESTRING!
// DEBUG: Wrorking on the timestring
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on It's
// DEBUG: ['clock', 'is', 'striking', 'TIMESTRING!']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on true,
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on then!
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on that's
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on dreadful!'
// DEBUG: 201
// DEBUG: ['twelve']
// DEBUG: drawing cursor (83, 17)
// DEBUG: ['- Wuthering Heights']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "'Myself!' she gasped, 'and the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "clock is striking TIMESTRING!", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(83, 17, "twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Wuthering Heights", &Font12, WHITE, BLACK);
          return;
        case 16:
          Serial.println(F("00:00 - I was born in the city of Bombay ... On the stroke of midnight, as a matter of fact. - , Midnight's Children"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on was
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on born
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on in
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on the
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on city
// DEBUG: 135
// DEBUG: (130, 5)
// DEBUG: Operating on of
// DEBUG: 150
// DEBUG: (145, 5)
// DEBUG: Operating on Bombay
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on ...
// DEBUG: ['I', 'was', 'born', 'in', 'the', 'city', 'of', 'Bombay']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on On
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on the
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on stroke
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on of
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['...', 'On', 'the', 'stroke', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on as
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on a
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on matter
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on of
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on fact.
// DEBUG: 139
// DEBUG: ['midnight']
// DEBUG: drawing cursor (104, 17)
// DEBUG: ["- Midnight's Children"]
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "I was born in the city of Bombay", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "... On the stroke of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(104, 17, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Midnight's Children", &Font12, WHITE, BLACK);
          return;
        case 17:
          Serial.println(F("00:00 - It is midnight. The rain is beating on the windows. I am calm. All is sleeping. Nevertheless I get up and go to my desk. I can't sleep. ... - Samuel Beckett, Molloy "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on is
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on The
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on rain
// DEBUG: ['It', 'is', 'TIMESTRING.', 'The']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on is
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on beating
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on on
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on the
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on windows.
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on I
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on am
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on calm.
// DEBUG: ['rain', 'is', 'beating', 'on', 'the', 'windows.', 'I', 'am']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on All
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on is
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on sleeping.
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on Nevertheless
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on I
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on get
// DEBUG: ['calm.', 'All', 'is', 'sleeping.', 'Nevertheless', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on up
// DEBUG: 29
// DEBUG: (24, 41)
// DEBUG: Operating on and
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on go
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on to
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on my
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on desk.
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on I
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on can't
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on sleep.
// DEBUG: ['get', 'up', 'and', 'go', 'to', 'my', 'desk.', 'I', "can't"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on ...
// DEBUG: 39
// DEBUG: ['midnight']
// DEBUG: drawing cursor (35, 5)
// DEBUG: ['- Samuel Beckett, Molloy ']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "It is TIMESTRING. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "rain is beating on the windows. I am", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "calm. All is sleeping. Nevertheless I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "get up and go to my desk. I can't", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(35, 5, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Samuel Beckett, Molloy ", &Font12, WHITE, BLACK);
          return;
        case 18:
          Serial.println(F("00:00 - It was nearing midnight and the Prime Minister was sitting alone in his office, reading a long memo - JK Rowling, Harry Potter"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on nearing
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'nearing']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on the
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on Prime
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on Minister
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on was
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on sitting
// DEBUG: ['TIMESTRING', 'and', 'the', 'Prime', 'Minister', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on alone
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on in
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on his
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on office,
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on reading
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on a
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on long
// DEBUG: ['sitting', 'alone', 'in', 'his', 'office,', 'reading', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on memo
// DEBUG: 44
// DEBUG: ['midnight']
// DEBUG: drawing cursor (92, 5)
// DEBUG: ['- JK Rowling, Harry Potter']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "It was nearing", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING and the Prime Minister was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "sitting alone in his office, reading a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(92, 5, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- JK Rowling, Harry Potter", &Font12, WHITE, BLACK);
          return;
        case 19:
          Serial.println(F("00:00 - Midnight had come upon the crowded city. The palace, the night-cellar, the jail, the madhouse; the chambers of birth and death, of health and sickness; the rigid face of the corpse and the calm sleep of the child - midnight was upon them all. - , Oliver Twist"));
// DEBUG: (5, 5)
// DEBUG: Operating on Midnight
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on had
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on come
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on upon
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on crowded
// DEBUG: ['Midnight', 'had', 'come', 'upon', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on city.
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on The
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on palace,
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on the
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on night-cellar,
// DEBUG: ['crowded', 'city.', 'The', 'palace,', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (19, 29)
// DEBUG: Operating on the
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on jail,
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on madhouse;
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on the
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on chambers
// DEBUG: ['night-cellar,', 'the', 'jail,', 'the', 'madhouse;', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on of
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on birth
// DEBUG: 70
// DEBUG: (65, 41)
// DEBUG: Operating on and
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on death,
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on of
// DEBUG: 150
// DEBUG: (145, 41)
// DEBUG: Operating on health
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on and
// DEBUG: ['chambers', 'of', 'birth', 'and', 'death,', 'of', 'health']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on sickness;
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on the
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on rigid
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on face
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on of
// DEBUG: 180
// DEBUG: (175, 53)
// DEBUG: Operating on the
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on corpse
// DEBUG: ['and', 'sickness;', 'the', 'rigid', 'face', 'of', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 65)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on calm
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on sleep
// DEBUG: 126
// DEBUG: (121, 65)
// DEBUG: Operating on of
// DEBUG: 141
// DEBUG: (136, 65)
// DEBUG: Operating on the
// DEBUG: 163
// DEBUG: (158, 65)
// DEBUG: Operating on child
// DEBUG: 199
// DEBUG: (194, 65)
// DEBUG: Operating on -
// DEBUG: 207
// DEBUG: (202, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['corpse', 'and', 'the', 'calm', 'sleep', 'of', 'the', 'child', '-']
// DEBUG: drawing cursor (5, 65)
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on was
// DEBUG: 159
// DEBUG: (154, 77)
// DEBUG: Operating on upon
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on them
// DEBUG: ['TIMESTRING', 'was', 'upon']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on all.
// DEBUG: 44
// DEBUG: ['midnight']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['- Oliver Twist']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "Midnight had come upon the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "crowded city. The palace, the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "night-cellar, the jail, the madhouse; the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "chambers of birth and death, of health", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "and sickness; the rigid face of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "corpse and the calm sleep of the child -", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "TIMESTRING was upon", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Oliver Twist", &Font12, WHITE, BLACK);
          return;
        case 20:
          Serial.println(F("00:00 - Midnight is approaching, and while the peak of activity has passed, the basal metabolism that maintains life continues undiminished, producing the basso continuo of the city's moan, a monotonous sound that neither rises or falls but is pregnant with foreboding. - Murakami, After Dark "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 138
// DEBUG: (133, 5)
// DEBUG: Operating on is
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on approaching,
// DEBUG: ['TIMESTRING', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (18, 17)
// DEBUG: Operating on and
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on while
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on the
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on peak
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on of
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on activity
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on has
// DEBUG: ['approaching,', 'and', 'while', 'the', 'peak', 'of', 'activity']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on passed,
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on the
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on basal
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on metabolism
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on that
// DEBUG: ['has', 'passed,', 'the', 'basal', 'metabolism']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on maintains
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on life
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on continues
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on undiminished,
// DEBUG: ['that', 'maintains', 'life', 'continues']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (19, 53)
// DEBUG: Operating on producing
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on basso
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on continuo
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on of
// DEBUG: ['undiminished,', 'producing', 'the', 'basso', 'continuo']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on city's
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on moan,
// DEBUG: 114
// DEBUG: (109, 65)
// DEBUG: Operating on a
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on monotonous
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on sound
// DEBUG: ['of', 'the', "city's", 'moan,', 'a', 'monotonous']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 77)
// DEBUG: Operating on neither
// DEBUG: 95
// DEBUG: (90, 77)
// DEBUG: Operating on rises
// DEBUG: 131
// DEBUG: (126, 77)
// DEBUG: Operating on or
// DEBUG: 146
// DEBUG: (141, 77)
// DEBUG: Operating on falls
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on but
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on is
// DEBUG: ['sound', 'that', 'neither', 'rises', 'or', 'falls', 'but']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on pregnant
// DEBUG: 70
// DEBUG: (65, 89)
// DEBUG: Operating on with
// DEBUG: 99
// DEBUG: (94, 89)
// DEBUG: Operating on foreboding.
// DEBUG: 177
// DEBUG: ['Midnight']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Murakami, After Dark ']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "approaching, and while the peak of activity", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "has passed, the basal metabolism", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "that maintains life continues", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "undiminished, producing the basso continuo", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "of the city's moan, a monotonous", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "sound that neither rises or falls but", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "Midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- Murakami, After Dark ", &Font12, WHITE, BLACK);
          return;
        case 21:
          Serial.println(F("00:00 - Once upon a midnight dreary, while I pondered weak and weary, Over many a quaint and curious volume of forgotten lore, While I nodded, nearly napping, suddenly there came a tapping, As of some one gently rapping, rapping at my chamber door. `'Tis some visitor,' I muttered, `tapping at my chamber door - Only this, and nothing more.' - Edgar Allan Poe, The Raven "));
// DEBUG: (5, 5)
// DEBUG: Operating on Once
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on upon
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on a
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on dreary,
// DEBUG: ['Once', 'upon', 'a', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on while
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on I
// DEBUG: 62
// DEBUG: (57, 17)
// DEBUG: Operating on pondered
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on weak
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on and
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on weary,
// DEBUG: ['dreary,', 'while', 'I', 'pondered', 'weak', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on Over
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on many
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on a
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on quaint
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on and
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on curious
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on volume
// DEBUG: ['weary,', 'Over', 'many', 'a', 'quaint', 'and', 'curious']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on forgotten
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on lore,
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on While
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on I
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on nodded,
// DEBUG: ['volume', 'of', 'forgotten', 'lore,', 'While', 'I']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on nearly
// DEBUG: 61
// DEBUG: (56, 53)
// DEBUG: Operating on napping,
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on suddenly
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on there
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on came
// DEBUG: ['nodded,', 'nearly', 'napping,', 'suddenly', 'there']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 65)
// DEBUG: Operating on tapping,
// DEBUG: 80
// DEBUG: (75, 65)
// DEBUG: Operating on As
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on of
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on some
// DEBUG: 139
// DEBUG: (134, 65)
// DEBUG: Operating on one
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on gently
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on rapping,
// DEBUG: ['came', 'a', 'tapping,', 'As', 'of', 'some', 'one', 'gently']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on rapping
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on at
// DEBUG: 84
// DEBUG: (79, 77)
// DEBUG: Operating on my
// DEBUG: 99
// DEBUG: (94, 77)
// DEBUG: Operating on chamber
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on door.
// DEBUG: 185
// DEBUG: (180, 77)
// DEBUG: Operating on `'Tis
// DEBUG: ['rapping,', 'rapping', 'at', 'my', 'chamber', 'door.']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on some
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on visitor,'
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on I
// DEBUG: 117
// DEBUG: (112, 89)
// DEBUG: Operating on muttered,
// DEBUG: 181
// DEBUG: (176, 89)
// DEBUG: Operating on `tapping
// DEBUG: ["`'Tis", 'some', "visitor,'", 'I', 'muttered,']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (14, 101)
// DEBUG: Operating on at
// DEBUG: 34
// DEBUG: (29, 101)
// DEBUG: Operating on my
// DEBUG: 49
// DEBUG: (44, 101)
// DEBUG: Operating on chamber
// DEBUG: 99
// DEBUG: (94, 101)
// DEBUG: Operating on door
// DEBUG: 128
// DEBUG: (123, 101)
// DEBUG: Operating on -
// DEBUG: 136
// DEBUG: (131, 101)
// DEBUG: Operating on Only
// DEBUG: 165
// DEBUG: (160, 101)
// DEBUG: Operating on this,
// DEBUG: 201
// DEBUG: (196, 101)
// DEBUG: Operating on and
// DEBUG: ['`tapping', 'at', 'my', 'chamber', 'door', '-', 'Only', 'this,']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on nothing
// DEBUG: 64
// DEBUG: (59, 113)
// DEBUG: Operating on more.'
// DEBUG: 107
// DEBUG: ['midnight']
// DEBUG: drawing cursor (71, 5)
// DEBUG: ['- Edgar Allan Poe, The Raven ']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Once upon a TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "dreary, while I pondered weak and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "weary, Over many a quaint and curious", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "volume of forgotten lore, While I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "nodded, nearly napping, suddenly there", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "came a tapping, As of some one gently", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "rapping, rapping at my chamber door.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "`'Tis some visitor,' I muttered,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "`tapping at my chamber door - Only this,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(71, 5, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Edgar Allan Poe, The Raven ", &Font12, WHITE, BLACK);
          return;
        case 22:
          Serial.println(F("00:00 - The clock striketh twelve O it strikes, it strikes! Now body, turn to air, Or Lucifer will bear thee quick to hell. O soul, be changed into little water drops, And fall into the ocean, ne'er to be found. My God, my God, look not so fierce on me! - , Dr Faustus"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on clock
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on striketh
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'clock', 'striketh']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on O
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on it
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on strikes,
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on it
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on strikes!
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on Now
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on body,
// DEBUG: ['TIMESTRING', 'O', 'it', 'strikes,', 'it', 'strikes!', 'Now']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on turn
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on to
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on air,
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on Or
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on Lucifer
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on will
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on bear
// DEBUG: ['body,', 'turn', 'to', 'air,', 'Or', 'Lucifer', 'will']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on thee
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on quick
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on to
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on hell.
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on O
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on soul,
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on be
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on changed
// DEBUG: ['bear', 'thee', 'quick', 'to', 'hell.', 'O', 'soul,', 'be']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on into
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on little
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on water
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on drops,
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on And
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on fall
// DEBUG: ['changed', 'into', 'little', 'water', 'drops,', 'And']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on into
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on the
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on ocean,
// DEBUG: 109
// DEBUG: (104, 65)
// DEBUG: Operating on ne'er
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on to
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on be
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on found.
// DEBUG: ['fall', 'into', 'the', 'ocean,', "ne'er", 'to', 'be']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on My
// DEBUG: 32
// DEBUG: (27, 77)
// DEBUG: Operating on God,
// DEBUG: 61
// DEBUG: (56, 77)
// DEBUG: Operating on my
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on God,
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on look
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on not
// DEBUG: 156
// DEBUG: (151, 77)
// DEBUG: Operating on so
// DEBUG: 171
// DEBUG: (166, 77)
// DEBUG: Operating on fierce
// DEBUG: ['found.', 'My', 'God,', 'my', 'God,', 'look', 'not', 'so']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on on
// DEBUG: 32
// DEBUG: (27, 89)
// DEBUG: Operating on me!
// DEBUG: 54
// DEBUG: ['twelve']
// DEBUG: drawing cursor (120, 5)
// DEBUG: ['- Dr Faustus']
// DEBUG: drawing cursor (123, 192)
          paint.Paint_DrawString_EN(5, 5, "The clock striketh", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING O it strikes, it strikes! Now", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "body, turn to air, Or Lucifer will", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "bear thee quick to hell. O soul, be", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "changed into little water drops, And", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "fall into the ocean, ne'er to be", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "found. My God, my God, look not so", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(120, 5, "twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(123, 192, "- Dr Faustus", &Font12, WHITE, BLACK);
          return;
        case 23:
          Serial.println(F("00:00 - ...leaning forwards, ruminated until midnight upon both sides of the question. - Laurence Sterne, "));
// DEBUG: (5, 5)
// DEBUG: Operating on ...leaning
// DEBUG: 81
// DEBUG: (76, 5)
// DEBUG: Operating on forwards,
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on ruminated
// DEBUG: 209
// DEBUG: (204, 5)
// DEBUG: Operating on until
// DEBUG: ['...leaning', 'forwards,', 'ruminated']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on upon
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on both
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on sides
// DEBUG: ['until', 'TIMESTRING', 'upon', 'both']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 29)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on question.
// DEBUG: 117
// DEBUG: ['midnight']
// DEBUG: drawing cursor (11, 17)
// DEBUG: ['- Laurence Sterne']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "...leaning forwards, ruminated", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "until TIMESTRING upon both", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(11, 17, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Laurence Sterne", &Font12, WHITE, BLACK);
          return;
        case 24:
          Serial.println(F("00:00 - To begin my life with the beginning of my life, I record that I was born (as I have been informed an believe) on a Friday, at twelve o'clock at night. It was remarked that the clock began to strike, and I began to cry, simultaneously. - , David Copperfield"));
// DEBUG: (5, 5)
// DEBUG: Operating on To
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on begin
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on my
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on life
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on with
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on the
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on beginning
// DEBUG: ['To', 'begin', 'my', 'life', 'with', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on of
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on my
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on life,
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on I
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on record
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on that
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on I
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on was
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on born
// DEBUG: ['beginning', 'of', 'my', 'life,', 'I', 'record', 'that', 'I', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on (as
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on I
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on have
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on been
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on informed
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on an
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on believe)
// DEBUG: ['born', '(as', 'I', 'have', 'been', 'informed', 'an']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on on
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on a
// DEBUG: 42
// DEBUG: (37, 41)
// DEBUG: Operating on Friday,
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on at
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['believe)', 'on', 'a', 'Friday,', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on at
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on night.
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on It
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on was
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on remarked
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on that
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'at', 'night.', 'It', 'was', 'remarked', 'that']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on clock
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on began
// DEBUG: 86
// DEBUG: (81, 65)
// DEBUG: Operating on to
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on strike,
// DEBUG: 151
// DEBUG: (146, 65)
// DEBUG: Operating on and
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on I
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on began
// DEBUG: ['the', 'clock', 'began', 'to', 'strike,', 'and', 'I']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on cry,
// DEBUG: 60
// DEBUG: (55, 77)
// DEBUG: Operating on simultaneously.
// DEBUG: 166
// DEBUG: ["twelve o'clock"]
// DEBUG: drawing cursor (102, 41)
// DEBUG: ['- David Copperfield']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "To begin my life with the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "beginning of my life, I record that I was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "born (as I have been informed an", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "believe) on a Friday, at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "TIMESTRING at night. It was remarked that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "the clock began to strike, and I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(102, 41, "twelve o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- David Copperfield", &Font12, WHITE, BLACK);
          return;
        case 25:
          Serial.println(F("00:00 - We have heard the chimes at midnight. - , Henry IV"));
// DEBUG: (5, 5)
// DEBUG: Operating on We
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on have
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on heard
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on the
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on chimes
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on at
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['We', 'have', 'heard', 'the', 'chimes', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 144
// DEBUG: ['midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Henry IV']
// DEBUG: drawing cursor (137, 192)
          paint.Paint_DrawString_EN(5, 5, "We have heard the chimes at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(137, 192, "- Henry IV", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 00:01 for 1 quotations:
    case 1:
      Serial.println(F("Only one option for 00:01:"));
    Serial.println(F("00:01 - With the appointed execution time of one minute past midnight just seconds away, I knocked on the metal door twice. The lock turned and the door swiftly swung open. - , Death at Midnight"));
// DEBUG: (5, 5)
// DEBUG: Operating on With
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on appointed
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on execution
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on time
// DEBUG: ['With', 'the', 'appointed', 'execution']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on of
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['time', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on just
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on seconds
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on away,
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on I
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on knocked
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on on
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'just', 'seconds', 'away,', 'I', 'knocked', 'on']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on metal
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on door
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on twice.
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on The
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on lock
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on turned
// DEBUG: ['the', 'metal', 'door', 'twice.', 'The', 'lock']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 53)
// DEBUG: Operating on door
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on swiftly
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on swung
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on open.
// DEBUG: ['turned', 'and', 'the', 'door', 'swiftly', 'swung']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['one minute past midnight']
// DEBUG: drawing cursor (25, 17)
// DEBUG: ['- Death at Midnight']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "With the appointed execution", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "time of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING just seconds away, I knocked on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the metal door twice. The lock", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "turned and the door swiftly swung", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(25, 17, "one minute past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Death at Midnight", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:02 for 1 quotations:
    case 2:
      Serial.println(F("Only one option for 00:02:"));
    Serial.println(F("00:02 - Two minutes past midnight. With me in the lead the fourteen other men of Teams Yellow, White and Red moved out of the clearing and separated for points along the wall where they would cross over into the grounds. - , Night of the Krait"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on With
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on me
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on in
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on the
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on lead
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on the
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on fourteen
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on other
// DEBUG: ['TIMESTRING.', 'With', 'me', 'in', 'the', 'lead', 'the', 'fourteen']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on men
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on of
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on Teams
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on Yellow,
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on White
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on and
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on Red
// DEBUG: ['other', 'men', 'of', 'Teams', 'Yellow,', 'White', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on moved
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on out
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on of
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on clearing
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on and
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on separated
// DEBUG: ['Red', 'moved', 'out', 'of', 'the', 'clearing', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on for
// DEBUG: 42
// DEBUG: (37, 53)
// DEBUG: Operating on points
// DEBUG: 85
// DEBUG: (80, 53)
// DEBUG: Operating on along
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on the
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on wall
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on where
// DEBUG: 208
// DEBUG: (203, 53)
// DEBUG: Operating on they
// DEBUG: ['separated', 'for', 'points', 'along', 'the', 'wall', 'where']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on would
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on cross
// DEBUG: 87
// DEBUG: (82, 65)
// DEBUG: Operating on over
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on into
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 65)
// DEBUG: Operating on grounds.
// DEBUG: ['they', 'would', 'cross', 'over', 'into', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['Two minutes past midnight']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Night of the Krait']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. With me in the lead the fourteen", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "other men of Teams Yellow, White and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Red moved out of the clearing and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "separated for points along the wall where", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "they would cross over into the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "Two minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Night of the Krait", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:03 for 3 quotations:
    case 3:
      option = random(0, 3);
      Serial.print(F("3 options for 00:03. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("00:03 - It was after twelve o'clock when Easton came home. Ruth recognised his footsteps before he reached the house, and her heart seemed to stop beating when she heard the clang of the gate, as it closed after he had passed through. - Robert Tressell, "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on when
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on Easton
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on came
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on home.
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on Ruth
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on recognised
// DEBUG: ['TIMESTRING', 'when', 'Easton', 'came', 'home.', 'Ruth']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on his
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on footsteps
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on before
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on he
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on reached
// DEBUG: ['recognised', 'his', 'footsteps', 'before', 'he']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on house,
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on and
// DEBUG: 105
// DEBUG: (100, 41)
// DEBUG: Operating on her
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on heart
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on seemed
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on to
// DEBUG: ['reached', 'the', 'house,', 'and', 'her', 'heart', 'seemed']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on stop
// DEBUG: 42
// DEBUG: (37, 53)
// DEBUG: Operating on beating
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on when
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on she
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on heard
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on the
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on clang
// DEBUG: ['to', 'stop', 'beating', 'when', 'she', 'heard', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on gate,
// DEBUG: 89
// DEBUG: (84, 65)
// DEBUG: Operating on as
// DEBUG: 104
// DEBUG: (99, 65)
// DEBUG: Operating on it
// DEBUG: 119
// DEBUG: (114, 65)
// DEBUG: Operating on closed
// DEBUG: 162
// DEBUG: (157, 65)
// DEBUG: Operating on after
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on he
// DEBUG: ['clang', 'of', 'the', 'gate,', 'as', 'it', 'closed', 'after']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on had
// DEBUG: 35
// DEBUG: (30, 77)
// DEBUG: Operating on passed
// DEBUG: 78
// DEBUG: (73, 77)
// DEBUG: Operating on through.
// DEBUG: 135
// DEBUG: ["after twelve o'clock"]
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Robert Tressell']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING when Easton came home. Ruth", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "recognised his footsteps before he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "reached the house, and her heart seemed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "to stop beating when she heard the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "clang of the gate, as it closed after", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 5, "after twelve o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Robert Tressell", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("00:03 - It was just three minutes past midnight when I last saw Archer Harrison alive. I remember, because I said it was two minutes past and he looked at his watch and said it was three minutes past. - , Since Ibsen"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on just
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'just']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on when
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on I
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on last
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on saw
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on Archer
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on Harrison
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on alive.
// DEBUG: ['TIMESTRING', 'when', 'I', 'last', 'saw', 'Archer', 'Harrison']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 41)
// DEBUG: Operating on remember,
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on because
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on I
// DEBUG: 147
// DEBUG: (142, 41)
// DEBUG: Operating on said
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on it
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on was
// DEBUG: ['alive.', 'I', 'remember,', 'because', 'I', 'said', 'it']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on two
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on minutes
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on past
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on and
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on he
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on looked
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on at
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on his
// DEBUG: ['was', 'two', 'minutes', 'past', 'and', 'he', 'looked', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on watch
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on and
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on said
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on it
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on was
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on three
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on minutes
// DEBUG: ['his', 'watch', 'and', 'said', 'it', 'was', 'three']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on past.
// DEBUG: 54
// DEBUG: ['three minutes past midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Since Ibsen']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "It was just", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING when I last saw Archer Harrison", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "alive. I remember, because I said it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "was two minutes past and he looked at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "his watch and said it was three", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "three minutes past midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Since Ibsen", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("00:03 - Suddenly I felt a great stillness in the air, then a snapping of tension. I glanced at my watch. Three minutes after midnight. I was breathing normally and my pen moved freely across the page. Whatever stalked me wasn’t quite as clever as I’d feared, I thought, careful not to pause in my work. - , The Historian"));
// DEBUG: (5, 5)
// DEBUG: Operating on Suddenly
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on I
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on felt
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on a
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on great
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on stillness
// DEBUG: ['Suddenly', 'I', 'felt', 'a', 'great']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on in
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on the
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on air,
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on then
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on a
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on snapping
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on of
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on tension.
// DEBUG: ['stillness', 'in', 'the', 'air,', 'then', 'a', 'snapping', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on I
// DEBUG: 27
// DEBUG: (22, 29)
// DEBUG: Operating on glanced
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on at
// DEBUG: 92
// DEBUG: (87, 29)
// DEBUG: Operating on my
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on watch.
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['tension.', 'I', 'glanced', 'at', 'my', 'watch.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on I
// DEBUG: 29
// DEBUG: (24, 53)
// DEBUG: Operating on was
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on breathing
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on normally
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on and
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on my
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on pen
// DEBUG: ['TIMESTRING', 'I', 'was', 'breathing', 'normally', 'and', 'my']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on moved
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on freely
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on across
// DEBUG: 136
// DEBUG: (131, 65)
// DEBUG: Operating on the
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on page.
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on Whatever
// DEBUG: ['pen', 'moved', 'freely', 'across', 'the', 'page.']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on stalked
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on me
// DEBUG: 84
// DEBUG: (79, 77)
// DEBUG: Operating on wasn’t
// DEBUG: 127
// DEBUG: (122, 77)
// DEBUG: Operating on quite
// DEBUG: 163
// DEBUG: (158, 77)
// DEBUG: Operating on as
// DEBUG: 178
// DEBUG: (173, 77)
// DEBUG: Operating on clever
// DEBUG: ['Whatever', 'stalked', 'me', 'wasn’t', 'quite', 'as']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on as
// DEBUG: 32
// DEBUG: (27, 89)
// DEBUG: Operating on I’d
// DEBUG: 54
// DEBUG: (49, 89)
// DEBUG: Operating on feared,
// DEBUG: 104
// DEBUG: (99, 89)
// DEBUG: Operating on I
// DEBUG: 112
// DEBUG: (107, 89)
// DEBUG: Operating on thought,
// DEBUG: 169
// DEBUG: (164, 89)
// DEBUG: Operating on careful
// DEBUG: ['clever', 'as', 'I’d', 'feared,', 'I', 'thought,']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on not
// DEBUG: 40
// DEBUG: (35, 101)
// DEBUG: Operating on to
// DEBUG: 55
// DEBUG: (50, 101)
// DEBUG: Operating on pause
// DEBUG: 91
// DEBUG: (86, 101)
// DEBUG: Operating on in
// DEBUG: 106
// DEBUG: (101, 101)
// DEBUG: Operating on my
// DEBUG: 121
// DEBUG: (116, 101)
// DEBUG: Operating on work.
// DEBUG: 157
// DEBUG: ['Three minutes after midnight.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- The Historian']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Suddenly I felt a great", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "stillness in the air, then a snapping of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "tension. I glanced at my watch.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "TIMESTRING I was breathing normally and my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "pen moved freely across the page.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "Whatever stalked me wasn’t quite as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "clever as I’d feared, I thought,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Three minutes after midnight.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- The Historian", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 00:04 for 1 quotations:
    case 4:
      Serial.println(F("Only one option for 00:04:"));
    Serial.println(F("00:04 - At four minutes past midnight, January 22, Admiral Lowry's armada of more than 250 ships reached the transport area off Anzio. The sea was calm, the night was black. - Fred Sheehan, Anzio"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on January
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on 22,
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on Admiral
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on Lowry's
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on armada
// DEBUG: ['TIMESTRING,', 'January', '22,', 'Admiral', "Lowry's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on more
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on than
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on 250
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on ships
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on reached
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on the
// DEBUG: ['armada', 'of', 'more', 'than', '250', 'ships', 'reached']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on transport
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on area
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on off
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on Anzio.
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on The
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on sea
// DEBUG: ['the', 'transport', 'area', 'off', 'Anzio.', 'The']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on was
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on calm,
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on night
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on was
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on black.
// DEBUG: 195
// DEBUG: ['four minutes past midnight']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Fred Sheehan, Anzio']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING, January 22, Admiral Lowry's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "armada of more than 250 ships reached", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the transport area off Anzio. The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "four minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- Fred Sheehan, Anzio", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:05 for 1 quotations:
    case 5:
      Serial.println(F("Only one option for 00:05:"));
    Serial.println(F("00:05 - E.M. Security, normally so scrupulous with their fucking trucks at 0005h., is nowhere around, lending weight to yet another cliché. If you asked Gately what he was feeling right this second he'd have no idea. - , Infinite Jest"));
// DEBUG: (5, 5)
// DEBUG: Operating on E.M.
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on Security,
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on normally
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on so
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on scrupulous
// DEBUG: ['E.M.', 'Security,', 'normally', 'so']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on with
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on their
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on fucking
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on trucks
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on at
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on TIMESTRING.,
// DEBUG: Wrorking on the timestring
// DEBUG: ['scrupulous', 'with', 'their', 'fucking', 'trucks', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on is
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on nowhere
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on around,
// DEBUG: ['TIMESTRING.,', 'is', 'nowhere']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on lending
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on weight
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on to
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on yet
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on another
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on cliché.
// DEBUG: ['around,', 'lending', 'weight', 'to', 'yet', 'another']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on If
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on you
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on asked
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on Gately
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on what
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on he
// DEBUG: 178
// DEBUG: (173, 53)
// DEBUG: Operating on was
// DEBUG: 200
// DEBUG: (195, 53)
// DEBUG: Operating on feeling
// DEBUG: ['cliché.', 'If', 'you', 'asked', 'Gately', 'what', 'he', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on right
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on this
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on second
// DEBUG: 126
// DEBUG: (121, 65)
// DEBUG: Operating on he'd
// DEBUG: 155
// DEBUG: (150, 65)
// DEBUG: Operating on have
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on no
// DEBUG: 199
// DEBUG: (194, 65)
// DEBUG: Operating on idea.
// DEBUG: ['feeling', 'right', 'this', 'second', "he'd", 'have', 'no']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['0005h']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Infinite Jest']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "E.M. Security, normally so", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "scrupulous with their fucking trucks at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING., is nowhere", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "around, lending weight to yet another", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "cliché. If you asked Gately what he was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "feeling right this second he'd have no", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "0005h", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Infinite Jest", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:06 for 1 quotations:
    case 6:
      Serial.println(F("Only one option for 00:06:"));
    Serial.println(F("00:06 - At six minutes past midnight, death relieved the sufferer. - , West of Hell's Fringe"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on death
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on relieved
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on the
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on sufferer.
// DEBUG: 201
// DEBUG: ['six minutes past midnight']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ["- West of Hell's Fringe"]
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "six minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- West of Hell's Fringe", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:07 for 1 quotations:
    case 7:
      Serial.println(F("Only one option for 00:07:"));
    Serial.println(F("00:07 - It was seven minutes after midnight. The dog was lying on the grass in the middle of the lawn in front of Mrs Shears' house. Its eyes were closed. It looked as if it was running on its side, the way dogs run when they think they are chasing a cat in a dream. - , Dog in the Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on The
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on dog
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on was
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on lying
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on on
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on the
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on grass
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on in
// DEBUG: ['TIMESTRING.', 'The', 'dog', 'was', 'lying', 'on', 'the', 'grass']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on middle
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on of
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on the
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on lawn
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on in
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on front
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on of
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on Mrs
// DEBUG: ['in', 'the', 'middle', 'of', 'the', 'lawn', 'in', 'front', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on Shears'
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on house.
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on Its
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on eyes
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on were
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on closed.
// DEBUG: ['Mrs', "Shears'", 'house.', 'Its', 'eyes', 'were']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on It
// DEBUG: 33
// DEBUG: (28, 65)
// DEBUG: Operating on looked
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on as
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on if
// DEBUG: 106
// DEBUG: (101, 65)
// DEBUG: Operating on it
// DEBUG: 121
// DEBUG: (116, 65)
// DEBUG: Operating on was
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on running
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on on
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on its
// DEBUG: ['closed.', 'It', 'looked', 'as', 'if', 'it', 'was', 'running', 'on']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on side,
// DEBUG: 50
// DEBUG: (45, 77)
// DEBUG: Operating on the
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on way
// DEBUG: 94
// DEBUG: (89, 77)
// DEBUG: Operating on dogs
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on run
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on when
// DEBUG: 174
// DEBUG: (169, 77)
// DEBUG: Operating on they
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on think
// DEBUG: ['its', 'side,', 'the', 'way', 'dogs', 'run', 'when', 'they']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on they
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on are
// DEBUG: 67
// DEBUG: (62, 89)
// DEBUG: Operating on chasing
// DEBUG: 117
// DEBUG: (112, 89)
// DEBUG: Operating on a
// DEBUG: 125
// DEBUG: (120, 89)
// DEBUG: Operating on cat
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on in
// DEBUG: 162
// DEBUG: (157, 89)
// DEBUG: Operating on a
// DEBUG: 170
// DEBUG: (165, 89)
// DEBUG: Operating on dream.
// DEBUG: ['think', 'they', 'are', 'chasing', 'a', 'cat', 'in', 'a']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['seven minutes after midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Dog in the Night-Time']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING. The dog was lying on the grass", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "in the middle of the lawn in front of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Mrs Shears' house. Its eyes were", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "closed. It looked as if it was running on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "its side, the way dogs run when they", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "think they are chasing a cat in a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "seven minutes after midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- Dog in the Night-Time", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:08 for 1 quotations:
    case 8:
      Serial.println(F("Only one option for 00:08:"));
    Serial.println(F("00:08 - Hour of the night! exclaimed the priest; \"it is day, not night, and the hour is eight past midnight!\" - , The Brigantine"));
// DEBUG: (5, 5)
// DEBUG: Operating on Hour
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on of
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on the
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on night!
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on exclaimed
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on the
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on priest;
// DEBUG: ['Hour', 'of', 'the', 'night!', 'exclaimed', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on \"it
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on is
// DEBUG: 62
// DEBUG: (57, 17)
// DEBUG: Operating on day,
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on not
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on night,
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on and
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on the
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on hour
// DEBUG: ['priest;', '\\"it', 'is', 'day,', 'not', 'night,', 'and', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on is
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on TIMESTRING!\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['hour', 'is']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['eight past midnight']
// DEBUG: drawing cursor (25, 29)
// DEBUG: ['- The Brigantine']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "Hour of the night! exclaimed the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "priest; \"it is day, not night, and the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "hour is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(25, 29, "eight past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- The Brigantine", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:09 for 1 quotations:
    case 9:
      Serial.println(F("Only one option for 00:09:"));
    Serial.println(F("00:09 - At 12.09am on 18 October, the cavalcade had reached the Karsaz Bridge, still ten kilometres from her destination. - , The Bhutto Murder Trail"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on on
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on 18
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on October,
// DEBUG: ['At', 'TIMESTRING', 'on', '18']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on cavalcade
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on had
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on reached
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on the
// DEBUG: 199
// DEBUG: (194, 17)
// DEBUG: Operating on Karsaz
// DEBUG: ['October,', 'the', 'cavalcade', 'had', 'reached', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on Bridge,
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on still
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on ten
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on kilometres
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on from
// DEBUG: ['Karsaz', 'Bridge,', 'still', 'ten', 'kilometres']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on her
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on destination.
// DEBUG: 122
// DEBUG: ['12.09am']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Bhutto Murder Trail']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING on 18", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "October, the cavalcade had reached the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Karsaz Bridge, still ten kilometres", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "12.09am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- The Bhutto Murder Trail", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:10 for 1 quotations:
    case 10:
      Serial.println(F("Only one option for 00:10:"));
    Serial.println(F("00:10 - It was at ten minutes past midnight. Three police cars, Alsations and a black maria arrive at the farmhouse. The farmer clad only in a jock-strap, refused them entry. - Jonathan Barrow, The Queue"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on at
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on Three
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on police
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on cars,
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on Alsations
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on and
// DEBUG: ['TIMESTRING.', 'Three', 'police', 'cars,', 'Alsations']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on a
// DEBUG: 22
// DEBUG: (17, 41)
// DEBUG: Operating on black
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on maria
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on arrive
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on at
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on farmhouse.
// DEBUG: ['and', 'a', 'black', 'maria', 'arrive', 'at', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on The
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on farmer
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on clad
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on only
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on in
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on a
// DEBUG: 167
// DEBUG: (162, 53)
// DEBUG: Operating on jock-strap,
// DEBUG: ['farmhouse.', 'The', 'farmer', 'clad', 'only', 'in', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on refused
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on them
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on entry.
// DEBUG: 144
// DEBUG: ['ten minutes past midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Jonathan Barrow, The Queue']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "It was at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING. Three police cars, Alsations", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "and a black maria arrive at the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "farmhouse. The farmer clad only in a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "ten minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Jonathan Barrow, The Queue", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:11 for 1 quotations:
    case 11:
      Serial.println(F("Only one option for 00:11:"));
    Serial.println(F("00:11 - The first incendiaries to hit St Thomas's Hospital had splattered Riddell House at eleven minutes past midnight, from where a few hours earlier the Archbishop of Canterbury had given 'an inspiring address'. - , The Longest Night"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on first
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on incendiaries
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on to
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on hit
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on St
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on Thomas's
// DEBUG: ['The', 'first', 'incendiaries', 'to', 'hit', 'St']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on Hospital
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on had
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on splattered
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on Riddell
// DEBUG: ["Thomas's", 'Hospital', 'had', 'splattered']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on House
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on at
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Riddell', 'House', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on from
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on where
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on a
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on few
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on hours
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on earlier
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING,', 'from', 'where', 'a', 'few', 'hours', 'earlier']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on Archbishop
// DEBUG: 85
// DEBUG: (80, 65)
// DEBUG: Operating on of
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on Canterbury
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on had
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on given
// DEBUG: ['the', 'Archbishop', 'of', 'Canterbury', 'had']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on 'an
// DEBUG: 38
// DEBUG: (33, 77)
// DEBUG: Operating on inspiring
// DEBUG: 102
// DEBUG: (97, 77)
// DEBUG: Operating on address'.
// DEBUG: 166
// DEBUG: ['eleven minutes past midnight']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- The Longest Night']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "The first incendiaries to hit St", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Thomas's Hospital had splattered", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Riddell House at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING, from where a few hours earlier", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "the Archbishop of Canterbury had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "eleven minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- The Longest Night", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:12 for 2 quotations:
    case 12:
      option = random(0, 2);
      Serial.print(F("2 options for 00:12. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("00:12 - Clock time is 0 Hours, 12 Minutes, 0 Seconds. Twenty three minutes later, they have their first sight of Venus. Each lies with his Eye clapp'd to the Snout of an identical two and a half foot Gregorian reflector made by Mr Short, with Darkening-Nozzles by Mr Bird. - , Mason & Dixon"));
// DEBUG: (5, 5)
// DEBUG: Operating on Clock
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on time
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on is
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Clock', 'time', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on 0
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on Seconds.
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on Twenty
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on three
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on minutes
// DEBUG: ['TIMESTRING,', '0', 'Seconds.', 'Twenty', 'three']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on later,
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on they
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on have
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on their
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on first
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on sight
// DEBUG: ['minutes', 'later,', 'they', 'have', 'their', 'first']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on Venus.
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on Each
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on lies
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on with
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on his
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on Eye
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on clapp'd
// DEBUG: ['sight', 'of', 'Venus.', 'Each', 'lies', 'with', 'his', 'Eye']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 65)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 65)
// DEBUG: Operating on Snout
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on of
// DEBUG: 106
// DEBUG: (101, 65)
// DEBUG: Operating on an
// DEBUG: 121
// DEBUG: (116, 65)
// DEBUG: Operating on identical
// DEBUG: 185
// DEBUG: (180, 65)
// DEBUG: Operating on two
// DEBUG: 207
// DEBUG: (202, 65)
// DEBUG: Operating on and
// DEBUG: ["clapp'd", 'to', 'the', 'Snout', 'of', 'an', 'identical', 'two']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on a
// DEBUG: 22
// DEBUG: (17, 77)
// DEBUG: Operating on half
// DEBUG: 51
// DEBUG: (46, 77)
// DEBUG: Operating on foot
// DEBUG: 80
// DEBUG: (75, 77)
// DEBUG: Operating on Gregorian
// DEBUG: 144
// DEBUG: (139, 77)
// DEBUG: Operating on reflector
// DEBUG: 208
// DEBUG: (203, 77)
// DEBUG: Operating on made
// DEBUG: ['and', 'a', 'half', 'foot', 'Gregorian', 'reflector']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on by
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on Mr
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on Short,
// DEBUG: 88
// DEBUG: (83, 89)
// DEBUG: Operating on with
// DEBUG: 117
// DEBUG: (112, 89)
// DEBUG: Operating on Darkening-Nozzles
// DEBUG: ['made', 'by', 'Mr', 'Short,', 'with']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (23, 101)
// DEBUG: Operating on by
// DEBUG: 43
// DEBUG: (38, 101)
// DEBUG: Operating on Mr
// DEBUG: 58
// DEBUG: (53, 101)
// DEBUG: Operating on Bird.
// DEBUG: 94
// DEBUG: ['0 Hours, 12 Minutes']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Mason & Dixon']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Clock time is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, 0 Seconds. Twenty three", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "minutes later, they have their first", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "sight of Venus. Each lies with his Eye", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "clapp'd to the Snout of an identical two", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "and a half foot Gregorian reflector", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "made by Mr Short, with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "0 Hours, 12 Minutes", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Mason & Dixon", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("00:12 - It was twelve minutes past midnight when mother and daughter saw the first lightning strike. It hit the main barn with such force the ground trembled under their feet. - , Kentucky Heat"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on when
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on mother
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on and
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on daughter
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on saw
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'when', 'mother', 'and', 'daughter', 'saw']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on first
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on lightning
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on strike.
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on It
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on hit
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on the
// DEBUG: ['the', 'first', 'lightning', 'strike.', 'It', 'hit']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on main
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on barn
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on with
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on such
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on force
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on ground
// DEBUG: ['the', 'main', 'barn', 'with', 'such', 'force', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on trembled
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on under
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on their
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on feet.
// DEBUG: 182
// DEBUG: ['twelve minutes past midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Kentucky Heat']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING when mother and daughter saw", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the first lightning strike. It hit", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "the main barn with such force the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "twelve minutes past midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Kentucky Heat", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 00:13 for 0 quotations:
    case 13:
      Serial.println(F("No quotes for 00:13"));
      return;

    // Codegen for 00:14 for 1 quotations:
    case 14:
      Serial.println(F("Only one option for 00:14:"));
    Serial.println(F("00:14 - It was exactly fourteen minutes past midnight when he completed the final call. - , The Matarese Circle"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on exactly
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'exactly']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on when
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on he
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on completed
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on the
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on final
// DEBUG: 187
// DEBUG: (182, 29)
// DEBUG: Operating on call.
// DEBUG: ['TIMESTRING', 'when', 'he', 'completed', 'the', 'final']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['fourteen minutes past midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Matarese Circle']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "It was exactly", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING when he completed the final", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "fourteen minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- The Matarese Circle", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:15 for 2 quotations:
    case 15:
      option = random(0, 2);
      Serial.print(F("2 options for 00:15. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("00:15 - At twelve-fifteen he got out of the van. He tucked the pistol under the waistband of his trousers and crossed the silent, deserted street to the Hudston house. - Dean Koontz, Watchers"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 195
// DEBUG: (190, 5)
// DEBUG: Operating on he
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on got
// DEBUG: ['At', 'TIMESTRING', 'he']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on out
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on of
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on van.
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on He
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on tucked
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on the
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on pistol
// DEBUG: ['got', 'out', 'of', 'the', 'van.', 'He', 'tucked', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on under
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on the
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on waistband
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on of
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on his
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on trousers
// DEBUG: ['pistol', 'under', 'the', 'waistband', 'of', 'his']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on and
// DEBUG: 41
// DEBUG: (36, 41)
// DEBUG: Operating on crossed
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on the
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on silent,
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on deserted
// DEBUG: ['trousers', 'and', 'crossed', 'the', 'silent,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on street
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on to
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on the
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on Hudston
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on house.
// DEBUG: 192
// DEBUG: ['twelve-fifteen']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Dean Koontz, Watchers']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "got out of the van. He tucked the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "pistol under the waistband of his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "trousers and crossed the silent,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "twelve-fifteen", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- Dean Koontz, Watchers", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("00:15 - At twelve-fifteen he got out of the van. He tucked the pistol under the waistband of his trousers and crossed the silent, deserted street to the Hudston house. He let himself through an unlocked wooden gate onto a side patio brightened only by moonlight filtered through the leafy branches of an enormous sheltering coral tree. He paused to pull on a pair of supple leather gloves. - Dean Koontz, Watchers "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 195
// DEBUG: (190, 5)
// DEBUG: Operating on he
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on got
// DEBUG: ['At', 'TIMESTRING', 'he']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on out
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on of
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on van.
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on He
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on tucked
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on the
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on pistol
// DEBUG: ['got', 'out', 'of', 'the', 'van.', 'He', 'tucked', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on under
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on the
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on waistband
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on of
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on his
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on trousers
// DEBUG: ['pistol', 'under', 'the', 'waistband', 'of', 'his']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on and
// DEBUG: 41
// DEBUG: (36, 41)
// DEBUG: Operating on crossed
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on the
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on silent,
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on deserted
// DEBUG: ['trousers', 'and', 'crossed', 'the', 'silent,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on street
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on to
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on the
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on Hudston
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on house.
// DEBUG: 192
// DEBUG: (187, 53)
// DEBUG: Operating on He
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on let
// DEBUG: ['deserted', 'street', 'to', 'the', 'Hudston', 'house.', 'He']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on himself
// DEBUG: 64
// DEBUG: (59, 65)
// DEBUG: Operating on through
// DEBUG: 114
// DEBUG: (109, 65)
// DEBUG: Operating on an
// DEBUG: 129
// DEBUG: (124, 65)
// DEBUG: Operating on unlocked
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on wooden
// DEBUG: ['let', 'himself', 'through', 'an', 'unlocked']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on gate
// DEBUG: 46
// DEBUG: (41, 77)
// DEBUG: Operating on onto
// DEBUG: 75
// DEBUG: (70, 77)
// DEBUG: Operating on a
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on side
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on patio
// DEBUG: 148
// DEBUG: (143, 77)
// DEBUG: Operating on brightened
// DEBUG: ['wooden', 'gate', 'onto', 'a', 'side', 'patio']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on only
// DEBUG: 50
// DEBUG: (45, 89)
// DEBUG: Operating on by
// DEBUG: 65
// DEBUG: (60, 89)
// DEBUG: Operating on moonlight
// DEBUG: 129
// DEBUG: (124, 89)
// DEBUG: Operating on filtered
// DEBUG: 186
// DEBUG: (181, 89)
// DEBUG: Operating on through
// DEBUG: ['brightened', 'only', 'by', 'moonlight', 'filtered']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 101)
// DEBUG: Operating on leafy
// DEBUG: 76
// DEBUG: (71, 101)
// DEBUG: Operating on branches
// DEBUG: 133
// DEBUG: (128, 101)
// DEBUG: Operating on of
// DEBUG: 148
// DEBUG: (143, 101)
// DEBUG: Operating on an
// DEBUG: 163
// DEBUG: (158, 101)
// DEBUG: Operating on enormous
// DEBUG: ['through', 'the', 'leafy', 'branches', 'of', 'an']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (14, 113)
// DEBUG: Operating on sheltering
// DEBUG: 90
// DEBUG: (85, 113)
// DEBUG: Operating on coral
// DEBUG: 126
// DEBUG: (121, 113)
// DEBUG: Operating on tree.
// DEBUG: 162
// DEBUG: (157, 113)
// DEBUG: Operating on He
// DEBUG: 177
// DEBUG: (172, 113)
// DEBUG: Operating on paused
// DEBUG: ['enormous', 'sheltering', 'coral', 'tree.', 'He']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (12, 125)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 125)
// DEBUG: Operating on pull
// DEBUG: 61
// DEBUG: (56, 125)
// DEBUG: Operating on on
// DEBUG: 76
// DEBUG: (71, 125)
// DEBUG: Operating on a
// DEBUG: 84
// DEBUG: (79, 125)
// DEBUG: Operating on pair
// DEBUG: 113
// DEBUG: (108, 125)
// DEBUG: Operating on of
// DEBUG: 128
// DEBUG: (123, 125)
// DEBUG: Operating on supple
// DEBUG: 171
// DEBUG: (166, 125)
// DEBUG: Operating on leather
// DEBUG: ['paused', 'to', 'pull', 'on', 'a', 'pair', 'of', 'supple']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (13, 137)
// DEBUG: Operating on gloves.
// DEBUG: 68
// DEBUG: ['twelve-fifteen']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Dean Koontz, Watchers ']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "got out of the van. He tucked the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "pistol under the waistband of his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "trousers and crossed the silent,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "deserted street to the Hudston house. He", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "let himself through an unlocked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "wooden gate onto a side patio", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "brightened only by moonlight filtered", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "through the leafy branches of an", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "enormous sheltering coral tree. He", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "paused to pull on a pair of supple", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "twelve-fifteen", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Dean Koontz, Watchers ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 00:16 for 1 quotations:
    case 16:
      Serial.println(F("Only one option for 00:16:"));
    Serial.println(F("00:16 - At sixteen minutes past midnight, Block 4 was hit and the roof set alight. - , The Longest Night"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on Block
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on 4
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on was
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on hit
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on and
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on the
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on roof
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on set
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on alight.
// DEBUG: ['TIMESTRING,', 'Block', '4', 'was', 'hit', 'and', 'the', 'roof', 'set']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['sixteen minutes past midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Longest Night']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING, Block 4 was hit and the roof set", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "sixteen minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- The Longest Night", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:17 for 1 quotations:
    case 17:
      Serial.println(F("Only one option for 00:17:"));
    Serial.println(F("00:17 - Kava ordered two glasses of coffee for himself and his beloved and some cake. When the pair left, exactly seventeen minutes after twelve, the club began to buzz with excitement. - , Vanvild Kava"));
// DEBUG: (5, 5)
// DEBUG: Operating on Kava
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on ordered
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on two
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on glasses
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on of
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on coffee
// DEBUG: ['Kava', 'ordered', 'two', 'glasses', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on for
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on himself
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on and
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on his
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on beloved
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on and
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on some
// DEBUG: ['coffee', 'for', 'himself', 'and', 'his', 'beloved', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on cake.
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on When
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on the
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on pair
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on left,
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on exactly
// DEBUG: ['some', 'cake.', 'When', 'the', 'pair', 'left,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['exactly']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on club
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on began
// DEBUG: 109
// DEBUG: (104, 65)
// DEBUG: Operating on to
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on buzz
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on with
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on excitement.
// DEBUG: ['TIMESTRING,', 'the', 'club', 'began', 'to', 'buzz', 'with']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['seventeen minutes after twelve']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- Vanvild Kava']
// DEBUG: drawing cursor (109, 192)
    paint.Paint_DrawString_EN(5, 5, "Kava ordered two glasses of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "coffee for himself and his beloved and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "some cake. When the pair left,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "exactly", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING, the club began to buzz with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "seventeen minutes after twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(109, 192, "- Vanvild Kava", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:18 for 1 quotations:
    case 18:
      Serial.println(F("Only one option for 00:18:"));
    Serial.println(F("00:18 - 21st December 1985, 12.18am [In bed] Michael doesn’t believe in Heaven or Hell. He’s got closer to death than most living people and he tells me there was no tunnel of light or dancing angels. I’m a bit disappointed, to be honest. - , The Book of Lies"));
// DEBUG: (5, 5)
// DEBUG: Operating on 21st
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on December
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on 1985,
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['21st', 'December', '1985,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on [In
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on bed]
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on Michael
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on doesn’t
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on believe
// DEBUG: ['TIMESTRING', '[In', 'bed]', 'Michael', 'doesn’t']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on Heaven
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on or
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on Hell.
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on He’s
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on got
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on closer
// DEBUG: ['believe', 'in', 'Heaven', 'or', 'Hell.', 'He’s', 'got']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on death
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on than
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on most
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on living
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on people
// DEBUG: ['closer', 'to', 'death', 'than', 'most', 'living']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on he
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on tells
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on me
// DEBUG: 105
// DEBUG: (100, 53)
// DEBUG: Operating on there
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on was
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on no
// DEBUG: 178
// DEBUG: (173, 53)
// DEBUG: Operating on tunnel
// DEBUG: ['people', 'and', 'he', 'tells', 'me', 'there', 'was', 'no']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 65)
// DEBUG: Operating on light
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on or
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on dancing
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on angels.
// DEBUG: 183
// DEBUG: (178, 65)
// DEBUG: Operating on I’m
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on a
// DEBUG: ['tunnel', 'of', 'light', 'or', 'dancing', 'angels.', 'I’m']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (7, 77)
// DEBUG: Operating on bit
// DEBUG: 34
// DEBUG: (29, 77)
// DEBUG: Operating on disappointed,
// DEBUG: 126
// DEBUG: (121, 77)
// DEBUG: Operating on to
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on be
// DEBUG: 156
// DEBUG: (151, 77)
// DEBUG: Operating on honest.
// DEBUG: 206
// DEBUG: ['12.18am']
// DEBUG: drawing cursor (127, 5)
// DEBUG: ['- The Book of Lies']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "21st December 1985,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING [In bed] Michael doesn’t", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "believe in Heaven or Hell. He’s got", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "closer to death than most living", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "people and he tells me there was no", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "tunnel of light or dancing angels. I’m", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(127, 5, "12.18am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- The Book of Lies", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:19 for 0 quotations:
    case 19:
      Serial.println(F("No quotes for 00:19"));
      return;

    // Codegen for 00:20 for 1 quotations:
    case 20:
      Serial.println(F("Only one option for 00:20:"));
    Serial.println(F("00:20 - Now she was kneading the little ball of hot paste on the convex margin of the bowl and I could smell the opium. There is no smell like it. Beside the bed the alarm-clock showed twelve-twenty, but already my tension was over. Pyle had diminished. - , The Quiet American"));
// DEBUG: (5, 5)
// DEBUG: Operating on Now
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on she
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on was
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on kneading
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on the
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on little
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on ball
// DEBUG: ['Now', 'she', 'was', 'kneading', 'the', 'little']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on of
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on hot
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on paste
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on on
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on the
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on convex
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on margin
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on of
// DEBUG: ['ball', 'of', 'hot', 'paste', 'on', 'the', 'convex', 'margin']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on bowl
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on and
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on I
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on could
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on smell
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on opium.
// DEBUG: ['of', 'the', 'bowl', 'and', 'I', 'could', 'smell', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on There
// DEBUG: 53
// DEBUG: (48, 41)
// DEBUG: Operating on is
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on no
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on smell
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on like
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on it.
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on Beside
// DEBUG: ['opium.', 'There', 'is', 'no', 'smell', 'like', 'it.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on bed
// DEBUG: 61
// DEBUG: (56, 53)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on alarm-clock
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on showed
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Beside', 'the', 'bed', 'the', 'alarm-clock', 'showed']
// DEBUG: drawing cursor (5, 53)
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on but
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on already
// DEBUG: ['TIMESTRING,', 'but']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on my
// DEBUG: 33
// DEBUG: (28, 77)
// DEBUG: Operating on tension
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on was
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on over.
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on Pyle
// DEBUG: 170
// DEBUG: (165, 77)
// DEBUG: Operating on had
// DEBUG: 192
// DEBUG: (187, 77)
// DEBUG: Operating on diminished.
// DEBUG: ['already', 'my', 'tension', 'was', 'over.', 'Pyle', 'had']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['twelve-twenty']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- The Quiet American']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "Now she was kneading the little", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "ball of hot paste on the convex margin", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "of the bowl and I could smell the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "opium. There is no smell like it.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Beside the bed the alarm-clock showed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING, but", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "already my tension was over. Pyle had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "twelve-twenty", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- The Quiet American", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:21 for 1 quotations:
    case 21:
      Serial.println(F("Only one option for 00:21:"));
    Serial.println(F("00:21 - Nobody had been one of Mycroft Ward's most important operatives and for sixty seconds every day, between 12.21am and 12.22am., his laptop was permitted to connect directly with the gigantic online database of self that was Mycroft Ward's mind. - , The Raw Shark Texts"));
// DEBUG: (5, 5)
// DEBUG: Operating on Nobody
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on had
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on been
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on one
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on of
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on Mycroft
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on Ward's
// DEBUG: ['Nobody', 'had', 'been', 'one', 'of', 'Mycroft']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on most
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on important
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on operatives
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on and
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on for
// DEBUG: ["Ward's", 'most', 'important', 'operatives', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on sixty
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on seconds
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on every
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on day,
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on between
// DEBUG: ['for', 'sixty', 'seconds', 'every', 'day,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on and
// DEBUG: 161
// DEBUG: (156, 41)
// DEBUG: Operating on 12.22am.,
// DEBUG: ['between', 'TIMESTRING', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on his
// DEBUG: 42
// DEBUG: (37, 53)
// DEBUG: Operating on laptop
// DEBUG: 85
// DEBUG: (80, 53)
// DEBUG: Operating on was
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on permitted
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on to
// DEBUG: 186
// DEBUG: (181, 53)
// DEBUG: Operating on connect
// DEBUG: ['12.22am.,', 'his', 'laptop', 'was', 'permitted', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on directly
// DEBUG: 75
// DEBUG: (70, 65)
// DEBUG: Operating on with
// DEBUG: 104
// DEBUG: (99, 65)
// DEBUG: Operating on the
// DEBUG: 126
// DEBUG: (121, 65)
// DEBUG: Operating on gigantic
// DEBUG: 183
// DEBUG: (178, 65)
// DEBUG: Operating on online
// DEBUG: ['connect', 'directly', 'with', 'the', 'gigantic']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on database
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on of
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on self
// DEBUG: 118
// DEBUG: (113, 77)
// DEBUG: Operating on that
// DEBUG: 147
// DEBUG: (142, 77)
// DEBUG: Operating on was
// DEBUG: 169
// DEBUG: (164, 77)
// DEBUG: Operating on Mycroft
// DEBUG: ['online', 'database', 'of', 'self', 'that', 'was']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on Ward's
// DEBUG: 61
// DEBUG: (56, 89)
// DEBUG: Operating on mind.
// DEBUG: 97
// DEBUG: ['12.21am']
// DEBUG: drawing cursor (13, 41)
// DEBUG: ['- The Raw Shark Texts']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "Nobody had been one of Mycroft", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Ward's most important operatives and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "for sixty seconds every day,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "between TIMESTRING and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "12.22am., his laptop was permitted to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "connect directly with the gigantic", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "online database of self that was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(13, 41, "12.21am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- The Raw Shark Texts", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:22 for 1 quotations:
    case 22:
      Serial.println(F("Only one option for 00:22:"));
    Serial.println(F("00:22 - Nobody had been one of Mycroft Ward's most important operatives and for sixty seconds every day, between 12.21am and 12.22am., his laptop was permitted to connect directly with the gigantic online database of self that was Mycroft Ward's mind. - , The Raw Shark Texts"));
// DEBUG: (5, 5)
// DEBUG: Operating on Nobody
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on had
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on been
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on one
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on of
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on Mycroft
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on Ward's
// DEBUG: ['Nobody', 'had', 'been', 'one', 'of', 'Mycroft']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on most
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on important
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on operatives
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on and
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on for
// DEBUG: ["Ward's", 'most', 'important', 'operatives', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on sixty
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on seconds
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on every
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on day,
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on between
// DEBUG: ['for', 'sixty', 'seconds', 'every', 'day,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on 12.21am
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on and
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['between', '12.21am', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on his
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on laptop
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on was
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on permitted
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on to
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on connect
// DEBUG: ['TIMESTRING,', 'his', 'laptop', 'was', 'permitted', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on directly
// DEBUG: 75
// DEBUG: (70, 65)
// DEBUG: Operating on with
// DEBUG: 104
// DEBUG: (99, 65)
// DEBUG: Operating on the
// DEBUG: 126
// DEBUG: (121, 65)
// DEBUG: Operating on gigantic
// DEBUG: 183
// DEBUG: (178, 65)
// DEBUG: Operating on online
// DEBUG: ['connect', 'directly', 'with', 'the', 'gigantic']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on database
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on of
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on self
// DEBUG: 118
// DEBUG: (113, 77)
// DEBUG: Operating on that
// DEBUG: 147
// DEBUG: (142, 77)
// DEBUG: Operating on was
// DEBUG: 169
// DEBUG: (164, 77)
// DEBUG: Operating on Mycroft
// DEBUG: ['online', 'database', 'of', 'self', 'that', 'was']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on Ward's
// DEBUG: 61
// DEBUG: (56, 89)
// DEBUG: Operating on mind.
// DEBUG: 97
// DEBUG: ['12.22am.']
// DEBUG: drawing cursor (85, 41)
// DEBUG: ['- The Raw Shark Texts']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "Nobody had been one of Mycroft", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Ward's most important operatives and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "for sixty seconds every day,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "between 12.21am and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING, his laptop was permitted to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "connect directly with the gigantic", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "online database of self that was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(85, 41, "12.22am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- The Raw Shark Texts", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:23 for 1 quotations:
    case 23:
      Serial.println(F("Only one option for 00:23:"));
    Serial.println(F("00:23 - Oskar weighed the wristwatch in his hand, then gave the rather fine piece with its luminous dial showing twenty-three minutes past midnight to little Pinchcoal. He looked up inquiringly at his chief. Störtebeker nodded his assent. And Oskar said, as he adjusted his drum snugly for the trip home: 'Jesus will lead the way. Follow thou me!' - Günter Grass, The Tin Drum"));
// DEBUG: (5, 5)
// DEBUG: Operating on Oskar
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on weighed
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on the
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on wristwatch
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on in
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on his
// DEBUG: ['Oskar', 'weighed', 'the', 'wristwatch', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on hand,
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on then
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on gave
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on rather
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on fine
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on piece
// DEBUG: ['his', 'hand,', 'then', 'gave', 'the', 'rather', 'fine']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on with
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on its
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on luminous
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on dial
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on showing
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['piece', 'with', 'its', 'luminous', 'dial', 'showing']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on to
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on little
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on Pinchcoal.
// DEBUG: 150
// DEBUG: (145, 53)
// DEBUG: Operating on He
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on looked
// DEBUG: 208
// DEBUG: (203, 53)
// DEBUG: Operating on up
// DEBUG: ['TIMESTRING', 'to', 'little', 'Pinchcoal.', 'He', 'looked']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on inquiringly
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on at
// DEBUG: 106
// DEBUG: (101, 65)
// DEBUG: Operating on his
// DEBUG: 128
// DEBUG: (123, 65)
// DEBUG: Operating on chief.
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on Störtebeker
// DEBUG: ['up', 'inquiringly', 'at', 'his', 'chief.']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (17, 77)
// DEBUG: Operating on nodded
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on his
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on assent.
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on And
// DEBUG: 159
// DEBUG: (154, 77)
// DEBUG: Operating on Oskar
// DEBUG: 195
// DEBUG: (190, 77)
// DEBUG: Operating on said,
// DEBUG: ['Störtebeker', 'nodded', 'his', 'assent.', 'And', 'Oskar']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on as
// DEBUG: 31
// DEBUG: (26, 89)
// DEBUG: Operating on he
// DEBUG: 46
// DEBUG: (41, 89)
// DEBUG: Operating on adjusted
// DEBUG: 103
// DEBUG: (98, 89)
// DEBUG: Operating on his
// DEBUG: 125
// DEBUG: (120, 89)
// DEBUG: Operating on drum
// DEBUG: 154
// DEBUG: (149, 89)
// DEBUG: Operating on snugly
// DEBUG: 197
// DEBUG: (192, 89)
// DEBUG: Operating on for
// DEBUG: ['said,', 'as', 'he', 'adjusted', 'his', 'drum', 'snugly']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 101)
// DEBUG: Operating on trip
// DEBUG: 65
// DEBUG: (60, 101)
// DEBUG: Operating on home:
// DEBUG: 101
// DEBUG: (96, 101)
// DEBUG: Operating on 'Jesus
// DEBUG: 144
// DEBUG: (139, 101)
// DEBUG: Operating on will
// DEBUG: 173
// DEBUG: (168, 101)
// DEBUG: Operating on lead
// DEBUG: 202
// DEBUG: (197, 101)
// DEBUG: Operating on the
// DEBUG: ['for', 'the', 'trip', 'home:', "'Jesus", 'will', 'lead']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on way.
// DEBUG: 43
// DEBUG: (38, 113)
// DEBUG: Operating on Follow
// DEBUG: 86
// DEBUG: (81, 113)
// DEBUG: Operating on thou
// DEBUG: 115
// DEBUG: (110, 113)
// DEBUG: Operating on me!'
// DEBUG: 144
// DEBUG: ['twenty-three minutes past midnight']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Günter Grass, The Tin Drum']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "Oskar weighed the wristwatch in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "his hand, then gave the rather fine", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "piece with its luminous dial showing", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING to little Pinchcoal. He looked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "up inquiringly at his chief.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Störtebeker nodded his assent. And Oskar", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "said, as he adjusted his drum snugly", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "for the trip home: 'Jesus will lead", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "twenty-three minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Günter Grass, The Tin Drum", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:24 for 1 quotations:
    case 24:
      Serial.println(F("Only one option for 00:24:"));
    Serial.println(F("00:24 - Sanders with Sutton as his gunner began their patrol at 12.24am, turning south towards Beachy Head at 10,000 ft. - , The Longest Night"));
// DEBUG: (5, 5)
// DEBUG: Operating on Sanders
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on with
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on Sutton
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on as
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on his
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on gunner
// DEBUG: ['Sanders', 'with', 'Sutton', 'as', 'his']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on began
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on their
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on patrol
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on at
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['gunner', 'began', 'their', 'patrol', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on turning
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on south
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on towards
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on Beachy
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on Head
// DEBUG: ['TIMESTRING,', 'turning', 'south', 'towards', 'Beachy']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on at
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on 10,000
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on ft.
// DEBUG: 95
// DEBUG: ['12.24am']
// DEBUG: drawing cursor (142, 17)
// DEBUG: ['- The Longest Night']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "Sanders with Sutton as his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "gunner began their patrol at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING, turning south towards Beachy", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(142, 17, "12.24am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- The Longest Night", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:25 for 2 quotations:
    case 25:
      option = random(0, 2);
      Serial.print(F("2 options for 00:25. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("00:25 - Charlotte remembered that she had heard Gregoire go downstairs again, almost immediately after entering his bedroom, and before the servants had even bolted the house-doors for the night. He had certainly rushed off to join Therese in some coppice, whence they must have hurried away to Vieux-Bourg station which the last train to Paris quitted at five-and-twenty minutes past midnight. And it was indeed this which had taken place. - Emile Zola, Fruitfulness "));
// DEBUG: (5, 5)
// DEBUG: Operating on Charlotte
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on remembered
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on that
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on she
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on had
// DEBUG: ['Charlotte', 'remembered', 'that', 'she']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on heard
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on Gregoire
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on go
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on downstairs
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on again,
// DEBUG: ['had', 'heard', 'Gregoire', 'go', 'downstairs']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on almost
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on immediately
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on after
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on entering
// DEBUG: ['again,', 'almost', 'immediately', 'after']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on his
// DEBUG: 41
// DEBUG: (36, 41)
// DEBUG: Operating on bedroom,
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on and
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on before
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on the
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on servants
// DEBUG: ['entering', 'his', 'bedroom,', 'and', 'before', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on had
// DEBUG: 41
// DEBUG: (36, 53)
// DEBUG: Operating on even
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on bolted
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on the
// DEBUG: 135
// DEBUG: (130, 53)
// DEBUG: Operating on house-doors
// DEBUG: ['servants', 'had', 'even', 'bolted', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on for
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on the
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on night.
// DEBUG: 109
// DEBUG: (104, 65)
// DEBUG: Operating on He
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on had
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on certainly
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on rushed
// DEBUG: ['house-doors', 'for', 'the', 'night.', 'He', 'had', 'certainly']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on off
// DEBUG: 39
// DEBUG: (34, 77)
// DEBUG: Operating on to
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on join
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on Therese
// DEBUG: 133
// DEBUG: (128, 77)
// DEBUG: Operating on in
// DEBUG: 148
// DEBUG: (143, 77)
// DEBUG: Operating on some
// DEBUG: 177
// DEBUG: (172, 77)
// DEBUG: Operating on coppice,
// DEBUG: ['rushed', 'off', 'to', 'join', 'Therese', 'in', 'some']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (14, 89)
// DEBUG: Operating on whence
// DEBUG: 62
// DEBUG: (57, 89)
// DEBUG: Operating on they
// DEBUG: 91
// DEBUG: (86, 89)
// DEBUG: Operating on must
// DEBUG: 120
// DEBUG: (115, 89)
// DEBUG: Operating on have
// DEBUG: 149
// DEBUG: (144, 89)
// DEBUG: Operating on hurried
// DEBUG: 199
// DEBUG: (194, 89)
// DEBUG: Operating on away
// DEBUG: ['coppice,', 'whence', 'they', 'must', 'have', 'hurried']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 101)
// DEBUG: Operating on Vieux-Bourg
// DEBUG: 108
// DEBUG: (103, 101)
// DEBUG: Operating on station
// DEBUG: 158
// DEBUG: (153, 101)
// DEBUG: Operating on which
// DEBUG: 194
// DEBUG: (189, 101)
// DEBUG: Operating on the
// DEBUG: ['away', 'to', 'Vieux-Bourg', 'station', 'which']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on last
// DEBUG: 43
// DEBUG: (38, 113)
// DEBUG: Operating on train
// DEBUG: 79
// DEBUG: (74, 113)
// DEBUG: Operating on to
// DEBUG: 94
// DEBUG: (89, 113)
// DEBUG: Operating on Paris
// DEBUG: 130
// DEBUG: (125, 113)
// DEBUG: Operating on quitted
// DEBUG: 180
// DEBUG: (175, 113)
// DEBUG: Operating on at
// DEBUG: 195
// DEBUG: (190, 113)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'last', 'train', 'to', 'Paris', 'quitted', 'at']
// DEBUG: drawing cursor (5, 113)
// DEBUG: []
// DEBUG: drawing cursor (5, 125)
// DEBUG: (17, 137)
// DEBUG: Operating on And
// DEBUG: 44
// DEBUG: (39, 137)
// DEBUG: Operating on it
// DEBUG: 59
// DEBUG: (54, 137)
// DEBUG: Operating on was
// DEBUG: 81
// DEBUG: (76, 137)
// DEBUG: Operating on indeed
// DEBUG: 124
// DEBUG: (119, 137)
// DEBUG: Operating on this
// DEBUG: 153
// DEBUG: (148, 137)
// DEBUG: Operating on which
// DEBUG: 189
// DEBUG: (184, 137)
// DEBUG: Operating on had
// DEBUG: 211
// DEBUG: (206, 137)
// DEBUG: Operating on taken
// DEBUG: ['TIMESTRING.', 'And', 'it', 'was', 'indeed', 'this', 'which', 'had']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (11, 149)
// DEBUG: Operating on place.
// DEBUG: 59
// DEBUG: ['five-and-twenty minutes past midnight']
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['- Emile Zola, Fruitfulness ']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "Charlotte remembered that she", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "had heard Gregoire go downstairs", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "again, almost immediately after", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "entering his bedroom, and before the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "servants had even bolted the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "house-doors for the night. He had certainly", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "rushed off to join Therese in some", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "coppice, whence they must have hurried", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "away to Vieux-Bourg station which", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "the last train to Paris quitted at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "TIMESTRING. And it was indeed this which had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "five-and-twenty minutes past midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Emile Zola, Fruitfulness ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("00:25 - I mean, look at the time! Twenty-five past midnight! It was a triumph, it really was! - , The Soldier's Wife"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on mean,
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on look
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on at
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on the
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on time!
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['I', 'mean,', 'look', 'at', 'the', 'time!']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on It
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on was
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on a
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on triumph,
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on it
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on really
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on was!
// DEBUG: 210
// DEBUG: ['Twenty-five past midnight!']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ["- The Soldier's Wife"]
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "I mean, look at the time!", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Twenty-five past midnight!", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Soldier's Wife", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 00:26 for 1 quotations:
    case 26:
      Serial.println(F("Only one option for 00:26:"));
    Serial.println(F("00:26 - A Mr Dutta from King's Cross called and told me you were on your way. He said you wanted to see the arrival of yesterday's 12.26am. It'll take me a few minutes to cue up the footage. Our regular security bloke isn't here today; he's up before Haringey Magistrates' Court for gross indecency outside the headquarters of the Dagenham Girl Pipers. - , Bryant & May Off the Rails"));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on Mr
// DEBUG: 33
// DEBUG: (28, 5)
// DEBUG: Operating on Dutta
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on from
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on King's
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on Cross
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on called
// DEBUG: ['A', 'Mr', 'Dutta', 'from', "King's", 'Cross']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on told
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on me
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on you
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on were
// DEBUG: 134
// DEBUG: (129, 17)
// DEBUG: Operating on on
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on your
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on way.
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on He
// DEBUG: ['called', 'and', 'told', 'me', 'you', 'were', 'on', 'your', 'way.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on said
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on you
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on wanted
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on to
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on see
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on arrival
// DEBUG: ['He', 'said', 'you', 'wanted', 'to', 'see', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on yesterday's
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['arrival', 'of', "yesterday's"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on It'll
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on take
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on me
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on a
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on few
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on minutes
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on to
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on cue
// DEBUG: ['TIMESTRING', "It'll", 'take', 'me', 'a', 'few', 'minutes', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on up
// DEBUG: 29
// DEBUG: (24, 65)
// DEBUG: Operating on the
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on footage.
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on Our
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on regular
// DEBUG: 180
// DEBUG: (175, 65)
// DEBUG: Operating on security
// DEBUG: ['cue', 'up', 'the', 'footage.', 'Our', 'regular']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on bloke
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on isn't
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on here
// DEBUG: 120
// DEBUG: (115, 77)
// DEBUG: Operating on today;
// DEBUG: 163
// DEBUG: (158, 77)
// DEBUG: Operating on he's
// DEBUG: 192
// DEBUG: (187, 77)
// DEBUG: Operating on up
// DEBUG: 207
// DEBUG: (202, 77)
// DEBUG: Operating on before
// DEBUG: ['security', 'bloke', "isn't", 'here', 'today;', "he's", 'up']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on Haringey
// DEBUG: 74
// DEBUG: (69, 89)
// DEBUG: Operating on Magistrates'
// DEBUG: 159
// DEBUG: (154, 89)
// DEBUG: Operating on Court
// DEBUG: 195
// DEBUG: (190, 89)
// DEBUG: Operating on for
// DEBUG: ['before', 'Haringey', "Magistrates'", 'Court']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on gross
// DEBUG: 50
// DEBUG: (45, 101)
// DEBUG: Operating on indecency
// DEBUG: 114
// DEBUG: (109, 101)
// DEBUG: Operating on outside
// DEBUG: 164
// DEBUG: (159, 101)
// DEBUG: Operating on the
// DEBUG: 186
// DEBUG: (181, 101)
// DEBUG: Operating on headquarters
// DEBUG: ['for', 'gross', 'indecency', 'outside', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (18, 113)
// DEBUG: Operating on of
// DEBUG: 38
// DEBUG: (33, 113)
// DEBUG: Operating on the
// DEBUG: 60
// DEBUG: (55, 113)
// DEBUG: Operating on Dagenham
// DEBUG: 117
// DEBUG: (112, 113)
// DEBUG: Operating on Girl
// DEBUG: 146
// DEBUG: (141, 113)
// DEBUG: Operating on Pipers.
// DEBUG: 196
// DEBUG: ['12.26am.']
// DEBUG: drawing cursor (106, 41)
// DEBUG: ['- Bryant & May Off the Rails']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "A Mr Dutta from King's Cross", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "called and told me you were on your way.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "He said you wanted to see the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "arrival of yesterday's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING It'll take me a few minutes to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "cue up the footage. Our regular", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "security bloke isn't here today; he's up", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "before Haringey Magistrates' Court", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "for gross indecency outside the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(106, 41, "12.26am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Bryant & May Off the Rails", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:27 for 0 quotations:
    case 27:
      Serial.println(F("No quotes for 00:27"));
      return;

    // Codegen for 00:28 for 1 quotations:
    case 28:
      Serial.println(F("Only one option for 00:28:"));
    Serial.println(F("00:28 - The DRINK CHEER-UP COFFEE wall clock read 12.28. - Stephen King, 11/22/63"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on DRINK
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on CHEER-UP
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on COFFEE
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on wall
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on clock
// DEBUG: ['The', 'DRINK', 'CHEER-UP', 'COFFEE', 'wall']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on read
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 159
// DEBUG: ['12.28']
// DEBUG: drawing cursor (40, 17)
// DEBUG: ['- Stephen King, 11/22/63']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "The DRINK CHEER-UP COFFEE wall", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(40, 17, "12.28", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Stephen King, 11/22/63", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:29 for 1 quotations:
    case 29:
      Serial.println(F("Only one option for 00:29:"));
    Serial.println(F("00:29 - What time is it? asked Teeny-bits. The station agent hauled out his big silver watch, looked at it critically and announced: \"Twenty-nine minutes past twelve.\" \"Past twelve!\" repeated Teeny-bits. \"It can't be.\" - , The Mark of the Knife"));
// DEBUG: (5, 5)
// DEBUG: Operating on What
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on time
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on is
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on it?
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on asked
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on Teeny-bits.
// DEBUG: ['What', 'time', 'is', 'it?', 'asked']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on The
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on station
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on agent
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on hauled
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on out
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on his
// DEBUG: ['Teeny-bits.', 'The', 'station', 'agent', 'hauled', 'out']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on big
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on silver
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on watch,
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on looked
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on at
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on it
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on critically
// DEBUG: ['his', 'big', 'silver', 'watch,', 'looked', 'at', 'it']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on announced:
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on \"TIMESTRING.\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['critically', 'and', 'announced:']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: (21, 65)
// DEBUG: Operating on \"Past
// DEBUG: 69
// DEBUG: (64, 65)
// DEBUG: Operating on twelve!\"
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on repeated
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on Teeny-bits.
// DEBUG: ['\\"TIMESTRING.\\"', '\\"Past', 'twelve!\\"', 'repeated']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (17, 77)
// DEBUG: Operating on \"It
// DEBUG: 51
// DEBUG: (46, 77)
// DEBUG: Operating on can't
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on be.\"
// DEBUG: 123
// DEBUG: ['Twenty-nine minutes past twelve']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- The Mark of the Knife']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "What time is it? asked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Teeny-bits. The station agent hauled out", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "his big silver watch, looked at it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "critically and announced:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "\"TIMESTRING.\" \"Past twelve!\" repeated", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Twenty-nine minutes past twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- The Mark of the Knife", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:30 for 1 quotations:
    case 30:
      Serial.println(F("Only one option for 00:30:"));
    Serial.println(F("00:30 - It was half-past twelve when I returned to the Albany as a last desperate resort. The scene of my disaster was much as I had left it. The baccarat-counters still strewed the table, with the empty glasses and the loaded ash-trays. A window had been opened to let the smoke out, and was letting in the fog instead. - , The Amateur Cracksman"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on when
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on I
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on returned
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on to
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on the
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on Albany
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on as
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on a
// DEBUG: ['TIMESTRING', 'when', 'I', 'returned', 'to', 'the', 'Albany', 'as']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (7, 29)
// DEBUG: Operating on last
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on desperate
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on resort.
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on The
// DEBUG: 177
// DEBUG: (172, 29)
// DEBUG: Operating on scene
// DEBUG: ['a', 'last', 'desperate', 'resort.', 'The']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 41)
// DEBUG: Operating on my
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on disaster
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on was
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on much
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on as
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on I
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on had
// DEBUG: 199
// DEBUG: (194, 41)
// DEBUG: Operating on left
// DEBUG: ['scene', 'of', 'my', 'disaster', 'was', 'much', 'as', 'I', 'had']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on it.
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on The
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on baccarat-counters
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on still
// DEBUG: ['left', 'it.', 'The', 'baccarat-counters']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on strewed
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on the
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on table,
// DEBUG: 131
// DEBUG: (126, 65)
// DEBUG: Operating on with
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on the
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on empty
// DEBUG: ['still', 'strewed', 'the', 'table,', 'with', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on glasses
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on and
// DEBUG: 88
// DEBUG: (83, 77)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on loaded
// DEBUG: 153
// DEBUG: (148, 77)
// DEBUG: Operating on ash-trays.
// DEBUG: ['empty', 'glasses', 'and', 'the', 'loaded']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on A
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on window
// DEBUG: 72
// DEBUG: (67, 89)
// DEBUG: Operating on had
// DEBUG: 94
// DEBUG: (89, 89)
// DEBUG: Operating on been
// DEBUG: 123
// DEBUG: (118, 89)
// DEBUG: Operating on opened
// DEBUG: 166
// DEBUG: (161, 89)
// DEBUG: Operating on to
// DEBUG: 181
// DEBUG: (176, 89)
// DEBUG: Operating on let
// DEBUG: 203
// DEBUG: (198, 89)
// DEBUG: Operating on the
// DEBUG: ['ash-trays.', 'A', 'window', 'had', 'been', 'opened', 'to', 'let']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on smoke
// DEBUG: 50
// DEBUG: (45, 101)
// DEBUG: Operating on out,
// DEBUG: 79
// DEBUG: (74, 101)
// DEBUG: Operating on and
// DEBUG: 101
// DEBUG: (96, 101)
// DEBUG: Operating on was
// DEBUG: 123
// DEBUG: (118, 101)
// DEBUG: Operating on letting
// DEBUG: 173
// DEBUG: (168, 101)
// DEBUG: Operating on in
// DEBUG: 188
// DEBUG: (183, 101)
// DEBUG: Operating on the
// DEBUG: 210
// DEBUG: (205, 101)
// DEBUG: Operating on fog
// DEBUG: ['the', 'smoke', 'out,', 'and', 'was', 'letting', 'in', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on instead.
// DEBUG: 71
// DEBUG: ['half-past twelve']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- The Amateur Cracksman']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING when I returned to the Albany as", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "a last desperate resort. The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "scene of my disaster was much as I had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "left it. The baccarat-counters", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "still strewed the table, with the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "empty glasses and the loaded", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "ash-trays. A window had been opened to let", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "the smoke out, and was letting in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "half-past twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- The Amateur Cracksman", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:31 for 1 quotations:
    case 31:
      Serial.println(F("Only one option for 00:31:"));
    Serial.println(F("00:31 - Third individual approaches unnoticed and without caution. Once within reach, individual reaches out toward subjects. Recording terminates: timecode: 00:31:02. - , Zombie Apocalypse Fightback"));
// DEBUG: (5, 5)
// DEBUG: Operating on Third
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on individual
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on approaches
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on unnoticed
// DEBUG: ['Third', 'individual', 'approaches']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on without
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on caution.
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on Once
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on within
// DEBUG: ['unnoticed', 'and', 'without', 'caution.', 'Once']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on reach,
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on individual
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on reaches
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on out
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on toward
// DEBUG: ['within', 'reach,', 'individual', 'reaches', 'out']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on subjects.
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on Recording
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on terminates:
// DEBUG: ['toward', 'subjects.', 'Recording']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on timecode:
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on TIMESTRING:02.
// DEBUG: Wrorking on the timestring
// DEBUG: ['terminates:', 'timecode:']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['00:31']
// DEBUG: drawing cursor (81, 53)
// DEBUG: ['- Zombie Apocalypse Fightback']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "Third individual approaches", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "unnoticed and without caution. Once", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "within reach, individual reaches out", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "toward subjects. Recording", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "terminates: timecode:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(81, 53, "00:31", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Zombie Apocalypse Fightback", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:32 for 1 quotations:
    case 32:
      Serial.println(F("Only one option for 00:32:"));
    Serial.println(F("00:32 - Thirty-two minutes past midnight; the way things were going I could be at it all night. Before beginning a completely new search of the dial I had a thought: maybe this safe didn't open on zero as older models did, but on a factory-set number. - Everette Hunt, Ixtapa"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on way
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on things
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on were
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on going
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on I
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on could
// DEBUG: ['TIMESTRING;', 'the', 'way', 'things', 'were', 'going', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on be
// DEBUG: 31
// DEBUG: (26, 41)
// DEBUG: Operating on at
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on it
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on all
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on night.
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on Before
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on beginning
// DEBUG: ['could', 'be', 'at', 'it', 'all', 'night.', 'Before']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on a
// DEBUG: 28
// DEBUG: (23, 53)
// DEBUG: Operating on completely
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on new
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on search
// DEBUG: 164
// DEBUG: (159, 53)
// DEBUG: Operating on of
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on the
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on dial
// DEBUG: ['beginning', 'a', 'completely', 'new', 'search', 'of', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on I
// DEBUG: 23
// DEBUG: (18, 65)
// DEBUG: Operating on had
// DEBUG: 45
// DEBUG: (40, 65)
// DEBUG: Operating on a
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on thought:
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on maybe
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on this
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on safe
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on didn't
// DEBUG: ['dial', 'I', 'had', 'a', 'thought:', 'maybe', 'this', 'safe']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on open
// DEBUG: 46
// DEBUG: (41, 77)
// DEBUG: Operating on on
// DEBUG: 61
// DEBUG: (56, 77)
// DEBUG: Operating on zero
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on as
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on older
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on models
// DEBUG: 184
// DEBUG: (179, 77)
// DEBUG: Operating on did,
// DEBUG: ["didn't", 'open', 'on', 'zero', 'as', 'older', 'models']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on but
// DEBUG: 37
// DEBUG: (32, 89)
// DEBUG: Operating on on
// DEBUG: 52
// DEBUG: (47, 89)
// DEBUG: Operating on a
// DEBUG: 60
// DEBUG: (55, 89)
// DEBUG: Operating on factory-set
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on number.
// DEBUG: 188
// DEBUG: ['Thirty-two minutes past midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Everette Hunt, Ixtapa']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING; the way things were going I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "could be at it all night. Before", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "beginning a completely new search of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "dial I had a thought: maybe this safe", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "didn't open on zero as older models", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Thirty-two minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- Everette Hunt, Ixtapa", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:33 for 1 quotations:
    case 33:
      Serial.println(F("Only one option for 00:33:"));
    Serial.println(F("00:33 - \"So that at twelve-thirty-three you bolted the south door?\" \"Yes,\" replied Stephen Maxie easily. \"At thirty-three minutes past midnight.\" - P.D. James, Cover her Face"));
// DEBUG: (5, 5)
// DEBUG: Operating on \"So
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on that
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on at
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on twelve-thirty-three
// DEBUG: ['\\"So', 'that', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (25, 17)
// DEBUG: Operating on you
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on bolted
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on the
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on south
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on door?\"
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on \"Yes,\"
// DEBUG: ['twelve-thirty-three', 'you', 'bolted', 'the', 'south', 'door?\\"']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on replied
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on Stephen
// DEBUG: 119
// DEBUG: (114, 29)
// DEBUG: Operating on Maxie
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on easily.
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on \"At
// DEBUG: ['\\"Yes,\\"', 'replied', 'Stephen', 'Maxie', 'easily.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on TIMESTRING.\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['\\"At']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['thirty-three minutes past midnight']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- P.D. James, Cover her Face']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "\"So that at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "twelve-thirty-three you bolted the south door?\"", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "\"Yes,\" replied Stephen Maxie easily.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "\"At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "thirty-three minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- P.D. James, Cover her Face", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:34 for 1 quotations:
    case 34:
      Serial.println(F("Only one option for 00:34:"));
    Serial.println(F("00:34 - Thirty-four minutes past midnight. 'We got ten minutes to be back here.' LT didn't argue. Schoolboy knew his former trade. LT's eyes fretted over the museum. 'Not still worrying about the security, are you, because there ain't none.' - , Killer Tune"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on 'We
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on got
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on ten
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on minutes
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on to
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on be
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on back
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on here.'
// DEBUG: ['TIMESTRING.', "'We", 'got', 'ten', 'minutes', 'to', 'be', 'back']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on LT
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on didn't
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on argue.
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on Schoolboy
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on knew
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on his
// DEBUG: ["here.'", 'LT', "didn't", 'argue.', 'Schoolboy', 'knew']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on former
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on trade.
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on LT's
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on eyes
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on fretted
// DEBUG: 208
// DEBUG: (203, 53)
// DEBUG: Operating on over
// DEBUG: ['his', 'former', 'trade.', "LT's", 'eyes', 'fretted']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on museum.
// DEBUG: 87
// DEBUG: (82, 65)
// DEBUG: Operating on 'Not
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on still
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on worrying
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on about
// DEBUG: ['over', 'the', 'museum.', "'Not", 'still', 'worrying']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 77)
// DEBUG: Operating on security,
// DEBUG: 102
// DEBUG: (97, 77)
// DEBUG: Operating on are
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on you,
// DEBUG: 153
// DEBUG: (148, 77)
// DEBUG: Operating on because
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on there
// DEBUG: ['about', 'the', 'security,', 'are', 'you,', 'because']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on ain't
// DEBUG: 52
// DEBUG: (47, 89)
// DEBUG: Operating on none.'
// DEBUG: 95
// DEBUG: ['Thirty-four minutes past midnight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Killer Tune']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING. 'We got ten minutes to be back", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "here.' LT didn't argue. Schoolboy knew", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "his former trade. LT's eyes fretted", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "over the museum. 'Not still worrying", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "about the security, are you, because", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Thirty-four minutes past midnight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Killer Tune", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:35 for 0 quotations:
    case 35:
      Serial.println(F("No quotes for 00:35"));
      return;

    // Codegen for 00:36 for 0 quotations:
    case 36:
      Serial.println(F("No quotes for 00:36"));
      return;

    // Codegen for 00:37 for 0 quotations:
    case 37:
      Serial.println(F("No quotes for 00:37"));
      return;

    // Codegen for 00:38 for 0 quotations:
    case 38:
      Serial.println(F("No quotes for 00:38"));
      return;

    // Codegen for 00:39 for 0 quotations:
    case 39:
      Serial.println(F("No quotes for 00:39"));
      return;

    // Codegen for 00:40 for 1 quotations:
    case 40:
      Serial.println(F("Only one option for 00:40:"));
    Serial.println(F("00:40 - We sat in the car park till twenty to one. And now I'm engaged to Miss Joan Hunter Dunn. - , A Subaltern's Love Song"));
// DEBUG: (5, 5)
// DEBUG: Operating on We
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on sat
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on in
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on the
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on car
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on park
// DEBUG: 135
// DEBUG: (130, 5)
// DEBUG: Operating on till
// DEBUG: 164
// DEBUG: (159, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['We', 'sat', 'in', 'the', 'car', 'park', 'till']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on And
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on now
// DEBUG: ['TIMESTRING.', 'And']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on I'm
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on engaged
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on to
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on Miss
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on Joan
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on Hunter
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on Dunn.
// DEBUG: ['now', "I'm", 'engaged', 'to', 'Miss', 'Joan', 'Hunter']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['twenty to one']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ["- A Subaltern's Love Song"]
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "We sat in the car park till", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. And", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "now I'm engaged to Miss Joan Hunter", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "twenty to one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Subaltern's Love Song", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:41 for 0 quotations:
    case 41:
      Serial.println(F("No quotes for 00:41"));
      return;

    // Codegen for 00:42 for 1 quotations:
    case 42:
      Serial.println(F("Only one option for 00:42:"));
    Serial.println(F("00:42 - The butt had been growing warm in her fingers; now the glowing end stung her skin. She crushed the cigarette out and stood, brushing ash from her black skirt. It was eighteen minutes to one. She went to the house phone and called his room. The telephone rang and rang, but there was no answer. - Herman Wouk, Marjorie Morningstar"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on butt
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on had
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on been
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on growing
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on warm
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on in
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on her
// DEBUG: ['The', 'butt', 'had', 'been', 'growing', 'warm', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on fingers;
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on now
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on the
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on glowing
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on end
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on stung
// DEBUG: ['her', 'fingers;', 'now', 'the', 'glowing', 'end']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on her
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on skin.
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on She
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on crushed
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on the
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on cigarette
// DEBUG: ['stung', 'her', 'skin.', 'She', 'crushed', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on out
// DEBUG: 42
// DEBUG: (37, 41)
// DEBUG: Operating on and
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on stood,
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on brushing
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on ash
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on from
// DEBUG: ['cigarette', 'out', 'and', 'stood,', 'brushing', 'ash']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on her
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on black
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on skirt.
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on It
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on was
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['from', 'her', 'black', 'skirt.', 'It', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: []
// DEBUG: drawing cursor (5, 65)
// DEBUG: (17, 77)
// DEBUG: Operating on She
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on went
// DEBUG: 73
// DEBUG: (68, 77)
// DEBUG: Operating on to
// DEBUG: 88
// DEBUG: (83, 77)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on house
// DEBUG: 146
// DEBUG: (141, 77)
// DEBUG: Operating on phone
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on and
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on called
// DEBUG: ['TIMESTRING.', 'She', 'went', 'to', 'the', 'house', 'phone', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on his
// DEBUG: 39
// DEBUG: (34, 89)
// DEBUG: Operating on room.
// DEBUG: 75
// DEBUG: (70, 89)
// DEBUG: Operating on The
// DEBUG: 97
// DEBUG: (92, 89)
// DEBUG: Operating on telephone
// DEBUG: 161
// DEBUG: (156, 89)
// DEBUG: Operating on rang
// DEBUG: 190
// DEBUG: (185, 89)
// DEBUG: Operating on and
// DEBUG: ['called', 'his', 'room.', 'The', 'telephone', 'rang']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on rang,
// DEBUG: 50
// DEBUG: (45, 101)
// DEBUG: Operating on but
// DEBUG: 72
// DEBUG: (67, 101)
// DEBUG: Operating on there
// DEBUG: 108
// DEBUG: (103, 101)
// DEBUG: Operating on was
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on no
// DEBUG: 145
// DEBUG: (140, 101)
// DEBUG: Operating on answer.
// DEBUG: 195
// DEBUG: ['eighteen minutes to one']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- Marjorie Morningstar']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "The butt had been growing warm in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "her fingers; now the glowing end", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "stung her skin. She crushed the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "cigarette out and stood, brushing ash", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "from her black skirt. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "TIMESTRING. She went to the house phone and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "called his room. The telephone rang", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "eighteen minutes to one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Marjorie Morningstar", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:43 for 1 quotations:
    case 43:
      Serial.println(F("Only one option for 00:43:"));
    Serial.println(F("00:43 - Died five minutes ago, you say? he asked. His eye went to the watch on his wrist. Twelve-forty-three, he wrote on the blotter. - Agatha Christie, A Pocket Full of Rye"));
// DEBUG: (5, 5)
// DEBUG: Operating on Died
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on five
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on minutes
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on ago,
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on you
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on say?
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on he
// DEBUG: ['Died', 'five', 'minutes', 'ago,', 'you', 'say?']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on asked.
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on His
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on eye
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on went
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on to
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on watch
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on on
// DEBUG: ['he', 'asked.', 'His', 'eye', 'went', 'to', 'the', 'watch']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on his
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on wrist.
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['on', 'his', 'wrist.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on he
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on wrote
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on on
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on blotter.
// DEBUG: 167
// DEBUG: ['Twelve-forty-three']
// DEBUG: drawing cursor (73, 29)
// DEBUG: ['- A Pocket Full of Rye']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "Died five minutes ago, you say?", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "he asked. His eye went to the watch", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "on his wrist.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(73, 29, "Twelve-forty-three", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- A Pocket Full of Rye", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:44 for 0 quotations:
    case 44:
      Serial.println(F("No quotes for 00:44"));
      return;

    // Codegen for 00:45 for 2 quotations:
    case 45:
      option = random(0, 2);
      Serial.print(F("2 options for 00:45. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("00:45 - At 12.45, during a lull, Mr Yoshogi told me that owing to the war there were now many more women in England than men. - David Footman, Pig and Pepper: A Comedy of Youth"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on during
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on a
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on lull,
// DEBUG: ['At', 'TIMESTRING,', 'during', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on Mr
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on Yoshogi
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on told
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on me
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on that
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on owing
// DEBUG: 190
// DEBUG: (185, 17)
// DEBUG: Operating on to
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on the
// DEBUG: ['lull,', 'Mr', 'Yoshogi', 'told', 'me', 'that', 'owing', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on war
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on there
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on were
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on now
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on many
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on more
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on women
// DEBUG: ['the', 'war', 'there', 'were', 'now', 'many', 'more']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 41)
// DEBUG: Operating on England
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on than
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on men.
// DEBUG: 139
// DEBUG: ['12.45']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- David Footman']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING, during a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "lull, Mr Yoshogi told me that owing to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the war there were now many more", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "12.45", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- David Footman", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("00:45 - At the thought he jumped to his feet and took down from its hook the coat in which he had left Miss Viner's letter. The clock marked the third quarter after midnight, and he knew it would make no difference if he went down to the post-box now or early the next morning; but he wanted to clear his conscience, and having found the letter he went to the door. - Edith Wharton, The Reef "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on thought
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on he
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on jumped
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on to
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on his
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on feet
// DEBUG: ['At', 'the', 'thought', 'he', 'jumped', 'to', 'his']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on took
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on down
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on from
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on its
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on hook
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on the
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on coat
// DEBUG: ['feet', 'and', 'took', 'down', 'from', 'its', 'hook', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on in
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on which
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on he
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on had
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on left
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on Miss
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on Viner's
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on letter.
// DEBUG: ['coat', 'in', 'which', 'he', 'had', 'left', 'Miss', "Viner's"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on The
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on clock
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on marked
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on the
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['letter.', 'The', 'clock', 'marked', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on he
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on knew
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on it
// DEBUG: 103
// DEBUG: (98, 65)
// DEBUG: Operating on would
// DEBUG: 139
// DEBUG: (134, 65)
// DEBUG: Operating on make
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on no
// DEBUG: 183
// DEBUG: (178, 65)
// DEBUG: Operating on difference
// DEBUG: ['TIMESTRING,', 'and', 'he', 'knew', 'it', 'would', 'make', 'no']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on if
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on he
// DEBUG: 51
// DEBUG: (46, 77)
// DEBUG: Operating on went
// DEBUG: 80
// DEBUG: (75, 77)
// DEBUG: Operating on down
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on to
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 77)
// DEBUG: Operating on post-box
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on now
// DEBUG: ['difference', 'if', 'he', 'went', 'down', 'to', 'the', 'post-box']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on or
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on early
// DEBUG: 65
// DEBUG: (60, 89)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 89)
// DEBUG: Operating on next
// DEBUG: 116
// DEBUG: (111, 89)
// DEBUG: Operating on morning;
// DEBUG: 173
// DEBUG: (168, 89)
// DEBUG: Operating on but
// DEBUG: 195
// DEBUG: (190, 89)
// DEBUG: Operating on he
// DEBUG: 210
// DEBUG: (205, 89)
// DEBUG: Operating on wanted
// DEBUG: ['now', 'or', 'early', 'the', 'next', 'morning;', 'but', 'he']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 101)
// DEBUG: Operating on clear
// DEBUG: 68
// DEBUG: (63, 101)
// DEBUG: Operating on his
// DEBUG: 90
// DEBUG: (85, 101)
// DEBUG: Operating on conscience,
// DEBUG: 168
// DEBUG: (163, 101)
// DEBUG: Operating on and
// DEBUG: 190
// DEBUG: (185, 101)
// DEBUG: Operating on having
// DEBUG: ['wanted', 'to', 'clear', 'his', 'conscience,', 'and']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on found
// DEBUG: 53
// DEBUG: (48, 113)
// DEBUG: Operating on the
// DEBUG: 75
// DEBUG: (70, 113)
// DEBUG: Operating on letter
// DEBUG: 118
// DEBUG: (113, 113)
// DEBUG: Operating on he
// DEBUG: 133
// DEBUG: (128, 113)
// DEBUG: Operating on went
// DEBUG: 162
// DEBUG: (157, 113)
// DEBUG: Operating on to
// DEBUG: 177
// DEBUG: (172, 113)
// DEBUG: Operating on the
// DEBUG: 199
// DEBUG: (194, 113)
// DEBUG: Operating on door.
// DEBUG: ['having', 'found', 'the', 'letter', 'he', 'went', 'to', 'the']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ['third quarter after midnight']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- Edith Wharton, The Reef ']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "At the thought he jumped to his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "feet and took down from its hook the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "coat in which he had left Miss Viner's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "letter. The clock marked the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING, and he knew it would make no", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "difference if he went down to the post-box", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "now or early the next morning; but he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "wanted to clear his conscience, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "having found the letter he went to the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "third quarter after midnight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Edith Wharton, The Reef ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 00:46 for 0 quotations:
    case 46:
      Serial.println(F("No quotes for 00:46"));
      return;

    // Codegen for 00:47 for 1 quotations:
    case 47:
      Serial.println(F("Only one option for 00:47:"));
    Serial.println(F("00:47 - At 12:47a.m, Uncle Ho left us forever. - Andrew X. Pham, Last Night I Dreamed Of Peace"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on Uncle
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on Ho
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on left
// DEBUG: ['At', 'TIMESTRING,', 'Uncle', 'Ho']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on us
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on forever.
// DEBUG: 87
// DEBUG: ['12:47a.m']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Andrew X. Pham']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING, Uncle Ho", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "12:47a.m", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Andrew X. Pham", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:48 for 0 quotations:
    case 48:
      Serial.println(F("No quotes for 00:48"));
      return;

    // Codegen for 00:49 for 0 quotations:
    case 49:
      Serial.println(F("No quotes for 00:49"));
      return;

    // Codegen for 00:50 for 1 quotations:
    case 50:
      Serial.println(F("Only one option for 00:50:"));
    Serial.println(F("00:50 - The packing was done at 12.50; and Harris sat on the big hamper, and said he hoped nothing would be found broken. George said that if anything was broken it was broken, which reflection seemed to comfort him. He also said he was ready for bed. - Jerome K Jerome, Three Men in a Boat "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on packing
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on was
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on done
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on at
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'packing', 'was', 'done', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on Harris
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on sat
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on on
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on big
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on hamper,
// DEBUG: ['TIMESTRING;', 'and', 'Harris', 'sat', 'on', 'the', 'big']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on said
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on he
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on hoped
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on nothing
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on would
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on be
// DEBUG: ['hamper,', 'and', 'said', 'he', 'hoped', 'nothing', 'would']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on found
// DEBUG: 49
// DEBUG: (44, 41)
// DEBUG: Operating on broken.
// DEBUG: 99
// DEBUG: (94, 41)
// DEBUG: Operating on George
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on said
// DEBUG: 171
// DEBUG: (166, 41)
// DEBUG: Operating on that
// DEBUG: 200
// DEBUG: (195, 41)
// DEBUG: Operating on if
// DEBUG: ['be', 'found', 'broken.', 'George', 'said', 'that']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on anything
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on was
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on broken
// DEBUG: 135
// DEBUG: (130, 53)
// DEBUG: Operating on it
// DEBUG: 150
// DEBUG: (145, 53)
// DEBUG: Operating on was
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on broken,
// DEBUG: ['if', 'anything', 'was', 'broken', 'it', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on which
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on reflection
// DEBUG: 125
// DEBUG: (120, 65)
// DEBUG: Operating on seemed
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on to
// DEBUG: 183
// DEBUG: (178, 65)
// DEBUG: Operating on comfort
// DEBUG: ['broken,', 'which', 'reflection', 'seemed', 'to']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on him.
// DEBUG: 47
// DEBUG: (42, 77)
// DEBUG: Operating on He
// DEBUG: 62
// DEBUG: (57, 77)
// DEBUG: Operating on also
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on said
// DEBUG: 120
// DEBUG: (115, 77)
// DEBUG: Operating on he
// DEBUG: 135
// DEBUG: (130, 77)
// DEBUG: Operating on was
// DEBUG: 157
// DEBUG: (152, 77)
// DEBUG: Operating on ready
// DEBUG: 193
// DEBUG: (188, 77)
// DEBUG: Operating on for
// DEBUG: ['comfort', 'him.', 'He', 'also', 'said', 'he', 'was', 'ready']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on bed.
// DEBUG: 43
// DEBUG: ['12.50']
// DEBUG: drawing cursor (143, 5)
// DEBUG: ['- Three Men in a Boat']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "The packing was done at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING; and Harris sat on the big", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "hamper, and said he hoped nothing would", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "be found broken. George said that", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "if anything was broken it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "broken, which reflection seemed to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "comfort him. He also said he was ready", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(143, 5, "12.50", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- Three Men in a Boat", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:51 for 0 quotations:
    case 51:
      Serial.println(F("No quotes for 00:51"));
      return;

    // Codegen for 00:52 for 0 quotations:
    case 52:
      Serial.println(F("No quotes for 00:52"));
      return;

    // Codegen for 00:53 for 0 quotations:
    case 53:
      Serial.println(F("No quotes for 00:53"));
      return;

    // Codegen for 00:54 for 1 quotations:
    case 54:
      Serial.println(F("Only one option for 00:54:"));
    Serial.println(F("00:54 - Everybody was happy; everybody was complimentary; the ice was soon broken; songs, anecdotes, and more drinks followed, and the pregnant minutes flew. At six minutes to one, when the jollity was at its highest— BOOM! There was silence instantly. - Mark Twain, A Double Barrelled Detective Story"));
// DEBUG: (5, 5)
// DEBUG: Operating on Everybody
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on was
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on happy;
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on everybody
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on was
// DEBUG: ['Everybody', 'was', 'happy;', 'everybody']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on complimentary;
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on the
// DEBUG: 135
// DEBUG: (130, 17)
// DEBUG: Operating on ice
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on was
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on soon
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on broken;
// DEBUG: ['was', 'complimentary;', 'the', 'ice', 'was', 'soon']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on songs,
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on anecdotes,
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on and
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on more
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on drinks
// DEBUG: ['broken;', 'songs,', 'anecdotes,', 'and', 'more']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on followed,
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on and
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on the
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on pregnant
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on minutes
// DEBUG: ['drinks', 'followed,', 'and', 'the', 'pregnant']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on flew.
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on At
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['minutes', 'flew.', 'At']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on when
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on jollity
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on was
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on at
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on its
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on highest—
// DEBUG: ['TIMESTRING,', 'when', 'the', 'jollity', 'was', 'at', 'its']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on BOOM!
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on There
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on was
// DEBUG: 113
// DEBUG: (108, 77)
// DEBUG: Operating on silence
// DEBUG: 163
// DEBUG: (158, 77)
// DEBUG: Operating on instantly.
// DEBUG: ['highest—', 'BOOM!', 'There', 'was', 'silence']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['six minutes to one']
// DEBUG: drawing cursor (64, 53)
// DEBUG: ['- Mark Twain']
// DEBUG: drawing cursor (123, 192)
    paint.Paint_DrawString_EN(5, 5, "Everybody was happy; everybody", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "was complimentary; the ice was soon", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "broken; songs, anecdotes, and more", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "drinks followed, and the pregnant", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "minutes flew. At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING, when the jollity was at its", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "highest— BOOM! There was silence", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(64, 53, "six minutes to one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(123, 192, "- Mark Twain", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:55 for 1 quotations:
    case 55:
      Serial.println(F("Only one option for 00:55:"));
    Serial.println(F("00:55 - He rolled one way, rolled the other, listened to the loud tick of the clock, and was asleep a minute later. Five to one in the morning. Fifty-one hours to go. - Lee Child, 61 Hours"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on rolled
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on one
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on way,
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on rolled
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on the
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on other,
// DEBUG: ['He', 'rolled', 'one', 'way,', 'rolled', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on listened
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on to
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on the
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on loud
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on tick
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on of
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on the
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on clock,
// DEBUG: ['other,', 'listened', 'to', 'the', 'loud', 'tick', 'of', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on was
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on asleep
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on a
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on minute
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on later.
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['clock,', 'and', 'was', 'asleep', 'a', 'minute', 'later.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on in
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on the
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on morning.
// DEBUG: ['TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on Fifty-one
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on hours
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on to
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on go.
// DEBUG: 156
// DEBUG: ['Five to one']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Lee Child, 61 Hours']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "He rolled one way, rolled the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "other, listened to the loud tick of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "clock, and was asleep a minute later.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Five to one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- Lee Child, 61 Hours", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:56 for 2 quotations:
    case 56:
      option = random(0, 2);
      Serial.print(F("2 options for 00:56. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("00:56 - It was 12:56 A.M. when Gerald drove up onto the grass and pulled the limousine right next to the cemetery. - Jonathan Safran Foer, Extremely Loud and Incredibly Close "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on when
// DEBUG: ['It', 'was', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on Gerald
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on drove
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on up
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on onto
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on the
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on grass
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on and
// DEBUG: ['when', 'Gerald', 'drove', 'up', 'onto', 'the', 'grass']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on pulled
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on the
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on limousine
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on right
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on next
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on to
// DEBUG: ['and', 'pulled', 'the', 'limousine', 'right', 'next']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on cemetery.
// DEBUG: 99
// DEBUG: ['12:56 A.M.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Jonathan Safran Foer']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "when Gerald drove up onto the grass", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "and pulled the limousine right next", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 5, "12:56 A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Jonathan Safran Foer", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("00:56 - Teacher used to lie awake at night facing that clock, batting his eyelashes against his pillowcase to mimic the sound of the rolling drop action. One night, and this first night is lost in the countless later nights of compounding wonder, he discovered a game. Say the time was 12:56. - Dana Standridge, Lessons in Essence"));
// DEBUG: (5, 5)
// DEBUG: Operating on Teacher
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on used
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on to
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on lie
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on awake
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on at
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on night
// DEBUG: ['Teacher', 'used', 'to', 'lie', 'awake', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on facing
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on that
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on clock,
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on batting
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on his
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on eyelashes
// DEBUG: ['night', 'facing', 'that', 'clock,', 'batting', 'his']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on against
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on his
// DEBUG: 92
// DEBUG: (87, 29)
// DEBUG: Operating on pillowcase
// DEBUG: 163
// DEBUG: (158, 29)
// DEBUG: Operating on to
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on mimic
// DEBUG: ['eyelashes', 'against', 'his', 'pillowcase', 'to']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on sound
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on of
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on the
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on rolling
// DEBUG: 161
// DEBUG: (156, 41)
// DEBUG: Operating on drop
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on action.
// DEBUG: ['mimic', 'the', 'sound', 'of', 'the', 'rolling', 'drop']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on One
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on night,
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on and
// DEBUG: 105
// DEBUG: (100, 53)
// DEBUG: Operating on this
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on first
// DEBUG: 170
// DEBUG: (165, 53)
// DEBUG: Operating on night
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on is
// DEBUG: ['action.', 'One', 'night,', 'and', 'this', 'first', 'night']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on lost
// DEBUG: 42
// DEBUG: (37, 65)
// DEBUG: Operating on in
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on the
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on countless
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on later
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on nights
// DEBUG: ['is', 'lost', 'in', 'the', 'countless', 'later']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 77)
// DEBUG: Operating on compounding
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on wonder,
// DEBUG: 160
// DEBUG: (155, 77)
// DEBUG: Operating on he
// DEBUG: 175
// DEBUG: (170, 77)
// DEBUG: Operating on discovered
// DEBUG: ['nights', 'of', 'compounding', 'wonder,', 'he']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on a
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on game.
// DEBUG: 65
// DEBUG: (60, 89)
// DEBUG: Operating on Say
// DEBUG: 87
// DEBUG: (82, 89)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on time
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on was
// DEBUG: 160
// DEBUG: (155, 89)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['discovered', 'a', 'game.', 'Say', 'the', 'time', 'was']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['12:56']
// DEBUG: drawing cursor (155, 89)
// DEBUG: ['- Lessons in Essence']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "Teacher used to lie awake at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "night facing that clock, batting his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "eyelashes against his pillowcase to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "mimic the sound of the rolling drop", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "action. One night, and this first night", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "is lost in the countless later", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "nights of compounding wonder, he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "discovered a game. Say the time was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(155, 89, "12:56", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Lessons in Essence", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 00:57 for 1 quotations:
    case 57:
      Serial.println(F("Only one option for 00:57:"));
    Serial.println(F("00:57 - A minute had passed, and the roller dropped a new leaf. 12:57. 12 + 57 = 69; 6 + 9 = 15; 1 + 5 = 6. 712 + 5 = 717; 71 + 7 = 78; 7 + 8 = 15; 1 + 5 = 6 again. - Dana Standridge, Lessons in Essence"));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on minute
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on had
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on passed,
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on and
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on the
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on roller
// DEBUG: ['A', 'minute', 'had', 'passed,', 'and', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on dropped
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on a
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on new
// DEBUG: 97
// DEBUG: (92, 17)
// DEBUG: Operating on leaf.
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['roller', 'dropped', 'a', 'new', 'leaf.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on 12
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on +
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on 57
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on =
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on 69;
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on 6
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on +
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on 9
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on =
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on 15;
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on 1
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on +
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on 5
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on =
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on 6.
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on 712
// DEBUG: ['TIMESTRING.', '12', '+', '57', '=', '69;', '6', '+', '9', '=', '15;', '1', '+', '5', '=', '6.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on +
// DEBUG: 22
// DEBUG: (17, 41)
// DEBUG: Operating on 5
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on =
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on 717;
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on 71
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on +
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on 7
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on =
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on 78;
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on 7
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on +
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on 8
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on =
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on 15;
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on 1
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on +
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on 5
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on =
// DEBUG: ['712', '+', '5', '=', '717;', '71', '+', '7', '=', '78;', '7', '+', '8', '=', '15;', '1', '+', '5']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (7, 53)
// DEBUG: Operating on 6
// DEBUG: 20
// DEBUG: (15, 53)
// DEBUG: Operating on again.
// DEBUG: 63
// DEBUG: ['12:57']
// DEBUG: drawing cursor (128, 17)
// DEBUG: ['- Lessons in Essence']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "A minute had passed, and the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "roller dropped a new leaf.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING. 12 + 57 = 69; 6 + 9 = 15; 1 + 5 = 6.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "712 + 5 = 717; 71 + 7 = 78; 7 + 8 = 15; 1 + 5", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(128, 17, "12:57", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Lessons in Essence", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:58 for 1 quotations:
    case 58:
      Serial.println(F("Only one option for 00:58:"));
    Serial.println(F("00:58 - It was downright shameless on his part to come visiting them, especially at night, almost at one in the morning, after all that had happened. - Fyodor Dostoyevsky, The Idiot"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on downright
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on shameless
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on on
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on his
// DEBUG: ['It', 'was', 'downright', 'shameless', 'on']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on part
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on to
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on come
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on visiting
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on them,
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on especially
// DEBUG: ['his', 'part', 'to', 'come', 'visiting', 'them,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on at
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on night,
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['especially', 'at', 'night,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on after
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on all
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on that
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on had
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on happened.
// DEBUG: 195
// DEBUG: ['almost at one in the morning']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- The Idiot']
// DEBUG: drawing cursor (130, 192)
    paint.Paint_DrawString_EN(5, 5, "It was downright shameless on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "his part to come visiting them,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "especially at night,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "almost at one in the morning", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(130, 192, "- The Idiot", &Font12, WHITE, BLACK);
      return;

    // Codegen for 00:59 for 1 quotations:
    case 59:
      Serial.println(F("Only one option for 00:59:"));
    Serial.println(F("00:59 - ‘What time is it now?’ she said. ‘About one o’clock’. ‘In the morning?’ Herera’s friend leered at her. ‘No, there’s a total eclipse of the sun’. - Jonathan Frantzen, Freedom"));
// DEBUG: (5, 5)
// DEBUG: Operating on ‘What
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on time
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on is
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on it
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on now?’
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on she
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on said.
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on ‘TIMESTRING’.
// DEBUG: Wrorking on the timestring
// DEBUG: ['‘What', 'time', 'is', 'it', 'now?’', 'she', 'said.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (19, 29)
// DEBUG: Operating on ‘In
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on morning?’
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on Herera’s
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on friend
// DEBUG: ['‘TIMESTRING’.', '‘In', 'the', 'morning?’', 'Herera’s']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on leered
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on at
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on her.
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on ‘No,
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on there’s
// DEBUG: 183
// DEBUG: (178, 41)
// DEBUG: Operating on a
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on total
// DEBUG: ['friend', 'leered', 'at', 'her.', '‘No,', 'there’s', 'a']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on eclipse
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on of
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on the
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on sun’.
// DEBUG: 139
// DEBUG: ['About one o’clock']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Jonathan Frantzen, Freedom']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "‘What time is it now?’ she said.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "‘TIMESTRING’. ‘In the morning?’ Herera’s", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "friend leered at her. ‘No, there’s a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "About one o’clock", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Jonathan Frantzen, Freedom", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:00 for 7 quotations:
    case 60:
      option = random(0, 7);
      Serial.print(F("7 options for 01:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("01:00 - 1.00 am. I felt the surrounding quietness suffocating me. - Rosamund Lupton, Sister "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 138
// DEBUG: (133, 5)
// DEBUG: Operating on I
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on felt
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on the
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on surrounding
// DEBUG: ['TIMESTRING', 'I', 'felt', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on quietness
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on suffocating
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on me.
// DEBUG: 186
// DEBUG: ['1.00 am.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Rosamund Lupton, Sister ']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING I felt the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "1.00 am.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Rosamund Lupton, Sister ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("01:00 - He didn’t know what was at the end of the chute. The opening was narrow (though large enough to take the canary). He dreamed that the chute opened onto vast garbage bins filled with old coffee filters, ravioli in tomato sauce and mangled genitalia. Huge worms, as big as the canary, armed with terrible beaks, would attack the body. Tear off the feet, rip out its intestines, burst the eyeballs. He woke up, trembling; it was only one o’clock. He swallowed three Xanax. So ended his first night of freedom. - Michel Houellebecq, Atomised "));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on didn’t
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on know
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on what
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on was
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on at
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on the
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on end
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on of
// DEBUG: ['He', 'didn’t', 'know', 'what', 'was', 'at', 'the', 'end']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on chute.
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on The
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on opening
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on was
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on narrow
// DEBUG: ['of', 'the', 'chute.', 'The', 'opening', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on (though
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on large
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on enough
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on to
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on take
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on the
// DEBUG: ['narrow', '(though', 'large', 'enough', 'to', 'take']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on canary).
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on He
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on dreamed
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on that
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on the
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on chute
// DEBUG: ['the', 'canary).', 'He', 'dreamed', 'that', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on opened
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on onto
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on vast
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on garbage
// DEBUG: 167
// DEBUG: (162, 53)
// DEBUG: Operating on bins
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on filled
// DEBUG: ['chute', 'opened', 'onto', 'vast', 'garbage', 'bins']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on with
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on old
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on coffee
// DEBUG: 111
// DEBUG: (106, 65)
// DEBUG: Operating on filters,
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on ravioli
// DEBUG: ['filled', 'with', 'old', 'coffee', 'filters,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 77)
// DEBUG: Operating on tomato
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on sauce
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on and
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on mangled
// DEBUG: 184
// DEBUG: (179, 77)
// DEBUG: Operating on genitalia.
// DEBUG: ['ravioli', 'in', 'tomato', 'sauce', 'and', 'mangled']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on Huge
// DEBUG: 50
// DEBUG: (45, 89)
// DEBUG: Operating on worms,
// DEBUG: 93
// DEBUG: (88, 89)
// DEBUG: Operating on as
// DEBUG: 108
// DEBUG: (103, 89)
// DEBUG: Operating on big
// DEBUG: 130
// DEBUG: (125, 89)
// DEBUG: Operating on as
// DEBUG: 145
// DEBUG: (140, 89)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 89)
// DEBUG: Operating on canary,
// DEBUG: ['genitalia.', 'Huge', 'worms,', 'as', 'big', 'as', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on armed
// DEBUG: 54
// DEBUG: (49, 101)
// DEBUG: Operating on with
// DEBUG: 83
// DEBUG: (78, 101)
// DEBUG: Operating on terrible
// DEBUG: 140
// DEBUG: (135, 101)
// DEBUG: Operating on beaks,
// DEBUG: 183
// DEBUG: (178, 101)
// DEBUG: Operating on would
// DEBUG: ['canary,', 'armed', 'with', 'terrible', 'beaks,']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on attack
// DEBUG: 59
// DEBUG: (54, 113)
// DEBUG: Operating on the
// DEBUG: 81
// DEBUG: (76, 113)
// DEBUG: Operating on body.
// DEBUG: 117
// DEBUG: (112, 113)
// DEBUG: Operating on Tear
// DEBUG: 146
// DEBUG: (141, 113)
// DEBUG: Operating on off
// DEBUG: 168
// DEBUG: (163, 113)
// DEBUG: Operating on the
// DEBUG: 190
// DEBUG: (185, 113)
// DEBUG: Operating on feet,
// DEBUG: ['would', 'attack', 'the', 'body.', 'Tear', 'off', 'the']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (11, 125)
// DEBUG: Operating on rip
// DEBUG: 38
// DEBUG: (33, 125)
// DEBUG: Operating on out
// DEBUG: 60
// DEBUG: (55, 125)
// DEBUG: Operating on its
// DEBUG: 82
// DEBUG: (77, 125)
// DEBUG: Operating on intestines,
// DEBUG: 160
// DEBUG: (155, 125)
// DEBUG: Operating on burst
// DEBUG: 196
// DEBUG: (191, 125)
// DEBUG: Operating on the
// DEBUG: ['feet,', 'rip', 'out', 'its', 'intestines,', 'burst']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (9, 137)
// DEBUG: Operating on eyeballs.
// DEBUG: 78
// DEBUG: (73, 137)
// DEBUG: Operating on He
// DEBUG: 93
// DEBUG: (88, 137)
// DEBUG: Operating on woke
// DEBUG: 122
// DEBUG: (117, 137)
// DEBUG: Operating on up,
// DEBUG: 144
// DEBUG: (139, 137)
// DEBUG: Operating on trembling;
// DEBUG: ['the', 'eyeballs.', 'He', 'woke', 'up,']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (16, 149)
// DEBUG: Operating on it
// DEBUG: 36
// DEBUG: (31, 149)
// DEBUG: Operating on was
// DEBUG: 58
// DEBUG: (53, 149)
// DEBUG: Operating on only
// DEBUG: 87
// DEBUG: (82, 149)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['trembling;', 'it', 'was', 'only']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (17, 161)
// DEBUG: Operating on He
// DEBUG: 37
// DEBUG: (32, 161)
// DEBUG: Operating on swallowed
// DEBUG: 101
// DEBUG: (96, 161)
// DEBUG: Operating on three
// DEBUG: 137
// DEBUG: (132, 161)
// DEBUG: Operating on Xanax.
// DEBUG: 180
// DEBUG: (175, 161)
// DEBUG: Operating on So
// DEBUG: 195
// DEBUG: (190, 161)
// DEBUG: Operating on ended
// DEBUG: ['TIMESTRING.', 'He', 'swallowed', 'three', 'Xanax.', 'So']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (11, 173)
// DEBUG: Operating on his
// DEBUG: 38
// DEBUG: (33, 173)
// DEBUG: Operating on first
// DEBUG: 74
// DEBUG: (69, 173)
// DEBUG: Operating on night
// DEBUG: 110
// DEBUG: (105, 173)
// DEBUG: Operating on of
// DEBUG: 125
// DEBUG: (120, 173)
// DEBUG: Operating on freedom.
// DEBUG: 182
// DEBUG: ['one o’clock']
// DEBUG: drawing cursor (82, 149)
// DEBUG: ['- Atomised']
// DEBUG: drawing cursor (137, 192)
          paint.Paint_DrawString_EN(5, 5, "He didn’t know what was at the end", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "of the chute. The opening was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "narrow (though large enough to take", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the canary). He dreamed that the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "chute opened onto vast garbage bins", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "filled with old coffee filters,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "ravioli in tomato sauce and mangled", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "genitalia. Huge worms, as big as the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "canary, armed with terrible beaks,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "would attack the body. Tear off the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "feet, rip out its intestines, burst", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "the eyeballs. He woke up,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "trembling; it was only", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "TIMESTRING. He swallowed three Xanax. So", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(82, 149, "one o’clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(137, 192, "- Atomised", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("01:00 - I looked attentively at her, as she put that singular question to me. It was then nearly one o'clock. All I could discern distinctly by the moonlight was a colourless, youthful face, meagre and sharp to look at about the cheeks and chin; large, grave, wistfully attentive eyes; nervous, uncertain lips; and light hair of a pale, brownish-yellow hue. - Wilkie Collins, The Woman in White "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on looked
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on attentively
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on her,
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on as
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on she
// DEBUG: ['I', 'looked', 'attentively', 'at', 'her,', 'as']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on put
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on that
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on singular
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on question
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on to
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on me.
// DEBUG: ['she', 'put', 'that', 'singular', 'question', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on It
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on was
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on then
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['me.', 'It', 'was', 'then']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on All
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on I
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on could
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on discern
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on distinctly
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on by
// DEBUG: ['TIMESTRING.', 'All', 'I', 'could', 'discern', 'distinctly']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on moonlight
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on was
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on a
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on colourless,
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on youthful
// DEBUG: ['by', 'the', 'moonlight', 'was', 'a', 'colourless,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on face,
// DEBUG: 55
// DEBUG: (50, 65)
// DEBUG: Operating on meagre
// DEBUG: 98
// DEBUG: (93, 65)
// DEBUG: Operating on and
// DEBUG: 120
// DEBUG: (115, 65)
// DEBUG: Operating on sharp
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on to
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on look
// DEBUG: 200
// DEBUG: (195, 65)
// DEBUG: Operating on at
// DEBUG: ['youthful', 'face,', 'meagre', 'and', 'sharp', 'to', 'look']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on about
// DEBUG: 49
// DEBUG: (44, 77)
// DEBUG: Operating on the
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on cheeks
// DEBUG: 114
// DEBUG: (109, 77)
// DEBUG: Operating on and
// DEBUG: 136
// DEBUG: (131, 77)
// DEBUG: Operating on chin;
// DEBUG: 172
// DEBUG: (167, 77)
// DEBUG: Operating on large,
// DEBUG: ['at', 'about', 'the', 'cheeks', 'and', 'chin;']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on grave,
// DEBUG: 60
// DEBUG: (55, 89)
// DEBUG: Operating on wistfully
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on attentive
// DEBUG: 188
// DEBUG: (183, 89)
// DEBUG: Operating on eyes;
// DEBUG: ['large,', 'grave,', 'wistfully', 'attentive']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on nervous,
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on uncertain
// DEBUG: 137
// DEBUG: (132, 101)
// DEBUG: Operating on lips;
// DEBUG: 173
// DEBUG: (168, 101)
// DEBUG: Operating on and
// DEBUG: 195
// DEBUG: (190, 101)
// DEBUG: Operating on light
// DEBUG: ['eyes;', 'nervous,', 'uncertain', 'lips;', 'and']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on hair
// DEBUG: 45
// DEBUG: (40, 113)
// DEBUG: Operating on of
// DEBUG: 60
// DEBUG: (55, 113)
// DEBUG: Operating on a
// DEBUG: 68
// DEBUG: (63, 113)
// DEBUG: Operating on pale,
// DEBUG: 104
// DEBUG: (99, 113)
// DEBUG: Operating on brownish-yellow
// DEBUG: 210
// DEBUG: (205, 113)
// DEBUG: Operating on hue.
// DEBUG: ['light', 'hair', 'of', 'a', 'pale,', 'brownish-yellow']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ["nearly one o'clock"]
// DEBUG: drawing cursor (75, 29)
// DEBUG: ['- The Woman in White']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "I looked attentively at her, as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "she put that singular question to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "me. It was then", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING. All I could discern distinctly", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "by the moonlight was a colourless,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "youthful face, meagre and sharp to look", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "at about the cheeks and chin;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "large, grave, wistfully attentive", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "eyes; nervous, uncertain lips; and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "light hair of a pale, brownish-yellow", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(75, 29, "nearly one o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Woman in White", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("01:00 - I'm the only one awake in this house on this night before the day that will change all our lives. Though it's already that day: the little luminous hands on my alarm clock (which I haven't set) show just gone one in the morning. - Graham Swift, Tomorrow "));
// DEBUG: (5, 5)
// DEBUG: Operating on I'm
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on only
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on one
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on awake
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on in
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on this
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on house
// DEBUG: ["I'm", 'the', 'only', 'one', 'awake', 'in', 'this']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on this
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on night
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on before
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on the
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on day
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on that
// DEBUG: ['house', 'on', 'this', 'night', 'before', 'the', 'day']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on will
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on change
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on all
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on our
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on lives.
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on Though
// DEBUG: ['that', 'will', 'change', 'all', 'our', 'lives.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on it's
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on already
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on that
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on day:
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on the
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on little
// DEBUG: ['Though', "it's", 'already', 'that', 'day:', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on luminous
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on hands
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on on
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on my
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on alarm
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on clock
// DEBUG: ['little', 'luminous', 'hands', 'on', 'my', 'alarm']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on (which
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on I
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on haven't
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on set)
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on show
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on just
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on gone
// DEBUG: ['clock', '(which', 'I', "haven't", 'set)', 'show', 'just']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['gone']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['one in the morning']
// DEBUG: drawing cursor (10, 77)
// DEBUG: ['- Graham Swift, Tomorrow ']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "I'm the only one awake in this", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "house on this night before the day", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "that will change all our lives.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Though it's already that day: the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "little luminous hands on my alarm", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "clock (which I haven't set) show just", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "gone", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(10, 77, "one in the morning", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Graham Swift, Tomorrow ", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("01:00 - It was the thirtieth of May by now. One am on the thirtieth of May 1940. Quite a famous date on which to be lying awake and staring at the ceiling. Already in the creeks and tidal estuaries of England the pleasure-boats and paddle-steamers were casting their moorings for the day trip to Dunkirk. And, over on the other side, Ted stood as a good a chance as anyone else. - Norman Collins, London Belongs to Me "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on thirtieth
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on of
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on May
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on by
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on now.
// DEBUG: ['It', 'was', 'the', 'thirtieth', 'of', 'May', 'by']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on on
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on thirtieth
// DEBUG: ['now.', 'TIMESTRING', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on of
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on May
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on 1940.
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on Quite
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on a
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on famous
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on date
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on on
// DEBUG: ['thirtieth', 'of', 'May', '1940.', 'Quite', 'a', 'famous', 'date']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on which
// DEBUG: 49
// DEBUG: (44, 41)
// DEBUG: Operating on to
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on be
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on lying
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on awake
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on and
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on staring
// DEBUG: ['on', 'which', 'to', 'be', 'lying', 'awake', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on ceiling.
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on Already
// DEBUG: 162
// DEBUG: (157, 53)
// DEBUG: Operating on in
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on the
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on creeks
// DEBUG: ['staring', 'at', 'the', 'ceiling.', 'Already', 'in', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 65)
// DEBUG: Operating on tidal
// DEBUG: 75
// DEBUG: (70, 65)
// DEBUG: Operating on estuaries
// DEBUG: 139
// DEBUG: (134, 65)
// DEBUG: Operating on of
// DEBUG: 154
// DEBUG: (149, 65)
// DEBUG: Operating on England
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on the
// DEBUG: ['creeks', 'and', 'tidal', 'estuaries', 'of', 'England']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on pleasure-boats
// DEBUG: 113
// DEBUG: (108, 77)
// DEBUG: Operating on and
// DEBUG: 135
// DEBUG: (130, 77)
// DEBUG: Operating on paddle-steamers
// DEBUG: ['the', 'pleasure-boats', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (21, 89)
// DEBUG: Operating on were
// DEBUG: 55
// DEBUG: (50, 89)
// DEBUG: Operating on casting
// DEBUG: 105
// DEBUG: (100, 89)
// DEBUG: Operating on their
// DEBUG: 141
// DEBUG: (136, 89)
// DEBUG: Operating on moorings
// DEBUG: 198
// DEBUG: (193, 89)
// DEBUG: Operating on for
// DEBUG: ['paddle-steamers', 'were', 'casting', 'their', 'moorings']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 101)
// DEBUG: Operating on day
// DEBUG: 58
// DEBUG: (53, 101)
// DEBUG: Operating on trip
// DEBUG: 87
// DEBUG: (82, 101)
// DEBUG: Operating on to
// DEBUG: 102
// DEBUG: (97, 101)
// DEBUG: Operating on Dunkirk.
// DEBUG: 159
// DEBUG: (154, 101)
// DEBUG: Operating on And,
// DEBUG: 188
// DEBUG: (183, 101)
// DEBUG: Operating on over
// DEBUG: ['for', 'the', 'day', 'trip', 'to', 'Dunkirk.', 'And,']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on on
// DEBUG: 30
// DEBUG: (25, 113)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 113)
// DEBUG: Operating on other
// DEBUG: 88
// DEBUG: (83, 113)
// DEBUG: Operating on side,
// DEBUG: 124
// DEBUG: (119, 113)
// DEBUG: Operating on Ted
// DEBUG: 146
// DEBUG: (141, 113)
// DEBUG: Operating on stood
// DEBUG: 182
// DEBUG: (177, 113)
// DEBUG: Operating on as
// DEBUG: 197
// DEBUG: (192, 113)
// DEBUG: Operating on a
// DEBUG: 205
// DEBUG: (200, 113)
// DEBUG: Operating on good
// DEBUG: ['over', 'on', 'the', 'other', 'side,', 'Ted', 'stood', 'as', 'a']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (10, 125)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 125)
// DEBUG: Operating on chance
// DEBUG: 66
// DEBUG: (61, 125)
// DEBUG: Operating on as
// DEBUG: 81
// DEBUG: (76, 125)
// DEBUG: Operating on anyone
// DEBUG: 124
// DEBUG: (119, 125)
// DEBUG: Operating on else.
// DEBUG: 160
// DEBUG: ['One am']
// DEBUG: drawing cursor (10, 17)
// DEBUG: ['- London Belongs to Me']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "It was the thirtieth of May by", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "now. TIMESTRING on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "thirtieth of May 1940. Quite a famous date", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "on which to be lying awake and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "staring at the ceiling. Already in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "creeks and tidal estuaries of England", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "the pleasure-boats and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "paddle-steamers were casting their moorings", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "for the day trip to Dunkirk. And,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "over on the other side, Ted stood as a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(10, 17, "One am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- London Belongs to Me", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("01:00 - Last night of all, When yon same star that's westward from the pole Had made his course t'illume that part of heaven Where now it burns, Marcellus and myself, The bell then beating one - - William Shakespeare, Hamlet "));
// DEBUG: (5, 5)
// DEBUG: Operating on Last
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on night
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on of
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on all,
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on When
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on yon
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on same
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on star
// DEBUG: ['Last', 'night', 'of', 'all,', 'When', 'yon', 'same']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on that's
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on westward
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on from
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on pole
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on Had
// DEBUG: ['star', "that's", 'westward', 'from', 'the', 'pole']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on made
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on his
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on course
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on t'illume
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on that
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on part
// DEBUG: ['Had', 'made', 'his', 'course', "t'illume", 'that']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on of
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on heaven
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on Where
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on now
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on it
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on burns,
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on Marcellus
// DEBUG: ['part', 'of', 'heaven', 'Where', 'now', 'it', 'burns,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 53)
// DEBUG: Operating on myself,
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on The
// DEBUG: 114
// DEBUG: (109, 53)
// DEBUG: Operating on bell
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on then
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on beating
// DEBUG: ['Marcellus', 'and', 'myself,', 'The', 'bell', 'then']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on TIMESTRING-
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: ['one ']
// DEBUG: drawing cursor (13, 65)
// DEBUG: ['- Hamlet']
// DEBUG: drawing cursor (151, 192)
          paint.Paint_DrawString_EN(5, 5, "Last night of all, When yon same", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "star that's westward from the pole", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Had made his course t'illume that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "part of heaven Where now it burns,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Marcellus and myself, The bell then", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(13, 65, "one ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(151, 192, "- Hamlet", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("01:00 - The station was more crowded than he had expected to find it at - what was it? he looked up at the clock - one o'clock in the morning. What in the name of God was he doing on King's Cross station at one o'clock in the morning, with no cigarette and no home that he could reasonably expect to get into without being hacked to death by a homicidal bird? - Douglas Adams, The Long Dark Tea-time of the Soul "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on station
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on was
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on more
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on crowded
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on than
// DEBUG: ['The', 'station', 'was', 'more', 'crowded']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on he
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on had
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on expected
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on to
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on find
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on it
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on at
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on -
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on what
// DEBUG: ['than', 'he', 'had', 'expected', 'to', 'find', 'it', 'at', '-']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on was
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on it?
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on he
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on looked
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on up
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on at
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on clock
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on -
// DEBUG: ['what', 'was', 'it?', 'he', 'looked', 'up', 'at', 'the', 'clock']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (7, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['-']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on What
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on in
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on the
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on name
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on of
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on God
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on was
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on he
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on doing
// DEBUG: ['TIMESTRING.', 'What', 'in', 'the', 'name', 'of', 'God', 'was', 'he']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on King's
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on Cross
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on station
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on at
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['doing', 'on', "King's", 'Cross', 'station', 'at']
// DEBUG: drawing cursor (5, 65)
// DEBUG: []
// DEBUG: drawing cursor (5, 77)
// DEBUG: (17, 89)
// DEBUG: Operating on with
// DEBUG: 51
// DEBUG: (46, 89)
// DEBUG: Operating on no
// DEBUG: 66
// DEBUG: (61, 89)
// DEBUG: Operating on cigarette
// DEBUG: 130
// DEBUG: (125, 89)
// DEBUG: Operating on and
// DEBUG: 152
// DEBUG: (147, 89)
// DEBUG: Operating on no
// DEBUG: 167
// DEBUG: (162, 89)
// DEBUG: Operating on home
// DEBUG: 196
// DEBUG: (191, 89)
// DEBUG: Operating on that
// DEBUG: ['TIMESTRING,', 'with', 'no', 'cigarette', 'and', 'no', 'home']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on he
// DEBUG: 30
// DEBUG: (25, 101)
// DEBUG: Operating on could
// DEBUG: 66
// DEBUG: (61, 101)
// DEBUG: Operating on reasonably
// DEBUG: 137
// DEBUG: (132, 101)
// DEBUG: Operating on expect
// DEBUG: 180
// DEBUG: (175, 101)
// DEBUG: Operating on to
// DEBUG: 195
// DEBUG: (190, 101)
// DEBUG: Operating on get
// DEBUG: ['that', 'he', 'could', 'reasonably', 'expect', 'to']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on into
// DEBUG: 43
// DEBUG: (38, 113)
// DEBUG: Operating on without
// DEBUG: 93
// DEBUG: (88, 113)
// DEBUG: Operating on being
// DEBUG: 129
// DEBUG: (124, 113)
// DEBUG: Operating on hacked
// DEBUG: 172
// DEBUG: (167, 113)
// DEBUG: Operating on to
// DEBUG: 187
// DEBUG: (182, 113)
// DEBUG: Operating on death
// DEBUG: ['get', 'into', 'without', 'being', 'hacked', 'to']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (11, 125)
// DEBUG: Operating on by
// DEBUG: 31
// DEBUG: (26, 125)
// DEBUG: Operating on a
// DEBUG: 39
// DEBUG: (34, 125)
// DEBUG: Operating on homicidal
// DEBUG: 103
// DEBUG: (98, 125)
// DEBUG: Operating on bird?
// DEBUG: 139
// DEBUG: ["one o'clock in the morning"]
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['- Douglas Adams']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "The station was more crowded", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "than he had expected to find it at -", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "what was it? he looked up at the clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "-", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "TIMESTRING. What in the name of God was he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "doing on King's Cross station at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "TIMESTRING, with no cigarette and no home", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "that he could reasonably expect to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "get into without being hacked to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "one o'clock in the morning", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Douglas Adams", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 01:01 for 1 quotations:
    case 61:
      Serial.println(F("Only one option for 01:01:"));
    Serial.println(F("01:01 - ‘What time is it now?’ she said. ‘About one o’clock’. ‘In the morning?’ Herera’s friend leered at her. ‘No, there’s a total eclipse of the sun’. - Jonathan Frantzen, Freedom"));
// DEBUG: (5, 5)
// DEBUG: Operating on ‘What
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on time
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on is
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on it
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on now?’
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on she
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on said.
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on ‘TIMESTRING’.
// DEBUG: Wrorking on the timestring
// DEBUG: ['‘What', 'time', 'is', 'it', 'now?’', 'she', 'said.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (19, 29)
// DEBUG: Operating on ‘In
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on morning?’
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on Herera’s
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on friend
// DEBUG: ['‘TIMESTRING’.', '‘In', 'the', 'morning?’', 'Herera’s']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on leered
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on at
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on her.
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on ‘No,
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on there’s
// DEBUG: 183
// DEBUG: (178, 41)
// DEBUG: Operating on a
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on total
// DEBUG: ['friend', 'leered', 'at', 'her.', '‘No,', 'there’s', 'a']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on eclipse
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on of
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on the
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on sun’.
// DEBUG: 139
// DEBUG: ['About one o’clock']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Jonathan Frantzen, Freedom']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "‘What time is it now?’ she said.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "‘TIMESTRING’. ‘In the morning?’ Herera’s", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "friend leered at her. ‘No, there’s a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "About one o’clock", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Jonathan Frantzen, Freedom", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:02 for 0 quotations:
    case 62:
      Serial.println(F("No quotes for 01:02"));
      return;

    // Codegen for 01:03 for 0 quotations:
    case 63:
      Serial.println(F("No quotes for 01:03"));
      return;

    // Codegen for 01:04 for 0 quotations:
    case 64:
      Serial.println(F("No quotes for 01:04"));
      return;

    // Codegen for 01:05 for 0 quotations:
    case 65:
      Serial.println(F("No quotes for 01:05"));
      return;

    // Codegen for 01:06 for 1 quotations:
    case 66:
      Serial.println(F("Only one option for 01:06:"));
    Serial.println(F("01:06 - When he woke it was 1:06 by the digital clock on the bedside table. He lay there looking at the ceiling, the raw glare of the vaporlamp outside bathing the bedroom in a cold and bluish light. Like a winter moon. - Cormac McCarthy, No Country for Old Men"));
// DEBUG: (5, 5)
// DEBUG: Operating on When
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on he
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on woke
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on it
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on was
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['When', 'he', 'woke', 'it', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on by
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on digital
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on clock
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on on
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on the
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on bedside
// DEBUG: ['TIMESTRING', 'by', 'the', 'digital', 'clock', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on table.
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on He
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on lay
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on there
// DEBUG: 134
// DEBUG: (129, 29)
// DEBUG: Operating on looking
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on at
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on the
// DEBUG: ['bedside', 'table.', 'He', 'lay', 'there', 'looking', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on ceiling,
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on the
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on raw
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on glare
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on of
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on vaporlamp
// DEBUG: ['the', 'ceiling,', 'the', 'raw', 'glare', 'of', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on outside
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on bathing
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on the
// DEBUG: 142
// DEBUG: (137, 53)
// DEBUG: Operating on bedroom
// DEBUG: 192
// DEBUG: (187, 53)
// DEBUG: Operating on in
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on a
// DEBUG: ['vaporlamp', 'outside', 'bathing', 'the', 'bedroom', 'in']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (7, 65)
// DEBUG: Operating on cold
// DEBUG: 41
// DEBUG: (36, 65)
// DEBUG: Operating on and
// DEBUG: 63
// DEBUG: (58, 65)
// DEBUG: Operating on bluish
// DEBUG: 106
// DEBUG: (101, 65)
// DEBUG: Operating on light.
// DEBUG: 149
// DEBUG: (144, 65)
// DEBUG: Operating on Like
// DEBUG: 178
// DEBUG: (173, 65)
// DEBUG: Operating on a
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on winter
// DEBUG: ['a', 'cold', 'and', 'bluish', 'light.', 'Like', 'a']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on moon.
// DEBUG: 53
// DEBUG: ['1:06']
// DEBUG: drawing cursor (115, 5)
// DEBUG: ['- No Country for Old Men']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "When he woke it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING by the digital clock on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "bedside table. He lay there looking at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the ceiling, the raw glare of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "vaporlamp outside bathing the bedroom in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "a cold and bluish light. Like a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(115, 5, "1:06", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- No Country for Old Men", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:07 for 0 quotations:
    case 67:
      Serial.println(F("No quotes for 01:07"));
      return;

    // Codegen for 01:08 for 1 quotations:
    case 68:
      Serial.println(F("Only one option for 01:08:"));
    Serial.println(F("01:08 - It was 1.08a.m. but he had left the ball at the same time as I did, and had further to travel. - Graeme Simsion, The Rosie Project"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on but
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on he
// DEBUG: ['It', 'was', 'TIMESTRING', 'but']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on had
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on left
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on the
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on ball
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on at
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on the
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on same
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on time
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on as
// DEBUG: ['he', 'had', 'left', 'the', 'ball', 'at', 'the', 'same', 'time']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on I
// DEBUG: 21
// DEBUG: (16, 29)
// DEBUG: Operating on did,
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on and
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on had
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on further
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on to
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on travel.
// DEBUG: 209
// DEBUG: ['1.08a.m.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- The Rosie Project']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING but", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "he had left the ball at the same time", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "1.08a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- The Rosie Project", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:09 for 1 quotations:
    case 69:
      Serial.println(F("Only one option for 01:09:"));
    Serial.println(F("01:09 - They made an unostentatious exit from their coach, finding themselves, when the express had rolled on into the west, upon a station platform in a foreign city at nine minutes past one o'clock in the morning - but at length without their shadow. - Louis Joseph Vance, The Black Bag"));
// DEBUG: (5, 5)
// DEBUG: Operating on They
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on made
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on an
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on unostentatious
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on exit
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on from
// DEBUG: ['They', 'made', 'an', 'unostentatious', 'exit']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on their
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on coach,
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on finding
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on themselves,
// DEBUG: ['from', 'their', 'coach,', 'finding']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on when
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on express
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on had
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on rolled
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on on
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on into
// DEBUG: ['themselves,', 'when', 'the', 'express', 'had', 'rolled', 'on']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on west,
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on upon
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on a
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on station
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on platform
// DEBUG: ['into', 'the', 'west,', 'upon', 'a', 'station']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on in
// DEBUG: 34
// DEBUG: (29, 53)
// DEBUG: Operating on a
// DEBUG: 42
// DEBUG: (37, 53)
// DEBUG: Operating on foreign
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on city
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on at
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['platform', 'in', 'a', 'foreign', 'city', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: []
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on o'clock
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on in
// DEBUG: 86
// DEBUG: (81, 77)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on morning
// DEBUG: 158
// DEBUG: (153, 77)
// DEBUG: Operating on -
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on but
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on at
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on length
// DEBUG: ['TIMESTRING', "o'clock", 'in', 'the', 'morning', '-', 'but', 'at']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on without
// DEBUG: 67
// DEBUG: (62, 89)
// DEBUG: Operating on their
// DEBUG: 103
// DEBUG: (98, 89)
// DEBUG: Operating on shadow.
// DEBUG: 153
// DEBUG: ['nine minutes past one']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- The Black Bag']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "They made an unostentatious exit", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "from their coach, finding", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "themselves, when the express had rolled on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "into the west, upon a station", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "platform in a foreign city at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "TIMESTRING o'clock in the morning - but at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "nine minutes past one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- The Black Bag", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:10 for 1 quotations:
    case 70:
      Serial.println(F("Only one option for 01:10:"));
    Serial.println(F("01:10 - February 26, Saturday - Richards went out 1.10am and found it clearing a bit, so we got under way as soon as possible, which was 2:10a.m. - Ernest Shackleton, South: The Endurance Expedition"));
// DEBUG: (5, 5)
// DEBUG: Operating on February
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on 26,
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on Saturday
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on -
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on Richards
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on went
// DEBUG: ['February', '26,', 'Saturday', '-', 'Richards']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on out
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on and
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on found
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on it
// DEBUG: ['went', 'out', 'TIMESTRING', 'and', 'found']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on clearing
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on a
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on bit,
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on so
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on we
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on got
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on under
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on way
// DEBUG: ['it', 'clearing', 'a', 'bit,', 'so', 'we', 'got', 'under']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on as
// DEBUG: 29
// DEBUG: (24, 41)
// DEBUG: Operating on soon
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on as
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on possible,
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on which
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on was
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on 2:10a.m.
// DEBUG: ['way', 'as', 'soon', 'as', 'possible,', 'which', 'was']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['1.10am']
// DEBUG: drawing cursor (32, 17)
// DEBUG: ['- Ernest Shackleton']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "February 26, Saturday - Richards", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "went out TIMESTRING and found", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "it clearing a bit, so we got under", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "way as soon as possible, which was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(32, 17, "1.10am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Ernest Shackleton", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:11 for 1 quotations:
    case 71:
      Serial.println(F("Only one option for 01:11:"));
    Serial.println(F("01:11 - Declares one of the waiters was the worse for liquor, and that he was giving him a dressing down. Also that it was nearer to one than half past. - Agatha Christie, The Affair at the Victory Ball"));
// DEBUG: (5, 5)
// DEBUG: Operating on Declares
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on one
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on of
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on the
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on waiters
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on was
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on the
// DEBUG: ['Declares', 'one', 'of', 'the', 'waiters', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on worse
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on for
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on liquor,
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on and
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on that
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on he
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on was
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on giving
// DEBUG: ['the', 'worse', 'for', 'liquor,', 'and', 'that', 'he', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on him
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on a
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on dressing
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on down.
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on Also
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on that
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on it
// DEBUG: ['giving', 'him', 'a', 'dressing', 'down.', 'Also', 'that']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on was
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['it', 'was']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['nearer to one than half past']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- Agatha Christie']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "Declares one of the waiters was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "the worse for liquor, and that he was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "giving him a dressing down. Also that", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "nearer to one than half past", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Agatha Christie", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:12 for 1 quotations:
    case 72:
      Serial.println(F("Only one option for 01:12:"));
    Serial.println(F("01:12 - It was 1:12am when Father arrived at the police station. I did not see him until 1:28am but I knew he was there because I could hear him. He was shouting, 'I want to see my son,' and 'Why the hell is he locked up?' and, 'Of course I'm bloody angry.' - Mark Haddon, The Curious Incident of the Dog in the Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on when
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on Father
// DEBUG: ['It', 'was', 'TIMESTRING', 'when']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on arrived
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on at
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on police
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on station.
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on I
// DEBUG: ['Father', 'arrived', 'at', 'the', 'police', 'station.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (7, 29)
// DEBUG: Operating on did
// DEBUG: 34
// DEBUG: (29, 29)
// DEBUG: Operating on not
// DEBUG: 56
// DEBUG: (51, 29)
// DEBUG: Operating on see
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on him
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on until
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on 1:28am
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on but
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on I
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on knew
// DEBUG: ['I', 'did', 'not', 'see', 'him', 'until', '1:28am', 'but', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on he
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on was
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on there
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on because
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on I
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on could
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on hear
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on him.
// DEBUG: ['knew', 'he', 'was', 'there', 'because', 'I', 'could', 'hear']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on He
// DEBUG: 30
// DEBUG: (25, 53)
// DEBUG: Operating on was
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on shouting,
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on 'I
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on want
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on to
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on see
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on my
// DEBUG: ['him.', 'He', 'was', 'shouting,', "'I", 'want', 'to', 'see']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on son,'
// DEBUG: 49
// DEBUG: (44, 65)
// DEBUG: Operating on and
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on 'Why
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on the
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on hell
// DEBUG: 151
// DEBUG: (146, 65)
// DEBUG: Operating on is
// DEBUG: 166
// DEBUG: (161, 65)
// DEBUG: Operating on he
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on locked
// DEBUG: ['my', "son,'", 'and', "'Why", 'the', 'hell', 'is', 'he']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on up?'
// DEBUG: 46
// DEBUG: (41, 77)
// DEBUG: Operating on and,
// DEBUG: 75
// DEBUG: (70, 77)
// DEBUG: Operating on 'Of
// DEBUG: 97
// DEBUG: (92, 77)
// DEBUG: Operating on course
// DEBUG: 140
// DEBUG: (135, 77)
// DEBUG: Operating on I'm
// DEBUG: 162
// DEBUG: (157, 77)
// DEBUG: Operating on bloody
// DEBUG: 205
// DEBUG: (200, 77)
// DEBUG: Operating on angry.'
// DEBUG: ['locked', "up?'", 'and,', "'Of", 'course', "I'm", 'bloody']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['1:12am']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING when", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Father arrived at the police station.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "I did not see him until 1:28am but I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "knew he was there because I could hear", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "him. He was shouting, 'I want to see", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "my son,' and 'Why the hell is he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "locked up?' and, 'Of course I'm bloody", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "1:12am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:13 for 0 quotations:
    case 73:
      Serial.println(F("No quotes for 01:13"));
      return;

    // Codegen for 01:14 for 0 quotations:
    case 74:
      Serial.println(F("No quotes for 01:14"));
      return;

    // Codegen for 01:15 for 3 quotations:
    case 75:
      option = random(0, 3);
      Serial.print(F("3 options for 01:15. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("01:15 - I am sorry, therefore, as I have said, that I ever paid any attention to the footsteps. They began about a quarter past one o'clock in the morning, a rhythmic, quick-cadenced walking around the dining-room table. - James Thurber, My Life and Hard Times: \"The Night the Ghost Got In\""));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on am
// DEBUG: 33
// DEBUG: (28, 5)
// DEBUG: Operating on sorry,
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on therefore,
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on as
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on I
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on have
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on said,
// DEBUG: ['I', 'am', 'sorry,', 'therefore,', 'as', 'I', 'have']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on I
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on ever
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on paid
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on any
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on attention
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on to
// DEBUG: ['said,', 'that', 'I', 'ever', 'paid', 'any', 'attention']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on footsteps.
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on They
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on began
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on about
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on a
// DEBUG: ['to', 'the', 'footsteps.', 'They', 'began', 'about']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (7, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on o'clock
// DEBUG: ['a', 'TIMESTRING']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on morning,
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on a
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on rhythmic,
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on quick-cadenced
// DEBUG: ["o'clock", 'in', 'the', 'morning,', 'a', 'rhythmic,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (20, 65)
// DEBUG: Operating on walking
// DEBUG: 75
// DEBUG: (70, 65)
// DEBUG: Operating on around
// DEBUG: 118
// DEBUG: (113, 65)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 65)
// DEBUG: Operating on dining-room
// DEBUG: ['quick-cadenced', 'walking', 'around', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (17, 77)
// DEBUG: Operating on table.
// DEBUG: 65
// DEBUG: ['quarter past one']
// DEBUG: drawing cursor (7, 41)
// DEBUG: ['- James Thurber']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "I am sorry, therefore, as I have", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "said, that I ever paid any attention", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "to the footsteps. They began about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "a TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "o'clock in the morning, a rhythmic,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "quick-cadenced walking around the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(7, 41, "quarter past one", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- James Thurber", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("01:15 - Lily Chen always prepared an 'evening' snack for her husband to consume on his return at 1.15am. - Timothy Mo, Sour Sweet "));
// DEBUG: (5, 5)
// DEBUG: Operating on Lily
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on Chen
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on always
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on prepared
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on an
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on 'evening'
// DEBUG: ['Lily', 'Chen', 'always', 'prepared', 'an']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on snack
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on for
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on her
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on husband
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on to
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on consume
// DEBUG: ["'evening'", 'snack', 'for', 'her', 'husband', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on on
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on his
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on return
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on at
// DEBUG: 113
// DEBUG: (108, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['consume', 'on', 'his', 'return', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['1.15am.']
// DEBUG: drawing cursor (108, 29)
// DEBUG: ['- Timothy Mo, Sour Sweet ']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "Lily Chen always prepared an", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "'evening' snack for her husband to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "consume on his return at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(108, 29, "1.15am.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Timothy Mo, Sour Sweet ", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("01:15 - The ghost that got into our house on the night of November 17, 1915, raised such a hullabaloo of misunderstandings that I am sorry I didn't just let it keep on walking, and go to bed. Its advent caused my mother to throw a shoe through a window of the house next door and ended up with my grandfather shooting a patrolman. I am sorry, therefore, as I have said, that I ever paid any attention to the footsteps. They began about a quarter past one o'clock in the morning, a rhythmic, quick-cadenced walking around the dining-room table. - James Thurber, My Life and Hard Times: \"The Night the Ghost Got In\" "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on ghost
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on that
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on got
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on into
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on our
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on house
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on on
// DEBUG: ['The', 'ghost', 'that', 'got', 'into', 'our', 'house']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on night
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on of
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on November
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on 17,
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on 1915,
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on raised
// DEBUG: ['on', 'the', 'night', 'of', 'November', '17,', '1915,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on such
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on a
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on hullabaloo
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on of
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on misunderstandings
// DEBUG: ['raised', 'such', 'a', 'hullabaloo', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (23, 41)
// DEBUG: Operating on that
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on I
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on am
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on sorry
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on I
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on didn't
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on just
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on let
// DEBUG: ['misunderstandings', 'that', 'I', 'am', 'sorry', 'I', "didn't", 'just']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on it
// DEBUG: 29
// DEBUG: (24, 53)
// DEBUG: Operating on keep
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on on
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on walking,
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on and
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on go
// DEBUG: 167
// DEBUG: (162, 53)
// DEBUG: Operating on to
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on bed.
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on Its
// DEBUG: ['let', 'it', 'keep', 'on', 'walking,', 'and', 'go', 'to', 'bed.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on advent
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on caused
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on my
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on mother
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on to
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on throw
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on a
// DEBUG: ['Its', 'advent', 'caused', 'my', 'mother', 'to', 'throw']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (7, 77)
// DEBUG: Operating on shoe
// DEBUG: 41
// DEBUG: (36, 77)
// DEBUG: Operating on through
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on a
// DEBUG: 99
// DEBUG: (94, 77)
// DEBUG: Operating on window
// DEBUG: 142
// DEBUG: (137, 77)
// DEBUG: Operating on of
// DEBUG: 157
// DEBUG: (152, 77)
// DEBUG: Operating on the
// DEBUG: 179
// DEBUG: (174, 77)
// DEBUG: Operating on house
// DEBUG: ['a', 'shoe', 'through', 'a', 'window', 'of', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on next
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on door
// DEBUG: 74
// DEBUG: (69, 89)
// DEBUG: Operating on and
// DEBUG: 96
// DEBUG: (91, 89)
// DEBUG: Operating on ended
// DEBUG: 132
// DEBUG: (127, 89)
// DEBUG: Operating on up
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on with
// DEBUG: 176
// DEBUG: (171, 89)
// DEBUG: Operating on my
// DEBUG: 191
// DEBUG: (186, 89)
// DEBUG: Operating on grandfather
// DEBUG: ['house', 'next', 'door', 'and', 'ended', 'up', 'with', 'my']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on shooting
// DEBUG: 79
// DEBUG: (74, 101)
// DEBUG: Operating on a
// DEBUG: 87
// DEBUG: (82, 101)
// DEBUG: Operating on patrolman.
// DEBUG: 158
// DEBUG: (153, 101)
// DEBUG: Operating on I
// DEBUG: 166
// DEBUG: (161, 101)
// DEBUG: Operating on am
// DEBUG: 181
// DEBUG: (176, 101)
// DEBUG: Operating on sorry,
// DEBUG: ['grandfather', 'shooting', 'a', 'patrolman.', 'I', 'am']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on therefore,
// DEBUG: 88
// DEBUG: (83, 113)
// DEBUG: Operating on as
// DEBUG: 103
// DEBUG: (98, 113)
// DEBUG: Operating on I
// DEBUG: 111
// DEBUG: (106, 113)
// DEBUG: Operating on have
// DEBUG: 140
// DEBUG: (135, 113)
// DEBUG: Operating on said,
// DEBUG: 176
// DEBUG: (171, 113)
// DEBUG: Operating on that
// DEBUG: 205
// DEBUG: (200, 113)
// DEBUG: Operating on I
// DEBUG: ['sorry,', 'therefore,', 'as', 'I', 'have', 'said,', 'that']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (7, 125)
// DEBUG: Operating on ever
// DEBUG: 41
// DEBUG: (36, 125)
// DEBUG: Operating on paid
// DEBUG: 70
// DEBUG: (65, 125)
// DEBUG: Operating on any
// DEBUG: 92
// DEBUG: (87, 125)
// DEBUG: Operating on attention
// DEBUG: 156
// DEBUG: (151, 125)
// DEBUG: Operating on to
// DEBUG: 171
// DEBUG: (166, 125)
// DEBUG: Operating on the
// DEBUG: 193
// DEBUG: (188, 125)
// DEBUG: Operating on footsteps.
// DEBUG: ['I', 'ever', 'paid', 'any', 'attention', 'to', 'the']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (16, 137)
// DEBUG: Operating on They
// DEBUG: 50
// DEBUG: (45, 137)
// DEBUG: Operating on began
// DEBUG: 86
// DEBUG: (81, 137)
// DEBUG: Operating on about
// DEBUG: 122
// DEBUG: (117, 137)
// DEBUG: Operating on a
// DEBUG: 130
// DEBUG: (125, 137)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['footsteps.', 'They', 'began', 'about', 'a']
// DEBUG: drawing cursor (5, 137)
// DEBUG: 193
// DEBUG: (188, 149)
// DEBUG: Operating on o'clock
// DEBUG: ['TIMESTRING']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (13, 161)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 161)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 161)
// DEBUG: Operating on morning,
// DEBUG: 112
// DEBUG: (107, 161)
// DEBUG: Operating on a
// DEBUG: 120
// DEBUG: (115, 161)
// DEBUG: Operating on rhythmic,
// DEBUG: 184
// DEBUG: (179, 161)
// DEBUG: Operating on quick-cadenced
// DEBUG: ["o'clock", 'in', 'the', 'morning,', 'a', 'rhythmic,']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (20, 173)
// DEBUG: Operating on walking
// DEBUG: 75
// DEBUG: (70, 173)
// DEBUG: Operating on around
// DEBUG: 118
// DEBUG: (113, 173)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 173)
// DEBUG: Operating on dining-room
// DEBUG: ['quick-cadenced', 'walking', 'around', 'the']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (17, 185)
// DEBUG: Operating on table.
// DEBUG: 65
// DEBUG: ['quarter past one']
// DEBUG: drawing cursor (5, 149)
// DEBUG: ['- James Thurber']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "The ghost that got into our house", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "on the night of November 17, 1915,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "raised such a hullabaloo of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "misunderstandings that I am sorry I didn't just", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "let it keep on walking, and go to bed.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "Its advent caused my mother to throw", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "a shoe through a window of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "house next door and ended up with my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "grandfather shooting a patrolman. I am", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "sorry, therefore, as I have said, that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "I ever paid any attention to the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "footsteps. They began about a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "o'clock in the morning, a rhythmic,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "quick-cadenced walking around the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "quarter past one", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- James Thurber", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 01:16 for 2 quotations:
    case 76:
      option = random(0, 2);
      Serial.print(F("2 options for 01:16. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("01:16 - At sixteen past one, they walked into the interview room. - Dana Stabenow, Nothing Gold Can Stay "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on they
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on walked
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on into
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on the
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on interview
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on room.
// DEBUG: ['TIMESTRING,', 'they', 'walked', 'into', 'the', 'interview']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['sixteen past one']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Nothing Gold Can Stay']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, they walked into the interview", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "sixteen past one", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- Nothing Gold Can Stay", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("01:16 - From 1am to 1.16am vouched for by other two conductors. - Agatha Christie, Murder on the Orient Express"));
// DEBUG: (5, 5)
// DEBUG: Operating on From
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on 1am
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on to
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on vouched
// DEBUG: ['From', '1am', 'to', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on for
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on by
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on other
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on two
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on conductors.
// DEBUG: 191
// DEBUG: ['1.16am']
// DEBUG: drawing cursor (71, 5)
// DEBUG: ['- Agatha Christie']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "From 1am to TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(71, 5, "1.16am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Agatha Christie", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 01:17 for 2 quotations:
    case 77:
      option = random(0, 2);
      Serial.print(F("2 options for 01:17. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("01:17 - At that moment (it was seventeen minutes past one in the morning) Lieutenant Bronsfield was preparing to leave the watch and return to his cabin, when his attention was attracted by a distant hissing noise. - Jules Verne, A voyage round the moon "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on that
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on moment
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on (it
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on was
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At', 'that', 'moment', '(it', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on morning)
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on Lieutenant
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on Bronsfield
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning)', 'Lieutenant']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on was
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on preparing
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on to
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on leave
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on the
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on watch
// DEBUG: ['Bronsfield', 'was', 'preparing', 'to', 'leave', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on return
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on to
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on his
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on cabin,
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on when
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on his
// DEBUG: ['watch', 'and', 'return', 'to', 'his', 'cabin,', 'when']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on attention
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on was
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on attracted
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on by
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on a
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on distant
// DEBUG: ['his', 'attention', 'was', 'attracted', 'by', 'a']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on hissing
// DEBUG: 68
// DEBUG: (63, 77)
// DEBUG: Operating on noise.
// DEBUG: 111
// DEBUG: ['seventeen minutes past one']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- A voyage round the moon']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "At that moment (it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING in the morning) Lieutenant", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Bronsfield was preparing to leave the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "watch and return to his cabin, when", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "his attention was attracted by a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "seventeen minutes past one", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A voyage round the moon", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("01:17 - The clocks stopped at 1:17. A long shear of light and then a series of low concussions. He got up and went to the window. What is it? she said. He didnt answer. He went into the bathroom and threw the lightswitch but the power was already gone. A dull rose glow in the windowglass. He dropped to one knee and raised the lever to stop the tub and then turned on both taps as far as they would go. She was standing in the doorway in her nightwear, clutching the jamb, cradling her belly in one hand. What is it? she said. What is happening? - Cormac McCarthy, The Road "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on clocks
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on stopped
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on at
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'clocks', 'stopped', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on A
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on long
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on shear
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on of
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on light
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on and
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on then
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on a
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on series
// DEBUG: ['TIMESTRING.', 'A', 'long', 'shear', 'of', 'light', 'and', 'then', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on low
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on concussions.
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on He
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on got
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on up
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on and
// DEBUG: ['series', 'of', 'low', 'concussions.', 'He', 'got', 'up']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on went
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on to
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on the
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on window.
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on What
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on is
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on it?
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on she
// DEBUG: ['and', 'went', 'to', 'the', 'window.', 'What', 'is', 'it?']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on said.
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on He
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on didnt
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on answer.
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on He
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on went
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on into
// DEBUG: ['she', 'said.', 'He', 'didnt', 'answer.', 'He', 'went']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on bathroom
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on and
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on threw
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on lightswitch
// DEBUG: ['into', 'the', 'bathroom', 'and', 'threw', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (17, 77)
// DEBUG: Operating on but
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on the
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on power
// DEBUG: 102
// DEBUG: (97, 77)
// DEBUG: Operating on was
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on already
// DEBUG: 174
// DEBUG: (169, 77)
// DEBUG: Operating on gone.
// DEBUG: 210
// DEBUG: (205, 77)
// DEBUG: Operating on A
// DEBUG: ['lightswitch', 'but', 'the', 'power', 'was', 'already', 'gone.']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (7, 89)
// DEBUG: Operating on dull
// DEBUG: 41
// DEBUG: (36, 89)
// DEBUG: Operating on rose
// DEBUG: 70
// DEBUG: (65, 89)
// DEBUG: Operating on glow
// DEBUG: 99
// DEBUG: (94, 89)
// DEBUG: Operating on in
// DEBUG: 114
// DEBUG: (109, 89)
// DEBUG: Operating on the
// DEBUG: 136
// DEBUG: (131, 89)
// DEBUG: Operating on windowglass.
// DEBUG: ['A', 'dull', 'rose', 'glow', 'in', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (18, 101)
// DEBUG: Operating on He
// DEBUG: 38
// DEBUG: (33, 101)
// DEBUG: Operating on dropped
// DEBUG: 88
// DEBUG: (83, 101)
// DEBUG: Operating on to
// DEBUG: 103
// DEBUG: (98, 101)
// DEBUG: Operating on one
// DEBUG: 125
// DEBUG: (120, 101)
// DEBUG: Operating on knee
// DEBUG: 154
// DEBUG: (149, 101)
// DEBUG: Operating on and
// DEBUG: 176
// DEBUG: (171, 101)
// DEBUG: Operating on raised
// DEBUG: ['windowglass.', 'He', 'dropped', 'to', 'one', 'knee', 'and']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 113)
// DEBUG: Operating on lever
// DEBUG: 75
// DEBUG: (70, 113)
// DEBUG: Operating on to
// DEBUG: 90
// DEBUG: (85, 113)
// DEBUG: Operating on stop
// DEBUG: 119
// DEBUG: (114, 113)
// DEBUG: Operating on the
// DEBUG: 141
// DEBUG: (136, 113)
// DEBUG: Operating on tub
// DEBUG: 163
// DEBUG: (158, 113)
// DEBUG: Operating on and
// DEBUG: 185
// DEBUG: (180, 113)
// DEBUG: Operating on then
// DEBUG: ['raised', 'the', 'lever', 'to', 'stop', 'the', 'tub', 'and']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (10, 125)
// DEBUG: Operating on turned
// DEBUG: 58
// DEBUG: (53, 125)
// DEBUG: Operating on on
// DEBUG: 73
// DEBUG: (68, 125)
// DEBUG: Operating on both
// DEBUG: 102
// DEBUG: (97, 125)
// DEBUG: Operating on taps
// DEBUG: 131
// DEBUG: (126, 125)
// DEBUG: Operating on as
// DEBUG: 146
// DEBUG: (141, 125)
// DEBUG: Operating on far
// DEBUG: 168
// DEBUG: (163, 125)
// DEBUG: Operating on as
// DEBUG: 183
// DEBUG: (178, 125)
// DEBUG: Operating on they
// DEBUG: ['then', 'turned', 'on', 'both', 'taps', 'as', 'far', 'as']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (10, 137)
// DEBUG: Operating on would
// DEBUG: 51
// DEBUG: (46, 137)
// DEBUG: Operating on go.
// DEBUG: 73
// DEBUG: (68, 137)
// DEBUG: Operating on She
// DEBUG: 95
// DEBUG: (90, 137)
// DEBUG: Operating on was
// DEBUG: 117
// DEBUG: (112, 137)
// DEBUG: Operating on standing
// DEBUG: 174
// DEBUG: (169, 137)
// DEBUG: Operating on in
// DEBUG: 189
// DEBUG: (184, 137)
// DEBUG: Operating on the
// DEBUG: 211
// DEBUG: (206, 137)
// DEBUG: Operating on doorway
// DEBUG: ['they', 'would', 'go.', 'She', 'was', 'standing', 'in', 'the']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (13, 149)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 149)
// DEBUG: Operating on her
// DEBUG: 55
// DEBUG: (50, 149)
// DEBUG: Operating on nightwear,
// DEBUG: 126
// DEBUG: (121, 149)
// DEBUG: Operating on clutching
// DEBUG: 190
// DEBUG: (185, 149)
// DEBUG: Operating on the
// DEBUG: ['doorway', 'in', 'her', 'nightwear,', 'clutching']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (9, 161)
// DEBUG: Operating on jamb,
// DEBUG: 50
// DEBUG: (45, 161)
// DEBUG: Operating on cradling
// DEBUG: 107
// DEBUG: (102, 161)
// DEBUG: Operating on her
// DEBUG: 129
// DEBUG: (124, 161)
// DEBUG: Operating on belly
// DEBUG: 165
// DEBUG: (160, 161)
// DEBUG: Operating on in
// DEBUG: 180
// DEBUG: (175, 161)
// DEBUG: Operating on one
// DEBUG: 202
// DEBUG: (197, 161)
// DEBUG: Operating on hand.
// DEBUG: ['the', 'jamb,', 'cradling', 'her', 'belly', 'in', 'one']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (11, 173)
// DEBUG: Operating on What
// DEBUG: 45
// DEBUG: (40, 173)
// DEBUG: Operating on is
// DEBUG: 60
// DEBUG: (55, 173)
// DEBUG: Operating on it?
// DEBUG: 82
// DEBUG: (77, 173)
// DEBUG: Operating on she
// DEBUG: 104
// DEBUG: (99, 173)
// DEBUG: Operating on said.
// DEBUG: 140
// DEBUG: (135, 173)
// DEBUG: Operating on What
// DEBUG: 169
// DEBUG: (164, 173)
// DEBUG: Operating on is
// DEBUG: 184
// DEBUG: (179, 173)
// DEBUG: Operating on happening?
// DEBUG: ['hand.', 'What', 'is', 'it?', 'she', 'said.', 'What', 'is']
// DEBUG: drawing cursor (5, 173)
// DEBUG: ['1:17']
// DEBUG: drawing cursor (135, 5)
// DEBUG: ['- Cormac McCarthy, The Road ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "The clocks stopped at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING. A long shear of light and then a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "series of low concussions. He got up", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "and went to the window. What is it?", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "she said. He didnt answer. He went", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "into the bathroom and threw the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "lightswitch but the power was already gone.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "A dull rose glow in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "windowglass. He dropped to one knee and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "raised the lever to stop the tub and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "then turned on both taps as far as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "they would go. She was standing in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "doorway in her nightwear, clutching", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "the jamb, cradling her belly in one", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "hand. What is it? she said. What is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(135, 5, "1:17", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Cormac McCarthy, The Road ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 01:18 for 0 quotations:
    case 78:
      Serial.println(F("No quotes for 01:18"));
      return;

    // Codegen for 01:19 for 0 quotations:
    case 79:
      Serial.println(F("No quotes for 01:19"));
      return;

    // Codegen for 01:20 for 2 quotations:
    case 80:
      option = random(0, 2);
      Serial.print(F("2 options for 01:20. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("01:20 - \"Well!\" she said, looking like a minor female prophet about to curse the sins of the people. \"May I trespass on your valuable time long enough to ask what in the name of everything bloodsome you think you're playing at, young piefaced Bertie? It is now some twenty minutes past one o'clock in the morning, and not a spot of action on your part.\" - P.G. Wodehouse, Jeeves and the Feudal Spirit "));
// DEBUG: (5, 5)
// DEBUG: Operating on \"Well!\"
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on she
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on said,
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on looking
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on like
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on a
// DEBUG: ['\\"Well!\\"', 'she', 'said,', 'looking', 'like']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (7, 17)
// DEBUG: Operating on minor
// DEBUG: 48
// DEBUG: (43, 17)
// DEBUG: Operating on female
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on prophet
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on about
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on to
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on curse
// DEBUG: ['a', 'minor', 'female', 'prophet', 'about', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on sins
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on of
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on people.
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on \"May
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on I
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on trespass
// DEBUG: ['curse', 'the', 'sins', 'of', 'the', 'people.', '\\"May', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on on
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on your
// DEBUG: 63
// DEBUG: (58, 41)
// DEBUG: Operating on valuable
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on time
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on long
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on enough
// DEBUG: ['trespass', 'on', 'your', 'valuable', 'time', 'long']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on ask
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on what
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on in
// DEBUG: 98
// DEBUG: (93, 53)
// DEBUG: Operating on the
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on name
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on of
// DEBUG: 164
// DEBUG: (159, 53)
// DEBUG: Operating on everything
// DEBUG: ['enough', 'to', 'ask', 'what', 'in', 'the', 'name', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on bloodsome
// DEBUG: 85
// DEBUG: (80, 65)
// DEBUG: Operating on you
// DEBUG: 107
// DEBUG: (102, 65)
// DEBUG: Operating on think
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on you're
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on playing
// DEBUG: ['everything', 'bloodsome', 'you', 'think', "you're"]
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on at,
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on young
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on piefaced
// DEBUG: 133
// DEBUG: (128, 77)
// DEBUG: Operating on Bertie?
// DEBUG: 183
// DEBUG: (178, 77)
// DEBUG: Operating on It
// DEBUG: 198
// DEBUG: (193, 77)
// DEBUG: Operating on is
// DEBUG: ['playing', 'at,', 'young', 'piefaced', 'Bertie?', 'It']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on now
// DEBUG: 35
// DEBUG: (30, 89)
// DEBUG: Operating on some
// DEBUG: 64
// DEBUG: (59, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['is', 'now', 'some']
// DEBUG: drawing cursor (5, 89)
// DEBUG: []
// DEBUG: drawing cursor (5, 101)
// DEBUG: (16, 113)
// DEBUG: Operating on o'clock
// DEBUG: 71
// DEBUG: (66, 113)
// DEBUG: Operating on in
// DEBUG: 86
// DEBUG: (81, 113)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 113)
// DEBUG: Operating on morning,
// DEBUG: 165
// DEBUG: (160, 113)
// DEBUG: Operating on and
// DEBUG: 187
// DEBUG: (182, 113)
// DEBUG: Operating on not
// DEBUG: 209
// DEBUG: (204, 113)
// DEBUG: Operating on a
// DEBUG: ['TIMESTRING', "o'clock", 'in', 'the', 'morning,', 'and', 'not']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (7, 125)
// DEBUG: Operating on spot
// DEBUG: 41
// DEBUG: (36, 125)
// DEBUG: Operating on of
// DEBUG: 56
// DEBUG: (51, 125)
// DEBUG: Operating on action
// DEBUG: 99
// DEBUG: (94, 125)
// DEBUG: Operating on on
// DEBUG: 114
// DEBUG: (109, 125)
// DEBUG: Operating on your
// DEBUG: 143
// DEBUG: (138, 125)
// DEBUG: Operating on part.\"
// DEBUG: 193
// DEBUG: ['twenty minutes past one']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- P.G. Wodehouse']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "\"Well!\" she said, looking like", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "a minor female prophet about to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "curse the sins of the people. \"May I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "trespass on your valuable time long", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "enough to ask what in the name of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "everything bloodsome you think you're", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "playing at, young piefaced Bertie? It", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "is now some", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "TIMESTRING o'clock in the morning, and not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "twenty minutes past one", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- P.G. Wodehouse", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("01:20 - Then it was 1.20am, but I hadn't heard Father come upstairs to bed. I wondered if he was asleep downstairs or whether he was waiting to come in and kill me. So I got out my Swiss Army Knife and opened the saw blade so that I could defend myself. - Mark Haddon, The Curious Incident Of The Dog In The Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on Then
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on it
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on was
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on but
// DEBUG: ['Then', 'it', 'was', 'TIMESTRING,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on I
// DEBUG: 22
// DEBUG: (17, 17)
// DEBUG: Operating on hadn't
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on heard
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on Father
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on come
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on upstairs
// DEBUG: ['but', 'I', "hadn't", 'heard', 'Father', 'come']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 29)
// DEBUG: Operating on bed.
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on I
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on wondered
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on if
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on he
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on was
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on asleep
// DEBUG: ['upstairs', 'to', 'bed.', 'I', 'wondered', 'if', 'he', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on downstairs
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on or
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on whether
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on he
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on was
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on waiting
// DEBUG: ['asleep', 'downstairs', 'or', 'whether', 'he', 'was']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on come
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on in
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on and
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on kill
// DEBUG: 128
// DEBUG: (123, 53)
// DEBUG: Operating on me.
// DEBUG: 150
// DEBUG: (145, 53)
// DEBUG: Operating on So
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on I
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on got
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on out
// DEBUG: ['waiting', 'to', 'come', 'in', 'and', 'kill', 'me.', 'So', 'I', 'got']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on my
// DEBUG: 29
// DEBUG: (24, 65)
// DEBUG: Operating on Swiss
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on Army
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on Knife
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on and
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on opened
// DEBUG: 195
// DEBUG: (190, 65)
// DEBUG: Operating on the
// DEBUG: ['out', 'my', 'Swiss', 'Army', 'Knife', 'and', 'opened']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on saw
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on blade
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on so
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on that
// DEBUG: 116
// DEBUG: (111, 77)
// DEBUG: Operating on I
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on could
// DEBUG: 160
// DEBUG: (155, 77)
// DEBUG: Operating on defend
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on myself.
// DEBUG: ['the', 'saw', 'blade', 'so', 'that', 'I', 'could', 'defend']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['1.20am']
// DEBUG: drawing cursor (71, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "Then it was TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "but I hadn't heard Father come", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "upstairs to bed. I wondered if he was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "asleep downstairs or whether he was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "waiting to come in and kill me. So I got", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "out my Swiss Army Knife and opened", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "the saw blade so that I could defend", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(71, 5, "1.20am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 01:21 for 0 quotations:
    case 81:
      Serial.println(F("No quotes for 01:21"));
      return;

    // Codegen for 01:22 for 1 quotations:
    case 82:
      Serial.println(F("Only one option for 01:22:"));
    Serial.println(F("01:22 - It was 1:22 when we found Dad's grave. - Jonathan Safran Foer, Extremely Loud and Incredibly Close"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on when
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on we
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on found
// DEBUG: ['It', 'was', 'TIMESTRING', 'when', 'we']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on Dad's
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on grave.
// DEBUG: 95
// DEBUG: ['1:22']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Jonathan Safran Foer']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING when we", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "1:22", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Jonathan Safran Foer", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:23 for 1 quotations:
    case 83:
      Serial.println(F("Only one option for 01:23:"));
    Serial.println(F("01:23 - The clock marked twenty-three minutes past one. He was suddenly full of agitation, yet hopeful. She had come! Who could tell what she would say? She might offer the most natural explanation of her late arrival. - Anatole France, A Mummer's Tale"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on clock
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on marked
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'clock', 'marked']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on He
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on was
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on suddenly
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on full
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on of
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on agitation,
// DEBUG: ['TIMESTRING.', 'He', 'was', 'suddenly', 'full', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on yet
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on hopeful.
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on She
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on had
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on come!
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on Who
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on could
// DEBUG: ['agitation,', 'yet', 'hopeful.', 'She', 'had', 'come!', 'Who']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on tell
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on what
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on she
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on would
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on say?
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on She
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on might
// DEBUG: ['could', 'tell', 'what', 'she', 'would', 'say?', 'She']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on offer
// DEBUG: 52
// DEBUG: (47, 65)
// DEBUG: Operating on the
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on most
// DEBUG: 103
// DEBUG: (98, 65)
// DEBUG: Operating on natural
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on explanation
// DEBUG: ['might', 'offer', 'the', 'most', 'natural']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (17, 77)
// DEBUG: Operating on of
// DEBUG: 37
// DEBUG: (32, 77)
// DEBUG: Operating on her
// DEBUG: 59
// DEBUG: (54, 77)
// DEBUG: Operating on late
// DEBUG: 88
// DEBUG: (83, 77)
// DEBUG: Operating on arrival.
// DEBUG: 145
// DEBUG: ['twenty-three minutes past one']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ["- A Mummer's Tale"]
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "The clock marked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING. He was suddenly full of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "agitation, yet hopeful. She had come! Who", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "could tell what she would say? She", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "might offer the most natural", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "twenty-three minutes past one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- A Mummer's Tale", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:24 for 1 quotations:
    case 84:
      Serial.println(F("Only one option for 01:24:"));
    Serial.println(F("01:24 - Larkin had died at 1.24am, turning to the nurse who was with him, squeezing her hand, and saying faintly, 'I am going to the inevitable.' - Hermione Lee, Body Parts: Essays on Life-Writing"));
// DEBUG: (5, 5)
// DEBUG: Operating on Larkin
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on had
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on died
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on at
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Larkin', 'had', 'died', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on turning
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on to
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on nurse
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on who
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on was
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on with
// DEBUG: ['TIMESTRING,', 'turning', 'to', 'the', 'nurse', 'who', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on him,
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on squeezing
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on her
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on hand,
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on and
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on saying
// DEBUG: ['with', 'him,', 'squeezing', 'her', 'hand,', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on faintly,
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on 'I
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on am
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on going
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on to
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on the
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on inevitable.'
// DEBUG: ['saying', 'faintly,', "'I", 'am', 'going', 'to', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['1.24am']
// DEBUG: drawing cursor (114, 5)
// DEBUG: ['- Hermione Lee']
// DEBUG: drawing cursor (109, 192)
    paint.Paint_DrawString_EN(5, 5, "Larkin had died at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING, turning to the nurse who was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "with him, squeezing her hand, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "saying faintly, 'I am going to the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(114, 5, "1.24am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(109, 192, "- Hermione Lee", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:25 for 1 quotations:
    case 85:
      Serial.println(F("Only one option for 01:25:"));
    Serial.println(F("01:25 - He made a last effort; he tried to rise, and sank back. His head fell on the sofa cushions. It was then twenty-five minutes past one o'clock. - Wilkie Collins, The Moonstone"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on made
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on a
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on last
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on effort;
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on he
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on tried
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on to
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on rise,
// DEBUG: ['He', 'made', 'a', 'last', 'effort;', 'he', 'tried', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on sank
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on back.
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on His
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on head
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on fell
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on on
// DEBUG: 198
// DEBUG: (193, 17)
// DEBUG: Operating on the
// DEBUG: ['rise,', 'and', 'sank', 'back.', 'His', 'head', 'fell', 'on']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on sofa
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on cushions.
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on It
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on was
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on then
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'sofa', 'cushions.', 'It', 'was', 'then']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on o'clock.
// DEBUG: 78
// DEBUG: ['twenty-five minutes past one']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- The Moonstone']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "He made a last effort; he tried to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "rise, and sank back. His head fell on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the sofa cushions. It was then", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "twenty-five minutes past one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- The Moonstone", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:26 for 1 quotations:
    case 86:
      Serial.println(F("Only one option for 01:26:"));
    Serial.println(F("01:26 - When I reached the stop and got off, it was already one twenty-six A.M. by the bus's own clock. I had been gone over ten hours. - Tanith Lee, The Silver Metal Lover"));
// DEBUG: (5, 5)
// DEBUG: Operating on When
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on I
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on reached
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on the
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on stop
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on and
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on got
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on off,
// DEBUG: ['When', 'I', 'reached', 'the', 'stop', 'and', 'got']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on was
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on already
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['off,', 'it', 'was', 'already']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on by
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on bus's
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on own
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on clock.
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on I
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on had
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on been
// DEBUG: ['TIMESTRING', 'by', 'the', "bus's", 'own', 'clock.', 'I', 'had']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on gone
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on over
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on ten
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on hours.
// DEBUG: 138
// DEBUG: ['one twenty-six A.M.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- The Silver Metal Lover']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "When I reached the stop and got", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "off, it was already", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING by the bus's own clock. I had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "one twenty-six A.M.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Silver Metal Lover", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:27 for 1 quotations:
    case 87:
      Serial.println(F("Only one option for 01:27:"));
    Serial.println(F("01:27 - At twenty-seven minutes past one she felt as if she was levitating out of her body. - Deon Meyer, Trackers"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on she
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on felt
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on as
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on if
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on she
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on was
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on levitating
// DEBUG: ['TIMESTRING', 'she', 'felt', 'as', 'if', 'she', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on out
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on of
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on her
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on body.
// DEBUG: 116
// DEBUG: ['twenty-seven minutes past one']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Deon Meyer, Trackers']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING she felt as if she was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "twenty-seven minutes past one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Deon Meyer, Trackers", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:28 for 1 quotations:
    case 88:
      Serial.println(F("Only one option for 01:28:"));
    Serial.println(F("01:28 - It was 1:12 am when Father arrived at the police station. I did not see him until 1:28 am but I knew he was there because I could hear him. He was shouting, 'I want to see my son,' and 'Why the hell is he locked up?' and, 'Of course I'm bloody angry.' - Mark Haddon, The Curious Incident Of The Dog In The Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on 1:12
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on am
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on when
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on Father
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on arrived
// DEBUG: ['It', 'was', '1:12', 'am', 'when', 'Father']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on police
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on station.
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on I
// DEBUG: 163
// DEBUG: (158, 17)
// DEBUG: Operating on did
// DEBUG: 185
// DEBUG: (180, 17)
// DEBUG: Operating on not
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on see
// DEBUG: ['arrived', 'at', 'the', 'police', 'station.', 'I', 'did', 'not']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on him
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on until
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on but
// DEBUG: ['see', 'him', 'until', 'TIMESTRING']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on I
// DEBUG: 22
// DEBUG: (17, 41)
// DEBUG: Operating on knew
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on he
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on was
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on there
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on because
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on I
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on could
// DEBUG: ['but', 'I', 'knew', 'he', 'was', 'there', 'because', 'I']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on hear
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on him.
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on He
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on was
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on shouting,
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on 'I
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on want
// DEBUG: ['could', 'hear', 'him.', 'He', 'was', 'shouting,', "'I"]
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 65)
// DEBUG: Operating on see
// DEBUG: 52
// DEBUG: (47, 65)
// DEBUG: Operating on my
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on son,'
// DEBUG: 103
// DEBUG: (98, 65)
// DEBUG: Operating on and
// DEBUG: 125
// DEBUG: (120, 65)
// DEBUG: Operating on 'Why
// DEBUG: 154
// DEBUG: (149, 65)
// DEBUG: Operating on the
// DEBUG: 176
// DEBUG: (171, 65)
// DEBUG: Operating on hell
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on is
// DEBUG: ['want', 'to', 'see', 'my', "son,'", 'and', "'Why", 'the', 'hell']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on he
// DEBUG: 28
// DEBUG: (23, 77)
// DEBUG: Operating on locked
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on up?'
// DEBUG: 100
// DEBUG: (95, 77)
// DEBUG: Operating on and,
// DEBUG: 129
// DEBUG: (124, 77)
// DEBUG: Operating on 'Of
// DEBUG: 151
// DEBUG: (146, 77)
// DEBUG: Operating on course
// DEBUG: 194
// DEBUG: (189, 77)
// DEBUG: Operating on I'm
// DEBUG: ['is', 'he', 'locked', "up?'", 'and,', "'Of", 'course']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on bloody
// DEBUG: 57
// DEBUG: (52, 89)
// DEBUG: Operating on angry.'
// DEBUG: 107
// DEBUG: ['1:28 am']
// DEBUG: drawing cursor (67, 29)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "It was 1:12 am when Father", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "arrived at the police station. I did not", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "see him until TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "but I knew he was there because I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "could hear him. He was shouting, 'I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "want to see my son,' and 'Why the hell", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "is he locked up?' and, 'Of course", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(67, 29, "1:28 am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:29 for 1 quotations:
    case 89:
      Serial.println(F("Only one option for 01:29:"));
    Serial.println(F("01:29 - He exited the men's room at one-twenty-nine A.M. - William Edmund Butterworth, The Narc"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on exited
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on men's
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on room
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on at
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['He', 'exited', 'the', "men's", 'room', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['one-twenty-nine A.M.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Narc']
// DEBUG: drawing cursor (137, 192)
    paint.Paint_DrawString_EN(5, 5, "He exited the men's room at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "one-twenty-nine A.M.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(137, 192, "- The Narc", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:30 for 4 quotations:
    case 90:
      option = random(0, 4);
      Serial.print(F("4 options for 01:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("01:30 - Half-past one, The street lamp sputtered, The street lamp muttered, The street lamp said, \"Regard that woman ...\" - TS Eliot, Rhapsody on a Windy Night "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 180
// DEBUG: (175, 5)
// DEBUG: Operating on The
// DEBUG: 202
// DEBUG: (197, 5)
// DEBUG: Operating on street
// DEBUG: ['TIMESTRING,', 'The']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on lamp
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on sputtered,
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on The
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on street
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on lamp
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on muttered,
// DEBUG: ['street', 'lamp', 'sputtered,', 'The', 'street', 'lamp']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on The
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on street
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on lamp
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on said,
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on \"Regard
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on that
// DEBUG: ['muttered,', 'The', 'street', 'lamp', 'said,', '\\"Regard']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on woman
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on ...\"
// DEBUG: 87
// DEBUG: ['Half-past one']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Rhapsody on a Windy Night']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING, The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "street lamp sputtered, The street lamp", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "muttered, The street lamp said, \"Regard", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "Half-past one", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Rhapsody on a Windy Night", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("01:30 - Around 1:30 A.M. the door opened and I thought it was Karla, but it was Bug, saying Karla and Laura had gone out for a stag night after they ran out of paint. - Douglas Coupland, Microserfs "));
// DEBUG: (5, 5)
// DEBUG: Operating on Around
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on the
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on door
// DEBUG: ['Around', 'TIMESTRING', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on opened
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on and
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on I
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on thought
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on it
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on was
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on Karla,
// DEBUG: ['door', 'opened', 'and', 'I', 'thought', 'it', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on but
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on it
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on was
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on Bug,
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on saying
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on Karla
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on and
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on Laura
// DEBUG: ['Karla,', 'but', 'it', 'was', 'Bug,', 'saying', 'Karla', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on had
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on gone
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on out
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on for
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on a
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on stag
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on night
// DEBUG: 184
// DEBUG: (179, 41)
// DEBUG: Operating on after
// DEBUG: ['Laura', 'had', 'gone', 'out', 'for', 'a', 'stag', 'night']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on they
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on ran
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on out
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on of
// DEBUG: 104
// DEBUG: (99, 53)
// DEBUG: Operating on paint.
// DEBUG: 147
// DEBUG: ['1:30 A.M.']
// DEBUG: drawing cursor (48, 5)
// DEBUG: ['- Microserfs']
// DEBUG: drawing cursor (123, 192)
          paint.Paint_DrawString_EN(5, 5, "Around TIMESTRING the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "door opened and I thought it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Karla, but it was Bug, saying Karla and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Laura had gone out for a stag night", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(48, 5, "1:30 A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(123, 192, "- Microserfs", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("01:30 - The late hour helped. It simplified things. It categorized the population. Innocent bystanders were mostly home in bed. I walked for half an hour, but nothing happened. Until one thirty in the morning. Until I looped around to 22nd and Broadway. - Lee Child, Gone Tomorrow "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on late
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on hour
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on helped.
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on It
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on simplified
// DEBUG: ['The', 'late', 'hour', 'helped.', 'It']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on things.
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on It
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on categorized
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on the
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on population.
// DEBUG: ['simplified', 'things.', 'It', 'categorized', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on Innocent
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on bystanders
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on were
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on mostly
// DEBUG: ['population.', 'Innocent', 'bystanders', 'were']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on home
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on in
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on bed.
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on I
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on walked
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on for
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on half
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on an
// DEBUG: 207
// DEBUG: (202, 41)
// DEBUG: Operating on hour,
// DEBUG: ['mostly', 'home', 'in', 'bed.', 'I', 'walked', 'for', 'half', 'an']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on but
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on nothing
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on happened.
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on Until
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['hour,', 'but', 'nothing', 'happened.', 'Until']
// DEBUG: drawing cursor (5, 53)
// DEBUG: 151
// DEBUG: (146, 65)
// DEBUG: Operating on in
// DEBUG: 166
// DEBUG: (161, 65)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 65)
// DEBUG: Operating on morning.
// DEBUG: ['TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on Until
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on I
// DEBUG: 63
// DEBUG: (58, 77)
// DEBUG: Operating on looped
// DEBUG: 106
// DEBUG: (101, 77)
// DEBUG: Operating on around
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on to
// DEBUG: 164
// DEBUG: (159, 77)
// DEBUG: Operating on 22nd
// DEBUG: 193
// DEBUG: (188, 77)
// DEBUG: Operating on and
// DEBUG: ['morning.', 'Until', 'I', 'looped', 'around', 'to', '22nd']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on Broadway.
// DEBUG: 78
// DEBUG: ['one thirty']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- Lee Child, Gone Tomorrow ']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "The late hour helped. It", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "simplified things. It categorized the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "population. Innocent bystanders were", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "mostly home in bed. I walked for half an", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "hour, but nothing happened. Until", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "morning. Until I looped around to 22nd", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "one thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Lee Child, Gone Tomorrow ", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("01:30 - The radio alarm clock glowed 1:30 a.m. Bad karaoke throbbed through walls. I was wide awake, straightjacketed by my sweaty sheets. A headache dug its thumbs into my temples. My gut pulsed with gamma interference: I lurched to the toilet. - David Mitchell, Ghostwritten "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on radio
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on alarm
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on clock
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on glowed
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'radio', 'alarm', 'clock', 'glowed']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on Bad
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on karaoke
// DEBUG: ['TIMESTRING', 'Bad']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on throbbed
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on through
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on walls.
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on I
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on was
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on wide
// DEBUG: ['karaoke', 'throbbed', 'through', 'walls.', 'I', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on awake,
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on straightjacketed
// DEBUG: 171
// DEBUG: (166, 41)
// DEBUG: Operating on by
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on my
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on sweaty
// DEBUG: ['wide', 'awake,', 'straightjacketed', 'by', 'my']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on sheets.
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on A
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on headache
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on dug
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on its
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on thumbs
// DEBUG: ['sweaty', 'sheets.', 'A', 'headache', 'dug', 'its']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on into
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on my
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on temples.
// DEBUG: 118
// DEBUG: (113, 65)
// DEBUG: Operating on My
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on gut
// DEBUG: 155
// DEBUG: (150, 65)
// DEBUG: Operating on pulsed
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on with
// DEBUG: ['thumbs', 'into', 'my', 'temples.', 'My', 'gut', 'pulsed']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on gamma
// DEBUG: 51
// DEBUG: (46, 77)
// DEBUG: Operating on interference:
// DEBUG: 143
// DEBUG: (138, 77)
// DEBUG: Operating on I
// DEBUG: 151
// DEBUG: (146, 77)
// DEBUG: Operating on lurched
// DEBUG: 201
// DEBUG: (196, 77)
// DEBUG: Operating on to
// DEBUG: ['with', 'gamma', 'interference:', 'I', 'lurched']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 89)
// DEBUG: Operating on toilet.
// DEBUG: 85
// DEBUG: ['1:30 a.m.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Ghostwritten']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "The radio alarm clock glowed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING Bad", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "karaoke throbbed through walls. I was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "wide awake, straightjacketed by my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "sweaty sheets. A headache dug its", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "thumbs into my temples. My gut pulsed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "with gamma interference: I lurched", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "1:30 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Ghostwritten", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 01:31 for 0 quotations:
    case 91:
      Serial.println(F("No quotes for 01:31"));
      return;

    // Codegen for 01:32 for 1 quotations:
    case 92:
      Serial.println(F("Only one option for 01:32:"));
    Serial.println(F("01:32 - She grinned at him with malicious playfulness, showing great square teeth, and then ran for the stairs. One-thirty-two. She thought that she heard a whistle blown and took the last three steps in one stride. - Graham Greene, Stamboul Train"));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on grinned
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on at
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on him
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on with
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on malicious
// DEBUG: ['She', 'grinned', 'at', 'him', 'with']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on playfulness,
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on showing
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on great
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on square
// DEBUG: ['malicious', 'playfulness,', 'showing', 'great']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on teeth,
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on and
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on then
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on ran
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on for
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on the
// DEBUG: 177
// DEBUG: (172, 29)
// DEBUG: Operating on stairs.
// DEBUG: ['square', 'teeth,', 'and', 'then', 'ran', 'for', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on She
// DEBUG: ['stairs.', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on thought
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on that
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on she
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on heard
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on a
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on whistle
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on blown
// DEBUG: ['She', 'thought', 'that', 'she', 'heard', 'a', 'whistle']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on took
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on the
// DEBUG: 89
// DEBUG: (84, 65)
// DEBUG: Operating on last
// DEBUG: 118
// DEBUG: (113, 65)
// DEBUG: Operating on three
// DEBUG: 154
// DEBUG: (149, 65)
// DEBUG: Operating on steps
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on in
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on one
// DEBUG: ['blown', 'and', 'took', 'the', 'last', 'three', 'steps', 'in']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on stride.
// DEBUG: 64
// DEBUG: ['One-thirty-two']
// DEBUG: drawing cursor (13, 41)
// DEBUG: ['- Stamboul Train']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "She grinned at him with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "malicious playfulness, showing great", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "square teeth, and then ran for the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "stairs. TIMESTRING.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "She thought that she heard a whistle", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "blown and took the last three steps in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(13, 41, "One-thirty-two", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Stamboul Train", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:33 for 1 quotations:
    case 93:
      Serial.println(F("Only one option for 01:33:"));
    Serial.println(F("01:33 - He looked at his watch. One-thirty-three a.m. He had been asleep on this bench for over an hour and a half. - Kat Fox, Skeletons"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on looked
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on at
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on his
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on watch.
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['He', 'looked', 'at', 'his', 'watch.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on He
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on had
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on been
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on asleep
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on on
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on this
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on bench
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on for
// DEBUG: ['TIMESTRING', 'He', 'had', 'been', 'asleep', 'on', 'this', 'bench']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on over
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on an
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on hour
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on and
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on a
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on half.
// DEBUG: 153
// DEBUG: ['One-thirty-three a.m.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Kat Fox, Skeletons']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "He looked at his watch.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING He had been asleep on this bench", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "One-thirty-three a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Kat Fox, Skeletons", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:34 for 0 quotations:
    case 94:
      Serial.println(F("No quotes for 01:34"));
      return;

    // Codegen for 01:35 for 0 quotations:
    case 95:
      Serial.println(F("No quotes for 01:35"));
      return;

    // Codegen for 01:36 for 0 quotations:
    case 96:
      Serial.println(F("No quotes for 01:36"));
      return;

    // Codegen for 01:37 for 0 quotations:
    case 97:
      Serial.println(F("No quotes for 01:37"));
      return;

    // Codegen for 01:38 for 1 quotations:
    case 98:
      Serial.println(F("Only one option for 01:38:"));
    Serial.println(F("01:38 - At one-thirty-eight am suspect left the Drive-In and drove to seven hundred and twenty three North Walnut, to the rear of the residence, and parked the car. - William Edmund Butterworth, The Narc"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 209
// DEBUG: (204, 5)
// DEBUG: Operating on am
// DEBUG: ['At', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on suspect
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on left
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on the
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on Drive-In
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on and
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on drove
// DEBUG: ['am', 'suspect', 'left', 'the', 'Drive-In', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 29)
// DEBUG: Operating on seven
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on hundred
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on and
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on twenty
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on three
// DEBUG: ['drove', 'to', 'seven', 'hundred', 'and', 'twenty']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on North
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on Walnut,
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on to
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on the
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on rear
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on of
// DEBUG: 183
// DEBUG: (178, 41)
// DEBUG: Operating on the
// DEBUG: 205
// DEBUG: (200, 41)
// DEBUG: Operating on residence,
// DEBUG: ['three', 'North', 'Walnut,', 'to', 'the', 'rear', 'of', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on parked
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on car.
// DEBUG: 137
// DEBUG: ['one-thirty-eight']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Narc']
// DEBUG: drawing cursor (137, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "am suspect left the Drive-In and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "drove to seven hundred and twenty", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "three North Walnut, to the rear of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "one-thirty-eight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(137, 192, "- The Narc", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:39 for 0 quotations:
    case 99:
      Serial.println(F("No quotes for 01:39"));
      return;

    // Codegen for 01:40 for 1 quotations:
    case 100:
      Serial.println(F("Only one option for 01:40:"));
    Serial.println(F("01:40 - March twelfth, one-forty am, she leaves a group of drinking buddies to catch a bus home. She never makes it. - Kathy Reichs, Bones to Ashes"));
// DEBUG: (5, 5)
// DEBUG: Operating on March
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on twelfth,
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['March', 'twelfth,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on she
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on leaves
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on a
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on group
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on of
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on drinking
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on buddies
// DEBUG: ['TIMESTRING,', 'she', 'leaves', 'a', 'group', 'of', 'drinking']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on catch
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on a
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on bus
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on home.
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on She
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on never
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on makes
// DEBUG: ['buddies', 'to', 'catch', 'a', 'bus', 'home.', 'She', 'never']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on it.
// DEBUG: 38
// DEBUG: ['one-forty am']
// DEBUG: drawing cursor (98, 5)
// DEBUG: ['- Bones to Ashes']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "March twelfth,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING, she leaves a group of drinking", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "buddies to catch a bus home. She never", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(98, 5, "one-forty am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Bones to Ashes", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:41 for 0 quotations:
    case 101:
      Serial.println(F("No quotes for 01:41"));
      return;

    // Codegen for 01:42 for 0 quotations:
    case 102:
      Serial.println(F("No quotes for 01:42"));
      return;

    // Codegen for 01:43 for 0 quotations:
    case 103:
      Serial.println(F("No quotes for 01:43"));
      return;

    // Codegen for 01:44 for 1 quotations:
    case 104:
      Serial.println(F("Only one option for 01:44:"));
    Serial.println(F("01:44 - She knew it was the stress, two long days of stress, and she looked at her watch, sixteen minutes to two, and she almost leaped with fright, a shock wave rippling through her body, where had the time gone? - Deon Meyer, Trackers"));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on knew
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on it
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on was
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on the
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on stress,
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on two
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on long
// DEBUG: ['She', 'knew', 'it', 'was', 'the', 'stress,', 'two']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on days
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on of
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on stress,
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on and
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on she
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on looked
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on at
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on her
// DEBUG: ['long', 'days', 'of', 'stress,', 'and', 'she', 'looked', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on watch,
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['her', 'watch,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on she
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on almost
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on leaped
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on with
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on fright,
// DEBUG: ['TIMESTRING,', 'and', 'she', 'almost', 'leaped', 'with']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on a
// DEBUG: 26
// DEBUG: (21, 65)
// DEBUG: Operating on shock
// DEBUG: 62
// DEBUG: (57, 65)
// DEBUG: Operating on wave
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on rippling
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on through
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on her
// DEBUG: ['fright,', 'a', 'shock', 'wave', 'rippling', 'through']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on body,
// DEBUG: 50
// DEBUG: (45, 77)
// DEBUG: Operating on where
// DEBUG: 86
// DEBUG: (81, 77)
// DEBUG: Operating on had
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 77)
// DEBUG: Operating on time
// DEBUG: 159
// DEBUG: (154, 77)
// DEBUG: Operating on gone?
// DEBUG: 195
// DEBUG: ['sixteen minutes to two']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Deon Meyer, Trackers']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "She knew it was the stress, two", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "long days of stress, and she looked at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "her watch,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING, and she almost leaped with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "fright, a shock wave rippling through", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "sixteen minutes to two", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Deon Meyer, Trackers", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:45 for 0 quotations:
    case 105:
      Serial.println(F("No quotes for 01:45"));
      return;

    // Codegen for 01:46 for 1 quotations:
    case 106:
      Serial.println(F("Only one option for 01:46:"));
    Serial.println(F("01:46 - That particular phenomenom got Presto up at one forty-six a.m.; silently, he painted his face and naked body with camouflage paint. He opened the door to his room and stepped out into the common lobby. - J.W. Stockton, Fardnock's Revenge"));
// DEBUG: (5, 5)
// DEBUG: Operating on That
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on particular
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on phenomenom
// DEBUG: 181
// DEBUG: (176, 5)
// DEBUG: Operating on got
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on Presto
// DEBUG: ['That', 'particular', 'phenomenom', 'got']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on up
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on at
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: ['Presto', 'up', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on silently,
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on he
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on painted
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on his
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on face
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on and
// DEBUG: ['TIMESTRING;', 'silently,', 'he', 'painted', 'his', 'face']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on naked
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on body
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on with
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on camouflage
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on paint.
// DEBUG: ['and', 'naked', 'body', 'with', 'camouflage']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on He
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on opened
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 53)
// DEBUG: Operating on door
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on to
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on his
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on room
// DEBUG: 192
// DEBUG: (187, 53)
// DEBUG: Operating on and
// DEBUG: ['paint.', 'He', 'opened', 'the', 'door', 'to', 'his', 'room']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on stepped
// DEBUG: 64
// DEBUG: (59, 65)
// DEBUG: Operating on out
// DEBUG: 86
// DEBUG: (81, 65)
// DEBUG: Operating on into
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on the
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on common
// DEBUG: 180
// DEBUG: (175, 65)
// DEBUG: Operating on lobby.
// DEBUG: ['and', 'stepped', 'out', 'into', 'the', 'common']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['one forty-six a.m.']
// DEBUG: drawing cursor (42, 17)
// DEBUG: ["- Fardnock's Revenge"]
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "That particular phenomenom got", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Presto up at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING; silently, he painted his face", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "and naked body with camouflage", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "paint. He opened the door to his room", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "and stepped out into the common", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 17, "one forty-six a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Fardnock's Revenge", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:47 for 0 quotations:
    case 107:
      Serial.println(F("No quotes for 01:47"));
      return;

    // Codegen for 01:48 for 0 quotations:
    case 108:
      Serial.println(F("No quotes for 01:48"));
      return;

    // Codegen for 01:49 for 0 quotations:
    case 109:
      Serial.println(F("No quotes for 01:49"));
      return;

    // Codegen for 01:50 for 1 quotations:
    case 110:
      Serial.println(F("Only one option for 01:50:"));
    Serial.println(F("01:50 - No, she thought: every spinster legal secretary, bartender, and orthodontist had a cat or two—and she could not tolerate (not even as a lark, not even for a moment at ten minutes before two AM), embodying cliché. - Michelle Herman, Dog"));
// DEBUG: (5, 5)
// DEBUG: Operating on No,
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on she
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on thought:
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on every
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on spinster
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on legal
// DEBUG: ['No,', 'she', 'thought:', 'every', 'spinster']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on secretary,
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on bartender,
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on and
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on orthodontist
// DEBUG: ['legal', 'secretary,', 'bartender,', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (18, 29)
// DEBUG: Operating on had
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on a
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on cat
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on or
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on two—and
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on she
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on could
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on not
// DEBUG: ['orthodontist', 'had', 'a', 'cat', 'or', 'two—and', 'she', 'could']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on tolerate
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on (not
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on even
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on as
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on a
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on lark,
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on not
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on even
// DEBUG: ['not', 'tolerate', '(not', 'even', 'as', 'a', 'lark,', 'not']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on for
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on a
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on moment
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on at
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on TIMESTRING),
// DEBUG: Wrorking on the timestring
// DEBUG: ['even', 'for', 'a', 'moment', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: []
// DEBUG: drawing cursor (5, 65)
// DEBUG: (18, 77)
// DEBUG: Operating on embodying
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on cliché.
// DEBUG: 137
// DEBUG: ['ten minutes before two AM']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- Michelle Herman, Dog']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "No, she thought: every spinster", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "legal secretary, bartender, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "orthodontist had a cat or two—and she could", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "not tolerate (not even as a lark, not", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "even for a moment at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "ten minutes before two AM", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Michelle Herman, Dog", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:51 for 1 quotations:
    case 111:
      Serial.println(F("Only one option for 01:51:"));
    Serial.println(F("01:51 - At nine minutes to two the other vehicle arrived. At first Milla didn't believe her eyes: that shape, those markings. - Deon Meyer, Trackers"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on the
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on other
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on vehicle
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on arrived.
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on At
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on first
// DEBUG: ['TIMESTRING', 'the', 'other', 'vehicle', 'arrived.', 'At']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on Milla
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on didn't
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on believe
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on her
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on eyes:
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on that
// DEBUG: ['first', 'Milla', "didn't", 'believe', 'her', 'eyes:']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on shape,
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on those
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on markings.
// DEBUG: 158
// DEBUG: ['nine minutes to two']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Deon Meyer, Trackers']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING the other vehicle arrived. At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "first Milla didn't believe her eyes:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "nine minutes to two", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Deon Meyer, Trackers", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:52 for 0 quotations:
    case 112:
      Serial.println(F("No quotes for 01:52"));
      return;

    // Codegen for 01:53 for 0 quotations:
    case 113:
      Serial.println(F("No quotes for 01:53"));
      return;

    // Codegen for 01:54 for 1 quotations:
    case 114:
      Serial.println(F("Only one option for 01:54:"));
    Serial.println(F("01:54 - Six minutes to two. Janina Mentz watched the screen, where the small program window flickered with files scrolling too fast to read, searching for the keyword. - Dean Koontz, Trackers"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on Janina
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on Mentz
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on watched
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on the
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on screen,
// DEBUG: ['TIMESTRING.', 'Janina', 'Mentz', 'watched', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on where
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on the
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on small
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on program
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on window
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on flickered
// DEBUG: ['screen,', 'where', 'the', 'small', 'program', 'window']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on with
// DEBUG: 49
// DEBUG: (44, 41)
// DEBUG: Operating on files
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on scrolling
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on too
// DEBUG: 171
// DEBUG: (166, 41)
// DEBUG: Operating on fast
// DEBUG: 200
// DEBUG: (195, 41)
// DEBUG: Operating on to
// DEBUG: ['flickered', 'with', 'files', 'scrolling', 'too', 'fast']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on read,
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on searching
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on for
// DEBUG: 135
// DEBUG: (130, 53)
// DEBUG: Operating on the
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on keyword.
// DEBUG: ['to', 'read,', 'searching', 'for', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['Six minutes to two']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Dean Koontz, Trackers']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. Janina Mentz watched the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "screen, where the small program window", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "flickered with files scrolling too fast", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "to read, searching for the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "Six minutes to two", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- Dean Koontz, Trackers", &Font12, WHITE, BLACK);
      return;

    // Codegen for 01:55 for 0 quotations:
    case 115:
      Serial.println(F("No quotes for 01:55"));
      return;

    // Codegen for 01:56 for 0 quotations:
    case 116:
      Serial.println(F("No quotes for 01:56"));
      return;

    // Codegen for 01:57 for 0 quotations:
    case 117:
      Serial.println(F("No quotes for 01:57"));
      return;

    // Codegen for 01:58 for 0 quotations:
    case 118:
      Serial.println(F("No quotes for 01:58"));
      return;

    // Codegen for 01:59 for 0 quotations:
    case 119:
      Serial.println(F("No quotes for 01:59"));
      return;

    // Codegen for 02:00 for 6 quotations:
    case 120:
      option = random(0, 6);
      Serial.print(F("6 options for 02:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:00 - The middle of the night? Alec asked sharply. \"Can you be more definite?\" \"About two. Just past.\" Daisy noted that he expressed no concern for her safety. - Carola Dunn, Dead in the water "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on middle
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on of
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on the
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on night?
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on Alec
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on asked
// DEBUG: ['The', 'middle', 'of', 'the', 'night?', 'Alec']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on sharply.
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on \"Can
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on you
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on be
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on more
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on definite?\"
// DEBUG: ['asked', 'sharply.', '\\"Can', 'you', 'be', 'more']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on \"TIMESTRING.\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['definite?\\"']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (21, 41)
// DEBUG: Operating on Daisy
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on noted
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on that
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on he
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on expressed
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on no
// DEBUG: ['\\"TIMESTRING.\\"', 'Daisy', 'noted', 'that', 'he', 'expressed']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on concern
// DEBUG: 63
// DEBUG: (58, 53)
// DEBUG: Operating on for
// DEBUG: 85
// DEBUG: (80, 53)
// DEBUG: Operating on her
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on safety.
// DEBUG: 157
// DEBUG: ['About two. Just past']
// DEBUG: drawing cursor (17, 29)
// DEBUG: ['- Dead in the water']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "The middle of the night? Alec", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "asked sharply. \"Can you be more", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "definite?\"", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "\"TIMESTRING.\" Daisy noted that he expressed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(17, 29, "About two. Just past", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Dead in the water", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:00 - As two o'clock pealed from the cathedral bell, Jean Valjean awoke. - Victor Hugo, Les Miserables"));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on pealed
// DEBUG: ['As', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on from
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on cathedral
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on bell,
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on Jean
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on Valjean
// DEBUG: ['pealed', 'from', 'the', 'cathedral', 'bell,', 'Jean']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on awoke.
// DEBUG: 61
// DEBUG: ["two o'clock"]
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Victor Hugo, Les Miserables']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "As TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "pealed from the cathedral bell, Jean", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "two o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Victor Hugo, Les Miserables", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("02:00 - Get on plane at 2 A.M., amid bundles, chickens, gypsies, sit opposite pair of plump fortune tellers who groan and (very discreetly) throw up all the way to Tbilisi. - J. Updike, Bech: A Book"));
// DEBUG: (5, 5)
// DEBUG: Operating on Get
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on on
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on plane
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on at
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Get', 'on', 'plane', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on amid
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on bundles,
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on chickens,
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on gypsies,
// DEBUG: ['TIMESTRING,', 'amid', 'bundles,', 'chickens,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on sit
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on opposite
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on pair
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on of
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on plump
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on fortune
// DEBUG: ['gypsies,', 'sit', 'opposite', 'pair', 'of', 'plump']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on tellers
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on who
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on groan
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on and
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on (very
// DEBUG: 184
// DEBUG: (179, 41)
// DEBUG: Operating on discreetly)
// DEBUG: ['fortune', 'tellers', 'who', 'groan', 'and', '(very']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on throw
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on up
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on all
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on the
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on way
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on to
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on Tbilisi.
// DEBUG: 211
// DEBUG: ['2 A.M.']
// DEBUG: drawing cursor (93, 5)
// DEBUG: ['- J. Updike, Bech: A Book']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "Get on plane at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, amid bundles, chickens,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "gypsies, sit opposite pair of plump", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "fortune tellers who groan and (very", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(93, 5, "2 A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- J. Updike, Bech: A Book", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("02:00 - Lady Macbeth: Out, damned spot! out, I say!—One: two: why, then, 'tis time to do't.—Hell is murky!—Fie, my lord, fie! a soldier, and afeard? What need we fear who knows it, when none can call our power to account?—Yet who would have thought the old man to have had so much blood in him. - Shakespeare, Macbeth"));
// DEBUG: (5, 5)
// DEBUG: Operating on Lady
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on Macbeth:
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on Out,
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on damned
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on spot!
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on out,
// DEBUG: ['Lady', 'Macbeth:', 'Out,', 'damned', 'spot!']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on I
// DEBUG: 23
// DEBUG: (18, 17)
// DEBUG: Operating on say!—One:
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on TIMESTRING:
// DEBUG: Wrorking on the timestring
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on why,
// DEBUG: ['out,', 'I', 'say!—One:', 'TIMESTRING:']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on then,
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on 'tis
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on time
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on to
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on do't.—Hell
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on is
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on murky!—Fie,
// DEBUG: ['why,', 'then,', "'tis", 'time', 'to', "do't.—Hell", 'is']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on my
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on lord,
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on fie!
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on a
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on soldier,
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on and
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on afeard?
// DEBUG: ['murky!—Fie,', 'my', 'lord,', 'fie!', 'a', 'soldier,', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on What
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on need
// DEBUG: 76
// DEBUG: (71, 53)
// DEBUG: Operating on we
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on fear
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on who
// DEBUG: 142
// DEBUG: (137, 53)
// DEBUG: Operating on knows
// DEBUG: 178
// DEBUG: (173, 53)
// DEBUG: Operating on it,
// DEBUG: 200
// DEBUG: (195, 53)
// DEBUG: Operating on when
// DEBUG: ['afeard?', 'What', 'need', 'we', 'fear', 'who', 'knows', 'it,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on none
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on can
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on call
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on our
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on power
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on to
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on account?—Yet
// DEBUG: ['when', 'none', 'can', 'call', 'our', 'power', 'to']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (18, 77)
// DEBUG: Operating on who
// DEBUG: 45
// DEBUG: (40, 77)
// DEBUG: Operating on would
// DEBUG: 81
// DEBUG: (76, 77)
// DEBUG: Operating on have
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on thought
// DEBUG: 160
// DEBUG: (155, 77)
// DEBUG: Operating on the
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on old
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on man
// DEBUG: ['account?—Yet', 'who', 'would', 'have', 'thought', 'the', 'old']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on to
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on have
// DEBUG: 58
// DEBUG: (53, 89)
// DEBUG: Operating on had
// DEBUG: 80
// DEBUG: (75, 89)
// DEBUG: Operating on so
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on much
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on blood
// DEBUG: 160
// DEBUG: (155, 89)
// DEBUG: Operating on in
// DEBUG: 175
// DEBUG: (170, 89)
// DEBUG: Operating on him.
// DEBUG: 204
// DEBUG: ['two']
// DEBUG: drawing cursor (82, 17)
// DEBUG: ['- Shakespeare, Macbeth']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "Lady Macbeth: Out, damned spot!", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "out, I say!—One: TIMESTRING:", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "why, then, 'tis time to do't.—Hell is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "murky!—Fie, my lord, fie! a soldier, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "afeard? What need we fear who knows it,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "when none can call our power to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "account?—Yet who would have thought the old", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(82, 17, "two", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Shakespeare, Macbeth", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("02:00 - Somewhere behind a screen a clock began wheezing, as though oppressed by something, as though someone were strangling it. After an unnaturally prolonged wheezing there followed a shrill, nasty, and as it were unexpectedly rapid, chime - as though someone were suddenly jumping forward. It struck two. I woke up, though I had indeed not been asleep but lying half-conscious. - Fyodor Dostoyevsky, Notes from the underground "));
// DEBUG: (5, 5)
// DEBUG: Operating on Somewhere
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on behind
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on a
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on screen
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on a
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on clock
// DEBUG: ['Somewhere', 'behind', 'a', 'screen', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on began
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on wheezing,
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on as
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on though
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on oppressed
// DEBUG: ['clock', 'began', 'wheezing,', 'as', 'though']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on by
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on something,
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on as
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on though
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on someone
// DEBUG: ['oppressed', 'by', 'something,', 'as', 'though']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on were
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on strangling
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on it.
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on After
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on an
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on unnaturally
// DEBUG: ['someone', 'were', 'strangling', 'it.', 'After', 'an']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on prolonged
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on wheezing
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on there
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on followed
// DEBUG: ['unnaturally', 'prolonged', 'wheezing', 'there']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on a
// DEBUG: 27
// DEBUG: (22, 65)
// DEBUG: Operating on shrill,
// DEBUG: 77
// DEBUG: (72, 65)
// DEBUG: Operating on nasty,
// DEBUG: 120
// DEBUG: (115, 65)
// DEBUG: Operating on and
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on as
// DEBUG: 157
// DEBUG: (152, 65)
// DEBUG: Operating on it
// DEBUG: 172
// DEBUG: (167, 65)
// DEBUG: Operating on were
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on unexpectedly
// DEBUG: ['followed', 'a', 'shrill,', 'nasty,', 'and', 'as', 'it', 'were']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (18, 77)
// DEBUG: Operating on rapid,
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on chime
// DEBUG: 102
// DEBUG: (97, 77)
// DEBUG: Operating on -
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on as
// DEBUG: 125
// DEBUG: (120, 77)
// DEBUG: Operating on though
// DEBUG: 168
// DEBUG: (163, 77)
// DEBUG: Operating on someone
// DEBUG: ['unexpectedly', 'rapid,', 'chime', '-', 'as', 'though']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on were
// DEBUG: 47
// DEBUG: (42, 89)
// DEBUG: Operating on suddenly
// DEBUG: 104
// DEBUG: (99, 89)
// DEBUG: Operating on jumping
// DEBUG: 154
// DEBUG: (149, 89)
// DEBUG: Operating on forward.
// DEBUG: 211
// DEBUG: (206, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['someone', 'were', 'suddenly', 'jumping', 'forward.']
// DEBUG: drawing cursor (5, 89)
// DEBUG: 179
// DEBUG: (174, 101)
// DEBUG: Operating on I
// DEBUG: 187
// DEBUG: (182, 101)
// DEBUG: Operating on woke
// DEBUG: ['TIMESTRING', 'I']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on up,
// DEBUG: 37
// DEBUG: (32, 113)
// DEBUG: Operating on though
// DEBUG: 80
// DEBUG: (75, 113)
// DEBUG: Operating on I
// DEBUG: 88
// DEBUG: (83, 113)
// DEBUG: Operating on had
// DEBUG: 110
// DEBUG: (105, 113)
// DEBUG: Operating on indeed
// DEBUG: 153
// DEBUG: (148, 113)
// DEBUG: Operating on not
// DEBUG: 175
// DEBUG: (170, 113)
// DEBUG: Operating on been
// DEBUG: 204
// DEBUG: (199, 113)
// DEBUG: Operating on asleep
// DEBUG: ['woke', 'up,', 'though', 'I', 'had', 'indeed', 'not', 'been']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (12, 125)
// DEBUG: Operating on but
// DEBUG: 39
// DEBUG: (34, 125)
// DEBUG: Operating on lying
// DEBUG: 75
// DEBUG: (70, 125)
// DEBUG: Operating on half-conscious.
// DEBUG: 181
// DEBUG: ['It struck two.']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- Notes from the underground']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "Somewhere behind a screen a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "clock began wheezing, as though", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "oppressed by something, as though", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "someone were strangling it. After an", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "unnaturally prolonged wheezing there", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "followed a shrill, nasty, and as it were", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "unexpectedly rapid, chime - as though", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "someone were suddenly jumping forward.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "TIMESTRING I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "woke up, though I had indeed not been", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "It struck two.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Notes from the underground", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("02:00 - When all had grown quiet and Fyodor Pavlovich went to bed at around two o'clock, Ivan Fyodorovich also went to bed with the firm resolve of falling quickly asleep, as he felt horribly exhausted. - Fyodor Dostoyevsky, The Brothers Karamazov "));
// DEBUG: (5, 5)
// DEBUG: Operating on When
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on all
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on had
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on grown
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on quiet
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on and
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on Fyodor
// DEBUG: ['When', 'all', 'had', 'grown', 'quiet', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on Pavlovich
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on went
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on to
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on bed
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on at
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on around
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Fyodor', 'Pavlovich', 'went', 'to', 'bed', 'at', 'around']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on Ivan
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on Fyodorovich
// DEBUG: ['TIMESTRING,', 'Ivan']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on also
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on went
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on to
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on bed
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on with
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on the
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on firm
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on resolve
// DEBUG: ['Fyodorovich', 'also', 'went', 'to', 'bed', 'with', 'the', 'firm']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on falling
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on quickly
// DEBUG: 133
// DEBUG: (128, 53)
// DEBUG: Operating on asleep,
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on as
// DEBUG: 198
// DEBUG: (193, 53)
// DEBUG: Operating on he
// DEBUG: ['resolve', 'of', 'falling', 'quickly', 'asleep,', 'as']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on felt
// DEBUG: 42
// DEBUG: (37, 65)
// DEBUG: Operating on horribly
// DEBUG: 99
// DEBUG: (94, 65)
// DEBUG: Operating on exhausted.
// DEBUG: 170
// DEBUG: ["two o'clock"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- The Brothers Karamazov']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "When all had grown quiet and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Fyodor Pavlovich went to bed at around", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, Ivan", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Fyodorovich also went to bed with the firm", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "resolve of falling quickly asleep, as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "two o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Brothers Karamazov", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:01 for 1 quotations:
    case 121:
      Serial.println(F("Only one option for 02:01:"));
    Serial.println(F("02:01 - I checked my watch. 2.01am. The cheeseburger Happy Meal was now only a distant memory. I cursed myself for not also ordering a breakfast sandwich for the morning. - Reif Larsen, The Selected Works of T.S. Spivet"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on checked
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on my
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on watch.
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['I', 'checked', 'my', 'watch.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on The
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on cheeseburger
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on Happy
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on Meal
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on was
// DEBUG: ['TIMESTRING', 'The', 'cheeseburger', 'Happy', 'Meal']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on now
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on only
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on a
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on distant
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on memory.
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on I
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on cursed
// DEBUG: ['was', 'now', 'only', 'a', 'distant', 'memory.', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on myself
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on for
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on not
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on also
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on ordering
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on a
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on breakfast
// DEBUG: ['cursed', 'myself', 'for', 'not', 'also', 'ordering', 'a']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on sandwich
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on for
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on the
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on morning.
// DEBUG: 178
// DEBUG: ['2.01am.']
// DEBUG: drawing cursor (121, 5)
// DEBUG: ['- Reif Larsen']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "I checked my watch.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING The cheeseburger Happy Meal", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "was now only a distant memory. I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "cursed myself for not also ordering a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(121, 5, "2.01am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Reif Larsen", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:02 for 1 quotations:
    case 122:
      Serial.println(F("Only one option for 02:02:"));
    Serial.println(F("02:02 - Wake up. \"Having the worst dream.\" \"I should certainly say you were.\" \"It was awful. It just went on and on.\" \"I shook you and shook you and.\" \"Time is it.\" \"It's nearly - almost 2:04.\" - David Foster Wallace, Oblivion"));
// DEBUG: (5, 5)
// DEBUG: Operating on Wake
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on up.
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on \"Having
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on worst
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on dream.\"
// DEBUG: ['Wake', 'up.', '\\"Having', 'the', 'worst']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on \"I
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on should
// DEBUG: 84
// DEBUG: (79, 17)
// DEBUG: Operating on certainly
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on say
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on you
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on were.\"
// DEBUG: ['dream.\\"', '\\"I', 'should', 'certainly', 'say', 'you']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on \"It
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on was
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on awful.
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on It
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on just
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on went
// DEBUG: 185
// DEBUG: (180, 29)
// DEBUG: Operating on on
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on and
// DEBUG: ['were.\\"', '\\"It', 'was', 'awful.', 'It', 'just', 'went', 'on']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on on.\"
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on \"I
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on shook
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on you
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on and
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on shook
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on you
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on and.\"
// DEBUG: ['and', 'on.\\"', '\\"I', 'shook', 'you', 'and', 'shook', 'you']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on \"Time
// DEBUG: 60
// DEBUG: (55, 53)
// DEBUG: Operating on is
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on it.\"
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on \"It's
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on nearly
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on -
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on TIMESTRING.\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['and.\\"', '\\"Time', 'is', 'it.\\"', '\\"It\'s', 'nearly', '-']
// DEBUG: drawing cursor (5, 53)
// DEBUG: 179
// DEBUG: ['almost 2:04']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- Oblivion']
// DEBUG: drawing cursor (137, 192)
    paint.Paint_DrawString_EN(5, 5, "Wake up. \"Having the worst", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "dream.\" \"I should certainly say you", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "were.\" \"It was awful. It just went on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "and on.\" \"I shook you and shook you", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "and.\" \"Time is it.\" \"It's nearly -", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "almost 2:04", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(137, 192, "- Oblivion", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:03 for 0 quotations:
    case 123:
      Serial.println(F("No quotes for 02:03"));
      return;

    // Codegen for 02:04 for 0 quotations:
    case 124:
      Serial.println(F("No quotes for 02:04"));
      return;

    // Codegen for 02:05 for 2 quotations:
    case 125:
      option = random(0, 2);
      Serial.print(F("2 options for 02:05. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:05 - At 2.05 the fizzy tights came crackling off. - Martin Amis, London Fields"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on fizzy
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on tights
// DEBUG: ['At', 'TIMESTRING', 'the', 'fizzy']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on came
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on crackling
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on off.
// DEBUG: 139
// DEBUG: ['2.05']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Martin Amis, London Fields']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING the fizzy", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "2.05", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Martin Amis, London Fields", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:05 - Then he began ringing the bell. In about ten minutes his valet appeared, half dressed, and looking very drowsy. ‘I am sorry to have had to wake you up, Francis,’ he said, stepping in; ‘but I had forgotten my latch-key. What time is it?’ ‘Five minutes past two, sir,’ answered the man, looking at the clock and yawning. ‘Five minutes past two? How horribly late! You must wake me at nine to-morrow. I have some work to do.’ - Oscar Wilde, The Picture of Dorian Gray "));
// DEBUG: (5, 5)
// DEBUG: Operating on Then
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on he
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on began
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on ringing
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on the
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on bell.
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on In
// DEBUG: ['Then', 'he', 'began', 'ringing', 'the', 'bell.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on about
// DEBUG: 49
// DEBUG: (44, 17)
// DEBUG: Operating on ten
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on minutes
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on his
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on valet
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on appeared,
// DEBUG: ['In', 'about', 'ten', 'minutes', 'his', 'valet']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on half
// DEBUG: 49
// DEBUG: (44, 29)
// DEBUG: Operating on dressed,
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on and
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on looking
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on very
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on drowsy.
// DEBUG: ['appeared,', 'half', 'dressed,', 'and', 'looking', 'very']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on ‘I
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on am
// DEBUG: 48
// DEBUG: (43, 41)
// DEBUG: Operating on sorry
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on to
// DEBUG: 99
// DEBUG: (94, 41)
// DEBUG: Operating on have
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on had
// DEBUG: 150
// DEBUG: (145, 41)
// DEBUG: Operating on to
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on wake
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on you
// DEBUG: ['drowsy.', '‘I', 'am', 'sorry', 'to', 'have', 'had', 'to', 'wake']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on up,
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on Francis,’
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on he
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on said,
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on stepping
// DEBUG: 208
// DEBUG: (203, 53)
// DEBUG: Operating on in;
// DEBUG: ['you', 'up,', 'Francis,’', 'he', 'said,', 'stepping']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on ‘but
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on I
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on had
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on forgotten
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on my
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on latch-key.
// DEBUG: ['in;', '‘but', 'I', 'had', 'forgotten', 'my']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on What
// DEBUG: 50
// DEBUG: (45, 77)
// DEBUG: Operating on time
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on is
// DEBUG: 94
// DEBUG: (89, 77)
// DEBUG: Operating on it?’
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on ‘TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['latch-key.', 'What', 'time', 'is', 'it?’']
// DEBUG: drawing cursor (5, 77)
// DEBUG: []
// DEBUG: drawing cursor (5, 89)
// DEBUG: (18, 101)
// DEBUG: Operating on sir,’
// DEBUG: 59
// DEBUG: (54, 101)
// DEBUG: Operating on answered
// DEBUG: 116
// DEBUG: (111, 101)
// DEBUG: Operating on the
// DEBUG: 138
// DEBUG: (133, 101)
// DEBUG: Operating on man,
// DEBUG: 167
// DEBUG: (162, 101)
// DEBUG: Operating on looking
// DEBUG: ['‘TIMESTRING,', 'sir,’', 'answered', 'the', 'man,']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (13, 113)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 113)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 113)
// DEBUG: Operating on clock
// DEBUG: 91
// DEBUG: (86, 113)
// DEBUG: Operating on and
// DEBUG: 113
// DEBUG: (108, 113)
// DEBUG: Operating on yawning.
// DEBUG: 170
// DEBUG: (165, 113)
// DEBUG: Operating on ‘TIMESTRING?
// DEBUG: Wrorking on the timestring
// DEBUG: ['looking', 'at', 'the', 'clock', 'and', 'yawning.']
// DEBUG: drawing cursor (5, 113)
// DEBUG: []
// DEBUG: drawing cursor (5, 125)
// DEBUG: (18, 137)
// DEBUG: Operating on How
// DEBUG: 45
// DEBUG: (40, 137)
// DEBUG: Operating on horribly
// DEBUG: 102
// DEBUG: (97, 137)
// DEBUG: Operating on late!
// DEBUG: 138
// DEBUG: (133, 137)
// DEBUG: Operating on You
// DEBUG: 160
// DEBUG: (155, 137)
// DEBUG: Operating on must
// DEBUG: 189
// DEBUG: (184, 137)
// DEBUG: Operating on wake
// DEBUG: ['‘TIMESTRING?', 'How', 'horribly', 'late!', 'You', 'must']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (10, 149)
// DEBUG: Operating on me
// DEBUG: 30
// DEBUG: (25, 149)
// DEBUG: Operating on at
// DEBUG: 45
// DEBUG: (40, 149)
// DEBUG: Operating on nine
// DEBUG: 74
// DEBUG: (69, 149)
// DEBUG: Operating on to-morrow.
// DEBUG: 145
// DEBUG: (140, 149)
// DEBUG: Operating on I
// DEBUG: 153
// DEBUG: (148, 149)
// DEBUG: Operating on have
// DEBUG: 182
// DEBUG: (177, 149)
// DEBUG: Operating on some
// DEBUG: 211
// DEBUG: (206, 149)
// DEBUG: Operating on work
// DEBUG: ['wake', 'me', 'at', 'nine', 'to-morrow.', 'I', 'have', 'some']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (10, 161)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 161)
// DEBUG: Operating on do.’
// DEBUG: 59
// DEBUG: ['Five minutes past two']
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['- The Picture of Dorian Gray']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "Then he began ringing the bell.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "In about ten minutes his valet", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "appeared, half dressed, and looking very", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "drowsy. ‘I am sorry to have had to wake", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "you up, Francis,’ he said, stepping", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "in; ‘but I had forgotten my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "latch-key. What time is it?’", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "‘TIMESTRING, sir,’ answered the man,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "looking at the clock and yawning.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "‘TIMESTRING? How horribly late! You must", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "wake me at nine to-morrow. I have some", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "Five minutes past two", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- The Picture of Dorian Gray", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:06 for 0 quotations:
    case 126:
      Serial.println(F("No quotes for 02:06"));
      return;

    // Codegen for 02:07 for 3 quotations:
    case 127:
      option = random(0, 3);
      Serial.print(F("3 options for 02:07. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:07 - At 2:07 a.m. I decided that I wanted a drink of orange squash before I brushed my teeth and got into bed, so I went downstairs to the kitchen. Father was sitting on the sofa watching snooker on the television and drinking whisky. There were tears coming out of his eyes. - Mark Haddon, The Curious Incident of the Dog in the Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on I
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on decided
// DEBUG: ['At', 'TIMESTRING', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on that
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on I
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on wanted
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on a
// DEBUG: 106
// DEBUG: (101, 17)
// DEBUG: Operating on drink
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on of
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on orange
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on squash
// DEBUG: ['decided', 'that', 'I', 'wanted', 'a', 'drink', 'of', 'orange']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on before
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on I
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on brushed
// DEBUG: 118
// DEBUG: (113, 29)
// DEBUG: Operating on my
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on teeth
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on and
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on got
// DEBUG: ['squash', 'before', 'I', 'brushed', 'my', 'teeth', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on into
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on bed,
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on so
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on I
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on went
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on downstairs
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on to
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on the
// DEBUG: ['got', 'into', 'bed,', 'so', 'I', 'went', 'downstairs', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on kitchen.
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on Father
// DEBUG: 114
// DEBUG: (109, 53)
// DEBUG: Operating on was
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on sitting
// DEBUG: 186
// DEBUG: (181, 53)
// DEBUG: Operating on on
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on the
// DEBUG: ['the', 'kitchen.', 'Father', 'was', 'sitting', 'on']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on sofa
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on watching
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on snooker
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on on
// DEBUG: 165
// DEBUG: (160, 65)
// DEBUG: Operating on the
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on television
// DEBUG: ['the', 'sofa', 'watching', 'snooker', 'on', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 77)
// DEBUG: Operating on drinking
// DEBUG: 100
// DEBUG: (95, 77)
// DEBUG: Operating on whisky.
// DEBUG: 150
// DEBUG: (145, 77)
// DEBUG: Operating on There
// DEBUG: 186
// DEBUG: (181, 77)
// DEBUG: Operating on were
// DEBUG: ['television', 'and', 'drinking', 'whisky.', 'There']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on tears
// DEBUG: 51
// DEBUG: (46, 89)
// DEBUG: Operating on coming
// DEBUG: 94
// DEBUG: (89, 89)
// DEBUG: Operating on out
// DEBUG: 116
// DEBUG: (111, 89)
// DEBUG: Operating on of
// DEBUG: 131
// DEBUG: (126, 89)
// DEBUG: Operating on his
// DEBUG: 153
// DEBUG: (148, 89)
// DEBUG: Operating on eyes.
// DEBUG: 189
// DEBUG: ['2:07 a.m.']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "decided that I wanted a drink of orange", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "squash before I brushed my teeth and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "got into bed, so I went downstairs to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "the kitchen. Father was sitting on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "the sofa watching snooker on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "television and drinking whisky. There", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "2:07 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:07 - But I couldn't sleep. And I got out of bed at 2.07 am and I felt scared of Mr. Shears so I went downstairs and out of the front door into Chapter Road. - Mark Haddon, The Curious Incident of the Dog in the Night-time "));
// DEBUG: (5, 5)
// DEBUG: Operating on But
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on I
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on couldn't
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on sleep.
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on And
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on I
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on got
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on out
// DEBUG: ['But', 'I', "couldn't", 'sleep.', 'And', 'I', 'got']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on of
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on bed
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on at
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on and
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on I
// DEBUG: ['out', 'of', 'bed', 'at', 'TIMESTRING', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (7, 29)
// DEBUG: Operating on felt
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on scared
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on of
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on Mr.
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on Shears
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on so
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on I
// DEBUG: 187
// DEBUG: (182, 29)
// DEBUG: Operating on went
// DEBUG: ['I', 'felt', 'scared', 'of', 'Mr.', 'Shears', 'so', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on downstairs
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on and
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on out
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on of
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on front
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on door
// DEBUG: ['went', 'downstairs', 'and', 'out', 'of', 'the', 'front']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on into
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on Chapter
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on Road.
// DEBUG: 130
// DEBUG: ['2.07 am']
// DEBUG: drawing cursor (61, 17)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "But I couldn't sleep. And I got", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "out of bed at TIMESTRING and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "I felt scared of Mr. Shears so I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "went downstairs and out of the front", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(61, 17, "2.07 am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("02:07 - Saturday, 17 November — 2.07 a.m. I cannot sleep. Ben is upstairs, back in bed, and I am writing this in the kitchen. He thinks I am drinking a cup of cocoa that he has just made for me. He thinks I will come back to bed soon. I will, but first I must write again. - S. J. Watson, Before I Go to Sleep "));
// DEBUG: (5, 5)
// DEBUG: Operating on Saturday,
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on 17
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on November
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on —
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Saturday,', '17', 'November', '—']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on I
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on cannot
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on sleep.
// DEBUG: ['TIMESTRING', 'I', 'cannot']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on Ben
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on is
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on upstairs,
// DEBUG: 118
// DEBUG: (113, 29)
// DEBUG: Operating on back
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on in
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on bed,
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on and
// DEBUG: ['sleep.', 'Ben', 'is', 'upstairs,', 'back', 'in', 'bed,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on I
// DEBUG: 22
// DEBUG: (17, 41)
// DEBUG: Operating on am
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on writing
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on this
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on in
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on the
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on kitchen.
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on He
// DEBUG: ['and', 'I', 'am', 'writing', 'this', 'in', 'the', 'kitchen.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on thinks
// DEBUG: 56
// DEBUG: (51, 53)
// DEBUG: Operating on I
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on am
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on drinking
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on a
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on cup
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on of
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on cocoa
// DEBUG: ['He', 'thinks', 'I', 'am', 'drinking', 'a', 'cup', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 65)
// DEBUG: Operating on he
// DEBUG: 60
// DEBUG: (55, 65)
// DEBUG: Operating on has
// DEBUG: 82
// DEBUG: (77, 65)
// DEBUG: Operating on just
// DEBUG: 111
// DEBUG: (106, 65)
// DEBUG: Operating on made
// DEBUG: 140
// DEBUG: (135, 65)
// DEBUG: Operating on for
// DEBUG: 162
// DEBUG: (157, 65)
// DEBUG: Operating on me.
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on He
// DEBUG: 199
// DEBUG: (194, 65)
// DEBUG: Operating on thinks
// DEBUG: ['cocoa', 'that', 'he', 'has', 'just', 'made', 'for', 'me.', 'He']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 77)
// DEBUG: Operating on will
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on come
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on back
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on to
// DEBUG: 127
// DEBUG: (122, 77)
// DEBUG: Operating on bed
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on soon.
// DEBUG: 185
// DEBUG: (180, 77)
// DEBUG: Operating on I
// DEBUG: 193
// DEBUG: (188, 77)
// DEBUG: Operating on will,
// DEBUG: ['thinks', 'I', 'will', 'come', 'back', 'to', 'bed', 'soon.', 'I']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on but
// DEBUG: 38
// DEBUG: (33, 89)
// DEBUG: Operating on first
// DEBUG: 74
// DEBUG: (69, 89)
// DEBUG: Operating on I
// DEBUG: 82
// DEBUG: (77, 89)
// DEBUG: Operating on must
// DEBUG: 111
// DEBUG: (106, 89)
// DEBUG: Operating on write
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on again.
// DEBUG: 190
// DEBUG: ['2.07 a.m.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Before I Go to Sleep']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "Saturday, 17 November —", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING I cannot", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "sleep. Ben is upstairs, back in bed,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "and I am writing this in the kitchen.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "He thinks I am drinking a cup of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "cocoa that he has just made for me. He", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "thinks I will come back to bed soon. I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "2.07 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Before I Go to Sleep", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:08 for 0 quotations:
    case 128:
      Serial.println(F("No quotes for 02:08"));
      return;

    // Codegen for 02:09 for 0 quotations:
    case 129:
      Serial.println(F("No quotes for 02:09"));
      return;

    // Codegen for 02:10 for 2 quotations:
    case 130:
      option = random(0, 2);
      Serial.print(F("2 options for 02:10. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:10 - Ten minutes past two, sir, answered the man, looking at the clock and blinking. \"Ten minutes past two? How horribly late!\" - Oscar Wilde, The Picture of Dorian Gray "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on sir,
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on answered
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on man,
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on looking
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on at
// DEBUG: ['TIMESTRING,', 'sir,', 'answered', 'the', 'man,', 'looking']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on clock
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on and
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on blinking.
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on \"TIMESTRING?
// DEBUG: Wrorking on the timestring
// DEBUG: ['at', 'the', 'clock', 'and', 'blinking.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (19, 53)
// DEBUG: Operating on How
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on horribly
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on late!\"
// DEBUG: 153
// DEBUG: ['Ten minutes past two']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- The Picture of Dorian Gray']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, sir, answered the man, looking", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "at the clock and blinking.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Ten minutes past two", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- The Picture of Dorian Gray", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:10 - Decided to get under way again as soon as there is any clearance. Snowing and blowing, force about fifty or sixty miles an hour. February 26, Saturday - Richards went out 1:10am and found it clearing a bit, so we got under way as soon as possible, which was 2:10am - Ernest Shackleton, South: The Endurance Expedition"));
// DEBUG: (5, 5)
// DEBUG: Operating on Decided
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on to
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on get
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on under
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on way
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on again
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on as
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on soon
// DEBUG: ['Decided', 'to', 'get', 'under', 'way', 'again', 'as']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on as
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on there
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on is
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on any
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on clearance.
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on Snowing
// DEBUG: ['soon', 'as', 'there', 'is', 'any', 'clearance.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on blowing,
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on force
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on about
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on fifty
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on or
// DEBUG: ['Snowing', 'and', 'blowing,', 'force', 'about', 'fifty']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on sixty
// DEBUG: 49
// DEBUG: (44, 41)
// DEBUG: Operating on miles
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on an
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on hour.
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on February
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on 26,
// DEBUG: ['or', 'sixty', 'miles', 'an', 'hour.', 'February']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on Saturday
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on -
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on Richards
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on went
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on out
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on 1:10am
// DEBUG: ['26,', 'Saturday', '-', 'Richards', 'went', 'out']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 65)
// DEBUG: Operating on found
// DEBUG: 75
// DEBUG: (70, 65)
// DEBUG: Operating on it
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on clearing
// DEBUG: 147
// DEBUG: (142, 65)
// DEBUG: Operating on a
// DEBUG: 155
// DEBUG: (150, 65)
// DEBUG: Operating on bit,
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on so
// DEBUG: 199
// DEBUG: (194, 65)
// DEBUG: Operating on we
// DEBUG: ['1:10am', 'and', 'found', 'it', 'clearing', 'a', 'bit,', 'so']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on got
// DEBUG: 35
// DEBUG: (30, 77)
// DEBUG: Operating on under
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on way
// DEBUG: 93
// DEBUG: (88, 77)
// DEBUG: Operating on as
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on soon
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on as
// DEBUG: 152
// DEBUG: (147, 77)
// DEBUG: Operating on possible,
// DEBUG: ['we', 'got', 'under', 'way', 'as', 'soon', 'as']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on which
// DEBUG: 56
// DEBUG: (51, 89)
// DEBUG: Operating on was
// DEBUG: 78
// DEBUG: (73, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 192
// DEBUG: ['2:10am']
// DEBUG: drawing cursor (73, 89)
// DEBUG: ['- Ernest Shackleton']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "Decided to get under way again as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "soon as there is any clearance.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Snowing and blowing, force about fifty", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "or sixty miles an hour. February", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "26, Saturday - Richards went out", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "1:10am and found it clearing a bit, so", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "we got under way as soon as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(73, 89, "2:10am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Ernest Shackleton", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:11 for 0 quotations:
    case 131:
      Serial.println(F("No quotes for 02:11"));
      return;

    // Codegen for 02:12 for 1 quotations:
    case 132:
      Serial.println(F("Only one option for 02:12:"));
    Serial.println(F("02:12 - Then the lights went out all over the city. It happened at 2.12am according to power-house records, but Blake's diary gives no indication of the time. The entry is merely, 'Lights out - God help me.' - HP Lovecraft, The Haunter of the Dark"));
// DEBUG: (5, 5)
// DEBUG: Operating on Then
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on lights
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on went
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on out
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on all
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on over
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on the
// DEBUG: ['Then', 'the', 'lights', 'went', 'out', 'all', 'over']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on city.
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on It
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on happened
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on at
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'city.', 'It', 'happened', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on according
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on to
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on power-house
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on records,
// DEBUG: ['TIMESTRING', 'according', 'to', 'power-house']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on but
// DEBUG: 41
// DEBUG: (36, 41)
// DEBUG: Operating on Blake's
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on diary
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on gives
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on no
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on indication
// DEBUG: ['records,', 'but', "Blake's", 'diary', 'gives', 'no']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on of
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on time.
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on The
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on entry
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on is
// DEBUG: 167
// DEBUG: (162, 53)
// DEBUG: Operating on merely,
// DEBUG: ['indication', 'of', 'the', 'time.', 'The', 'entry', 'is']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on 'Lights
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on out
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on -
// DEBUG: 98
// DEBUG: (93, 65)
// DEBUG: Operating on God
// DEBUG: 120
// DEBUG: (115, 65)
// DEBUG: Operating on help
// DEBUG: 149
// DEBUG: (144, 65)
// DEBUG: Operating on me.'
// DEBUG: 178
// DEBUG: ['2.12am']
// DEBUG: drawing cursor (132, 17)
// DEBUG: ['- The Haunter of the Dark']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "Then the lights went out all over", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "the city. It happened at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING according to power-house", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "records, but Blake's diary gives no", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "indication of the time. The entry is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(132, 17, "2.12am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- The Haunter of the Dark", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:13 for 1 quotations:
    case 133:
      Serial.println(F("Only one option for 02:13:"));
    Serial.println(F("02:13 - Now, listen: your destination is Friday, 4 August 1944, and the window will punch through at 22.30 hours. You're going to a dimension that diverged from our own at 02.13 on the morning of Wednesday 20 February 1918, over twenty-six years earlier. You don't know what it's going to be like... - Chris James, The Second Internet Cafe, Part 1: The Dimension Researcher"));
// DEBUG: (5, 5)
// DEBUG: Operating on Now,
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on listen:
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on your
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on destination
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on is
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on Friday,
// DEBUG: ['Now,', 'listen:', 'your', 'destination', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on 4
// DEBUG: 26
// DEBUG: (21, 17)
// DEBUG: Operating on August
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on 1944,
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on and
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on the
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on window
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on will
// DEBUG: ['Friday,', '4', 'August', '1944,', 'and', 'the', 'window']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on punch
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on through
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on at
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on 22.30
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on hours.
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on You're
// DEBUG: ['will', 'punch', 'through', 'at', '22.30', 'hours.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on going
// DEBUG: 53
// DEBUG: (48, 41)
// DEBUG: Operating on to
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on a
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on dimension
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on that
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on diverged
// DEBUG: ["You're", 'going', 'to', 'a', 'dimension', 'that']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on from
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on our
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on own
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on at
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['diverged', 'from', 'our', 'own', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on on
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on morning
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on of
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on Wednesday
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on 20
// DEBUG: 202
// DEBUG: (197, 65)
// DEBUG: Operating on February
// DEBUG: ['TIMESTRING', 'on', 'the', 'morning', 'of', 'Wednesday', '20']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on 1918,
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on over
// DEBUG: 84
// DEBUG: (79, 77)
// DEBUG: Operating on twenty-six
// DEBUG: 155
// DEBUG: (150, 77)
// DEBUG: Operating on years
// DEBUG: 191
// DEBUG: (186, 77)
// DEBUG: Operating on earlier.
// DEBUG: ['February', '1918,', 'over', 'twenty-six', 'years']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (14, 89)
// DEBUG: Operating on You
// DEBUG: 41
// DEBUG: (36, 89)
// DEBUG: Operating on don't
// DEBUG: 77
// DEBUG: (72, 89)
// DEBUG: Operating on know
// DEBUG: 106
// DEBUG: (101, 89)
// DEBUG: Operating on what
// DEBUG: 135
// DEBUG: (130, 89)
// DEBUG: Operating on it's
// DEBUG: 164
// DEBUG: (159, 89)
// DEBUG: Operating on going
// DEBUG: 200
// DEBUG: (195, 89)
// DEBUG: Operating on to
// DEBUG: ['earlier.', 'You', "don't", 'know', 'what', "it's", 'going']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on be
// DEBUG: 28
// DEBUG: (23, 101)
// DEBUG: Operating on like...
// DEBUG: 78
// DEBUG: ['02.13']
// DEBUG: drawing cursor (102, 53)
// DEBUG: ['- Chris James']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "Now, listen: your destination is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Friday, 4 August 1944, and the window", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "will punch through at 22.30 hours.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "You're going to a dimension that", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "diverged from our own at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING on the morning of Wednesday 20", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "February 1918, over twenty-six years", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "earlier. You don't know what it's going", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(102, 53, "02.13", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Chris James", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:14 for 0 quotations:
    case 134:
      Serial.println(F("No quotes for 02:14"));
      return;

    // Codegen for 02:15 for 2 quotations:
    case 135:
      option = random(0, 2);
      Serial.print(F("2 options for 02:15. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:15 - At 2.15am a policeman observed the place in darkness, but with the stranger's motor still at the curb. - H.P. Lovecraft, The Shadow Out of Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on a
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on policeman
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on observed
// DEBUG: ['At', 'TIMESTRING', 'a', 'policeman']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on place
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on in
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on darkness,
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on but
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on with
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on the
// DEBUG: ['observed', 'the', 'place', 'in', 'darkness,', 'but', 'with']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on stranger's
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on motor
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on still
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on at
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on the
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on curb.
// DEBUG: ['the', "stranger's", 'motor', 'still', 'at', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['2.15am']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Shadow Out of Time']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING a policeman", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "observed the place in darkness, but with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the stranger's motor still at the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "2.15am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Shadow Out of Time", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:15 - It did. When the alarm rang at two fifteen, Lew shut it off, snapped on the little bedside lamp, then swung his feet to the floor to sit on the edge of the bed, holding his eyes open. - Jack Finney, The Night People "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on did.
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on When
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on alarm
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on rang
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on at
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'did.', 'When', 'the', 'alarm', 'rang', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on Lew
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on shut
// DEBUG: ['TIMESTRING,', 'Lew']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on off,
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on snapped
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on on
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on little
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on bedside
// DEBUG: ['shut', 'it', 'off,', 'snapped', 'on', 'the', 'little']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on lamp,
// DEBUG: 54
// DEBUG: (49, 41)
// DEBUG: Operating on then
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on swung
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on his
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on feet
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on to
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on the
// DEBUG: 207
// DEBUG: (202, 41)
// DEBUG: Operating on floor
// DEBUG: ['bedside', 'lamp,', 'then', 'swung', 'his', 'feet', 'to', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on sit
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on on
// DEBUG: 68
// DEBUG: (63, 53)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on edge
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on of
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on the
// DEBUG: 156
// DEBUG: (151, 53)
// DEBUG: Operating on bed,
// DEBUG: 185
// DEBUG: (180, 53)
// DEBUG: Operating on holding
// DEBUG: ['floor', 'to', 'sit', 'on', 'the', 'edge', 'of', 'the', 'bed,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on his
// DEBUG: 40
// DEBUG: (35, 65)
// DEBUG: Operating on eyes
// DEBUG: 69
// DEBUG: (64, 65)
// DEBUG: Operating on open.
// DEBUG: 105
// DEBUG: ['two fifteen']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Night People']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "It did. When the alarm rang at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, Lew", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "shut it off, snapped on the little", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "bedside lamp, then swung his feet to the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "floor to sit on the edge of the bed,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "two fifteen", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Night People", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:16 for 0 quotations:
    case 136:
      Serial.println(F("No quotes for 02:16"));
      return;

    // Codegen for 02:17 for 2 quotations:
    case 137:
      option = random(0, 2);
      Serial.print(F("2 options for 02:17. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:17 - What time is it now? He turned her very dusty alarm clock to check. \"Two-seventeen,\" he marveled. It was the strangest time he'd seen in his entire life. \"I apologize that the room is so messy,\" Lalitha said. \"I like it. I love how you are. Are you hungry? I'm a little hungry.\" \"No, Walter.\" She smiled. \"I'm not hungry. But I can get you something.\" \"I was thinking, like, a glass of soy milk. Soy beverage.\" - Jonathan Franzen, Freedom "));
// DEBUG: (5, 5)
// DEBUG: Operating on What
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on time
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on is
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on it
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on now?
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on He
// DEBUG: 142
// DEBUG: (137, 5)
// DEBUG: Operating on turned
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on her
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on very
// DEBUG: ['What', 'time', 'is', 'it', 'now?', 'He', 'turned', 'her']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on dusty
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on alarm
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on clock
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on to
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on check.
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on \"TIMESTRING,\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['very', 'dusty', 'alarm', 'clock', 'to', 'check.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on he
// DEBUG: ['\\"TIMESTRING,\\"']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on marveled.
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on It
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on was
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on the
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on strangest
// DEBUG: 200
// DEBUG: (195, 41)
// DEBUG: Operating on time
// DEBUG: ['he', 'marveled.', 'It', 'was', 'the', 'strangest']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on he'd
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on seen
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on in
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on his
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on entire
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on life.
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on \"I
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on apologize
// DEBUG: ['time', "he'd", 'seen', 'in', 'his', 'entire', 'life.', '\\"I']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on that
// DEBUG: 49
// DEBUG: (44, 65)
// DEBUG: Operating on the
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on room
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on is
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on so
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on messy,\"
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on Lalitha
// DEBUG: ['apologize', 'that', 'the', 'room', 'is', 'so', 'messy,\\"']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on said.
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on \"I
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on like
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on it.
// DEBUG: 127
// DEBUG: (122, 77)
// DEBUG: Operating on I
// DEBUG: 135
// DEBUG: (130, 77)
// DEBUG: Operating on love
// DEBUG: 164
// DEBUG: (159, 77)
// DEBUG: Operating on how
// DEBUG: 186
// DEBUG: (181, 77)
// DEBUG: Operating on you
// DEBUG: 208
// DEBUG: (203, 77)
// DEBUG: Operating on are.
// DEBUG: ['Lalitha', 'said.', '\\"I', 'like', 'it.', 'I', 'love', 'how', 'you']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on Are
// DEBUG: 37
// DEBUG: (32, 89)
// DEBUG: Operating on you
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on hungry?
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on I'm
// DEBUG: 131
// DEBUG: (126, 89)
// DEBUG: Operating on a
// DEBUG: 139
// DEBUG: (134, 89)
// DEBUG: Operating on little
// DEBUG: 182
// DEBUG: (177, 89)
// DEBUG: Operating on hungry.\"
// DEBUG: ['are.', 'Are', 'you', 'hungry?', "I'm", 'a', 'little']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (15, 101)
// DEBUG: Operating on \"No,
// DEBUG: 56
// DEBUG: (51, 101)
// DEBUG: Operating on Walter.\"
// DEBUG: 120
// DEBUG: (115, 101)
// DEBUG: Operating on She
// DEBUG: 142
// DEBUG: (137, 101)
// DEBUG: Operating on smiled.
// DEBUG: 192
// DEBUG: (187, 101)
// DEBUG: Operating on \"I'm
// DEBUG: ['hungry.\\"', '\\"No,', 'Walter.\\"', 'She', 'smiled.']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on not
// DEBUG: 38
// DEBUG: (33, 113)
// DEBUG: Operating on hungry.
// DEBUG: 88
// DEBUG: (83, 113)
// DEBUG: Operating on But
// DEBUG: 110
// DEBUG: (105, 113)
// DEBUG: Operating on I
// DEBUG: 118
// DEBUG: (113, 113)
// DEBUG: Operating on can
// DEBUG: 140
// DEBUG: (135, 113)
// DEBUG: Operating on get
// DEBUG: 162
// DEBUG: (157, 113)
// DEBUG: Operating on you
// DEBUG: 184
// DEBUG: (179, 113)
// DEBUG: Operating on something.\"
// DEBUG: ['\\"I\'m', 'not', 'hungry.', 'But', 'I', 'can', 'get', 'you']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (18, 125)
// DEBUG: Operating on \"I
// DEBUG: 45
// DEBUG: (40, 125)
// DEBUG: Operating on was
// DEBUG: 67
// DEBUG: (62, 125)
// DEBUG: Operating on thinking,
// DEBUG: 131
// DEBUG: (126, 125)
// DEBUG: Operating on like,
// DEBUG: 167
// DEBUG: (162, 125)
// DEBUG: Operating on a
// DEBUG: 175
// DEBUG: (170, 125)
// DEBUG: Operating on glass
// DEBUG: 211
// DEBUG: (206, 125)
// DEBUG: Operating on of
// DEBUG: ['something.\\"', '\\"I', 'was', 'thinking,', 'like,', 'a', 'glass']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (8, 137)
// DEBUG: Operating on soy
// DEBUG: 35
// DEBUG: (30, 137)
// DEBUG: Operating on milk.
// DEBUG: 71
// DEBUG: (66, 137)
// DEBUG: Operating on Soy
// DEBUG: 93
// DEBUG: (88, 137)
// DEBUG: Operating on beverage.\"
// DEBUG: 171
// DEBUG: ['Two-seventeen']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Jonathan Franzen, Freedom ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "What time is it now? He turned her", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "very dusty alarm clock to check.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "\"TIMESTRING,\"", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "he marveled. It was the strangest", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "time he'd seen in his entire life. \"I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "apologize that the room is so messy,\"", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "Lalitha said. \"I like it. I love how you", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "are. Are you hungry? I'm a little", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "hungry.\" \"No, Walter.\" She smiled.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "\"I'm not hungry. But I can get you", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "something.\" \"I was thinking, like, a glass", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Two-seventeen", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Jonathan Franzen, Freedom ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:17 - One of the \"choppers\" stopped, did an about-turn and came back to me. The flare spluttered and faded, and now the glare of the spotlight blinded me. I sat very still. It was 2.17. Against the noise of the blades a deeper resonant sound bit into the chill black air. - Len Deighton, The Ipcress File"));
// DEBUG: (5, 5)
// DEBUG: Operating on One
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on of
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on \"choppers\"
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on stopped,
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on did
// DEBUG: ['One', 'of', 'the', '\\"choppers\\"', 'stopped,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on an
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on about-turn
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on and
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on came
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on back
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on to
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on me.
// DEBUG: ['did', 'an', 'about-turn', 'and', 'came', 'back', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on The
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on flare
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on spluttered
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on and
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on faded,
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on and
// DEBUG: ['me.', 'The', 'flare', 'spluttered', 'and', 'faded,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on now
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on glare
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on of
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on the
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on spotlight
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on blinded
// DEBUG: ['and', 'now', 'the', 'glare', 'of', 'the', 'spotlight']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on me.
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on I
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on sat
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on very
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on still.
// DEBUG: 142
// DEBUG: (137, 53)
// DEBUG: Operating on It
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on was
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['blinded', 'me.', 'I', 'sat', 'very', 'still.', 'It', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on Against
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on noise
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on of
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 65)
// DEBUG: Operating on blades
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on a
// DEBUG: ['TIMESTRING.', 'Against', 'the', 'noise', 'of', 'the', 'blades']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (7, 77)
// DEBUG: Operating on deeper
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on resonant
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on sound
// DEBUG: 148
// DEBUG: (143, 77)
// DEBUG: Operating on bit
// DEBUG: 170
// DEBUG: (165, 77)
// DEBUG: Operating on into
// DEBUG: 199
// DEBUG: (194, 77)
// DEBUG: Operating on the
// DEBUG: ['a', 'deeper', 'resonant', 'sound', 'bit', 'into']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on chill
// DEBUG: 50
// DEBUG: (45, 89)
// DEBUG: Operating on black
// DEBUG: 86
// DEBUG: (81, 89)
// DEBUG: Operating on air.
// DEBUG: 115
// DEBUG: ['2.17']
// DEBUG: drawing cursor (174, 53)
// DEBUG: ['- The Ipcress File']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "One of the \"choppers\" stopped,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "did an about-turn and came back to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "me. The flare spluttered and faded,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "and now the glare of the spotlight", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "blinded me. I sat very still. It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING. Against the noise of the blades", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "a deeper resonant sound bit into", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(174, 53, "2.17", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Ipcress File", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:18 for 1 quotations:
    case 138:
      Serial.println(F("Only one option for 02:18:"));
    Serial.println(F("02:18 - It was 2:18 in the morning, and Donna could see no one else in any other office working so late. - Jane Smiley, Moo"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on Donna
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on could
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on see
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on no
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on one
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on else
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on in
// DEBUG: ['TIMESTRING,', 'and', 'Donna', 'could', 'see', 'no', 'one', 'else']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on any
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on other
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on office
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on working
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on so
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on late.
// DEBUG: ['in', 'any', 'other', 'office', 'working', 'so']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['2:18 in the morning']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Jane Smiley, Moo']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING, and Donna could see no one else", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "in any other office working so", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "2:18 in the morning", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- Jane Smiley, Moo", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:19 for 0 quotations:
    case 139:
      Serial.println(F("No quotes for 02:19"));
      return;

    // Codegen for 02:20 for 2 quotations:
    case 140:
      option = random(0, 2);
      Serial.print(F("2 options for 02:20. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:20 - She turned abruptly to the nurse and asked the time. 'Two-twenty' 'Ah...Two-twenty!' Genevieve repeated, as though there was something urgent to be done. - Antoine de Saint Exupery, Southern Mail"));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on turned
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on abruptly
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on to
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on nurse
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on and
// DEBUG: ['She', 'turned', 'abruptly', 'to', 'the', 'nurse']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on asked
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on the
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on time.
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on 'TIMESTRING'
// DEBUG: Wrorking on the timestring
// DEBUG: ['and', 'asked', 'the', 'time.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (18, 29)
// DEBUG: Operating on 'Ah...TIMESTRING!'
// DEBUG: Wrorking on the timestring
// DEBUG: ["'TIMESTRING'"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (24, 41)
// DEBUG: Operating on Genevieve
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on repeated,
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on as
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on though
// DEBUG: ["'Ah...TIMESTRING!'", 'Genevieve', 'repeated,', 'as']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on there
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on was
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on something
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on urgent
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on to
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on be
// DEBUG: ['though', 'there', 'was', 'something', 'urgent', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on done.
// DEBUG: 49
// DEBUG: ['Two-twenty']
// DEBUG: drawing cursor (18, 29)
// DEBUG: ['- Southern Mail']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "She turned abruptly to the nurse", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "and asked the time.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "'TIMESTRING'", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "'Ah...TIMESTRING!' Genevieve repeated, as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "though there was something urgent to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(18, 29, "Two-twenty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Southern Mail", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:20 - The night of his third walk Lew slept in his own apartment. When his eyes opened at two twenty, by the green hands of his alarm, he knew that this time he'd actually been waiting for it in his sleep. - Jack Finney, The Night People "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on night
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on of
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on his
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on third
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on walk
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on Lew
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on slept
// DEBUG: ['The', 'night', 'of', 'his', 'third', 'walk', 'Lew']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on his
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on own
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on apartment.
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on When
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on his
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on eyes
// DEBUG: ['slept', 'in', 'his', 'own', 'apartment.', 'When', 'his']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on opened
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on at
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['eyes', 'opened', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on by
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on the
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on green
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on hands
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on of
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on his
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on alarm,
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on he
// DEBUG: ['TIMESTRING,', 'by', 'the', 'green', 'hands', 'of', 'his', 'alarm,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on knew
// DEBUG: 42
// DEBUG: (37, 53)
// DEBUG: Operating on that
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on this
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on time
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on he'd
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on actually
// DEBUG: ['he', 'knew', 'that', 'this', 'time', "he'd"]
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on been
// DEBUG: 48
// DEBUG: (43, 65)
// DEBUG: Operating on waiting
// DEBUG: 98
// DEBUG: (93, 65)
// DEBUG: Operating on for
// DEBUG: 120
// DEBUG: (115, 65)
// DEBUG: Operating on it
// DEBUG: 135
// DEBUG: (130, 65)
// DEBUG: Operating on in
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on his
// DEBUG: 172
// DEBUG: (167, 65)
// DEBUG: Operating on sleep.
// DEBUG: ['actually', 'been', 'waiting', 'for', 'it', 'in', 'his']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['two twenty']
// DEBUG: drawing cursor (68, 29)
// DEBUG: ['- The Night People']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "The night of his third walk Lew", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "slept in his own apartment. When his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "eyes opened at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING, by the green hands of his alarm,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "he knew that this time he'd", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "actually been waiting for it in his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(68, 29, "two twenty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Night People", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:21 for 2 quotations:
    case 141:
      option = random(0, 2);
      Serial.print(F("2 options for 02:21. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:21 - 2:21 a.m. Lance-Corporal Hartmann emerged from the house in the Rue de Londres. - Hans Hellmut Kirst, The Night of the Generals"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on Lance-Corporal
// DEBUG: ['TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (20, 17)
// DEBUG: Operating on Hartmann
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on emerged
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on from
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on the
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on house
// DEBUG: ['Lance-Corporal', 'Hartmann', 'emerged', 'from', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 29)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on Rue
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on de
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on Londres.
// DEBUG: 147
// DEBUG: ['2:21 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Night of the Generals']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Lance-Corporal Hartmann emerged from the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "2:21 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- The Night of the Generals", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:21 - I lifted my left hand and pressed on the light of my digital wristwatch. Two-twenty-one. It was midnight when we headed underground, so only a little over two hours had passed. - Haruki Murakami, Hard Boiled Wonderland and the End of the World "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on lifted
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on my
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on left
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on hand
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on and
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on pressed
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on on
// DEBUG: ['I', 'lifted', 'my', 'left', 'hand', 'and', 'pressed']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on light
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on of
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on my
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on digital
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on wristwatch.
// DEBUG: ['on', 'the', 'light', 'of', 'my', 'digital']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on It
// DEBUG: ['wristwatch.', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on was
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on midnight
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on when
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on we
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on headed
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on underground,
// DEBUG: ['It', 'was', 'midnight', 'when', 'we', 'headed']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (18, 53)
// DEBUG: Operating on so
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on only
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on a
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on little
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on over
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on two
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on hours
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on had
// DEBUG: ['underground,', 'so', 'only', 'a', 'little', 'over', 'two', 'hours']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on passed.
// DEBUG: 64
// DEBUG: ['Two-twenty-one']
// DEBUG: drawing cursor (17, 29)
// DEBUG: ['- Haruki Murakami']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "I lifted my left hand and pressed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "on the light of my digital", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "wristwatch. TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "It was midnight when we headed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "underground, so only a little over two hours", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(17, 29, "Two-twenty-one", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Haruki Murakami", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:22 for 0 quotations:
    case 142:
      Serial.println(F("No quotes for 02:22"));
      return;

    // Codegen for 02:23 for 0 quotations:
    case 143:
      Serial.println(F("No quotes for 02:23"));
      return;

    // Codegen for 02:24 for 1 quotations:
    case 144:
      Serial.println(F("Only one option for 02:24:"));
    Serial.println(F("02:24 - It was 2.24am. She stumbled out of bed, tripping on her shoes that she’d kicked off earlier and pulled on a jumper. - Maggie O’Farrell, After You’d Gone"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on She
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on stumbled
// DEBUG: ['It', 'was', 'TIMESTRING', 'She']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on out
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on of
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on bed,
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on tripping
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on on
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on her
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on shoes
// DEBUG: ['stumbled', 'out', 'of', 'bed,', 'tripping', 'on', 'her']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on she’d
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on kicked
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on off
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on earlier
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on and
// DEBUG: ['shoes', 'that', 'she’d', 'kicked', 'off', 'earlier']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on pulled
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on on
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on a
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on jumper.
// DEBUG: 130
// DEBUG: ['2.24am.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- After You’d Gone']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING She", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "stumbled out of bed, tripping on her", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "shoes that she’d kicked off earlier", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "2.24am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- After You’d Gone", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:25 for 1 quotations:
    case 145:
      Serial.println(F("Only one option for 02:25:"));
    Serial.println(F("02:25 - You see it is time: 2.25am. You get out of bed. - David Peace, Nineteen Eighty-Three: The Red Riding Quartet, Book Four"));
// DEBUG: (5, 5)
// DEBUG: Operating on You
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on see
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on it
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on is
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on time:
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['You', 'see', 'it', 'is', 'time:']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on You
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on get
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on out
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on of
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on bed.
// DEBUG: 131
// DEBUG: ['2.25am.']
// DEBUG: drawing cursor (115, 5)
// DEBUG: ['- David Peace']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "You see it is time:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(115, 5, "2.25am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- David Peace", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:26 for 1 quotations:
    case 146:
      Serial.println(F("Only one option for 02:26:"));
    Serial.println(F("02:26 - Listened to a voicemail message left at 2.26am by Claude. - Richard Mason, The Lighted Rooms"));
// DEBUG: (5, 5)
// DEBUG: Operating on Listened
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on to
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on a
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on voicemail
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on message
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on left
// DEBUG: ['Listened', 'to', 'a', 'voicemail', 'message']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on at
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on by
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on Claude.
// DEBUG: 209
// DEBUG: ['2.26am']
// DEBUG: drawing cursor (25, 17)
// DEBUG: ['- The Lighted Rooms']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "Listened to a voicemail message", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(25, 17, "2.26am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- The Lighted Rooms", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:27 for 1 quotations:
    case 147:
      Serial.println(F("Only one option for 02:27:"));
    Serial.println(F("02:27 - The moon didn’t shine again until 2.27am. It was enough to show Wallander that he was positioned some distance below the tree. - Henning Mankell, One Step Behind"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on moon
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on didn’t
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on shine
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on again
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on until
// DEBUG: ['The', 'moon', 'didn’t', 'shine', 'again']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on It
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on was
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on enough
// DEBUG: ['until', 'TIMESTRING', 'It', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on show
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on Wallander
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on that
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on he
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on was
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on positioned
// DEBUG: ['enough', 'to', 'show', 'Wallander', 'that', 'he', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on some
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on distance
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on below
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on the
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on tree.
// DEBUG: 201
// DEBUG: ['2.27am.']
// DEBUG: drawing cursor (11, 17)
// DEBUG: ['- One Step Behind']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "The moon didn’t shine again", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "until TIMESTRING It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "enough to show Wallander that he was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(11, 17, "2.27am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- One Step Behind", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:28 for 1 quotations:
    case 148:
      Serial.println(F("Only one option for 02:28:"));
    Serial.println(F("02:28 - 2.28am: Ran out of sheep and began counting other farmyard animals. - Mike Gayle, Mr Commitment"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING:
// DEBUG: Wrorking on the timestring
// DEBUG: 131
// DEBUG: (126, 5)
// DEBUG: Operating on Ran
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on out
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on of
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on sheep
// DEBUG: ['TIMESTRING:', 'Ran', 'out', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on began
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on counting
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on other
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on farmyard
// DEBUG: ['sheep', 'and', 'began', 'counting', 'other']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on animals.
// DEBUG: 76
// DEBUG: ['2.28am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mike Gayle, Mr Commitment']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING: Ran out of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "sheep and began counting other", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "2.28am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- Mike Gayle, Mr Commitment", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:29 for 0 quotations:
    case 149:
      Serial.println(F("No quotes for 02:29"));
      return;

    // Codegen for 02:30 for 4 quotations:
    case 150:
      option = random(0, 4);
      Serial.print(F("4 options for 02:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:30 - Get into the mood, Shirl! Lew said. \"The party's already started! Yippee! You dressed for a party, Harry?\" \"Yep. Something told me to put on dinner clothes when I went to bed tonight.\" \"I'm in mufti myself: white gloves and matching tennis shoes. But I'm sorry to report that Jo is still in her Dr. Dentons. What're you wearing, Shirl?\" \"My old drum majorette's outfit. The one I wore to the State Finals. Listen, we can't tie up the phones like this.\" \"Why not?\" said Harry. \"Who's going to call at 2:30 a.m. with a better idea? Yippee, to quote Lew, we're having a party! What're we serving, Lew?\" \"Beer, I guess. Haven't got any wine, have we, Jo?\" \"Just for cooking.\" - Jack Finney, The Night People "));
// DEBUG: (5, 5)
// DEBUG: Operating on Get
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on into
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on mood,
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on Shirl!
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on Lew
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on said.
// DEBUG: ['Get', 'into', 'the', 'mood,', 'Shirl!', 'Lew']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on \"The
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on party's
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on already
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on started!
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on Yippee!
// DEBUG: ['said.', '\\"The', "party's", 'already', 'started!']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on You
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on dressed
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on for
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on a
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on party,
// DEBUG: 163
// DEBUG: (158, 29)
// DEBUG: Operating on Harry?\"
// DEBUG: ['Yippee!', 'You', 'dressed', 'for', 'a', 'party,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on \"Yep.
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on Something
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on told
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on me
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on to
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on put
// DEBUG: 207
// DEBUG: (202, 41)
// DEBUG: Operating on on
// DEBUG: ['Harry?\\"', '\\"Yep.', 'Something', 'told', 'me', 'to', 'put']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on dinner
// DEBUG: 56
// DEBUG: (51, 53)
// DEBUG: Operating on clothes
// DEBUG: 106
// DEBUG: (101, 53)
// DEBUG: Operating on when
// DEBUG: 135
// DEBUG: (130, 53)
// DEBUG: Operating on I
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on went
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on to
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on bed
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on tonight.\"
// DEBUG: ['on', 'dinner', 'clothes', 'when', 'I', 'went', 'to', 'bed']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on \"I'm
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on in
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on mufti
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on myself:
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on white
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on gloves
// DEBUG: ['tonight.\\"', '\\"I\'m', 'in', 'mufti', 'myself:', 'white']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 77)
// DEBUG: Operating on matching
// DEBUG: 96
// DEBUG: (91, 77)
// DEBUG: Operating on tennis
// DEBUG: 139
// DEBUG: (134, 77)
// DEBUG: Operating on shoes.
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on But
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on I'm
// DEBUG: ['gloves', 'and', 'matching', 'tennis', 'shoes.', 'But']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on sorry
// DEBUG: 50
// DEBUG: (45, 89)
// DEBUG: Operating on to
// DEBUG: 65
// DEBUG: (60, 89)
// DEBUG: Operating on report
// DEBUG: 108
// DEBUG: (103, 89)
// DEBUG: Operating on that
// DEBUG: 137
// DEBUG: (132, 89)
// DEBUG: Operating on Jo
// DEBUG: 152
// DEBUG: (147, 89)
// DEBUG: Operating on is
// DEBUG: 167
// DEBUG: (162, 89)
// DEBUG: Operating on still
// DEBUG: 203
// DEBUG: (198, 89)
// DEBUG: Operating on in
// DEBUG: ["I'm", 'sorry', 'to', 'report', 'that', 'Jo', 'is', 'still']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on her
// DEBUG: 35
// DEBUG: (30, 101)
// DEBUG: Operating on Dr.
// DEBUG: 57
// DEBUG: (52, 101)
// DEBUG: Operating on Dentons.
// DEBUG: 114
// DEBUG: (109, 101)
// DEBUG: Operating on What're
// DEBUG: 164
// DEBUG: (159, 101)
// DEBUG: Operating on you
// DEBUG: 186
// DEBUG: (181, 101)
// DEBUG: Operating on wearing,
// DEBUG: ['in', 'her', 'Dr.', 'Dentons.', "What're", 'you']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (14, 113)
// DEBUG: Operating on Shirl?\"
// DEBUG: 76
// DEBUG: (71, 113)
// DEBUG: Operating on \"My
// DEBUG: 105
// DEBUG: (100, 113)
// DEBUG: Operating on old
// DEBUG: 127
// DEBUG: (122, 113)
// DEBUG: Operating on drum
// DEBUG: 156
// DEBUG: (151, 113)
// DEBUG: Operating on majorette's
// DEBUG: ['wearing,', 'Shirl?\\"', '\\"My', 'old', 'drum']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (17, 125)
// DEBUG: Operating on outfit.
// DEBUG: 72
// DEBUG: (67, 125)
// DEBUG: Operating on The
// DEBUG: 94
// DEBUG: (89, 125)
// DEBUG: Operating on one
// DEBUG: 116
// DEBUG: (111, 125)
// DEBUG: Operating on I
// DEBUG: 124
// DEBUG: (119, 125)
// DEBUG: Operating on wore
// DEBUG: 153
// DEBUG: (148, 125)
// DEBUG: Operating on to
// DEBUG: 168
// DEBUG: (163, 125)
// DEBUG: Operating on the
// DEBUG: 190
// DEBUG: (185, 125)
// DEBUG: Operating on State
// DEBUG: ["majorette's", 'outfit.', 'The', 'one', 'I', 'wore', 'to', 'the']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (11, 137)
// DEBUG: Operating on Finals.
// DEBUG: 66
// DEBUG: (61, 137)
// DEBUG: Operating on Listen,
// DEBUG: 116
// DEBUG: (111, 137)
// DEBUG: Operating on we
// DEBUG: 131
// DEBUG: (126, 137)
// DEBUG: Operating on can't
// DEBUG: 167
// DEBUG: (162, 137)
// DEBUG: Operating on tie
// DEBUG: 189
// DEBUG: (184, 137)
// DEBUG: Operating on up
// DEBUG: 204
// DEBUG: (199, 137)
// DEBUG: Operating on the
// DEBUG: ['State', 'Finals.', 'Listen,', 'we', "can't", 'tie', 'up']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on phones
// DEBUG: 57
// DEBUG: (52, 149)
// DEBUG: Operating on like
// DEBUG: 86
// DEBUG: (81, 149)
// DEBUG: Operating on this.\"
// DEBUG: 136
// DEBUG: (131, 149)
// DEBUG: Operating on \"Why
// DEBUG: 172
// DEBUG: (167, 149)
// DEBUG: Operating on not?\"
// DEBUG: ['the', 'phones', 'like', 'this.\\"', '\\"Why']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (12, 161)
// DEBUG: Operating on said
// DEBUG: 46
// DEBUG: (41, 161)
// DEBUG: Operating on Harry.
// DEBUG: 89
// DEBUG: (84, 161)
// DEBUG: Operating on \"Who's
// DEBUG: 139
// DEBUG: (134, 161)
// DEBUG: Operating on going
// DEBUG: 175
// DEBUG: (170, 161)
// DEBUG: Operating on to
// DEBUG: 190
// DEBUG: (185, 161)
// DEBUG: Operating on call
// DEBUG: ['not?\\"', 'said', 'Harry.', '\\"Who\'s', 'going', 'to']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (10, 173)
// DEBUG: Operating on at
// DEBUG: 30
// DEBUG: (25, 173)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 165
// DEBUG: (160, 173)
// DEBUG: Operating on with
// DEBUG: 194
// DEBUG: (189, 173)
// DEBUG: Operating on a
// DEBUG: 202
// DEBUG: (197, 173)
// DEBUG: Operating on better
// DEBUG: ['call', 'at', 'TIMESTRING', 'with', 'a']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (12, 185)
// DEBUG: Operating on idea?
// DEBUG: 53
// DEBUG: (48, 185)
// DEBUG: Operating on Yippee,
// DEBUG: 103
// DEBUG: (98, 185)
// DEBUG: Operating on to
// DEBUG: 118
// DEBUG: (113, 185)
// DEBUG: Operating on quote
// DEBUG: 154
// DEBUG: (149, 185)
// DEBUG: Operating on Lew,
// DEBUG: 183
// DEBUG: (178, 185)
// DEBUG: Operating on we're
// DEBUG: ['better', 'idea?', 'Yippee,', 'to', 'quote', 'Lew,']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (11, 197)
// DEBUG: Operating on having
// DEBUG: 59
// DEBUG: (54, 197)
// DEBUG: Operating on a
// DEBUG: 67
// DEBUG: (62, 197)
// DEBUG: Operating on party!
// DEBUG: 110
// DEBUG: (105, 197)
// DEBUG: Operating on What're
// DEBUG: 160
// DEBUG: (155, 197)
// DEBUG: Operating on we
// DEBUG: 175
// DEBUG: (170, 197)
// DEBUG: Operating on serving,
// DEBUG: ["we're", 'having', 'a', 'party!', "What're", 'we']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (14, 209)
// DEBUG: Operating on Lew?\"
// DEBUG: 62
// DEBUG: (57, 209)
// DEBUG: Operating on \"Beer,
// DEBUG: 112
// DEBUG: (107, 209)
// DEBUG: Operating on I
// DEBUG: 120
// DEBUG: (115, 209)
// DEBUG: Operating on guess.
// DEBUG: 163
// DEBUG: (158, 209)
// DEBUG: Operating on Haven't
// DEBUG: ['serving,', 'Lew?\\"', '\\"Beer,', 'I', 'guess.']
// DEBUG: drawing cursor (5, 209)
// DEBUG: (13, 221)
// DEBUG: Operating on got
// DEBUG: 40
// DEBUG: (35, 221)
// DEBUG: Operating on any
// DEBUG: 62
// DEBUG: (57, 221)
// DEBUG: Operating on wine,
// DEBUG: 98
// DEBUG: (93, 221)
// DEBUG: Operating on have
// DEBUG: 127
// DEBUG: (122, 221)
// DEBUG: Operating on we,
// DEBUG: 149
// DEBUG: (144, 221)
// DEBUG: Operating on Jo?\"
// DEBUG: 185
// DEBUG: (180, 221)
// DEBUG: Operating on \"Just
// DEBUG: ["Haven't", 'got', 'any', 'wine,', 'have', 'we,', 'Jo?\\"']
// DEBUG: drawing cursor (5, 221)
// DEBUG: (12, 233)
// DEBUG: Operating on for
// DEBUG: 39
// DEBUG: (34, 233)
// DEBUG: Operating on cooking.\"
// DEBUG: 110
// DEBUG: ['2:30 a.m.']
// DEBUG: drawing cursor (25, 173)
// DEBUG: ['- The Night People']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "Get into the mood, Shirl! Lew", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "said. \"The party's already started!", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Yippee! You dressed for a party,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Harry?\" \"Yep. Something told me to put", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "on dinner clothes when I went to bed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "tonight.\" \"I'm in mufti myself: white", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "gloves and matching tennis shoes. But", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "I'm sorry to report that Jo is still", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "in her Dr. Dentons. What're you", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "wearing, Shirl?\" \"My old drum", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "majorette's outfit. The one I wore to the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "State Finals. Listen, we can't tie up", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "the phones like this.\" \"Why", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "not?\" said Harry. \"Who's going to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "call at TIMESTRING with a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "better idea? Yippee, to quote Lew,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 197, "we're having a party! What're we", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 209, "serving, Lew?\" \"Beer, I guess.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 221, "Haven't got any wine, have we, Jo?\"", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(25, 173, "2:30 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Night People", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:30 - At about half past two she had been woken by the creak of footsteps out on the stairs. At first she had been frightened. - Sarah Waters, The Little Stranger"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on about
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At', 'about']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on she
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on had
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on been
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on woken
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on by
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on creak
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on of
// DEBUG: ['TIMESTRING', 'she', 'had', 'been', 'woken', 'by', 'the', 'creak']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on footsteps
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on out
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on on
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on the
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on stairs.
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on At
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on first
// DEBUG: ['of', 'footsteps', 'out', 'on', 'the', 'stairs.', 'At']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on she
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on had
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on been
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on frightened.
// DEBUG: 167
// DEBUG: ['half past two']
// DEBUG: drawing cursor (56, 5)
// DEBUG: ['- The Little Stranger']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "At about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING she had been woken by the creak", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "of footsteps out on the stairs. At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(56, 5, "half past two", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- The Little Stranger", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("02:30 - Inc, I tried to pull her off about 0230, and there was this fucking… sound. - David Foster Wallace, Infinite Jest "));
// DEBUG: (5, 5)
// DEBUG: Operating on Inc,
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on I
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on tried
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on to
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on pull
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on her
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on off
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on about
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on 0TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Inc,', 'I', 'tried', 'to', 'pull', 'her', 'off', 'about']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on and
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on there
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on was
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on this
// DEBUG: ['0TIMESTRING,', 'and', 'there', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on fucking…
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on sound.
// DEBUG: 115
// DEBUG: ['230']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Infinite Jest']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Inc, I tried to pull her off about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "0TIMESTRING, and there was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "230", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Infinite Jest", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("02:30 - It is 2.30am and I am tight. As a tick, as a lord, as a newt. Must write this down before the sublime memories fade and blur. - William Boyd, Any Human Heart "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on is
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on and
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on I
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on am
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on tight.
// DEBUG: ['It', 'is', 'TIMESTRING', 'and', 'I', 'am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on As
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on a
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on tick,
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on as
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on a
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on lord,
// DEBUG: 135
// DEBUG: (130, 17)
// DEBUG: Operating on as
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on a
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on newt.
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on Must
// DEBUG: ['tight.', 'As', 'a', 'tick,', 'as', 'a', 'lord,', 'as', 'a', 'newt.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on write
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on this
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on down
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on before
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on sublime
// DEBUG: ['Must', 'write', 'this', 'down', 'before', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on memories
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on fade
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on and
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on blur.
// DEBUG: 162
// DEBUG: ['2.30am']
// DEBUG: drawing cursor (35, 5)
// DEBUG: ['- Any Human Heart']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "It is TIMESTRING and I am", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "tight. As a tick, as a lord, as a newt.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Must write this down before the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(35, 5, "2.30am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Any Human Heart", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:31 for 1 quotations:
    case 151:
      Serial.println(F("Only one option for 02:31:"));
    Serial.println(F("02:31 - And then I woke up because there were people shouting in the flat and it was 2.31am. And one of the people was Father and I was frightened. - Mark Haddon, The Curious Incident Of The Dog In The Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on then
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on I
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on woke
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on up
// DEBUG: 113
// DEBUG: (108, 5)
// DEBUG: Operating on because
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on there
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on were
// DEBUG: ['And', 'then', 'I', 'woke', 'up', 'because', 'there']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on people
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on shouting
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on in
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on the
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on flat
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on and
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on it
// DEBUG: ['were', 'people', 'shouting', 'in', 'the', 'flat', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on was
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on And
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on one
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on of
// DEBUG: ['it', 'was', 'TIMESTRING', 'And', 'one']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on people
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on was
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on Father
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on and
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on I
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on was
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on frightened.
// DEBUG: ['of', 'the', 'people', 'was', 'Father', 'and', 'I', 'was']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['2.31am.']
// DEBUG: drawing cursor (30, 29)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "And then I woke up because there", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "were people shouting in the flat and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "it was TIMESTRING And one", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "of the people was Father and I was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(30, 29, "2.31am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:32 for 1 quotations:
    case 152:
      Serial.println(F("Only one option for 02:32:"));
    Serial.println(F("02:32 - The last guests departed at 2.32 a.m., two hours and two minutes after the scheduled completion time. - Graeme Simsion, The Rosie Project"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on last
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on guests
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on departed
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on at
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'last', 'guests', 'departed', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on two
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on hours
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on and
// DEBUG: ['TIMESTRING,', 'two', 'hours']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on two
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on minutes
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on after
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on the
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on scheduled
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on completion
// DEBUG: ['and', 'two', 'minutes', 'after', 'the', 'scheduled']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on time.
// DEBUG: 57
// DEBUG: ['2.32 a.m.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Rosie Project']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "The last guests departed at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING, two hours", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "and two minutes after the scheduled", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "2.32 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- The Rosie Project", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:33 for 1 quotations:
    case 153:
      Serial.println(F("Only one option for 02:33:"));
    Serial.println(F("02:33 - But it wasn't going on! It was two-thirty-four, well. Two-thirty-three and nothing had happened. Suppose he got a room call, or the elevator night-bell rang, now. - Jim Thompson, A Swell-looking Babe"));
// DEBUG: (5, 5)
// DEBUG: Operating on But
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on it
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on wasn't
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on going
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on on!
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on It
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on was
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on two-thirty-four,
// DEBUG: ['But', 'it', "wasn't", 'going', 'on!', 'It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (22, 17)
// DEBUG: Operating on well.
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['two-thirty-four,', 'well.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on nothing
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on had
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on happened.
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on Suppose
// DEBUG: ['TIMESTRING', 'and', 'nothing', 'had', 'happened.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on he
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on got
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on a
// DEBUG: 63
// DEBUG: (58, 41)
// DEBUG: Operating on room
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on call,
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on or
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on the
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on elevator
// DEBUG: ['Suppose', 'he', 'got', 'a', 'room', 'call,', 'or', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on night-bell
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on rang,
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on now.
// DEBUG: 155
// DEBUG: ['Two-thirty-three']
// DEBUG: drawing cursor (58, 17)
// DEBUG: ['- A Swell-looking Babe']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "But it wasn't going on! It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "two-thirty-four, well.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING and nothing had happened.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Suppose he got a room call, or the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(58, 17, "Two-thirty-three", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- A Swell-looking Babe", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:34 for 1 quotations:
    case 154:
      Serial.println(F("Only one option for 02:34:"));
    Serial.println(F("02:34 - It was two-thirty-four, well. Two-thirty-three and nothing had happened. Suppose he got a room call, or the elevator night-bell rang, now. - Jim Thompson, A Swell-looking Babe"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on well.
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on Two-thirty-three
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on and
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on nothing
// DEBUG: ['TIMESTRING,', 'well.', 'Two-thirty-three', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on had
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on happened.
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on Suppose
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on he
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on got
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on a
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on room
// DEBUG: ['nothing', 'had', 'happened.', 'Suppose', 'he', 'got', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on call,
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on or
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on the
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on elevator
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on night-bell
// DEBUG: ['room', 'call,', 'or', 'the', 'elevator']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on rang,
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on now.
// DEBUG: 86
// DEBUG: ['two-thirty-four']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- A Swell-looking Babe']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING, well. Two-thirty-three and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "nothing had happened. Suppose he got a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "room call, or the elevator", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "two-thirty-four", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- A Swell-looking Babe", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:35 for 1 quotations:
    case 155:
      Serial.println(F("Only one option for 02:35:"));
    Serial.println(F("02:35 - For what happened at 2.35 we have the testimony of the priest, a young, intelligent, and well-educated person; of Patrolman William J. Monohan of the Central Station, an officer of the highest reliability who had paused at that part of his beat to inspect the crowd. - HP Lovecraft, The Haunter of the Dark"));
// DEBUG: (5, 5)
// DEBUG: Operating on For
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on what
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on happened
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on at
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['For', 'what', 'happened', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on we
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on have
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on testimony
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on of
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on priest,
// DEBUG: ['TIMESTRING', 'we', 'have', 'the', 'testimony', 'of', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on a
// DEBUG: 26
// DEBUG: (21, 29)
// DEBUG: Operating on young,
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on intelligent,
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on and
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on well-educated
// DEBUG: ['priest,', 'a', 'young,', 'intelligent,', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (19, 41)
// DEBUG: Operating on person;
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on of
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on Patrolman
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on William
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on J.
// DEBUG: ['well-educated', 'person;', 'of', 'Patrolman', 'William']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on Monohan
// DEBUG: 63
// DEBUG: (58, 53)
// DEBUG: Operating on of
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on the
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on Central
// DEBUG: 150
// DEBUG: (145, 53)
// DEBUG: Operating on Station,
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on an
// DEBUG: ['J.', 'Monohan', 'of', 'the', 'Central', 'Station,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on officer
// DEBUG: 63
// DEBUG: (58, 65)
// DEBUG: Operating on of
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on the
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on highest
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on reliability
// DEBUG: ['an', 'officer', 'of', 'the', 'highest']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (17, 77)
// DEBUG: Operating on who
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on had
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on paused
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on at
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on that
// DEBUG: 153
// DEBUG: (148, 77)
// DEBUG: Operating on part
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on of
// DEBUG: 197
// DEBUG: (192, 77)
// DEBUG: Operating on his
// DEBUG: ['reliability', 'who', 'had', 'paused', 'at', 'that', 'part', 'of']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on beat
// DEBUG: 43
// DEBUG: (38, 89)
// DEBUG: Operating on to
// DEBUG: 58
// DEBUG: (53, 89)
// DEBUG: Operating on inspect
// DEBUG: 108
// DEBUG: (103, 89)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 89)
// DEBUG: Operating on crowd.
// DEBUG: 173
// DEBUG: ['2.35']
// DEBUG: drawing cursor (128, 5)
// DEBUG: ['- The Haunter of the Dark']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "For what happened at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING we have the testimony of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "priest, a young, intelligent, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "well-educated person; of Patrolman William", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "J. Monohan of the Central Station,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "an officer of the highest", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "reliability who had paused at that part of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(128, 5, "2.35", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- The Haunter of the Dark", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:36 for 1 quotations:
    case 156:
      Serial.println(F("Only one option for 02:36:"));
    Serial.println(F("02:36 - It was about 2.36am when a provost colonel arrived to arrest me. At 2.36 1/2 I remembered the big insulating gauntlets. But even had I remembered before, what could I have done? - Len Deighton, The Ipcress File"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on about
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on when
// DEBUG: ['It', 'was', 'about', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 17)
// DEBUG: Operating on provost
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on colonel
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on arrived
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on to
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on arrest
// DEBUG: ['when', 'a', 'provost', 'colonel', 'arrived', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on me.
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on At
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on 2.36
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on 1/2
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on I
// DEBUG: 113
// DEBUG: (108, 29)
// DEBUG: Operating on remembered
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on the
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on big
// DEBUG: ['arrest', 'me.', 'At', '2.36', '1/2', 'I', 'remembered', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on insulating
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on gauntlets.
// DEBUG: 156
// DEBUG: (151, 41)
// DEBUG: Operating on But
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on even
// DEBUG: 207
// DEBUG: (202, 41)
// DEBUG: Operating on had
// DEBUG: ['big', 'insulating', 'gauntlets.', 'But', 'even']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on I
// DEBUG: 22
// DEBUG: (17, 53)
// DEBUG: Operating on remembered
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on before,
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on what
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on could
// DEBUG: 208
// DEBUG: (203, 53)
// DEBUG: Operating on I
// DEBUG: ['had', 'I', 'remembered', 'before,', 'what', 'could']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (7, 65)
// DEBUG: Operating on have
// DEBUG: 41
// DEBUG: (36, 65)
// DEBUG: Operating on done?
// DEBUG: 77
// DEBUG: ['2.36am']
// DEBUG: drawing cursor (78, 5)
// DEBUG: ['- The Ipcress File']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "It was about TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "when a provost colonel arrived to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "arrest me. At 2.36 1/2 I remembered the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "big insulating gauntlets. But even", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "had I remembered before, what could", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(78, 5, "2.36am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- The Ipcress File", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:37 for 1 quotations:
    case 157:
      Serial.println(F("Only one option for 02:37:"));
    Serial.println(F("02:37 - June 13, 1990. Thirty-seven minutes past two in the morning. And sixteen seconds. - Stephen King, The Stand"));
// DEBUG: (5, 5)
// DEBUG: Operating on June
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on 13,
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on 1990.
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['June', '13,', '1990.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on morning.
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on And
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on sixteen
// DEBUG: 187
// DEBUG: (182, 29)
// DEBUG: Operating on seconds.
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning.', 'And', 'sixteen']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['Thirty-seven minutes past two']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Stephen King, The Stand']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "June 13, 1990.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING in the morning. And sixteen", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Thirty-seven minutes past two", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- Stephen King, The Stand", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:38 for 0 quotations:
    case 158:
      Serial.println(F("No quotes for 02:38"));
      return;

    // Codegen for 02:39 for 0 quotations:
    case 159:
      Serial.println(F("No quotes for 02:39"));
      return;

    // Codegen for 02:40 for 0 quotations:
    case 160:
      Serial.println(F("No quotes for 02:40"));
      return;

    // Codegen for 02:41 for 0 quotations:
    case 161:
      Serial.println(F("No quotes for 02:41"));
      return;

    // Codegen for 02:42 for 0 quotations:
    case 162:
      Serial.println(F("No quotes for 02:42"));
      return;

    // Codegen for 02:43 for 1 quotations:
    case 163:
      Serial.println(F("Only one option for 02:43:"));
    Serial.println(F("02:43 - She settled back beside him. 'It's 2:43:12am, Case. Got a readout chipped into my optic nerve.' - William Gibson, Neuromancer"));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on settled
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on back
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on beside
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on him.
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on 'It's
// DEBUG: ['She', 'settled', 'back', 'beside', 'him.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on TIMESTRING:12am,
// DEBUG: Wrorking on the timestring
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on Case.
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on Got
// DEBUG: ["'It's", 'TIMESTRING:12am,', 'Case.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on a
// DEBUG: 22
// DEBUG: (17, 29)
// DEBUG: Operating on readout
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on chipped
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on into
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on my
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on optic
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on nerve.'
// DEBUG: ['Got', 'a', 'readout', 'chipped', 'into', 'my', 'optic']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['2:43']
// DEBUG: drawing cursor (11, 17)
// DEBUG: ['- William Gibson, Neuromancer']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "She settled back beside him.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "'It's TIMESTRING:12am, Case.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Got a readout chipped into my optic", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(11, 17, "2:43", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- William Gibson, Neuromancer", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:44 for 0 quotations:
    case 164:
      Serial.println(F("No quotes for 02:44"));
      return;

    // Codegen for 02:45 for 1 quotations:
    case 165:
      Serial.println(F("Only one option for 02:45:"));
    Serial.println(F("02:45 - 0245h., Ennet House, the hours that are truly wee. - David Foster Wallace, Infinite Jest "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING.,
// DEBUG: Wrorking on the timestring
// DEBUG: 131
// DEBUG: (126, 5)
// DEBUG: Operating on Ennet
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on House,
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING.,', 'Ennet', 'House,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on hours
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on that
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on are
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on truly
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on wee.
// DEBUG: 166
// DEBUG: ['0245h']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Infinite Jest']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING., Ennet House,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "0245h", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Infinite Jest", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:46 for 2 quotations:
    case 166:
      option = random(0, 2);
      Serial.print(F("2 options for 02:46. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:46 - 2.46am. The chain drive whirred and the paper target slid down the darkened range, ducking in and out of shafts of yellow incandescent light. At the firing station, a figure waited in the shadows. As the target passed the twenty-five-foot mark, the man opened fire: eight shots-rapid, unhesitating. - Steve Sohmer, Patriots"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 131
// DEBUG: (126, 5)
// DEBUG: Operating on The
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on chain
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on drive
// DEBUG: ['TIMESTRING', 'The', 'chain']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on whirred
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on and
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on paper
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on target
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on slid
// DEBUG: ['drive', 'whirred', 'and', 'the', 'paper', 'target']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on down
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on the
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on darkened
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on range,
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on ducking
// DEBUG: ['slid', 'down', 'the', 'darkened', 'range,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on and
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on out
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on of
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on shafts
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on of
// DEBUG: 150
// DEBUG: (145, 41)
// DEBUG: Operating on yellow
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on incandescent
// DEBUG: ['ducking', 'in', 'and', 'out', 'of', 'shafts', 'of', 'yellow']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (18, 53)
// DEBUG: Operating on light.
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on At
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on the
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on firing
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on station,
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on a
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on figure
// DEBUG: ['incandescent', 'light.', 'At', 'the', 'firing', 'station,', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on waited
// DEBUG: 60
// DEBUG: (55, 65)
// DEBUG: Operating on in
// DEBUG: 75
// DEBUG: (70, 65)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 65)
// DEBUG: Operating on shadows.
// DEBUG: 154
// DEBUG: (149, 65)
// DEBUG: Operating on As
// DEBUG: 169
// DEBUG: (164, 65)
// DEBUG: Operating on the
// DEBUG: 191
// DEBUG: (186, 65)
// DEBUG: Operating on target
// DEBUG: ['figure', 'waited', 'in', 'the', 'shadows.', 'As', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on passed
// DEBUG: 60
// DEBUG: (55, 77)
// DEBUG: Operating on the
// DEBUG: 82
// DEBUG: (77, 77)
// DEBUG: Operating on twenty-five-foot
// DEBUG: 195
// DEBUG: (190, 77)
// DEBUG: Operating on mark,
// DEBUG: ['target', 'passed', 'the', 'twenty-five-foot']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 89)
// DEBUG: Operating on man
// DEBUG: 60
// DEBUG: (55, 89)
// DEBUG: Operating on opened
// DEBUG: 103
// DEBUG: (98, 89)
// DEBUG: Operating on fire:
// DEBUG: 139
// DEBUG: (134, 89)
// DEBUG: Operating on eight
// DEBUG: 175
// DEBUG: (170, 89)
// DEBUG: Operating on shots-rapid,
// DEBUG: ['mark,', 'the', 'man', 'opened', 'fire:', 'eight']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (18, 101)
// DEBUG: Operating on unhesitating.
// DEBUG: 115
// DEBUG: ['2.46am.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Steve Sohmer, Patriots']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING The chain", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "drive whirred and the paper target", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "slid down the darkened range,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "ducking in and out of shafts of yellow", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "incandescent light. At the firing station, a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "figure waited in the shadows. As the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "target passed the twenty-five-foot", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "mark, the man opened fire: eight", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "2.46am.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Steve Sohmer, Patriots", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:46 - Vicki shoved her glasses at her face and peered at the clock. Two forty-six. 'I don't have time for this' she muttered, sttling back against the pillows, heart still slamming against her ribs. - Tanya Huff, Blood Lines "));
// DEBUG: (5, 5)
// DEBUG: Operating on Vicki
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on shoved
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on her
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on glasses
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on at
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on her
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on face
// DEBUG: ['Vicki', 'shoved', 'her', 'glasses', 'at', 'her']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on peered
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on at
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on the
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on clock.
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['face', 'and', 'peered', 'at', 'the', 'clock.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on 'I
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on don't
// DEBUG: ['TIMESTRING.', "'I"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on have
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on time
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on for
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on this'
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on she
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on muttered,
// DEBUG: ["don't", 'have', 'time', 'for', "this'", 'she']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on sttling
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on back
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on against
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on the
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on pillows,
// DEBUG: ['muttered,', 'sttling', 'back', 'against', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on heart
// DEBUG: 55
// DEBUG: (50, 65)
// DEBUG: Operating on still
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on slamming
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on against
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on her
// DEBUG: ['pillows,', 'heart', 'still', 'slamming', 'against']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on ribs.
// DEBUG: 50
// DEBUG: ['Two forty-six']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Tanya Huff, Blood Lines ']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "Vicki shoved her glasses at her", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "face and peered at the clock.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING. 'I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "don't have time for this' she", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "muttered, sttling back against the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "pillows, heart still slamming against", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Two forty-six", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Tanya Huff, Blood Lines ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:47 for 1 quotations:
    case 167:
      Serial.println(F("Only one option for 02:47:"));
    Serial.println(F("02:47 - The glowing numbers read 2.47am. Moisés sighs and turns back to the bathroom door. Finally, the doorknob turns and Conchita comes back to bed. She resumes her place next to Moisés. Relieved, he pulls her close. - Daniel A. Olivas, The Book of Want"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on glowing
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on numbers
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on read
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'glowing', 'numbers', 'read']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on Moisés
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on sighs
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on and
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on turns
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on back
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on to
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'Moisés', 'sighs', 'and', 'turns', 'back', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on bathroom
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on door.
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on Finally,
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on the
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on doorknob
// DEBUG: ['the', 'bathroom', 'door.', 'Finally,', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on turns
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on and
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on Conchita
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on comes
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on back
// DEBUG: 199
// DEBUG: (194, 41)
// DEBUG: Operating on to
// DEBUG: ['doorknob', 'turns', 'and', 'Conchita', 'comes', 'back']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on bed.
// DEBUG: 42
// DEBUG: (37, 53)
// DEBUG: Operating on She
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on resumes
// DEBUG: 114
// DEBUG: (109, 53)
// DEBUG: Operating on her
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on place
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on next
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on to
// DEBUG: ['to', 'bed.', 'She', 'resumes', 'her', 'place', 'next']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on Moisés.
// DEBUG: 63
// DEBUG: (58, 65)
// DEBUG: Operating on Relieved,
// DEBUG: 127
// DEBUG: (122, 65)
// DEBUG: Operating on he
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on pulls
// DEBUG: 178
// DEBUG: (173, 65)
// DEBUG: Operating on her
// DEBUG: 200
// DEBUG: (195, 65)
// DEBUG: Operating on close.
// DEBUG: ['to', 'Moisés.', 'Relieved,', 'he', 'pulls', 'her']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['2.47am.']
// DEBUG: drawing cursor (156, 5)
// DEBUG: ['- The Book of Want']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "The glowing numbers read", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING Moisés sighs and turns back to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the bathroom door. Finally, the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "doorknob turns and Conchita comes back", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "to bed. She resumes her place next", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "to Moisés. Relieved, he pulls her", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(156, 5, "2.47am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- The Book of Want", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:48 for 0 quotations:
    case 168:
      Serial.println(F("No quotes for 02:48"));
      return;

    // Codegen for 02:49 for 0 quotations:
    case 169:
      Serial.println(F("No quotes for 02:49"));
      return;

    // Codegen for 02:50 for 0 quotations:
    case 170:
      Serial.println(F("No quotes for 02:50"));
      return;

    // Codegen for 02:51 for 0 quotations:
    case 171:
      Serial.println(F("No quotes for 02:51"));
      return;

    // Codegen for 02:52 for 0 quotations:
    case 172:
      Serial.println(F("No quotes for 02:52"));
      return;

    // Codegen for 02:53 for 0 quotations:
    case 173:
      Serial.println(F("No quotes for 02:53"));
      return;

    // Codegen for 02:54 for 0 quotations:
    case 174:
      Serial.println(F("No quotes for 02:54"));
      return;

    // Codegen for 02:55 for 2 quotations:
    case 175:
      option = random(0, 2);
      Serial.print(F("2 options for 02:55. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("02:55 - It's the way the world will end, Harry. Recorded cocktail music nuclear-powered to play on for centuries after all life has been destroyed. Selections from 'No, No, Nanette,' throughout eternity. That do you for 2:55 a.m.? - Jack Finney, The Night People "));
// DEBUG: (5, 5)
// DEBUG: Operating on It's
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on way
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on world
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on will
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on end,
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on Harry.
// DEBUG: ["It's", 'the', 'way', 'the', 'world', 'will', 'end,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on Recorded
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on cocktail
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on music
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on nuclear-powered
// DEBUG: ['Harry.', 'Recorded', 'cocktail', 'music']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (21, 29)
// DEBUG: Operating on to
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on play
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on on
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on for
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on centuries
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on after
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on all
// DEBUG: ['nuclear-powered', 'to', 'play', 'on', 'for', 'centuries', 'after']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on life
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on has
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on been
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on destroyed.
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on Selections
// DEBUG: ['all', 'life', 'has', 'been', 'destroyed.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on from
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on 'No,
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on No,
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on Nanette,'
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on throughout
// DEBUG: ['Selections', 'from', "'No,", 'No,', "Nanette,'"]
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on eternity.
// DEBUG: 85
// DEBUG: (80, 65)
// DEBUG: Operating on That
// DEBUG: 114
// DEBUG: (109, 65)
// DEBUG: Operating on do
// DEBUG: 129
// DEBUG: (124, 65)
// DEBUG: Operating on you
// DEBUG: 151
// DEBUG: (146, 65)
// DEBUG: Operating on for
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on TIMESTRING?
// DEBUG: Wrorking on the timestring
// DEBUG: ['throughout', 'eternity.', 'That', 'do', 'you', 'for']
// DEBUG: drawing cursor (5, 65)
// DEBUG: 151
// DEBUG: ['2:55 a.m.']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['- The Night People']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "It's the way the world will end,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Harry. Recorded cocktail music", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "nuclear-powered to play on for centuries after", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "all life has been destroyed.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Selections from 'No, No, Nanette,'", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "throughout eternity. That do you for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "2:55 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Night People", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("02:55 - Time to go: 2.55am. Two-handed, Cec lifted his peak cap from the chair. - Iain Sinclair, Downriver"));
// DEBUG: (5, 5)
// DEBUG: Operating on Time
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on to
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on go:
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on Two-handed,
// DEBUG: ['Time', 'to', 'go:', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on Cec
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on lifted
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on his
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on peak
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on cap
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on from
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on the
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on chair.
// DEBUG: ['Two-handed,', 'Cec', 'lifted', 'his', 'peak', 'cap', 'from', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['2.55am.']
// DEBUG: drawing cursor (71, 5)
// DEBUG: ['- Iain Sinclair, Downriver']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "Time to go: TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Two-handed, Cec lifted his peak cap from the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(71, 5, "2.55am.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Iain Sinclair, Downriver", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 02:56 for 1 quotations:
    case 176:
      Serial.println(F("Only one option for 02:56:"));
    Serial.println(F("02:56 - It was 2:56 when the shovel touched the coffin. We all heard the sound and looked at each other. - Jonathan Safran Foer, Extremely Loud and Incredibly Close "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on when
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on the
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on shovel
// DEBUG: ['It', 'was', 'TIMESTRING', 'when', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on touched
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on the
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on coffin.
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on We
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on all
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on heard
// DEBUG: ['shovel', 'touched', 'the', 'coffin.', 'We', 'all']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on sound
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on and
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on looked
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on each
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on other.
// DEBUG: ['heard', 'the', 'sound', 'and', 'looked', 'at', 'each']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['2:56']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Jonathan Safran Foer']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING when the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "shovel touched the coffin. We all", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "heard the sound and looked at each", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "2:56", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Jonathan Safran Foer", &Font12, WHITE, BLACK);
      return;

    // Codegen for 02:57 for 0 quotations:
    case 177:
      Serial.println(F("No quotes for 02:57"));
      return;

    // Codegen for 02:58 for 0 quotations:
    case 178:
      Serial.println(F("No quotes for 02:58"));
      return;

    // Codegen for 02:59 for 1 quotations:
    case 179:
      Serial.println(F("Only one option for 02:59:"));
    Serial.println(F("02:59 - I remembered arriving in this room at 2.59 one night. I remembered the sergeant who called me names: mostly Anglo-Saxon monosyllabic four-letter ones with an odd \"Commie\" thrown in for syntax. - Len Deighton, The Ipcress File"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on remembered
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on arriving
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on this
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on room
// DEBUG: ['I', 'remembered', 'arriving', 'in', 'this']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on at
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on one
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on night.
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on I
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on remembered
// DEBUG: ['room', 'at', 'TIMESTRING', 'one', 'night.', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on the
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on sergeant
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on who
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on called
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on me
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on names:
// DEBUG: ['remembered', 'the', 'sergeant', 'who', 'called', 'me']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on mostly
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on Anglo-Saxon
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on monosyllabic
// DEBUG: ['names:', 'mostly', 'Anglo-Saxon']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (18, 53)
// DEBUG: Operating on four-letter
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on ones
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on with
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on an
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on odd
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on \"Commie\"
// DEBUG: ['monosyllabic', 'four-letter', 'ones', 'with', 'an', 'odd']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on thrown
// DEBUG: 64
// DEBUG: (59, 65)
// DEBUG: Operating on in
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on for
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on syntax.
// DEBUG: 151
// DEBUG: ['2.59']
// DEBUG: drawing cursor (25, 17)
// DEBUG: ['- The Ipcress File']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "I remembered arriving in this", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "room at TIMESTRING one night. I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "remembered the sergeant who called me", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "names: mostly Anglo-Saxon", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "monosyllabic four-letter ones with an odd", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(25, 17, "2.59", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- The Ipcress File", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:00 for 18 quotations:
    case 180:
      option = random(0, 18);
      Serial.print(F("18 options for 03:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("03:00 - She died this morning, very early, about three o'clock. - Virginia Woolf, The Voyage Out "));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on died
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on this
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on morning,
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on very
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on early,
// DEBUG: ['She', 'died', 'this', 'morning,', 'very']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on about
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['early,', 'about']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ["three o'clock"]
// DEBUG: drawing cursor (48, 17)
// DEBUG: ['- The Voyage Out']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "She died this morning, very", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "early, about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(48, 17, "three o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- The Voyage Out", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("03:00 - Three a.m. That’s our reward. Three in the morn. The soul’s midnight. The tide goes out, the soul ebbs. And a train arrives at an hour of despair. Why? - Ray Bradbury, Something Wicked This Way Comes "));
// DEBUG: (5, 5)
// DEBUG: Operating on Three
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on a.m.
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on That’s
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on our
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on reward.
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Three', 'a.m.', 'That’s', 'our', 'reward.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on The
// DEBUG: ['TIMESTRING']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on soul’s
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on midnight.
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on The
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on tide
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on goes
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on out,
// DEBUG: ['The', 'soul’s', 'midnight.', 'The', 'tide', 'goes']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on soul
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on ebbs.
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on And
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on a
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on train
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on arrives
// DEBUG: ['out,', 'the', 'soul', 'ebbs.', 'And', 'a', 'train']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on an
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on hour
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on of
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on despair.
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on Why?
// DEBUG: 178
// DEBUG: ['Three in the morn.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Ray Bradbury']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "Three a.m. That’s our reward.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "The soul’s midnight. The tide goes", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "out, the soul ebbs. And a train", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Three in the morn.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Ray Bradbury", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("03:00 - According to her watch it was shortly after three o'clock, and according to everything else it was night-time. - Douglas Adams, The Long Dark Tea-time of the Soul "));
// DEBUG: (5, 5)
// DEBUG: Operating on According
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on to
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on her
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on watch
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on it
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on was
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on shortly
// DEBUG: ['According', 'to', 'her', 'watch', 'it', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on after
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['shortly', 'after']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on according
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on to
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on everything
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on else
// DEBUG: ['TIMESTRING,', 'and', 'according', 'to', 'everything']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on was
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on night-time.
// DEBUG: 130
// DEBUG: ["three o'clock"]
// DEBUG: drawing cursor (49, 17)
// DEBUG: ['- Douglas Adams']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "According to her watch it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "shortly after", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, and according to everything", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(49, 17, "three o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Douglas Adams", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("03:00 - At three am I was walking the floor and listening to Katchaturian working in a tractor factory. He called it a violin concerto. I called it a loose fan belt and the hell with it. - Raymond Chandler, The Long Goodbye "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 159
// DEBUG: (154, 5)
// DEBUG: Operating on I
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on was
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on walking
// DEBUG: ['TIMESTRING', 'I', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on floor
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on and
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on listening
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on to
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on Katchaturian
// DEBUG: ['walking', 'the', 'floor', 'and', 'listening', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (18, 29)
// DEBUG: Operating on working
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on in
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on a
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on tractor
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on factory.
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on He
// DEBUG: ['Katchaturian', 'working', 'in', 'a', 'tractor', 'factory.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on called
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on it
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on a
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on violin
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on concerto.
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on I
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on called
// DEBUG: ['He', 'called', 'it', 'a', 'violin', 'concerto.', 'I']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on it
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on a
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on loose
// DEBUG: 76
// DEBUG: (71, 53)
// DEBUG: Operating on fan
// DEBUG: 98
// DEBUG: (93, 53)
// DEBUG: Operating on belt
// DEBUG: 127
// DEBUG: (122, 53)
// DEBUG: Operating on and
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on the
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on hell
// DEBUG: 200
// DEBUG: (195, 53)
// DEBUG: Operating on with
// DEBUG: ['called', 'it', 'a', 'loose', 'fan', 'belt', 'and', 'the', 'hell']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on it.
// DEBUG: 37
// DEBUG: ['At three am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Long Goodbye']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING I was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "walking the floor and listening to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Katchaturian working in a tractor factory.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "He called it a violin concerto. I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "called it a loose fan belt and the hell", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "At three am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Long Goodbye", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("03:00 - At three o' clock in the morning Eurydice is bound to come into it. After all, why did I sit here like a telegrapher at a lost outpost if not to receive messages from everywhere about the lost Eurydice who was never mine to begin with but whom I lamented and sought continually both professionally and amateurishly. This is not a digression. Where I am at three o' clock in the morning - and by now every hour is three o' clock in the morning - there are no digressions, it's all one thing. - Russell Hoban, The Medusa Frequency "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on Eurydice
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on is
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on bound
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on to
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on come
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on into
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on it.
// DEBUG: ['TIMESTRING', 'Eurydice', 'is', 'bound', 'to', 'come', 'into']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on After
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on all,
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on why
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on did
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on I
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on sit
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on here
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on like
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on a
// DEBUG: ['it.', 'After', 'all,', 'why', 'did', 'I', 'sit', 'here', 'like']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (7, 53)
// DEBUG: Operating on telegrapher
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on at
// DEBUG: 105
// DEBUG: (100, 53)
// DEBUG: Operating on a
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on lost
// DEBUG: 142
// DEBUG: (137, 53)
// DEBUG: Operating on outpost
// DEBUG: 192
// DEBUG: (187, 53)
// DEBUG: Operating on if
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on not
// DEBUG: ['a', 'telegrapher', 'at', 'a', 'lost', 'outpost', 'if']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on to
// DEBUG: 29
// DEBUG: (24, 65)
// DEBUG: Operating on receive
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on messages
// DEBUG: 136
// DEBUG: (131, 65)
// DEBUG: Operating on from
// DEBUG: 165
// DEBUG: (160, 65)
// DEBUG: Operating on everywhere
// DEBUG: ['not', 'to', 'receive', 'messages', 'from']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on about
// DEBUG: 57
// DEBUG: (52, 77)
// DEBUG: Operating on the
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on lost
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on Eurydice
// DEBUG: 165
// DEBUG: (160, 77)
// DEBUG: Operating on who
// DEBUG: 187
// DEBUG: (182, 77)
// DEBUG: Operating on was
// DEBUG: 209
// DEBUG: (204, 77)
// DEBUG: Operating on never
// DEBUG: ['everywhere', 'about', 'the', 'lost', 'Eurydice', 'who', 'was']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on mine
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on to
// DEBUG: 60
// DEBUG: (55, 89)
// DEBUG: Operating on begin
// DEBUG: 96
// DEBUG: (91, 89)
// DEBUG: Operating on with
// DEBUG: 125
// DEBUG: (120, 89)
// DEBUG: Operating on but
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on whom
// DEBUG: 176
// DEBUG: (171, 89)
// DEBUG: Operating on I
// DEBUG: 184
// DEBUG: (179, 89)
// DEBUG: Operating on lamented
// DEBUG: ['never', 'mine', 'to', 'begin', 'with', 'but', 'whom', 'I']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (14, 101)
// DEBUG: Operating on and
// DEBUG: 41
// DEBUG: (36, 101)
// DEBUG: Operating on sought
// DEBUG: 84
// DEBUG: (79, 101)
// DEBUG: Operating on continually
// DEBUG: 162
// DEBUG: (157, 101)
// DEBUG: Operating on both
// DEBUG: 191
// DEBUG: (186, 101)
// DEBUG: Operating on professionally
// DEBUG: ['lamented', 'and', 'sought', 'continually', 'both']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (20, 113)
// DEBUG: Operating on and
// DEBUG: 47
// DEBUG: (42, 113)
// DEBUG: Operating on amateurishly.
// DEBUG: 139
// DEBUG: (134, 113)
// DEBUG: Operating on This
// DEBUG: 168
// DEBUG: (163, 113)
// DEBUG: Operating on is
// DEBUG: 183
// DEBUG: (178, 113)
// DEBUG: Operating on not
// DEBUG: 205
// DEBUG: (200, 113)
// DEBUG: Operating on a
// DEBUG: ['professionally', 'and', 'amateurishly.', 'This', 'is', 'not']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (7, 125)
// DEBUG: Operating on digression.
// DEBUG: 90
// DEBUG: (85, 125)
// DEBUG: Operating on Where
// DEBUG: 126
// DEBUG: (121, 125)
// DEBUG: Operating on I
// DEBUG: 134
// DEBUG: (129, 125)
// DEBUG: Operating on am
// DEBUG: 149
// DEBUG: (144, 125)
// DEBUG: Operating on at
// DEBUG: 164
// DEBUG: (159, 125)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['a', 'digression.', 'Where', 'I', 'am', 'at']
// DEBUG: drawing cursor (5, 125)
// DEBUG: []
// DEBUG: drawing cursor (5, 137)
// DEBUG: (16, 149)
// DEBUG: Operating on -
// DEBUG: 29
// DEBUG: (24, 149)
// DEBUG: Operating on and
// DEBUG: 51
// DEBUG: (46, 149)
// DEBUG: Operating on by
// DEBUG: 66
// DEBUG: (61, 149)
// DEBUG: Operating on now
// DEBUG: 88
// DEBUG: (83, 149)
// DEBUG: Operating on every
// DEBUG: 124
// DEBUG: (119, 149)
// DEBUG: Operating on hour
// DEBUG: 153
// DEBUG: (148, 149)
// DEBUG: Operating on is
// DEBUG: 168
// DEBUG: (163, 149)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['TIMESTRING', '-', 'and', 'by', 'now', 'every', 'hour', 'is']
// DEBUG: drawing cursor (5, 149)
// DEBUG: []
// DEBUG: drawing cursor (5, 161)
// DEBUG: (16, 173)
// DEBUG: Operating on -
// DEBUG: 29
// DEBUG: (24, 173)
// DEBUG: Operating on there
// DEBUG: 65
// DEBUG: (60, 173)
// DEBUG: Operating on are
// DEBUG: 87
// DEBUG: (82, 173)
// DEBUG: Operating on no
// DEBUG: 102
// DEBUG: (97, 173)
// DEBUG: Operating on digressions,
// DEBUG: 187
// DEBUG: (182, 173)
// DEBUG: Operating on it's
// DEBUG: ['TIMESTRING', '-', 'there', 'are', 'no', 'digressions,']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (10, 185)
// DEBUG: Operating on all
// DEBUG: 37
// DEBUG: (32, 185)
// DEBUG: Operating on one
// DEBUG: 59
// DEBUG: (54, 185)
// DEBUG: Operating on thing.
// DEBUG: 102
// DEBUG: ["three o' clock in the morning"]
// DEBUG: drawing cursor (5, 161)
// DEBUG: ['- The Medusa Frequency']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING Eurydice is bound to come into", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "it. After all, why did I sit here like", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "a telegrapher at a lost outpost if", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "not to receive messages from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "everywhere about the lost Eurydice who was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "never mine to begin with but whom I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "lamented and sought continually both", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "professionally and amateurishly. This is not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "a digression. Where I am at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "TIMESTRING - and by now every hour is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "TIMESTRING - there are no digressions,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "three o' clock in the morning", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- The Medusa Frequency", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("03:00 - But at three o'clock in the morning, a forgotten package has the same tragic importance as a death sentence, and the cure doesn’t work - F. Scott Fitzgerald, The Crack-Up"));
// DEBUG: (5, 5)
// DEBUG: Operating on But
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['But']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on a
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on forgotten
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on package
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on has
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on same
// DEBUG: ['TIMESTRING,', 'a', 'forgotten', 'package', 'has', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on tragic
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on importance
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on as
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on a
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on death
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on sentence,
// DEBUG: ['same', 'tragic', 'importance', 'as', 'a', 'death']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 53)
// DEBUG: Operating on the
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on cure
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on doesn’t
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on work
// DEBUG: 172
// DEBUG: ["at three o'clock in the morning"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Crack-Up']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "But", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, a forgotten package has the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "same tragic importance as a death", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "at three o'clock in the morning", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- The Crack-Up", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("03:00 - Early mornings, my mother is about, drifting in her pale nightie, making herself a cup of tea in the kitchen. Water begins to boil in the kettle; it starts as a private, secluded sound, pure as rain, and grows to a steady, solipsistic bubbling. Not till she has had one cup of tea, so weak that it has a colour accidentally golden, can she begin her day. She is an insomniac. Her nights are wide-eyed and excited with worry. Even at three o'clock in the morning one might hear her eating a Bain Marie biscuit in the kitchen. - Amit Chaudhuri, Afternoon Raag "));
// DEBUG: (5, 5)
// DEBUG: Operating on Early
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on mornings,
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on my
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on mother
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on is
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on about,
// DEBUG: ['Early', 'mornings,', 'my', 'mother', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on drifting
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on in
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on her
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on pale
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on nightie,
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on making
// DEBUG: ['about,', 'drifting', 'in', 'her', 'pale', 'nightie,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on herself
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on a
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on cup
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on of
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on tea
// DEBUG: 134
// DEBUG: (129, 29)
// DEBUG: Operating on in
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on the
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on kitchen.
// DEBUG: ['making', 'herself', 'a', 'cup', 'of', 'tea', 'in', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on Water
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on begins
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on to
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on boil
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on in
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on the
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on kettle;
// DEBUG: ['kitchen.', 'Water', 'begins', 'to', 'boil', 'in', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on it
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on starts
// DEBUG: 76
// DEBUG: (71, 53)
// DEBUG: Operating on as
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on a
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on private,
// DEBUG: 156
// DEBUG: (151, 53)
// DEBUG: Operating on secluded
// DEBUG: ['kettle;', 'it', 'starts', 'as', 'a', 'private,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on sound,
// DEBUG: 62
// DEBUG: (57, 65)
// DEBUG: Operating on pure
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on as
// DEBUG: 106
// DEBUG: (101, 65)
// DEBUG: Operating on rain,
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on and
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on grows
// DEBUG: 200
// DEBUG: (195, 65)
// DEBUG: Operating on to
// DEBUG: ['secluded', 'sound,', 'pure', 'as', 'rain,', 'and', 'grows']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 77)
// DEBUG: Operating on steady,
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on solipsistic
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on bubbling.
// DEBUG: ['to', 'a', 'steady,', 'solipsistic']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on Not
// DEBUG: 42
// DEBUG: (37, 89)
// DEBUG: Operating on till
// DEBUG: 71
// DEBUG: (66, 89)
// DEBUG: Operating on she
// DEBUG: 93
// DEBUG: (88, 89)
// DEBUG: Operating on has
// DEBUG: 115
// DEBUG: (110, 89)
// DEBUG: Operating on had
// DEBUG: 137
// DEBUG: (132, 89)
// DEBUG: Operating on one
// DEBUG: 159
// DEBUG: (154, 89)
// DEBUG: Operating on cup
// DEBUG: 181
// DEBUG: (176, 89)
// DEBUG: Operating on of
// DEBUG: 196
// DEBUG: (191, 89)
// DEBUG: Operating on tea,
// DEBUG: ['bubbling.', 'Not', 'till', 'she', 'has', 'had', 'one', 'cup', 'of']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on so
// DEBUG: 30
// DEBUG: (25, 101)
// DEBUG: Operating on weak
// DEBUG: 59
// DEBUG: (54, 101)
// DEBUG: Operating on that
// DEBUG: 88
// DEBUG: (83, 101)
// DEBUG: Operating on it
// DEBUG: 103
// DEBUG: (98, 101)
// DEBUG: Operating on has
// DEBUG: 125
// DEBUG: (120, 101)
// DEBUG: Operating on a
// DEBUG: 133
// DEBUG: (128, 101)
// DEBUG: Operating on colour
// DEBUG: 176
// DEBUG: (171, 101)
// DEBUG: Operating on accidentally
// DEBUG: ['tea,', 'so', 'weak', 'that', 'it', 'has', 'a', 'colour']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (18, 113)
// DEBUG: Operating on golden,
// DEBUG: 73
// DEBUG: (68, 113)
// DEBUG: Operating on can
// DEBUG: 95
// DEBUG: (90, 113)
// DEBUG: Operating on she
// DEBUG: 117
// DEBUG: (112, 113)
// DEBUG: Operating on begin
// DEBUG: 153
// DEBUG: (148, 113)
// DEBUG: Operating on her
// DEBUG: 175
// DEBUG: (170, 113)
// DEBUG: Operating on day.
// DEBUG: 204
// DEBUG: (199, 113)
// DEBUG: Operating on She
// DEBUG: ['accidentally', 'golden,', 'can', 'she', 'begin', 'her', 'day.']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (9, 125)
// DEBUG: Operating on is
// DEBUG: 29
// DEBUG: (24, 125)
// DEBUG: Operating on an
// DEBUG: 44
// DEBUG: (39, 125)
// DEBUG: Operating on insomniac.
// DEBUG: 115
// DEBUG: (110, 125)
// DEBUG: Operating on Her
// DEBUG: 137
// DEBUG: (132, 125)
// DEBUG: Operating on nights
// DEBUG: 180
// DEBUG: (175, 125)
// DEBUG: Operating on are
// DEBUG: 202
// DEBUG: (197, 125)
// DEBUG: Operating on wide-eyed
// DEBUG: ['She', 'is', 'an', 'insomniac.', 'Her', 'nights', 'are']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (15, 137)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 137)
// DEBUG: Operating on excited
// DEBUG: 92
// DEBUG: (87, 137)
// DEBUG: Operating on with
// DEBUG: 121
// DEBUG: (116, 137)
// DEBUG: Operating on worry.
// DEBUG: 164
// DEBUG: (159, 137)
// DEBUG: Operating on Even
// DEBUG: 193
// DEBUG: (188, 137)
// DEBUG: Operating on at
// DEBUG: 208
// DEBUG: (203, 137)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['wide-eyed', 'and', 'excited', 'with', 'worry.', 'Even', 'at']
// DEBUG: drawing cursor (5, 137)
// DEBUG: 172
// DEBUG: (167, 149)
// DEBUG: Operating on in
// DEBUG: 187
// DEBUG: (182, 149)
// DEBUG: Operating on the
// DEBUG: 209
// DEBUG: (204, 149)
// DEBUG: Operating on morning
// DEBUG: ['TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (13, 161)
// DEBUG: Operating on one
// DEBUG: 40
// DEBUG: (35, 161)
// DEBUG: Operating on might
// DEBUG: 76
// DEBUG: (71, 161)
// DEBUG: Operating on hear
// DEBUG: 105
// DEBUG: (100, 161)
// DEBUG: Operating on her
// DEBUG: 127
// DEBUG: (122, 161)
// DEBUG: Operating on eating
// DEBUG: 170
// DEBUG: (165, 161)
// DEBUG: Operating on a
// DEBUG: 178
// DEBUG: (173, 161)
// DEBUG: Operating on Bain
// DEBUG: 207
// DEBUG: (202, 161)
// DEBUG: Operating on Marie
// DEBUG: ['morning', 'one', 'might', 'hear', 'her', 'eating', 'a', 'Bain']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (11, 173)
// DEBUG: Operating on biscuit
// DEBUG: 66
// DEBUG: (61, 173)
// DEBUG: Operating on in
// DEBUG: 81
// DEBUG: (76, 173)
// DEBUG: Operating on the
// DEBUG: 103
// DEBUG: (98, 173)
// DEBUG: Operating on kitchen.
// DEBUG: 160
// DEBUG: ["three o'clock"]
// DEBUG: drawing cursor (5, 149)
// DEBUG: ['- Afternoon Raag']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "Early mornings, my mother is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "about, drifting in her pale nightie,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "making herself a cup of tea in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "kitchen. Water begins to boil in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "kettle; it starts as a private,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "secluded sound, pure as rain, and grows", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "to a steady, solipsistic", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "bubbling. Not till she has had one cup of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "tea, so weak that it has a colour", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "accidentally golden, can she begin her day.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "She is an insomniac. Her nights are", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "wide-eyed and excited with worry. Even at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "morning one might hear her eating a Bain", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "three o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- Afternoon Raag", &Font12, WHITE, BLACK);
          return;
        case 7:
          Serial.println(F("03:00 - I slam the phone down but it misses the base. I hit the clock instead, which flashes 3 a.m. - Dan Holloway, Songs from the Other Side of the Wall "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on slam
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on phone
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on down
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on but
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on it
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on misses
// DEBUG: ['I', 'slam', 'the', 'phone', 'down', 'but', 'it']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on base.
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on I
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on hit
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on the
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on clock
// DEBUG: 163
// DEBUG: (158, 17)
// DEBUG: Operating on instead,
// DEBUG: ['misses', 'the', 'base.', 'I', 'hit', 'the', 'clock']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on which
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on flashes
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['instead,', 'which', 'flashes']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['3 a.m.']
// DEBUG: drawing cursor (100, 29)
// DEBUG: ['- Dan Holloway']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "I slam the phone down but it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "misses the base. I hit the clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "instead, which flashes", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(100, 29, "3 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Dan Holloway", &Font12, WHITE, BLACK);
          return;
        case 8:
          Serial.println(F("03:00 - In a real dark night of the soul it is always 3 o'clock in the morning. - F. Scott Fitzgerald, The Crack-Up "));
// DEBUG: (5, 5)
// DEBUG: Operating on In
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on a
// DEBUG: 33
// DEBUG: (28, 5)
// DEBUG: Operating on real
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on dark
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on night
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on of
// DEBUG: 142
// DEBUG: (137, 5)
// DEBUG: Operating on the
// DEBUG: 164
// DEBUG: (159, 5)
// DEBUG: Operating on soul
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on it
// DEBUG: 208
// DEBUG: (203, 5)
// DEBUG: Operating on is
// DEBUG: ['In', 'a', 'real', 'dark', 'night', 'of', 'the', 'soul', 'it']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on always
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on in
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on the
// DEBUG: ['is', 'always', 'TIMESTRING', 'in']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on morning.
// DEBUG: 71
// DEBUG: ["3 o'clock"]
// DEBUG: drawing cursor (51, 17)
// DEBUG: ['- The Crack-Up']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "In a real dark night of the soul it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "is always TIMESTRING in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(51, 17, "3 o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- The Crack-Up", &Font12, WHITE, BLACK);
          return;
        case 9:
          Serial.println(F("03:00 - ...that someone stumbled jerkily, as if his ankles were in chains, to the Comanche cabin’s bathroom at three A.M. - Philip Roth, Nemesis"));
// DEBUG: (5, 5)
// DEBUG: Operating on ...that
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on someone
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on stumbled
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on jerkily,
// DEBUG: ['...that', 'someone', 'stumbled']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on as
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on if
// DEBUG: 49
// DEBUG: (44, 17)
// DEBUG: Operating on his
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on ankles
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on were
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on in
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on chains,
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on to
// DEBUG: ['jerkily,', 'as', 'if', 'his', 'ankles', 'were', 'in', 'chains,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on Comanche
// DEBUG: 92
// DEBUG: (87, 29)
// DEBUG: Operating on cabin’s
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on bathroom
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['to', 'the', 'Comanche', 'cabin’s', 'bathroom']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 172
// DEBUG: ['at three A.M.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Philip Roth, Nemesis']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "...that someone stumbled", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "jerkily, as if his ankles were in chains,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "to the Comanche cabin’s bathroom", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "at three A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Philip Roth, Nemesis", &Font12, WHITE, BLACK);
          return;
        case 10:
          Serial.println(F("03:00 - It was three in the morning when his taxi stopped by giant mounds of snow outside his hotel. He had not eaten in hours. - Ian McEwan, Solar "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on when
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on his
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on taxi
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on stopped
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on by
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on giant
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on mounds
// DEBUG: ['TIMESTRING', 'when', 'his', 'taxi', 'stopped', 'by', 'giant']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on snow
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on outside
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on his
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on hotel.
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on He
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on had
// DEBUG: ['mounds', 'of', 'snow', 'outside', 'his', 'hotel.', 'He']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on not
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on eaten
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on in
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on hours.
// DEBUG: 130
// DEBUG: ['three in the morning']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Ian McEwan, Solar ']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING when his taxi stopped by giant", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "mounds of snow outside his hotel. He", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 5, "three in the morning", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Ian McEwan, Solar ", &Font12, WHITE, BLACK);
          return;
        case 11:
          Serial.println(F("03:00 - Once I saw a figure I shall never forget. It was three o'clock at night, as I was going home from Blacky as usual; it was a short-cut for me, and there would be nobody in the street at this time of night, I thought, especially not in this frightful cold. - Max Frisch, I'm Not Stiller"));
// DEBUG: (5, 5)
// DEBUG: Operating on Once
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on I
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on saw
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on a
// DEBUG: 77
// DEBUG: (72, 5)
// DEBUG: Operating on figure
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on I
// DEBUG: 128
// DEBUG: (123, 5)
// DEBUG: Operating on shall
// DEBUG: 164
// DEBUG: (159, 5)
// DEBUG: Operating on never
// DEBUG: 200
// DEBUG: (195, 5)
// DEBUG: Operating on forget.
// DEBUG: ['Once', 'I', 'saw', 'a', 'figure', 'I', 'shall', 'never']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on It
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on was
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['forget.', 'It', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on as
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on I
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on was
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on going
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on home
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on from
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on Blacky
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on as
// DEBUG: ['TIMESTRING,', 'as', 'I', 'was', 'going', 'home', 'from', 'Blacky']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on usual;
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on it
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on was
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on a
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on short-cut
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on for
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on me,
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on and
// DEBUG: ['as', 'usual;', 'it', 'was', 'a', 'short-cut', 'for', 'me,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on there
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on would
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on be
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on nobody
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on in
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on the
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on street
// DEBUG: ['and', 'there', 'would', 'be', 'nobody', 'in', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 65)
// DEBUG: Operating on this
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on time
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on of
// DEBUG: 105
// DEBUG: (100, 65)
// DEBUG: Operating on night,
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on I
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on thought,
// DEBUG: ['street', 'at', 'this', 'time', 'of', 'night,', 'I']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on especially
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on not
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on in
// DEBUG: 127
// DEBUG: (122, 77)
// DEBUG: Operating on this
// DEBUG: 156
// DEBUG: (151, 77)
// DEBUG: Operating on frightful
// DEBUG: ['thought,', 'especially', 'not', 'in', 'this']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on cold.
// DEBUG: 56
// DEBUG: ["three o'clock at night"]
// DEBUG: drawing cursor (50, 17)
// DEBUG: ["- Max Frisch, I'm Not Stiller"]
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Once I saw a figure I shall never", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "forget. It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, as I was going home from Blacky", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "as usual; it was a short-cut for me,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "and there would be nobody in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "street at this time of night, I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "thought, especially not in this", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(50, 17, "three o'clock at night", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Max Frisch, I'm Not Stiller", &Font12, WHITE, BLACK);
          return;
        case 12:
          Serial.println(F("03:00 - Roused from her sleep, Freya Gaines groped for the switch of the vidphone; groggily she found it and snapped it on. 'Lo,' she mumbled, wondering what time it was. She made out the luminous dial of the clock beside the bed. Three AM. Good grief. - Philip K Dick, The Game Players of Titan "));
// DEBUG: (5, 5)
// DEBUG: Operating on Roused
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on from
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on her
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on sleep,
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on Freya
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on Gaines
// DEBUG: ['Roused', 'from', 'her', 'sleep,', 'Freya']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on groped
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on for
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on switch
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on of
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on the
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on vidphone;
// DEBUG: ['Gaines', 'groped', 'for', 'the', 'switch', 'of', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on groggily
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on she
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on found
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on it
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on and
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on snapped
// DEBUG: ['vidphone;', 'groggily', 'she', 'found', 'it', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on it
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on on.
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on 'Lo,'
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on she
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on mumbled,
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on wondering
// DEBUG: ['snapped', 'it', 'on.', "'Lo,'", 'she', 'mumbled,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on what
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on time
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on it
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on was.
// DEBUG: 122
// DEBUG: (117, 53)
// DEBUG: Operating on She
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on made
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on out
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on the
// DEBUG: ['wondering', 'what', 'time', 'it', 'was.', 'She', 'made', 'out']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on luminous
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on dial
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on of
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on the
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on clock
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on beside
// DEBUG: ['the', 'luminous', 'dial', 'of', 'the', 'clock']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 77)
// DEBUG: Operating on bed.
// DEBUG: 68
// DEBUG: (63, 77)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on Good
// DEBUG: ['beside', 'the', 'bed.', 'TIMESTRING']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on grief.
// DEBUG: 58
// DEBUG: ['Three AM.']
// DEBUG: drawing cursor (63, 77)
// DEBUG: ['- The Game Players of Titan']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "Roused from her sleep, Freya", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Gaines groped for the switch of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "vidphone; groggily she found it and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "snapped it on. 'Lo,' she mumbled,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "wondering what time it was. She made out", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "the luminous dial of the clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "beside the bed. TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(63, 77, "Three AM.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- The Game Players of Titan", &Font12, WHITE, BLACK);
          return;
        case 13:
          Serial.println(F("03:00 - Schact clears his mouth and swallows mightily. 'Tavis can't even regrout tile in the locker room without calling a Community meeting or appointing a committee. The Regrouting Committee's been dragging along since may. Suddenly they're pulling secret 0300 milk-switches? It doesn't ring true, Jim. - David Foster Wallace, Infinite Jest "));
// DEBUG: (5, 5)
// DEBUG: Operating on Schact
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on clears
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on his
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on mouth
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on and
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on swallows
// DEBUG: ['Schact', 'clears', 'his', 'mouth', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on mightily.
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on 'Tavis
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on can't
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on even
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on regrout
// DEBUG: ['swallows', 'mightily.', "'Tavis", "can't", 'even']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on tile
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on in
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on the
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on locker
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on room
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on without
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on calling
// DEBUG: ['regrout', 'tile', 'in', 'the', 'locker', 'room', 'without']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on a
// DEBUG: 26
// DEBUG: (21, 41)
// DEBUG: Operating on Community
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on meeting
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on or
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on appointing
// DEBUG: ['calling', 'a', 'Community', 'meeting', 'or']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on a
// DEBUG: 29
// DEBUG: (24, 53)
// DEBUG: Operating on committee.
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on The
// DEBUG: 122
// DEBUG: (117, 53)
// DEBUG: Operating on Regrouting
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on Committee's
// DEBUG: ['appointing', 'a', 'committee.', 'The', 'Regrouting']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on been
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on dragging
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on along
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on since
// DEBUG: 180
// DEBUG: (175, 65)
// DEBUG: Operating on may.
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on Suddenly
// DEBUG: ["Committee's", 'been', 'dragging', 'along', 'since', 'may.']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on they're
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on pulling
// DEBUG: 119
// DEBUG: (114, 77)
// DEBUG: Operating on secret
// DEBUG: 162
// DEBUG: (157, 77)
// DEBUG: Operating on 0TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Suddenly', "they're", 'pulling', 'secret']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (17, 89)
// DEBUG: Operating on milk-switches?
// DEBUG: 121
// DEBUG: (116, 89)
// DEBUG: Operating on It
// DEBUG: 136
// DEBUG: (131, 89)
// DEBUG: Operating on doesn't
// DEBUG: 186
// DEBUG: (181, 89)
// DEBUG: Operating on ring
// DEBUG: ['0TIMESTRING', 'milk-switches?', 'It', "doesn't"]
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on true,
// DEBUG: 51
// DEBUG: (46, 101)
// DEBUG: Operating on Jim.
// DEBUG: 80
// DEBUG: ['300']
// DEBUG: drawing cursor (157, 77)
// DEBUG: ['- Infinite Jest']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Schact clears his mouth and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "swallows mightily. 'Tavis can't even", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "regrout tile in the locker room without", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "calling a Community meeting or", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "appointing a committee. The Regrouting", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "Committee's been dragging along since may.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "Suddenly they're pulling secret", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "0TIMESTRING milk-switches? It doesn't", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(157, 77, "300", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Infinite Jest", &Font12, WHITE, BLACK);
          return;
        case 14:
          Serial.println(F("03:00 - Three in the morning, thought Charles Halloway, seated on the edge of his bed. Why did the train come at that hour? For, he thought, it’s a special hour. Women never wake then, do they? They sleep the sleep of babes and children. But men in middle age? They know that hour well. - Ray Bradbury, Something Wicked This Way Comes "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on thought
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on Charles
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on Halloway,
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on seated
// DEBUG: ['TIMESTRING,', 'thought', 'Charles', 'Halloway,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on on
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on edge
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on of
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on his
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on bed.
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on Why
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on did
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on the
// DEBUG: ['seated', 'on', 'the', 'edge', 'of', 'his', 'bed.', 'Why', 'did']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on train
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on come
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on at
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on that
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on hour?
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on For,
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on he
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on thought,
// DEBUG: ['the', 'train', 'come', 'at', 'that', 'hour?', 'For,', 'he']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on it’s
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on a
// DEBUG: 56
// DEBUG: (51, 53)
// DEBUG: Operating on special
// DEBUG: 106
// DEBUG: (101, 53)
// DEBUG: Operating on hour.
// DEBUG: 142
// DEBUG: (137, 53)
// DEBUG: Operating on Women
// DEBUG: 178
// DEBUG: (173, 53)
// DEBUG: Operating on never
// DEBUG: ['thought,', 'it’s', 'a', 'special', 'hour.', 'Women']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on wake
// DEBUG: 45
// DEBUG: (40, 65)
// DEBUG: Operating on then,
// DEBUG: 81
// DEBUG: (76, 65)
// DEBUG: Operating on do
// DEBUG: 96
// DEBUG: (91, 65)
// DEBUG: Operating on they?
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on They
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on sleep
// DEBUG: 197
// DEBUG: (192, 65)
// DEBUG: Operating on the
// DEBUG: ['never', 'wake', 'then,', 'do', 'they?', 'They', 'sleep']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on sleep
// DEBUG: 50
// DEBUG: (45, 77)
// DEBUG: Operating on of
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on babes
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on and
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on children.
// DEBUG: 187
// DEBUG: (182, 77)
// DEBUG: Operating on But
// DEBUG: 209
// DEBUG: (204, 77)
// DEBUG: Operating on men
// DEBUG: ['the', 'sleep', 'of', 'babes', 'and', 'children.', 'But']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on in
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on middle
// DEBUG: 72
// DEBUG: (67, 89)
// DEBUG: Operating on age?
// DEBUG: 101
// DEBUG: (96, 89)
// DEBUG: Operating on They
// DEBUG: 130
// DEBUG: (125, 89)
// DEBUG: Operating on know
// DEBUG: 159
// DEBUG: (154, 89)
// DEBUG: Operating on that
// DEBUG: 188
// DEBUG: (183, 89)
// DEBUG: Operating on hour
// DEBUG: ['men', 'in', 'middle', 'age?', 'They', 'know', 'that']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on well.
// DEBUG: 51
// DEBUG: ['Three in the morning']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Ray Bradbury']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, thought Charles Halloway,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "seated on the edge of his bed. Why did", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the train come at that hour? For, he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "thought, it’s a special hour. Women", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "never wake then, do they? They sleep", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "the sleep of babes and children. But", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "men in middle age? They know that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "Three in the morning", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Ray Bradbury", &Font12, WHITE, BLACK);
          return;
        case 15:
          Serial.println(F("03:00 - What's the time? said the man, eyeing George up and down with evident suspicion; \"why, if you listen you will hear it strike.\" George listened, and a neighbouring clock immediately obliged. \"But it's only gone three!\" said George in an injured tone, when it had finished. - Jerome K Jerome, Three Men in a Boat "));
// DEBUG: (5, 5)
// DEBUG: Operating on What's
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on the
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on time?
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on said
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on the
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on man,
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on eyeing
// DEBUG: ["What's", 'the', 'time?', 'said', 'the', 'man,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on George
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on up
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on and
// DEBUG: 97
// DEBUG: (92, 17)
// DEBUG: Operating on down
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on with
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on evident
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on suspicion;
// DEBUG: ['eyeing', 'George', 'up', 'and', 'down', 'with', 'evident']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on \"why,
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on if
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on you
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on listen
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on you
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on will
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on hear
// DEBUG: ['suspicion;', '\\"why,', 'if', 'you', 'listen', 'you', 'will']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on strike.\"
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on George
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on listened,
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on and
// DEBUG: ['hear', 'it', 'strike.\\"', 'George', 'listened,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on a
// DEBUG: 22
// DEBUG: (17, 53)
// DEBUG: Operating on neighbouring
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on clock
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on immediately
// DEBUG: ['and', 'a', 'neighbouring', 'clock']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on obliged.
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on \"But
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on it's
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on only
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on gone
// DEBUG: 202
// DEBUG: (197, 65)
// DEBUG: Operating on TIMESTRING!\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['immediately', 'obliged.', '\\"But', "it's", 'only', 'gone']
// DEBUG: drawing cursor (5, 65)
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on said
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on George
// DEBUG: 209
// DEBUG: (204, 77)
// DEBUG: Operating on in
// DEBUG: ['TIMESTRING!\\"', 'said', 'George']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on an
// DEBUG: 28
// DEBUG: (23, 89)
// DEBUG: Operating on injured
// DEBUG: 78
// DEBUG: (73, 89)
// DEBUG: Operating on tone,
// DEBUG: 114
// DEBUG: (109, 89)
// DEBUG: Operating on when
// DEBUG: 143
// DEBUG: (138, 89)
// DEBUG: Operating on it
// DEBUG: 158
// DEBUG: (153, 89)
// DEBUG: Operating on had
// DEBUG: 180
// DEBUG: (175, 89)
// DEBUG: Operating on finished.
// DEBUG: ['in', 'an', 'injured', 'tone,', 'when', 'it', 'had']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['three']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['- Three Men in a Boat']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "What's the time? said the man,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "eyeing George up and down with evident", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "suspicion; \"why, if you listen you will", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "hear it strike.\" George listened,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "and a neighbouring clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "immediately obliged. \"But it's only gone", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "TIMESTRING!\" said George", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "in an injured tone, when it had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "three", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Three Men in a Boat", &Font12, WHITE, BLACK);
          return;
        case 16:
          Serial.println(F("03:00 - When Sophie awoke, it was 3:00 a.m. - Paula Fox, Desperate Characters "));
// DEBUG: (5, 5)
// DEBUG: Operating on When
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on Sophie
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on awoke,
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on it
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on was
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['When', 'Sophie', 'awoke,', 'it', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 144
// DEBUG: ['3:00 a.m.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Desperate Characters']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "When Sophie awoke, it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "3:00 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Desperate Characters", &Font12, WHITE, BLACK);
          return;
        case 17:
          Serial.println(F("03:00 - You hearken, Missy. It’s three o’clock in the morning and I’ve got all my faculties as well as ever I had in my life. I know all my property and where the money’s put out. And I’ve made everything ready to change my mind, and do as I like at the last. Do you hear, Missy? I’ve got my faculties.” - George Eliot, Middlemarch "));
// DEBUG: (5, 5)
// DEBUG: Operating on You
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on hearken,
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on Missy.
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on It’s
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['You', 'hearken,', 'Missy.', 'It’s']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on in
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on the
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on morning
// DEBUG: ['TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on I’ve
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on got
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on all
// DEBUG: 113
// DEBUG: (108, 29)
// DEBUG: Operating on my
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on faculties
// DEBUG: 192
// DEBUG: (187, 29)
// DEBUG: Operating on as
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on well
// DEBUG: ['morning', 'and', 'I’ve', 'got', 'all', 'my', 'faculties', 'as']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on as
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on ever
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on I
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on had
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on in
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on my
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on life.
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on I
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on know
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on all
// DEBUG: ['well', 'as', 'ever', 'I', 'had', 'in', 'my', 'life.', 'I', 'know']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on my
// DEBUG: 29
// DEBUG: (24, 53)
// DEBUG: Operating on property
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on and
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on where
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on money’s
// DEBUG: ['all', 'my', 'property', 'and', 'where', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on put
// DEBUG: 40
// DEBUG: (35, 65)
// DEBUG: Operating on out.
// DEBUG: 69
// DEBUG: (64, 65)
// DEBUG: Operating on And
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on I’ve
// DEBUG: 120
// DEBUG: (115, 65)
// DEBUG: Operating on made
// DEBUG: 149
// DEBUG: (144, 65)
// DEBUG: Operating on everything
// DEBUG: ['money’s', 'put', 'out.', 'And', 'I’ve', 'made']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on ready
// DEBUG: 57
// DEBUG: (52, 77)
// DEBUG: Operating on to
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on change
// DEBUG: 115
// DEBUG: (110, 77)
// DEBUG: Operating on my
// DEBUG: 130
// DEBUG: (125, 77)
// DEBUG: Operating on mind,
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on and
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on do
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on as
// DEBUG: ['everything', 'ready', 'to', 'change', 'my', 'mind,', 'and', 'do']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on I
// DEBUG: 21
// DEBUG: (16, 89)
// DEBUG: Operating on like
// DEBUG: 50
// DEBUG: (45, 89)
// DEBUG: Operating on at
// DEBUG: 65
// DEBUG: (60, 89)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 89)
// DEBUG: Operating on last.
// DEBUG: 123
// DEBUG: (118, 89)
// DEBUG: Operating on Do
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on you
// DEBUG: 160
// DEBUG: (155, 89)
// DEBUG: Operating on hear,
// DEBUG: 196
// DEBUG: (191, 89)
// DEBUG: Operating on Missy?
// DEBUG: ['as', 'I', 'like', 'at', 'the', 'last.', 'Do', 'you', 'hear,']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on I’ve
// DEBUG: 46
// DEBUG: (41, 101)
// DEBUG: Operating on got
// DEBUG: 68
// DEBUG: (63, 101)
// DEBUG: Operating on my
// DEBUG: 83
// DEBUG: (78, 101)
// DEBUG: Operating on faculties.”
// DEBUG: 161
// DEBUG: ['three o’clock']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- George Eliot, Middlemarch ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "You hearken, Missy. It’s", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "morning and I’ve got all my faculties as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "well as ever I had in my life. I know", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "all my property and where the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "money’s put out. And I’ve made", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "everything ready to change my mind, and do", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "as I like at the last. Do you hear,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "three o’clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- George Eliot, Middlemarch ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 03:01 for 1 quotations:
    case 181:
      Serial.println(F("Only one option for 03:01:"));
    Serial.println(F("03:01 - It was now about three o'clock in the morning and Francis Macomber, who had been asleep a little while after he had stopped thinking about the lion, wakened and then slept again. - Ernest Hemingway, The Short Happy Life of Francis Macomber "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on now
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'now']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on morning
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on and
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on Francis
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on Macomber,
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning', 'and', 'Francis']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on who
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on had
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on been
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on asleep
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on a
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on little
// DEBUG: 187
// DEBUG: (182, 29)
// DEBUG: Operating on while
// DEBUG: ['Macomber,', 'who', 'had', 'been', 'asleep', 'a', 'little']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on after
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on he
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on had
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on stopped
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on thinking
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on about
// DEBUG: ['while', 'after', 'he', 'had', 'stopped', 'thinking']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on lion,
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on wakened
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on and
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on then
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on slept
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on again.
// DEBUG: ['about', 'the', 'lion,', 'wakened', 'and', 'then', 'slept']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ["about three o'clock"]
// DEBUG: drawing cursor (64, 5)
// DEBUG: ['- Ernest Hemingway']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "It was now", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING in the morning and Francis", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Macomber, who had been asleep a little", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "while after he had stopped thinking", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "about the lion, wakened and then slept", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(64, 5, "about three o'clock", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- Ernest Hemingway", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:02 for 0 quotations:
    case 182:
      Serial.println(F("No quotes for 03:02"));
      return;

    // Codegen for 03:03 for 0 quotations:
    case 183:
      Serial.println(F("No quotes for 03:03"));
      return;

    // Codegen for 03:04 for 1 quotations:
    case 184:
      Serial.println(F("Only one option for 03:04:"));
    Serial.println(F("03:04 - …his back-up alarm clock rang. He looked at his front-line clock on the bedside table and noted that it had stopped at 3.04. So, you couldn’t even rely on alarm clocks. - Henning Mankell, The Return of the Dancing Master"));
// DEBUG: (5, 5)
// DEBUG: Operating on …his
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on back-up
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on alarm
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on clock
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on rang.
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on He
// DEBUG: ['…his', 'back-up', 'alarm', 'clock', 'rang.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on looked
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on at
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on his
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on front-line
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on clock
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on on
// DEBUG: ['He', 'looked', 'at', 'his', 'front-line', 'clock']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on bedside
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on table
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on and
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on noted
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on that
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on it
// DEBUG: ['on', 'the', 'bedside', 'table', 'and', 'noted', 'that']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on had
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on stopped
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on at
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 207
// DEBUG: (202, 41)
// DEBUG: Operating on So,
// DEBUG: ['it', 'had', 'stopped', 'at', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on you
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on couldn’t
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on even
// DEBUG: 122
// DEBUG: (117, 53)
// DEBUG: Operating on rely
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on on
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on alarm
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on clocks.
// DEBUG: ['So,', 'you', 'couldn’t', 'even', 'rely', 'on', 'alarm']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['3.04']
// DEBUG: drawing cursor (95, 41)
// DEBUG: ['- Henning Mankell']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "…his back-up alarm clock rang.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "He looked at his front-line clock", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "on the bedside table and noted that", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "it had stopped at TIMESTRING.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "So, you couldn’t even rely on alarm", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(95, 41, "3.04", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Henning Mankell", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:05 for 1 quotations:
    case 185:
      Serial.println(F("Only one option for 03:05:"));
    Serial.println(F("03:05 - On the Sunday before Christmas she awoke at 3:05 a.m. and though: Thirty-six hours. Four hours later she got up thinking: Thirty-two hours. Late in the day she took Alfred to the street-association Christmas party at Dale and Honey Driblett’s, sat him down safely with Kirby Root, and proceeded to remind all her neighbors that her favorite grandson, who’d been looking forward all year to a Christmas in St. Jude, was arriving tomorrow afternoon. - Jonathan Franzen, The Corrections "));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on Sunday
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on before
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on Christmas
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on she
// DEBUG: ['On', 'the', 'Sunday', 'before', 'Christmas']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on awoke
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on at
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on and
// DEBUG: ['she', 'awoke', 'at', 'TIMESTRING']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on though:
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on Thirty-six
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on hours.
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on Four
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on hours
// DEBUG: ['and', 'though:', 'Thirty-six', 'hours.', 'Four']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on later
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on she
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on got
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on up
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on thinking:
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on Thirty-two
// DEBUG: ['hours', 'later', 'she', 'got', 'up', 'thinking:']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on hours.
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on Late
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on in
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on day
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on she
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on took
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on Alfred
// DEBUG: ['Thirty-two', 'hours.', 'Late', 'in', 'the', 'day', 'she', 'took']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 65)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on street-association
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on Christmas
// DEBUG: ['Alfred', 'to', 'the', 'street-association']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on party
// DEBUG: 56
// DEBUG: (51, 77)
// DEBUG: Operating on at
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on Dale
// DEBUG: 100
// DEBUG: (95, 77)
// DEBUG: Operating on and
// DEBUG: 122
// DEBUG: (117, 77)
// DEBUG: Operating on Honey
// DEBUG: 158
// DEBUG: (153, 77)
// DEBUG: Operating on Driblett’s,
// DEBUG: ['Christmas', 'party', 'at', 'Dale', 'and', 'Honey']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (17, 89)
// DEBUG: Operating on sat
// DEBUG: 44
// DEBUG: (39, 89)
// DEBUG: Operating on him
// DEBUG: 66
// DEBUG: (61, 89)
// DEBUG: Operating on down
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on safely
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on with
// DEBUG: 167
// DEBUG: (162, 89)
// DEBUG: Operating on Kirby
// DEBUG: 203
// DEBUG: (198, 89)
// DEBUG: Operating on Root,
// DEBUG: ['Driblett’s,', 'sat', 'him', 'down', 'safely', 'with', 'Kirby']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 101)
// DEBUG: Operating on proceeded
// DEBUG: 102
// DEBUG: (97, 101)
// DEBUG: Operating on to
// DEBUG: 117
// DEBUG: (112, 101)
// DEBUG: Operating on remind
// DEBUG: 160
// DEBUG: (155, 101)
// DEBUG: Operating on all
// DEBUG: 182
// DEBUG: (177, 101)
// DEBUG: Operating on her
// DEBUG: 204
// DEBUG: (199, 101)
// DEBUG: Operating on neighbors
// DEBUG: ['Root,', 'and', 'proceeded', 'to', 'remind', 'all', 'her']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (15, 113)
// DEBUG: Operating on that
// DEBUG: 49
// DEBUG: (44, 113)
// DEBUG: Operating on her
// DEBUG: 71
// DEBUG: (66, 113)
// DEBUG: Operating on favorite
// DEBUG: 128
// DEBUG: (123, 113)
// DEBUG: Operating on grandson,
// DEBUG: 192
// DEBUG: (187, 113)
// DEBUG: Operating on who’d
// DEBUG: ['neighbors', 'that', 'her', 'favorite', 'grandson,']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (11, 125)
// DEBUG: Operating on been
// DEBUG: 45
// DEBUG: (40, 125)
// DEBUG: Operating on looking
// DEBUG: 95
// DEBUG: (90, 125)
// DEBUG: Operating on forward
// DEBUG: 145
// DEBUG: (140, 125)
// DEBUG: Operating on all
// DEBUG: 167
// DEBUG: (162, 125)
// DEBUG: Operating on year
// DEBUG: 196
// DEBUG: (191, 125)
// DEBUG: Operating on to
// DEBUG: 211
// DEBUG: (206, 125)
// DEBUG: Operating on a
// DEBUG: ['who’d', 'been', 'looking', 'forward', 'all', 'year', 'to']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (7, 137)
// DEBUG: Operating on Christmas
// DEBUG: 76
// DEBUG: (71, 137)
// DEBUG: Operating on in
// DEBUG: 91
// DEBUG: (86, 137)
// DEBUG: Operating on St.
// DEBUG: 113
// DEBUG: (108, 137)
// DEBUG: Operating on Jude,
// DEBUG: 149
// DEBUG: (144, 137)
// DEBUG: Operating on was
// DEBUG: 171
// DEBUG: (166, 137)
// DEBUG: Operating on arriving
// DEBUG: ['a', 'Christmas', 'in', 'St.', 'Jude,', 'was']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (14, 149)
// DEBUG: Operating on tomorrow
// DEBUG: 76
// DEBUG: (71, 149)
// DEBUG: Operating on afternoon.
// DEBUG: 147
// DEBUG: ['3:05 a.m.']
// DEBUG: drawing cursor (60, 17)
// DEBUG: ['- The Corrections']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "On the Sunday before Christmas", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "she awoke at TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "and though: Thirty-six hours. Four", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "hours later she got up thinking:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Thirty-two hours. Late in the day she took", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "Alfred to the street-association", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Christmas party at Dale and Honey", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "Driblett’s, sat him down safely with Kirby", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "Root, and proceeded to remind all her", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "neighbors that her favorite grandson,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "who’d been looking forward all year to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "a Christmas in St. Jude, was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(60, 17, "3:05 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- The Corrections", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:06 for 0 quotations:
    case 186:
      Serial.println(F("No quotes for 03:06"));
      return;

    // Codegen for 03:07 for 1 quotations:
    case 187:
      Serial.println(F("Only one option for 03:07:"));
    Serial.println(F("03:07 - Wayne late-logged in: 3.07am -the late-late show. He parked. He dumped his milk can. He yawned, he stretched. He scratched. - James Ellroy, The Cold Six Thousand"));
// DEBUG: (5, 5)
// DEBUG: Operating on Wayne
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on late-logged
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on in:
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Wayne', 'late-logged', 'in:']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on -the
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on late-late
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on show.
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on He
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on parked.
// DEBUG: ['TIMESTRING', '-the', 'late-late', 'show.', 'He']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on He
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on dumped
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on his
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on milk
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on can.
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on He
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on yawned,
// DEBUG: ['parked.', 'He', 'dumped', 'his', 'milk', 'can.', 'He']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on he
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on stretched.
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on He
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on scratched.
// DEBUG: 190
// DEBUG: ['3.07am']
// DEBUG: drawing cursor (141, 5)
// DEBUG: ['- The Cold Six Thousand']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "Wayne late-logged in:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING -the late-late show. He", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "parked. He dumped his milk can. He", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(141, 5, "3.07am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- The Cold Six Thousand", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:08 for 0 quotations:
    case 188:
      Serial.println(F("No quotes for 03:08"));
      return;

    // Codegen for 03:09 for 0 quotations:
    case 189:
      Serial.println(F("No quotes for 03:09"));
      return;

    // Codegen for 03:10 for 2 quotations:
    case 190:
      option = random(0, 2);
      Serial.print(F("2 options for 03:10. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("03:10 - I think my credit card was in there too. I wrote down the words credit card and said that if they wouldn't let me cancel them I'd demand that they registered the loss so you couldn't be charge for anything beyond the time of my calling them up. I looked at the clock. It was ten-past three. - Ali Smith, The Whole Story and Other Stories "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on think
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on my
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on credit
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on card
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on was
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on in
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on there
// DEBUG: ['I', 'think', 'my', 'credit', 'card', 'was', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on too.
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on I
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on wrote
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on down
// DEBUG: 118
// DEBUG: (113, 17)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on words
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on credit
// DEBUG: ['there', 'too.', 'I', 'wrote', 'down', 'the', 'words']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on card
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on and
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on said
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on that
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on if
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on they
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on wouldn't
// DEBUG: ['credit', 'card', 'and', 'said', 'that', 'if', 'they']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on let
// DEBUG: 41
// DEBUG: (36, 41)
// DEBUG: Operating on me
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on cancel
// DEBUG: 99
// DEBUG: (94, 41)
// DEBUG: Operating on them
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on I'd
// DEBUG: 150
// DEBUG: (145, 41)
// DEBUG: Operating on demand
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on that
// DEBUG: ["wouldn't", 'let', 'me', 'cancel', 'them', "I'd", 'demand']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on they
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on registered
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on the
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on loss
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on so
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on you
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on couldn't
// DEBUG: ['that', 'they', 'registered', 'the', 'loss', 'so', 'you']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on be
// DEBUG: 34
// DEBUG: (29, 65)
// DEBUG: Operating on charge
// DEBUG: 77
// DEBUG: (72, 65)
// DEBUG: Operating on for
// DEBUG: 99
// DEBUG: (94, 65)
// DEBUG: Operating on anything
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on beyond
// DEBUG: 199
// DEBUG: (194, 65)
// DEBUG: Operating on the
// DEBUG: ["couldn't", 'be', 'charge', 'for', 'anything', 'beyond']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on time
// DEBUG: 43
// DEBUG: (38, 77)
// DEBUG: Operating on of
// DEBUG: 58
// DEBUG: (53, 77)
// DEBUG: Operating on my
// DEBUG: 73
// DEBUG: (68, 77)
// DEBUG: Operating on calling
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on them
// DEBUG: 152
// DEBUG: (147, 77)
// DEBUG: Operating on up.
// DEBUG: 174
// DEBUG: (169, 77)
// DEBUG: Operating on I
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on looked
// DEBUG: ['the', 'time', 'of', 'my', 'calling', 'them', 'up.', 'I']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 89)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 89)
// DEBUG: Operating on clock.
// DEBUG: 97
// DEBUG: (92, 89)
// DEBUG: Operating on It
// DEBUG: 112
// DEBUG: (107, 89)
// DEBUG: Operating on was
// DEBUG: 134
// DEBUG: (129, 89)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['looked', 'at', 'the', 'clock.', 'It', 'was']
// DEBUG: drawing cursor (5, 89)
// DEBUG: 186
// DEBUG: ['ten-past three']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- Ali Smith']
// DEBUG: drawing cursor (130, 192)
          paint.Paint_DrawString_EN(5, 5, "I think my credit card was in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "there too. I wrote down the words", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "credit card and said that if they", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "wouldn't let me cancel them I'd demand", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "that they registered the loss so you", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "couldn't be charge for anything beyond", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "the time of my calling them up. I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "looked at the clock. It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "ten-past three", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(130, 192, "- Ali Smith", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("03:10 - Love again; wanking at ten past three - Philip Larkin, Love Again"));
// DEBUG: (5, 5)
// DEBUG: Operating on Love
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on again;
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on wanking
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on at
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Love', 'again;', 'wanking', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 179
// DEBUG: ['ten past three']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Philip Larkin, Love Again']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "Love again; wanking at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "ten past three", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Philip Larkin, Love Again", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 03:11 for 0 quotations:
    case 191:
      Serial.println(F("No quotes for 03:11"));
      return;

    // Codegen for 03:12 for 0 quotations:
    case 192:
      Serial.println(F("No quotes for 03:12"));
      return;

    // Codegen for 03:13 for 0 quotations:
    case 193:
      Serial.println(F("No quotes for 03:13"));
      return;

    // Codegen for 03:14 for 1 quotations:
    case 194:
      Serial.println(F("Only one option for 03:14:"));
    Serial.println(F("03:14 - Since he had told the girl that it had to end, he'd been waking up every morning at 3.14, without fail. Every morning his eyes would flick open, alert, and the red numerals on his electric alarm clock would read 3.14. - Christos Tsiolkas, The Slap"));
// DEBUG: (5, 5)
// DEBUG: Operating on Since
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on he
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on had
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on told
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on the
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on girl
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on that
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on it
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on had
// DEBUG: ['Since', 'he', 'had', 'told', 'the', 'girl', 'that', 'it']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on to
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on end,
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on he'd
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on been
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on waking
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on up
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on every
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on morning
// DEBUG: ['had', 'to', 'end,', "he'd", 'been', 'waking', 'up', 'every']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on without
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on fail.
// DEBUG: ['morning', 'at', 'TIMESTRING,', 'without']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on Every
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on morning
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on his
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on eyes
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on would
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on flick
// DEBUG: ['fail.', 'Every', 'morning', 'his', 'eyes', 'would']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on open,
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on alert,
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on and
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on the
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on red
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on numerals
// DEBUG: ['flick', 'open,', 'alert,', 'and', 'the', 'red']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on on
// DEBUG: 34
// DEBUG: (29, 65)
// DEBUG: Operating on his
// DEBUG: 56
// DEBUG: (51, 65)
// DEBUG: Operating on electric
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on alarm
// DEBUG: 149
// DEBUG: (144, 65)
// DEBUG: Operating on clock
// DEBUG: 185
// DEBUG: (180, 65)
// DEBUG: Operating on would
// DEBUG: ['numerals', 'on', 'his', 'electric', 'alarm', 'clock']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on read
// DEBUG: 45
// DEBUG: (40, 77)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 152
// DEBUG: ['3.14']
// DEBUG: drawing cursor (40, 77)
// DEBUG: ['- Christos Tsiolkas, The Slap']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "Since he had told the girl that it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "had to end, he'd been waking up every", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "morning at TIMESTRING, without", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "fail. Every morning his eyes would", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "flick open, alert, and the red", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "numerals on his electric alarm clock", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(40, 77, "3.14", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Christos Tsiolkas, The Slap", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:15 for 1 quotations:
    case 195:
      Serial.println(F("Only one option for 03:15:"));
    Serial.println(F("03:15 - Above the door of Room 69 the clock ticked on at 3:15. The motion was accelerating. What had once been the gymnasium was now a small room, seven feet wide, a tight, almost perfect cube. - JG Ballard, Manhole 69"));
// DEBUG: (5, 5)
// DEBUG: Operating on Above
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on door
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on of
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on Room
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on 69
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on the
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on clock
// DEBUG: ['Above', 'the', 'door', 'of', 'Room', '69', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on ticked
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on on
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on at
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on The
// DEBUG: ['clock', 'ticked', 'on', 'at', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on motion
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on was
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on accelerating.
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on What
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on had
// DEBUG: ['The', 'motion', 'was', 'accelerating.', 'What']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on once
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on been
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on gymnasium
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on was
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on now
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on a
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on small
// DEBUG: ['had', 'once', 'been', 'the', 'gymnasium', 'was', 'now', 'a']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on room,
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on seven
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on feet
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on wide,
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on a
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on tight,
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on almost
// DEBUG: ['small', 'room,', 'seven', 'feet', 'wide,', 'a', 'tight,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on perfect
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on cube.
// DEBUG: 103
// DEBUG: ['3:15']
// DEBUG: drawing cursor (84, 17)
// DEBUG: ['- JG Ballard, Manhole 69']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "Above the door of Room 69 the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "clock ticked on at TIMESTRING.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "The motion was accelerating. What", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "had once been the gymnasium was now a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "small room, seven feet wide, a tight,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(84, 17, "3:15", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- JG Ballard, Manhole 69", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:16 for 0 quotations:
    case 196:
      Serial.println(F("No quotes for 03:16"));
      return;

    // Codegen for 03:17 for 2 quotations:
    case 197:
      option = random(0, 2);
      Serial.print(F("2 options for 03:17. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("03:17 - The two of us sat there, listening—Boris more intently than me. “Who’s that with him then?” I said. “Some whore.” He listened for a moment, brow furrowed, his profile sharp in the moonlight, and then lay back down. “Two of them.” I rolled over, and checked my iPod. It was 3:17 in the morning. - Donna Tartt, The Goldfinch"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on two
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on of
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on us
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on sat
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on there,
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on listening—Boris
// DEBUG: ['The', 'two', 'of', 'us', 'sat', 'there,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (21, 17)
// DEBUG: Operating on more
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on intently
// DEBUG: 112
// DEBUG: (107, 17)
// DEBUG: Operating on than
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on me.
// DEBUG: 163
// DEBUG: (158, 17)
// DEBUG: Operating on “Who’s
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on that
// DEBUG: ['listening—Boris', 'more', 'intently', 'than', 'me.', '“Who’s']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on with
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on him
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on then?”
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on I
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on said.
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on “Some
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on whore.”
// DEBUG: ['that', 'with', 'him', 'then?”', 'I', 'said.', '“Some']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on He
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on listened
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on for
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on a
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on moment,
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on brow
// DEBUG: 199
// DEBUG: (194, 41)
// DEBUG: Operating on furrowed,
// DEBUG: ['whore.”', 'He', 'listened', 'for', 'a', 'moment,', 'brow']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on his
// DEBUG: 42
// DEBUG: (37, 53)
// DEBUG: Operating on profile
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on sharp
// DEBUG: 128
// DEBUG: (123, 53)
// DEBUG: Operating on in
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on the
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on moonlight,
// DEBUG: ['furrowed,', 'his', 'profile', 'sharp', 'in', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on then
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on lay
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on back
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on down.
// DEBUG: 159
// DEBUG: (154, 65)
// DEBUG: Operating on “Two
// DEBUG: 188
// DEBUG: (183, 65)
// DEBUG: Operating on of
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on them.”
// DEBUG: ['moonlight,', 'and', 'then', 'lay', 'back', 'down.', '“Two', 'of']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 77)
// DEBUG: Operating on rolled
// DEBUG: 68
// DEBUG: (63, 77)
// DEBUG: Operating on over,
// DEBUG: 104
// DEBUG: (99, 77)
// DEBUG: Operating on and
// DEBUG: 126
// DEBUG: (121, 77)
// DEBUG: Operating on checked
// DEBUG: 176
// DEBUG: (171, 77)
// DEBUG: Operating on my
// DEBUG: 191
// DEBUG: (186, 77)
// DEBUG: Operating on iPod.
// DEBUG: ['them.”', 'I', 'rolled', 'over,', 'and', 'checked', 'my']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on It
// DEBUG: 31
// DEBUG: (26, 89)
// DEBUG: Operating on was
// DEBUG: 53
// DEBUG: (48, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 153
// DEBUG: (148, 89)
// DEBUG: Operating on in
// DEBUG: 168
// DEBUG: (163, 89)
// DEBUG: Operating on the
// DEBUG: 190
// DEBUG: (185, 89)
// DEBUG: Operating on morning.
// DEBUG: ['iPod.', 'It', 'was', 'TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['3:17']
// DEBUG: drawing cursor (48, 89)
// DEBUG: ['- Donna Tartt, The Goldfinch']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "The two of us sat there,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "listening—Boris more intently than me. “Who’s", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "that with him then?” I said. “Some", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "whore.” He listened for a moment, brow", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "furrowed, his profile sharp in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "moonlight, and then lay back down. “Two of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "them.” I rolled over, and checked my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "iPod. It was TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(48, 89, "3:17", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Donna Tartt, The Goldfinch", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("03:17 - He turned to the monitors again and flicked through the screens, each one able to display eight different camera mountings, giving Kurt 192 different still lives of Green Oaks at 3.17 a.m. this March night. - Catherine O'Flynn, What Was Lost "));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on turned
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on to
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on monitors
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on again
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on and
// DEBUG: ['He', 'turned', 'to', 'the', 'monitors', 'again']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on flicked
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on through
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on the
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on screens,
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on each
// DEBUG: ['and', 'flicked', 'through', 'the', 'screens,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on one
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on able
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on to
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on display
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on eight
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on different
// DEBUG: ['each', 'one', 'able', 'to', 'display', 'eight']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on camera
// DEBUG: 63
// DEBUG: (58, 41)
// DEBUG: Operating on mountings,
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on giving
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on Kurt
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on 192
// DEBUG: ['different', 'camera', 'mountings,', 'giving', 'Kurt']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on different
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on still
// DEBUG: 114
// DEBUG: (109, 53)
// DEBUG: Operating on lives
// DEBUG: 150
// DEBUG: (145, 53)
// DEBUG: Operating on of
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on Green
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on Oaks
// DEBUG: ['192', 'different', 'still', 'lives', 'of', 'Green']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on at
// DEBUG: 30
// DEBUG: (25, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 165
// DEBUG: (160, 65)
// DEBUG: Operating on this
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on March
// DEBUG: ['Oaks', 'at', 'TIMESTRING', 'this']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on night.
// DEBUG: 59
// DEBUG: ['3.17 a.m.']
// DEBUG: drawing cursor (25, 65)
// DEBUG: ['- What Was Lost']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "He turned to the monitors again", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "and flicked through the screens,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "each one able to display eight", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "different camera mountings, giving Kurt", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "192 different still lives of Green", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "Oaks at TIMESTRING this", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(25, 65, "3.17 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- What Was Lost", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 03:18 for 0 quotations:
    case 198:
      Serial.println(F("No quotes for 03:18"));
      return;

    // Codegen for 03:19 for 1 quotations:
    case 199:
      Serial.println(F("Only one option for 03:19:"));
    Serial.println(F("03:19 - The time stamp on Navidson's camcorder indicates that it is exactly 3.19 A.M. - Mark Z Danielewski, House of Leaves"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on time
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on stamp
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on on
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on Navidson's
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on camcorder
// DEBUG: ['The', 'time', 'stamp', 'on', "Navidson's"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on indicates
// DEBUG: 84
// DEBUG: (79, 17)
// DEBUG: Operating on that
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on it
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on is
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on exactly
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['camcorder', 'indicates', 'that', 'it', 'is', 'exactly']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 144
// DEBUG: ['3.19 A.M.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- House of Leaves']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "The time stamp on Navidson's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "camcorder indicates that it is exactly", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "3.19 A.M.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- House of Leaves", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:20 for 1 quotations:
    case 200:
      Serial.println(F("Only one option for 03:20:"));
    Serial.println(F("03:20 - Prabath Kumara, 16. 17th November 1989. At 3.20am from the home of a friend. - Michael Ondaatje, Anil's Ghost"));
// DEBUG: (5, 5)
// DEBUG: Operating on Prabath
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on Kumara,
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on 16.
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on 17th
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on November
// DEBUG: ['Prabath', 'Kumara,', '16.', '17th']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on 1989.
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on At
// DEBUG: 70
// DEBUG: (65, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on from
// DEBUG: ['November', '1989.', 'At', 'TIMESTRING']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on home
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on of
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on a
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on friend.
// DEBUG: 139
// DEBUG: ['3.20am']
// DEBUG: drawing cursor (65, 17)
// DEBUG: ["- Anil's Ghost"]
// DEBUG: drawing cursor (109, 192)
    paint.Paint_DrawString_EN(5, 5, "Prabath Kumara, 16. 17th", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "November 1989. At TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(65, 17, "3.20am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(109, 192, "- Anil's Ghost", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:21 for 1 quotations:
    case 201:
      Serial.println(F("Only one option for 03:21:"));
    Serial.println(F("03:21 - Next, he remembered that the morrow of Christmas would be the twenty-seventh day of the moon, and that consequently high water would be at twenty-one minutes past three, the half-ebb at a quarter past seven, low water at thirty-three minutes past nine, and half flood at thirty-nine minutes past twelve. - Victor Hugo, The Toilers of the Sea"));
// DEBUG: (5, 5)
// DEBUG: Operating on Next,
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on he
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on remembered
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on that
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on the
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on morrow
// DEBUG: ['Next,', 'he', 'remembered', 'that', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on Christmas
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on would
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on be
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on twenty-seventh
// DEBUG: ['morrow', 'of', 'Christmas', 'would', 'be', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (20, 29)
// DEBUG: Operating on day
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on of
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on the
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on moon,
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on and
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on that
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on consequently
// DEBUG: ['twenty-seventh', 'day', 'of', 'the', 'moon,', 'and', 'that']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (18, 41)
// DEBUG: Operating on high
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on water
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on would
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on be
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['consequently', 'high', 'water', 'would', 'be', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on half-ebb
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on at
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on a
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on quarter
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on past
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on seven,
// DEBUG: ['TIMESTRING,', 'the', 'half-ebb', 'at', 'a', 'quarter', 'past']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on low
// DEBUG: 39
// DEBUG: (34, 77)
// DEBUG: Operating on water
// DEBUG: 75
// DEBUG: (70, 77)
// DEBUG: Operating on at
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on thirty-three
// DEBUG: 175
// DEBUG: (170, 77)
// DEBUG: Operating on minutes
// DEBUG: ['seven,', 'low', 'water', 'at', 'thirty-three']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on past
// DEBUG: 47
// DEBUG: (42, 89)
// DEBUG: Operating on nine,
// DEBUG: 83
// DEBUG: (78, 89)
// DEBUG: Operating on and
// DEBUG: 105
// DEBUG: (100, 89)
// DEBUG: Operating on half
// DEBUG: 134
// DEBUG: (129, 89)
// DEBUG: Operating on flood
// DEBUG: 170
// DEBUG: (165, 89)
// DEBUG: Operating on at
// DEBUG: 185
// DEBUG: (180, 89)
// DEBUG: Operating on thirty-nine
// DEBUG: ['minutes', 'past', 'nine,', 'and', 'half', 'flood', 'at']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on minutes
// DEBUG: 72
// DEBUG: (67, 101)
// DEBUG: Operating on past
// DEBUG: 101
// DEBUG: (96, 101)
// DEBUG: Operating on twelve.
// DEBUG: 151
// DEBUG: ['twenty-one minutes past three']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- The Toilers of the Sea']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "Next, he remembered that the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "morrow of Christmas would be the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "twenty-seventh day of the moon, and that", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "consequently high water would be at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING, the half-ebb at a quarter past", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "seven, low water at thirty-three", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "minutes past nine, and half flood at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "twenty-one minutes past three", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Toilers of the Sea", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:22 for 0 quotations:
    case 202:
      Serial.println(F("No quotes for 03:22"));
      return;

    // Codegen for 03:23 for 0 quotations:
    case 203:
      Serial.println(F("No quotes for 03:23"));
      return;

    // Codegen for 03:24 for 0 quotations:
    case 204:
      Serial.println(F("No quotes for 03:24"));
      return;

    // Codegen for 03:25 for 1 quotations:
    case 205:
      Serial.println(F("Only one option for 03:25:"));
    Serial.println(F("03:25 - It was 3:25 a.m. A strange thrill, to think I was the only Mulvaney awake in the house. - Joyce Carol Oates, We Were the Mulvaneys "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on A
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on strange
// DEBUG: ['It', 'was', 'TIMESTRING', 'A']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on thrill,
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on to
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on think
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on I
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on was
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on the
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on only
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on Mulvaney
// DEBUG: ['strange', 'thrill,', 'to', 'think', 'I', 'was', 'the', 'only']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on awake
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on in
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on the
// DEBUG: 92
// DEBUG: (87, 29)
// DEBUG: Operating on house.
// DEBUG: 135
// DEBUG: ['3:25 a.m.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- We Were the Mulvaneys']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING A", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "strange thrill, to think I was the only", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "3:25 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- We Were the Mulvaneys", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:26 for 0 quotations:
    case 206:
      Serial.println(F("No quotes for 03:26"));
      return;

    // Codegen for 03:27 for 0 quotations:
    case 207:
      Serial.println(F("No quotes for 03:27"));
      return;

    // Codegen for 03:28 for 1 quotations:
    case 208:
      Serial.println(F("Only one option for 03:28:"));
    Serial.println(F("03:28 - Now somebody was running past his room. A door slammed. That foreign language again. What the devil was going on? he switched on his light and peered at his watch. 3.28. He got out of bed. - Rupert Thomson, Dreams of Leaving"));
// DEBUG: (5, 5)
// DEBUG: Operating on Now
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on somebody
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on was
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on running
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on past
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on his
// DEBUG: ['Now', 'somebody', 'was', 'running', 'past']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on room.
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on A
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on door
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on slammed.
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on That
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on foreign
// DEBUG: ['his', 'room.', 'A', 'door', 'slammed.', 'That']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on language
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on again.
// DEBUG: 118
// DEBUG: (113, 29)
// DEBUG: Operating on What
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on devil
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on was
// DEBUG: ['foreign', 'language', 'again.', 'What', 'the', 'devil']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on going
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on on?
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on he
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on switched
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on on
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on his
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on light
// DEBUG: ['was', 'going', 'on?', 'he', 'switched', 'on', 'his']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on peered
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on at
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on his
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on watch.
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['light', 'and', 'peered', 'at', 'his', 'watch.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on He
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on got
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on out
// DEBUG: 81
// DEBUG: (76, 65)
// DEBUG: Operating on of
// DEBUG: 96
// DEBUG: (91, 65)
// DEBUG: Operating on bed.
// DEBUG: 125
// DEBUG: ['3.28']
// DEBUG: drawing cursor (156, 53)
// DEBUG: ['- Dreams of Leaving']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "Now somebody was running past", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "his room. A door slammed. That", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "foreign language again. What the devil", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "was going on? he switched on his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "light and peered at his watch.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(156, 53, "3.28", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Dreams of Leaving", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:29 for 0 quotations:
    case 209:
      Serial.println(F("No quotes for 03:29"));
      return;

    // Codegen for 03:30 for 5 quotations:
    case 210:
      option = random(0, 5);
      Serial.print(F("5 options for 03:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("03:30 - At Half past Three, a single Bird Unto a silent Sky Propounded but a single term Of cautious melody. - Emily Dickinson, At Half past Three, a single Bird"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 209
// DEBUG: (204, 5)
// DEBUG: Operating on a
// DEBUG: ['At', 'TIMESTRING,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (7, 17)
// DEBUG: Operating on single
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on Bird
// DEBUG: 84
// DEBUG: (79, 17)
// DEBUG: Operating on Unto
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on a
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on silent
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on Sky
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on Propounded
// DEBUG: ['a', 'single', 'Bird', 'Unto', 'a', 'silent', 'Sky']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on but
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on a
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on single
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on term
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on Of
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on cautious
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on melody.
// DEBUG: ['Propounded', 'but', 'a', 'single', 'term', 'Of', 'cautious']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['Half past Three']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Emily Dickinson']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "a single Bird Unto a silent Sky", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Propounded but a single term Of cautious", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "Half past Three", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Emily Dickinson", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("03:30 - At half-past three A.M. he lost one illusion: officers sent to reconnoitre informed him that the enemy was making no movement. - Victor Hugo, Les Miserables "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on he
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on lost
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on one
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on illusion:
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on officers
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on sent
// DEBUG: ['TIMESTRING', 'he', 'lost', 'one', 'illusion:', 'officers']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on reconnoitre
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on informed
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on him
// DEBUG: 187
// DEBUG: (182, 29)
// DEBUG: Operating on that
// DEBUG: ['sent', 'to', 'reconnoitre', 'informed', 'him']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on enemy
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on was
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on making
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on no
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on movement.
// DEBUG: ['that', 'the', 'enemy', 'was', 'making', 'no']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['half-past three A.M.']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Les Miserables']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING he lost one illusion: officers", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "sent to reconnoitre informed him", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "that the enemy was making no", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "half-past three A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- Les Miserables", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("03:30 - It's 3:30 A.M. in Mrs. Ralph's finally quiet house when Garp decides to clean the kitchen, to kill the time until dawn. Familiar with a housewife's tasks, Garp fills the sink and starts to wash the dishes. - John Irving, The World According to Garp "));
// DEBUG: (5, 5)
// DEBUG: Operating on It's
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on in
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on Mrs.
// DEBUG: ["It's", 'TIMESTRING', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on Ralph's
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on finally
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on quiet
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on house
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on when
// DEBUG: ['Mrs.', "Ralph's", 'finally', 'quiet', 'house']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on Garp
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on decides
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on to
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on clean
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on kitchen,
// DEBUG: ['when', 'Garp', 'decides', 'to', 'clean', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on kill
// DEBUG: 63
// DEBUG: (58, 41)
// DEBUG: Operating on the
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on time
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on until
// DEBUG: 150
// DEBUG: (145, 41)
// DEBUG: Operating on dawn.
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on Familiar
// DEBUG: ['kitchen,', 'to', 'kill', 'the', 'time', 'until', 'dawn.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on with
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on a
// DEBUG: 56
// DEBUG: (51, 53)
// DEBUG: Operating on housewife's
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on tasks,
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on Garp
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on fills
// DEBUG: ['Familiar', 'with', 'a', "housewife's", 'tasks,', 'Garp']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on sink
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on and
// DEBUG: 89
// DEBUG: (84, 65)
// DEBUG: Operating on starts
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on to
// DEBUG: 147
// DEBUG: (142, 65)
// DEBUG: Operating on wash
// DEBUG: 176
// DEBUG: (171, 65)
// DEBUG: Operating on the
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on dishes.
// DEBUG: ['fills', 'the', 'sink', 'and', 'starts', 'to', 'wash', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['3:30 A.M.']
// DEBUG: drawing cursor (34, 5)
// DEBUG: ['- The World According to Garp']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "It's TIMESTRING in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Mrs. Ralph's finally quiet house", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "when Garp decides to clean the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "kitchen, to kill the time until dawn.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Familiar with a housewife's tasks, Garp", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "fills the sink and starts to wash the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(34, 5, "3:30 A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- The World According to Garp", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("03:30 - Let's go to sleep, I say. \"Look at what time it is.\" The clock radio is right there beside the bed. Anyone can see it says three-thirty. - Raymond Carver, Whoever Was Using This Bed"));
// DEBUG: (5, 5)
// DEBUG: Operating on Let's
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on go
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on to
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on sleep,
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on I
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on say.
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on \"Look
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on at
// DEBUG: ["Let's", 'go', 'to', 'sleep,', 'I', 'say.', '\\"Look']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on what
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on time
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on it
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on is.\"
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on The
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on clock
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on radio
// DEBUG: ['at', 'what', 'time', 'it', 'is.\\"', 'The', 'clock']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on is
// DEBUG: 31
// DEBUG: (26, 29)
// DEBUG: Operating on right
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on there
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on beside
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on the
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on bed.
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on Anyone
// DEBUG: ['radio', 'is', 'right', 'there', 'beside', 'the', 'bed.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on can
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on see
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on it
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on says
// DEBUG: 105
// DEBUG: (100, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Anyone', 'can', 'see', 'it', 'says']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['three-thirty']
// DEBUG: drawing cursor (100, 41)
// DEBUG: ['- Whoever Was Using This Bed']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "Let's go to sleep, I say. \"Look", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "at what time it is.\" The clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "radio is right there beside the bed.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Anyone can see it says", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(100, 41, "three-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Whoever Was Using This Bed", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("03:30 - Now, look. I am not going to call Dr. McGrath at three thirty in the morning to ask if it's all right for my son to eat worms. That's flat. - Thomas Rockwell, How to Eat Fried Worms "));
// DEBUG: (5, 5)
// DEBUG: Operating on Now,
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on look.
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on I
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on am
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on not
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on going
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on to
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on call
// DEBUG: 200
// DEBUG: (195, 5)
// DEBUG: Operating on Dr.
// DEBUG: ['Now,', 'look.', 'I', 'am', 'not', 'going', 'to', 'call']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on McGrath
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on at
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Dr.', 'McGrath', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on morning
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on to
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on ask
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on if
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on it's
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on all
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on right
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning', 'to', 'ask', 'if', "it's", 'all']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on for
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on my
// DEBUG: 53
// DEBUG: (48, 41)
// DEBUG: Operating on son
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on to
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on eat
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on worms.
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on That's
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on flat.
// DEBUG: ['right', 'for', 'my', 'son', 'to', 'eat', 'worms.', "That's"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['three thirty']
// DEBUG: drawing cursor (74, 17)
// DEBUG: ['- How to Eat Fried Worms']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "Now, look. I am not going to call", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Dr. McGrath at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING in the morning to ask if it's all", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "right for my son to eat worms. That's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(74, 17, "three thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- How to Eat Fried Worms", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 03:31 for 0 quotations:
    case 211:
      Serial.println(F("No quotes for 03:31"));
      return;

    // Codegen for 03:32 for 0 quotations:
    case 212:
      Serial.println(F("No quotes for 03:32"));
      return;

    // Codegen for 03:33 for 1 quotations:
    case 213:
      Serial.println(F("Only one option for 03:33:"));
    Serial.println(F("03:33 - A draft whistled in around the kitchen window frame and I shivered. The digital clock on Perkus's stove read 3:33. - Jonathan Lethem, Chronic City"));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on draft
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on whistled
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on in
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on around
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on the
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on kitchen
// DEBUG: ['A', 'draft', 'whistled', 'in', 'around', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on window
// DEBUG: 61
// DEBUG: (56, 17)
// DEBUG: Operating on frame
// DEBUG: 97
// DEBUG: (92, 17)
// DEBUG: Operating on and
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on I
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on shivered.
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on The
// DEBUG: ['kitchen', 'window', 'frame', 'and', 'I', 'shivered.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on digital
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on clock
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on on
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on Perkus's
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on stove
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on read
// DEBUG: ['The', 'digital', 'clock', 'on', "Perkus's", 'stove']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 122
// DEBUG: ['3:33']
// DEBUG: drawing cursor (10, 41)
// DEBUG: ['- Chronic City']
// DEBUG: drawing cursor (109, 192)
    paint.Paint_DrawString_EN(5, 5, "A draft whistled in around the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "kitchen window frame and I shivered.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "The digital clock on Perkus's stove", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(10, 41, "3:33", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(109, 192, "- Chronic City", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:34 for 1 quotations:
    case 214:
      Serial.println(F("Only one option for 03:34:"));
    Serial.println(F("03:34 - It was 3:34 am. and he was wide-awake. He'd heard the phone ring and the sound of his uncle's voice. - Muriel Jensen, Always Florence"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on and
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on he
// DEBUG: ['It', 'was', 'TIMESTRING', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on was
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on wide-awake.
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on He'd
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on heard
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on the
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on phone
// DEBUG: ['he', 'was', 'wide-awake.', "He'd", 'heard', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on ring
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on and
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on the
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on sound
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on of
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on his
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on uncle's
// DEBUG: ['phone', 'ring', 'and', 'the', 'sound', 'of', 'his']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on voice.
// DEBUG: 61
// DEBUG: ['3:34 am.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Always Florence']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "he was wide-awake. He'd heard the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "phone ring and the sound of his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "3:34 am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Always Florence", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:35 for 1 quotations:
    case 215:
      Serial.println(F("Only one option for 03:35:"));
    Serial.println(F("03:35 - He could just see the hands of the alarm clock in the darkness: 3.35 a.m. He adjusted his pillow and shut his eyes. - Henning Mankell, The Dogs of Riga"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on could
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on just
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on see
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on the
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on hands
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on of
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on the
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on alarm
// DEBUG: ['He', 'could', 'just', 'see', 'the', 'hands', 'of', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on clock
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on in
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on the
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on darkness:
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['alarm', 'clock', 'in', 'the', 'darkness:']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on He
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on adjusted
// DEBUG: ['TIMESTRING', 'He']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on his
// DEBUG: 41
// DEBUG: (36, 41)
// DEBUG: Operating on pillow
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on and
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on shut
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on his
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on eyes.
// DEBUG: 193
// DEBUG: ['3.35 a.m.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- The Dogs of Riga']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "He could just see the hands of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "alarm clock in the darkness:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING He", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "3.35 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- The Dogs of Riga", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:36 for 1 quotations:
    case 216:
      Serial.println(F("Only one option for 03:36:"));
    Serial.println(F("03:36 - As I near Deadhorse, it's 3:36 a.m. and seventeen below. Tall, sodium vapor lights spill on the road and there are no trees, only machines, mechanical shadows. There isn't even a church. It tells you everything. - Richard C Matheson, Zoopraxis"));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on I
// DEBUG: 33
// DEBUG: (28, 5)
// DEBUG: Operating on near
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on Deadhorse,
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on it's
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['As', 'I', 'near', 'Deadhorse,', "it's"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on and
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on seventeen
// DEBUG: ['TIMESTRING', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on below.
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on Tall,
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on sodium
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on vapor
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on lights
// DEBUG: ['seventeen', 'below.', 'Tall,', 'sodium', 'vapor']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on spill
// DEBUG: 53
// DEBUG: (48, 41)
// DEBUG: Operating on on
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on road
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on and
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on there
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on are
// DEBUG: 199
// DEBUG: (194, 41)
// DEBUG: Operating on no
// DEBUG: ['lights', 'spill', 'on', 'the', 'road', 'and', 'there', 'are']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on trees,
// DEBUG: 56
// DEBUG: (51, 53)
// DEBUG: Operating on only
// DEBUG: 85
// DEBUG: (80, 53)
// DEBUG: Operating on machines,
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on mechanical
// DEBUG: ['no', 'trees,', 'only', 'machines,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on shadows.
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on There
// DEBUG: 114
// DEBUG: (109, 65)
// DEBUG: Operating on isn't
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on even
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on a
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on church.
// DEBUG: ['mechanical', 'shadows.', 'There', "isn't", 'even', 'a']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on It
// DEBUG: 33
// DEBUG: (28, 77)
// DEBUG: Operating on tells
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on you
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on everything.
// DEBUG: 169
// DEBUG: ['3:36 a.m.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Zoopraxis']
// DEBUG: drawing cursor (130, 192)
    paint.Paint_DrawString_EN(5, 5, "As I near Deadhorse, it's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "seventeen below. Tall, sodium vapor", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "lights spill on the road and there are", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "no trees, only machines,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "mechanical shadows. There isn't even a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "3:36 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(130, 192, "- Zoopraxis", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:37 for 1 quotations:
    case 217:
      Serial.println(F("Only one option for 03:37:"));
    Serial.println(F("03:37 - It was three thirty-seven A.M., and for once Maggie was asleep. She had got to be a pretty good sleeper in the last few months. Clyde was prouder of this fact than anything. - Stephen Bury, The Cobweb"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on three
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'three']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on for
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on once
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on Maggie
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on was
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on asleep.
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on She
// DEBUG: ['TIMESTRING,', 'and', 'for', 'once', 'Maggie', 'was', 'asleep.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on had
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on got
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on to
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on be
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on a
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on pretty
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on good
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on sleeper
// DEBUG: ['She', 'had', 'got', 'to', 'be', 'a', 'pretty', 'good']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on last
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on few
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on months.
// DEBUG: 156
// DEBUG: (151, 41)
// DEBUG: Operating on Clyde
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on was
// DEBUG: ['sleeper', 'in', 'the', 'last', 'few', 'months.', 'Clyde']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on prouder
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on of
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on this
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on fact
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on than
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on anything.
// DEBUG: ['was', 'prouder', 'of', 'this', 'fact', 'than']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['thirty-seven A.M.']
// DEBUG: drawing cursor (78, 5)
// DEBUG: ['- Stephen Bury, The Cobweb']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "It was three", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING, and for once Maggie was asleep.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "She had got to be a pretty good", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "sleeper in the last few months. Clyde", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "was prouder of this fact than", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(78, 5, "thirty-seven A.M.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Stephen Bury, The Cobweb", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:38 for 1 quotations:
    case 218:
      Serial.println(F("Only one option for 03:38:"));
    Serial.println(F("03:38 - At 3.38am, it began to snow in Bowling Green, Kentucky. The geese circling the city flew back to the park, landed, and hunkered down to sit it out on their island in the lake. - Connie Willis, Just Like the Ones we Used to Know"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on it
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on began
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on to
// DEBUG: ['At', 'TIMESTRING,', 'it', 'began']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on snow
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on in
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on Bowling
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on Green,
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on Kentucky.
// DEBUG: ['to', 'snow', 'in', 'Bowling', 'Green,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on The
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on geese
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on circling
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on the
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on city
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on flew
// DEBUG: ['Kentucky.', 'The', 'geese', 'circling', 'the', 'city']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on back
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on to
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on the
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on park,
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on landed,
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on and
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on hunkered
// DEBUG: ['flew', 'back', 'to', 'the', 'park,', 'landed,', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on down
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on to
// DEBUG: 63
// DEBUG: (58, 53)
// DEBUG: Operating on sit
// DEBUG: 85
// DEBUG: (80, 53)
// DEBUG: Operating on it
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on out
// DEBUG: 122
// DEBUG: (117, 53)
// DEBUG: Operating on on
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on their
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on island
// DEBUG: ['hunkered', 'down', 'to', 'sit', 'it', 'out', 'on', 'their']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 65)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on lake.
// DEBUG: 90
// DEBUG: ['3.38am']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Connie Willis']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING, it began", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "to snow in Bowling Green,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Kentucky. The geese circling the city", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "flew back to the park, landed, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "hunkered down to sit it out on their", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "3.38am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Connie Willis", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:39 for 1 quotations:
    case 219:
      Serial.println(F("Only one option for 03:39:"));
    Serial.println(F("03:39 - 23 October 1893 3.39am. Upon further thought, I feel it necessary to explain that exile into the Master's workshop is not an unpleasant fate. It is not simply some bare-walled cellar devoid of stimulation - quite the opposite. - William Jablonsky, The Clockwork man"));
// DEBUG: (5, 5)
// DEBUG: Operating on 23
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on October
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on 1893
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['23', 'October', '1893']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on Upon
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on further
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on thought,
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on I
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on feel
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on it
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on necessary
// DEBUG: ['TIMESTRING', 'Upon', 'further', 'thought,', 'I', 'feel', 'it']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on to
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on explain
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on that
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on exile
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on into
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on the
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on Master's
// DEBUG: ['necessary', 'to', 'explain', 'that', 'exile', 'into', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on workshop
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on is
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on not
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on an
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on unpleasant
// DEBUG: 199
// DEBUG: (194, 41)
// DEBUG: Operating on fate.
// DEBUG: ["Master's", 'workshop', 'is', 'not', 'an', 'unpleasant']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on It
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on is
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on not
// DEBUG: 68
// DEBUG: (63, 53)
// DEBUG: Operating on simply
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on some
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on bare-walled
// DEBUG: ['fate.', 'It', 'is', 'not', 'simply', 'some']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on cellar
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on devoid
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on of
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on stimulation
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on -
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on quite
// DEBUG: ['bare-walled', 'cellar', 'devoid', 'of', 'stimulation', '-']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 77)
// DEBUG: Operating on opposite.
// DEBUG: 102
// DEBUG: ['3.39am.']
// DEBUG: drawing cursor (99, 5)
// DEBUG: ['- The Clockwork man']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "23 October 1893", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING Upon further thought, I feel it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "necessary to explain that exile into the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Master's workshop is not an unpleasant", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "fate. It is not simply some", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "bare-walled cellar devoid of stimulation -", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(99, 5, "3.39am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- The Clockwork man", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:40 for 1 quotations:
    case 220:
      Serial.println(F("Only one option for 03:40:"));
    Serial.println(F("03:40 - His bedside clock shows three forty. He has no idea what he's doing out of bed: he has no need to relieve himself, nor is he disturbed by a dream or some element of the day before, or even by the state of the world. - Ian McEwan, Saturday"));
// DEBUG: (5, 5)
// DEBUG: Operating on His
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on bedside
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on clock
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on shows
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['His', 'bedside', 'clock', 'shows']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on He
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on has
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on no
// DEBUG: ['TIMESTRING.', 'He', 'has']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on idea
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on what
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on he's
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on doing
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on out
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on of
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on bed:
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on he
// DEBUG: ['no', 'idea', 'what', "he's", 'doing', 'out', 'of', 'bed:']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on has
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on no
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on need
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on to
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on relieve
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on himself,
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on nor
// DEBUG: ['he', 'has', 'no', 'need', 'to', 'relieve', 'himself,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on is
// DEBUG: 29
// DEBUG: (24, 53)
// DEBUG: Operating on he
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on disturbed
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on by
// DEBUG: 123
// DEBUG: (118, 53)
// DEBUG: Operating on a
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on dream
// DEBUG: 167
// DEBUG: (162, 53)
// DEBUG: Operating on or
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on some
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on element
// DEBUG: ['nor', 'is', 'he', 'disturbed', 'by', 'a', 'dream', 'or', 'some']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 65)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 65)
// DEBUG: Operating on day
// DEBUG: 77
// DEBUG: (72, 65)
// DEBUG: Operating on before,
// DEBUG: 127
// DEBUG: (122, 65)
// DEBUG: Operating on or
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on even
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on by
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on the
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on state
// DEBUG: ['element', 'of', 'the', 'day', 'before,', 'or', 'even', 'by', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 77)
// DEBUG: Operating on world.
// DEBUG: 96
// DEBUG: ['three forty']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Ian McEwan, Saturday']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "His bedside clock shows", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. He has", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "no idea what he's doing out of bed:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "he has no need to relieve himself,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "nor is he disturbed by a dream or some", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "element of the day before, or even by the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "three forty", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Ian McEwan, Saturday", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:41 for 1 quotations:
    case 221:
      Serial.println(F("Only one option for 03:41:"));
    Serial.println(F("03:41 - The alarm clock said 3.41am. He sat up. Why was the alarm clock slow? He picked up the alarm clock and adjusted the hands to show the same time as his wristwatch: 3.44am - Henning Mankell, The Dogs of Riga"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on alarm
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on clock
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on said
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'alarm', 'clock', 'said']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on He
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on sat
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on up.
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on Why
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on was
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on alarm
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on clock
// DEBUG: ['TIMESTRING', 'He', 'sat', 'up.', 'Why', 'was', 'the', 'alarm']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on slow?
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on He
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on picked
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on up
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on alarm
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on clock
// DEBUG: ['clock', 'slow?', 'He', 'picked', 'up', 'the', 'alarm']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on adjusted
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on the
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on hands
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on to
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on show
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on the
// DEBUG: ['clock', 'and', 'adjusted', 'the', 'hands', 'to', 'show']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on same
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on time
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on as
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on his
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on wristwatch:
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on 3.44am
// DEBUG: ['the', 'same', 'time', 'as', 'his', 'wristwatch:']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['3.41am.']
// DEBUG: drawing cursor (128, 5)
// DEBUG: ['- The Dogs of Riga']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "The alarm clock said", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING He sat up. Why was the alarm", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "clock slow? He picked up the alarm", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "clock and adjusted the hands to show", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "the same time as his wristwatch:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(128, 5, "3.41am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- The Dogs of Riga", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:42 for 1 quotations:
    case 222:
      Serial.println(F("Only one option for 03:42:"));
    Serial.println(F("03:42 - We are due in Yellow Sky at 3:42, he said, looking tenderly into her eyes. \"Oh, are we?\" she said, as if she had not been aware of it. To evince surprise at her husband's statement was part of her wifely amiability. - Stephen Crane, Bride Comes to Yellow Sky"));
// DEBUG: (5, 5)
// DEBUG: Operating on We
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on are
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on due
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on in
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on Yellow
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on Sky
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on at
// DEBUG: 164
// DEBUG: (159, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['We', 'are', 'due', 'in', 'Yellow', 'Sky', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on he
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on said,
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on looking
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on tenderly
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on into
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on her
// DEBUG: ['TIMESTRING,', 'he', 'said,', 'looking', 'tenderly', 'into']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on eyes.
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on \"Oh,
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on are
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on we?\"
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on she
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on said,
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on as
// DEBUG: ['her', 'eyes.', '\\"Oh,', 'are', 'we?\\"', 'she', 'said,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on if
// DEBUG: 28
// DEBUG: (23, 41)
// DEBUG: Operating on she
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on had
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on not
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on been
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on aware
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on of
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on it.
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on To
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on evince
// DEBUG: ['as', 'if', 'she', 'had', 'not', 'been', 'aware', 'of', 'it.', 'To']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on surprise
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on at
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on her
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on husband's
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on statement
// DEBUG: ['evince', 'surprise', 'at', 'her', "husband's"]
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on was
// DEBUG: 42
// DEBUG: (37, 65)
// DEBUG: Operating on part
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on of
// DEBUG: 86
// DEBUG: (81, 65)
// DEBUG: Operating on her
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on wifely
// DEBUG: 151
// DEBUG: (146, 65)
// DEBUG: Operating on amiability.
// DEBUG: ['statement', 'was', 'part', 'of', 'her', 'wifely']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['3:42']
// DEBUG: drawing cursor (159, 5)
// DEBUG: ['- Bride Comes to Yellow Sky']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "We are due in Yellow Sky at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING, he said, looking tenderly into", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "her eyes. \"Oh, are we?\" she said,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "as if she had not been aware of it. To", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "evince surprise at her husband's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "statement was part of her wifely", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(159, 5, "3:42", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- Bride Comes to Yellow Sky", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:43 for 1 quotations:
    case 223:
      Serial.println(F("Only one option for 03:43:"));
    Serial.println(F("03:43 - The clock says 3.43am. The thermometer says it's a chilly fourteen degrees Fahrenheit. The weatherman says the cold spell will last until Thursday, so bundle up and bundle up some more. There are icicles barring the window of the bat cave. - David Mitchell, Ghostwritten"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on clock
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on says
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'clock', 'says']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on The
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on thermometer
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on says
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on it's
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on a
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on chilly
// DEBUG: ['TIMESTRING', 'The', 'thermometer', 'says', "it's", 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on fourteen
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on degrees
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on Fahrenheit.
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on The
// DEBUG: ['chilly', 'fourteen', 'degrees', 'Fahrenheit.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on weatherman
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on says
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on the
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on cold
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on spell
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on will
// DEBUG: ['The', 'weatherman', 'says', 'the', 'cold', 'spell']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on last
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on until
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on Thursday,
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on so
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on bundle
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on up
// DEBUG: ['will', 'last', 'until', 'Thursday,', 'so', 'bundle']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on and
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on bundle
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on up
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on some
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on more.
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on There
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on are
// DEBUG: ['up', 'and', 'bundle', 'up', 'some', 'more.', 'There']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on icicles
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on barring
// DEBUG: 114
// DEBUG: (109, 77)
// DEBUG: Operating on the
// DEBUG: 136
// DEBUG: (131, 77)
// DEBUG: Operating on window
// DEBUG: 179
// DEBUG: (174, 77)
// DEBUG: Operating on of
// DEBUG: 194
// DEBUG: (189, 77)
// DEBUG: Operating on the
// DEBUG: ['are', 'icicles', 'barring', 'the', 'window', 'of']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on bat
// DEBUG: 36
// DEBUG: (31, 89)
// DEBUG: Operating on cave.
// DEBUG: 72
// DEBUG: ['3.43am.']
// DEBUG: drawing cursor (92, 5)
// DEBUG: ['- Ghostwritten']
// DEBUG: drawing cursor (109, 192)
    paint.Paint_DrawString_EN(5, 5, "The clock says", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING The thermometer says it's a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "chilly fourteen degrees Fahrenheit.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "The weatherman says the cold spell", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "will last until Thursday, so bundle", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "up and bundle up some more. There", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "are icicles barring the window of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(92, 5, "3.43am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(109, 192, "- Ghostwritten", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:44 for 1 quotations:
    case 224:
      Serial.println(F("Only one option for 03:44:"));
    Serial.println(F("03:44 - It was dark. After she had switched the light on and been to the toilet, she checked her watch: 3.44 a.m. She undressed, put the cat out the door and returned to the twin bed. - Will Self, Liver: Leberknödel"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on dark.
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on After
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on she
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on had
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on switched
// DEBUG: ['It', 'was', 'dark.', 'After', 'she', 'had']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on light
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on on
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on and
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on been
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on to
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on the
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on toilet,
// DEBUG: ['switched', 'the', 'light', 'on', 'and', 'been', 'to', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on she
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on checked
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on her
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on watch:
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['toilet,', 'she', 'checked', 'her', 'watch:']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on She
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on undressed,
// DEBUG: ['TIMESTRING', 'She']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on put
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on the
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on cat
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on out
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on the
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on door
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on and
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on returned
// DEBUG: ['undressed,', 'put', 'the', 'cat', 'out', 'the', 'door', 'and']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 65)
// DEBUG: Operating on the
// DEBUG: 56
// DEBUG: (51, 65)
// DEBUG: Operating on twin
// DEBUG: 85
// DEBUG: (80, 65)
// DEBUG: Operating on bed.
// DEBUG: 114
// DEBUG: ['3.44 a.m.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Liver: Leberknödel']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "It was dark. After she had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "switched the light on and been to the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "toilet, she checked her watch:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING She", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "undressed, put the cat out the door and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "3.44 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Liver: Leberknödel", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:45 for 1 quotations:
    case 225:
      Serial.println(F("Only one option for 03:45:"));
    Serial.println(F("03:45 - LORD CAVERSHAM: Well, sir! what are you doing here? Wasting your life as usual! You should be in bed, sir. You keep too late hours! I heard of you the other night at Lady Rufford's dancing till four o' clock in the morning! LORD GORING: Only a quarter to four, father. - Oscar Wilde, An Ideal Husband"));
// DEBUG: (5, 5)
// DEBUG: Operating on LORD
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on CAVERSHAM:
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on Well,
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on sir!
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on what
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on are
// DEBUG: ['LORD', 'CAVERSHAM:', 'Well,', 'sir!', 'what']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on you
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on doing
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on here?
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on Wasting
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on your
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on life
// DEBUG: ['are', 'you', 'doing', 'here?', 'Wasting', 'your']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on as
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on usual!
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on You
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on should
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on be
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on in
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on bed,
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on sir.
// DEBUG: ['life', 'as', 'usual!', 'You', 'should', 'be', 'in', 'bed,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on You
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on keep
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on too
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on late
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on hours!
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on I
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on heard
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on of
// DEBUG: ['sir.', 'You', 'keep', 'too', 'late', 'hours!', 'I', 'heard']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on you
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on the
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on other
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on night
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on at
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on Lady
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on Rufford's
// DEBUG: ['of', 'you', 'the', 'other', 'night', 'at', 'Lady']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on dancing
// DEBUG: 70
// DEBUG: (65, 65)
// DEBUG: Operating on till
// DEBUG: 99
// DEBUG: (94, 65)
// DEBUG: Operating on four
// DEBUG: 128
// DEBUG: (123, 65)
// DEBUG: Operating on o'
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on clock
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on in
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on the
// DEBUG: ["Rufford's", 'dancing', 'till', 'four', "o'", 'clock', 'in']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on morning!
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on LORD
// DEBUG: 100
// DEBUG: (95, 77)
// DEBUG: Operating on GORING:
// DEBUG: 150
// DEBUG: (145, 77)
// DEBUG: Operating on Only
// DEBUG: 179
// DEBUG: (174, 77)
// DEBUG: Operating on a
// DEBUG: 187
// DEBUG: (182, 77)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'morning!', 'LORD', 'GORING:', 'Only', 'a']
// DEBUG: drawing cursor (5, 77)
// DEBUG: 193
// DEBUG: (188, 89)
// DEBUG: Operating on father.
// DEBUG: ['TIMESTRING,']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['quarter to four']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- An Ideal Husband']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "LORD CAVERSHAM: Well, sir! what", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "are you doing here? Wasting your", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "life as usual! You should be in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "sir. You keep too late hours! I heard", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "of you the other night at Lady", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "Rufford's dancing till four o' clock in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "the morning! LORD GORING: Only a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "TIMESTRING,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "quarter to four", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- An Ideal Husband", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:46 for 0 quotations:
    case 226:
      Serial.println(F("No quotes for 03:46"));
      return;

    // Codegen for 03:47 for 1 quotations:
    case 227:
      Serial.println(F("Only one option for 03:47:"));
    Serial.println(F("03:47 - I stayed awake until 3:47. That was the last time I looked at my watch before I fell asleep. It has a luminous face and lights up if you press a button so I could read it in the dark. I was cold and I was frightened Father might come out and find me. But I felt safer in the garden because I was hidden. - Mark Haddon, The Curious Incident Of The Dog In The Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on stayed
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on awake
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on until
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['I', 'stayed', 'awake', 'until']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on That
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on was
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on the
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on last
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on time
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on I
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on looked
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on at
// DEBUG: ['TIMESTRING.', 'That', 'was', 'the', 'last', 'time', 'I', 'looked']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on my
// DEBUG: 28
// DEBUG: (23, 29)
// DEBUG: Operating on watch
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on before
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on I
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on fell
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on asleep.
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on It
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on has
// DEBUG: ['at', 'my', 'watch', 'before', 'I', 'fell', 'asleep.', 'It']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on a
// DEBUG: 22
// DEBUG: (17, 41)
// DEBUG: Operating on luminous
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on face
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on and
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on lights
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on up
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on if
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on you
// DEBUG: ['has', 'a', 'luminous', 'face', 'and', 'lights', 'up', 'if']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on press
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on a
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on button
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on so
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on I
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on could
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on read
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on it
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on in
// DEBUG: ['you', 'press', 'a', 'button', 'so', 'I', 'could', 'read', 'it']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on dark.
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on I
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on was
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on cold
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on and
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on I
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on was
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on frightened
// DEBUG: ['in', 'the', 'dark.', 'I', 'was', 'cold', 'and', 'I', 'was']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on Father
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on might
// DEBUG: 100
// DEBUG: (95, 77)
// DEBUG: Operating on come
// DEBUG: 129
// DEBUG: (124, 77)
// DEBUG: Operating on out
// DEBUG: 151
// DEBUG: (146, 77)
// DEBUG: Operating on and
// DEBUG: 173
// DEBUG: (168, 77)
// DEBUG: Operating on find
// DEBUG: 202
// DEBUG: (197, 77)
// DEBUG: Operating on me.
// DEBUG: ['frightened', 'Father', 'might', 'come', 'out', 'and', 'find']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on But
// DEBUG: 36
// DEBUG: (31, 89)
// DEBUG: Operating on I
// DEBUG: 44
// DEBUG: (39, 89)
// DEBUG: Operating on felt
// DEBUG: 73
// DEBUG: (68, 89)
// DEBUG: Operating on safer
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on in
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 89)
// DEBUG: Operating on garden
// DEBUG: 189
// DEBUG: (184, 89)
// DEBUG: Operating on because
// DEBUG: ['me.', 'But', 'I', 'felt', 'safer', 'in', 'the', 'garden']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on I
// DEBUG: 26
// DEBUG: (21, 101)
// DEBUG: Operating on was
// DEBUG: 48
// DEBUG: (43, 101)
// DEBUG: Operating on hidden.
// DEBUG: 98
// DEBUG: ['3:47']
// DEBUG: drawing cursor (128, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "I stayed awake until", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. That was the last time I looked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "at my watch before I fell asleep. It", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "has a luminous face and lights up if", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "you press a button so I could read it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "in the dark. I was cold and I was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "frightened Father might come out and find", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "me. But I felt safer in the garden", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(128, 5, "3:47", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:48 for 0 quotations:
    case 228:
      Serial.println(F("No quotes for 03:48"));
      return;

    // Codegen for 03:49 for 1 quotations:
    case 229:
      Serial.println(F("Only one option for 03:49:"));
    Serial.println(F("03:49 - It was 3.49 when he hit me because of the two hundred times I had said, \"I don't know.\" He hit me a lot after that. - Len Deighton, The Ipcress File"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on when
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on he
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on hit
// DEBUG: ['It', 'was', 'TIMESTRING', 'when', 'he']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on me
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on because
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on of
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on the
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on two
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on hundred
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on times
// DEBUG: ['hit', 'me', 'because', 'of', 'the', 'two', 'hundred']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on I
// DEBUG: 24
// DEBUG: (19, 29)
// DEBUG: Operating on had
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on said,
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on \"I
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on don't
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on know.\"
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on He
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on hit
// DEBUG: ['times', 'I', 'had', 'said,', '\\"I', "don't", 'know.\\"', 'He']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on me
// DEBUG: 29
// DEBUG: (24, 41)
// DEBUG: Operating on a
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on lot
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on after
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on that.
// DEBUG: 131
// DEBUG: ['3.49']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- The Ipcress File']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING when he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "hit me because of the two hundred", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "times I had said, \"I don't know.\" He", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "3.49", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- The Ipcress File", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:50 for 1 quotations:
    case 230:
      Serial.println(F("Only one option for 03:50:"));
    Serial.println(F("03:50 - She had used her cell phone to leave several messages on the answering machine in Sao Paulo of the young dentist of the previous evening, whose name was Fernando. The first was recorded at ten or five to four in the morning. I'm never going to forget you ... I'm sure we'll meet again somewhere. - Peter Robb, A Death in Brazil: A Book of Omissions"));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on had
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on used
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on her
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on cell
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on phone
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on to
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on leave
// DEBUG: ['She', 'had', 'used', 'her', 'cell', 'phone', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on several
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on messages
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on on
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on the
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on answering
// DEBUG: ['leave', 'several', 'messages', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on machine
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on in
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on Sao
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on Paulo
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on of
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on the
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on young
// DEBUG: ['answering', 'machine', 'in', 'Sao', 'Paulo', 'of', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on dentist
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on of
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on the
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on previous
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on evening,
// DEBUG: ['young', 'dentist', 'of', 'the', 'previous']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on whose
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on name
// DEBUG: 84
// DEBUG: (79, 53)
// DEBUG: Operating on was
// DEBUG: 106
// DEBUG: (101, 53)
// DEBUG: Operating on Fernando.
// DEBUG: 170
// DEBUG: (165, 53)
// DEBUG: Operating on The
// DEBUG: 192
// DEBUG: (187, 53)
// DEBUG: Operating on first
// DEBUG: ['evening,', 'whose', 'name', 'was', 'Fernando.', 'The']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on was
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on recorded
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on at
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['first', 'was', 'recorded', 'at']
// DEBUG: drawing cursor (5, 65)
// DEBUG: []
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 89)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 89)
// DEBUG: Operating on morning.
// DEBUG: 115
// DEBUG: (110, 89)
// DEBUG: Operating on I'm
// DEBUG: 137
// DEBUG: (132, 89)
// DEBUG: Operating on never
// DEBUG: 173
// DEBUG: (168, 89)
// DEBUG: Operating on going
// DEBUG: 209
// DEBUG: (204, 89)
// DEBUG: Operating on to
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning.', "I'm", 'never', 'going']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on forget
// DEBUG: 56
// DEBUG: (51, 101)
// DEBUG: Operating on you
// DEBUG: 78
// DEBUG: (73, 101)
// DEBUG: Operating on ...
// DEBUG: 100
// DEBUG: (95, 101)
// DEBUG: Operating on I'm
// DEBUG: 122
// DEBUG: (117, 101)
// DEBUG: Operating on sure
// DEBUG: 151
// DEBUG: (146, 101)
// DEBUG: Operating on we'll
// DEBUG: 187
// DEBUG: (182, 101)
// DEBUG: Operating on meet
// DEBUG: ['to', 'forget', 'you', '...', "I'm", 'sure', "we'll"]
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on again
// DEBUG: 51
// DEBUG: (46, 113)
// DEBUG: Operating on somewhere.
// DEBUG: 122
// DEBUG: ['ten or five to four']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['- Peter Robb']
// DEBUG: drawing cursor (123, 192)
    paint.Paint_DrawString_EN(5, 5, "She had used her cell phone to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "leave several messages on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "answering machine in Sao Paulo of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "young dentist of the previous", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "evening, whose name was Fernando. The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "first was recorded at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "TIMESTRING in the morning. I'm never going", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "to forget you ... I'm sure we'll", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "ten or five to four", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(123, 192, "- Peter Robb", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:51 for 2 quotations:
    case 231:
      option = random(0, 2);
      Serial.print(F("2 options for 03:51. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("03:51 - I lacked the will and physical strength to get out of bed and move through the dark house, clutching walls and stair rails. To feel my way, reinhabit my body, re-enter the world. Sweat trickled down my ribs. The digital reading on the clock-radio was 3:51. Always odd numbered at times like this. What does it mean? Is death odd-numbered? - Don DeLillo, White Noise "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on lacked
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on will
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on and
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on physical
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on strength
// DEBUG: ['I', 'lacked', 'the', 'will', 'and', 'physical']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on get
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on out
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on of
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on bed
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on and
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on move
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on through
// DEBUG: ['strength', 'to', 'get', 'out', 'of', 'bed', 'and', 'move']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on dark
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on house,
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on clutching
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on walls
// DEBUG: ['through', 'the', 'dark', 'house,', 'clutching']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on stair
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on rails.
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on To
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on feel
// DEBUG: 161
// DEBUG: (156, 41)
// DEBUG: Operating on my
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on way,
// DEBUG: 205
// DEBUG: (200, 41)
// DEBUG: Operating on reinhabit
// DEBUG: ['walls', 'and', 'stair', 'rails.', 'To', 'feel', 'my', 'way,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on my
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on body,
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on re-enter
// DEBUG: 128
// DEBUG: (123, 53)
// DEBUG: Operating on the
// DEBUG: 150
// DEBUG: (145, 53)
// DEBUG: Operating on world.
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on Sweat
// DEBUG: ['reinhabit', 'my', 'body,', 're-enter', 'the', 'world.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on trickled
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on down
// DEBUG: 102
// DEBUG: (97, 65)
// DEBUG: Operating on my
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on ribs.
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on The
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on digital
// DEBUG: ['Sweat', 'trickled', 'down', 'my', 'ribs.', 'The']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on reading
// DEBUG: 68
// DEBUG: (63, 77)
// DEBUG: Operating on on
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on clock-radio
// DEBUG: 183
// DEBUG: (178, 77)
// DEBUG: Operating on was
// DEBUG: 205
// DEBUG: (200, 77)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['digital', 'reading', 'on', 'the', 'clock-radio', 'was']
// DEBUG: drawing cursor (5, 77)
// DEBUG: 116
// DEBUG: (111, 89)
// DEBUG: Operating on Always
// DEBUG: 159
// DEBUG: (154, 89)
// DEBUG: Operating on odd
// DEBUG: 181
// DEBUG: (176, 89)
// DEBUG: Operating on numbered
// DEBUG: ['TIMESTRING.', 'Always', 'odd']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (14, 101)
// DEBUG: Operating on at
// DEBUG: 34
// DEBUG: (29, 101)
// DEBUG: Operating on times
// DEBUG: 70
// DEBUG: (65, 101)
// DEBUG: Operating on like
// DEBUG: 99
// DEBUG: (94, 101)
// DEBUG: Operating on this.
// DEBUG: 135
// DEBUG: (130, 101)
// DEBUG: Operating on What
// DEBUG: 164
// DEBUG: (159, 101)
// DEBUG: Operating on does
// DEBUG: 193
// DEBUG: (188, 101)
// DEBUG: Operating on it
// DEBUG: 208
// DEBUG: (203, 101)
// DEBUG: Operating on mean?
// DEBUG: ['numbered', 'at', 'times', 'like', 'this.', 'What', 'does', 'it']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on Is
// DEBUG: 31
// DEBUG: (26, 113)
// DEBUG: Operating on death
// DEBUG: 67
// DEBUG: (62, 113)
// DEBUG: Operating on odd-numbered?
// DEBUG: 159
// DEBUG: ['3:51']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- Don DeLillo, White Noise ']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "I lacked the will and physical", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "strength to get out of bed and move", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "through the dark house, clutching", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "walls and stair rails. To feel my way,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "reinhabit my body, re-enter the world.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "Sweat trickled down my ribs. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "digital reading on the clock-radio was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "TIMESTRING. Always odd", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "numbered at times like this. What does it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "3:51", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Don DeLillo, White Noise ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("03:51 - The digital reading on the clock-radio was 3:51. Always odd numbers at times like this. What does it mean? Is death odd-numbered? - Don DeLillo, White Noise"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on digital
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on reading
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on on
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on clock-radio
// DEBUG: ['The', 'digital', 'reading', 'on', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on was
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on Always
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on odd
// DEBUG: ['clock-radio', 'was', 'TIMESTRING.', 'Always']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on numbers
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on at
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on times
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on like
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on this.
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on What
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on does
// DEBUG: ['odd', 'numbers', 'at', 'times', 'like', 'this.', 'What']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on mean?
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on Is
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on death
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on odd-numbered?
// DEBUG: 209
// DEBUG: ['3:51']
// DEBUG: drawing cursor (39, 17)
// DEBUG: ['- Don DeLillo, White Noise']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "The digital reading on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "clock-radio was TIMESTRING. Always", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "odd numbers at times like this. What", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(39, 17, "3:51", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Don DeLillo, White Noise", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 03:52 for 0 quotations:
    case 232:
      Serial.println(F("No quotes for 03:52"));
      return;

    // Codegen for 03:53 for 0 quotations:
    case 233:
      Serial.println(F("No quotes for 03:53"));
      return;

    // Codegen for 03:54 for 1 quotations:
    case 234:
      Serial.println(F("Only one option for 03:54:"));
    Serial.println(F("03:54 - The charter flight from Florida touched down at Aldergrove minutes earlier, at 3.54 a.m. - Paul Muldoon, The More a Man Has, the More a Man Wants"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on charter
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on flight
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on from
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on Florida
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on touched
// DEBUG: ['The', 'charter', 'flight', 'from', 'Florida']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on down
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on at
// DEBUG: 62
// DEBUG: (57, 17)
// DEBUG: Operating on Aldergrove
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on minutes
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on earlier,
// DEBUG: ['touched', 'down', 'at', 'Aldergrove', 'minutes']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on at
// DEBUG: 34
// DEBUG: (29, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 169
// DEBUG: ['3.54 a.m.']
// DEBUG: drawing cursor (29, 29)
// DEBUG: ['- Paul Muldoon']
// DEBUG: drawing cursor (109, 192)
    paint.Paint_DrawString_EN(5, 5, "The charter flight from Florida", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "touched down at Aldergrove minutes", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(29, 29, "3.54 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(109, 192, "- Paul Muldoon", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:55 for 1 quotations:
    case 235:
      Serial.println(F("Only one option for 03:55:"));
    Serial.println(F("03:55 - Here in the cavernous basement at 3.55 a.m., in a single pool of light, is Theo Perowne. - Ian McEwan, Saturday"));
// DEBUG: (5, 5)
// DEBUG: Operating on Here
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on in
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on the
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on cavernous
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on basement
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on at
// DEBUG: ['Here', 'in', 'the', 'cavernous', 'basement']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on in
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on a
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on single
// DEBUG: ['at', 'TIMESTRING,', 'in', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on pool
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on of
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on light,
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on is
// DEBUG: 119
// DEBUG: (114, 29)
// DEBUG: Operating on Theo
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on Perowne.
// DEBUG: 205
// DEBUG: ['3.55 a.m.']
// DEBUG: drawing cursor (8, 17)
// DEBUG: ['- Ian McEwan, Saturday']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "Here in the cavernous basement", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "at TIMESTRING, in a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(8, 17, "3.55 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Ian McEwan, Saturday", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:56 for 0 quotations:
    case 236:
      Serial.println(F("No quotes for 03:56"));
      return;

    // Codegen for 03:57 for 1 quotations:
    case 237:
      Serial.println(F("Only one option for 03:57:"));
    Serial.println(F("03:57 - Certain facts were apparent: dark; cold; thundering boots; quilts; pillow; light under the door – the materials of reality - but I could not pin these materials down in time. And the raw materials of reality without that glue of time are materials adrift and reality is as meaningless as the balsa parts of a model airplane scattered to the wind...I am in my old room, yes, in the dark, certainly, and it is cold, obviously, but what time is it? \"Nearly four, son.\" But I mean what time? - Ken Kesey, Sometimes a Great Notion "));
// DEBUG: (5, 5)
// DEBUG: Operating on Certain
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on facts
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on were
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on apparent:
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on dark;
// DEBUG: ['Certain', 'facts', 'were', 'apparent:']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on cold;
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on thundering
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on boots;
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on quilts;
// DEBUG: ['dark;', 'cold;', 'thundering', 'boots;']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on pillow;
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on light
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on under
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on the
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on door
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on –
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on the
// DEBUG: ['quilts;', 'pillow;', 'light', 'under', 'the', 'door', '–']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on materials
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on of
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on reality
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on -
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on but
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on I
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on could
// DEBUG: ['the', 'materials', 'of', 'reality', '-', 'but', 'I']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on not
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on pin
// DEBUG: 60
// DEBUG: (55, 53)
// DEBUG: Operating on these
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on materials
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on down
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on in
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on time.
// DEBUG: ['could', 'not', 'pin', 'these', 'materials', 'down', 'in']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on And
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on the
// DEBUG: 60
// DEBUG: (55, 65)
// DEBUG: Operating on raw
// DEBUG: 82
// DEBUG: (77, 65)
// DEBUG: Operating on materials
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on of
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on reality
// DEBUG: 211
// DEBUG: (206, 65)
// DEBUG: Operating on without
// DEBUG: ['time.', 'And', 'the', 'raw', 'materials', 'of', 'reality']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on that
// DEBUG: 47
// DEBUG: (42, 77)
// DEBUG: Operating on glue
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on of
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on time
// DEBUG: 120
// DEBUG: (115, 77)
// DEBUG: Operating on are
// DEBUG: 142
// DEBUG: (137, 77)
// DEBUG: Operating on materials
// DEBUG: 206
// DEBUG: (201, 77)
// DEBUG: Operating on adrift
// DEBUG: ['without', 'that', 'glue', 'of', 'time', 'are', 'materials']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 89)
// DEBUG: Operating on reality
// DEBUG: 89
// DEBUG: (84, 89)
// DEBUG: Operating on is
// DEBUG: 104
// DEBUG: (99, 89)
// DEBUG: Operating on as
// DEBUG: 119
// DEBUG: (114, 89)
// DEBUG: Operating on meaningless
// DEBUG: 197
// DEBUG: (192, 89)
// DEBUG: Operating on as
// DEBUG: ['adrift', 'and', 'reality', 'is', 'as', 'meaningless']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 101)
// DEBUG: Operating on balsa
// DEBUG: 71
// DEBUG: (66, 101)
// DEBUG: Operating on parts
// DEBUG: 107
// DEBUG: (102, 101)
// DEBUG: Operating on of
// DEBUG: 122
// DEBUG: (117, 101)
// DEBUG: Operating on a
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on model
// DEBUG: 166
// DEBUG: (161, 101)
// DEBUG: Operating on airplane
// DEBUG: ['as', 'the', 'balsa', 'parts', 'of', 'a', 'model']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (14, 113)
// DEBUG: Operating on scattered
// DEBUG: 83
// DEBUG: (78, 113)
// DEBUG: Operating on to
// DEBUG: 98
// DEBUG: (93, 113)
// DEBUG: Operating on the
// DEBUG: 120
// DEBUG: (115, 113)
// DEBUG: Operating on wind...I
// DEBUG: 177
// DEBUG: (172, 113)
// DEBUG: Operating on am
// DEBUG: 192
// DEBUG: (187, 113)
// DEBUG: Operating on in
// DEBUG: 207
// DEBUG: (202, 113)
// DEBUG: Operating on my
// DEBUG: ['airplane', 'scattered', 'to', 'the', 'wind...I', 'am', 'in']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (8, 125)
// DEBUG: Operating on old
// DEBUG: 35
// DEBUG: (30, 125)
// DEBUG: Operating on room,
// DEBUG: 71
// DEBUG: (66, 125)
// DEBUG: Operating on yes,
// DEBUG: 100
// DEBUG: (95, 125)
// DEBUG: Operating on in
// DEBUG: 115
// DEBUG: (110, 125)
// DEBUG: Operating on the
// DEBUG: 137
// DEBUG: (132, 125)
// DEBUG: Operating on dark,
// DEBUG: 173
// DEBUG: (168, 125)
// DEBUG: Operating on certainly,
// DEBUG: ['my', 'old', 'room,', 'yes,', 'in', 'the', 'dark,']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (16, 137)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 137)
// DEBUG: Operating on it
// DEBUG: 58
// DEBUG: (53, 137)
// DEBUG: Operating on is
// DEBUG: 73
// DEBUG: (68, 137)
// DEBUG: Operating on cold,
// DEBUG: 109
// DEBUG: (104, 137)
// DEBUG: Operating on obviously,
// DEBUG: 180
// DEBUG: (175, 137)
// DEBUG: Operating on but
// DEBUG: 202
// DEBUG: (197, 137)
// DEBUG: Operating on what
// DEBUG: ['certainly,', 'and', 'it', 'is', 'cold,', 'obviously,', 'but']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (10, 149)
// DEBUG: Operating on time
// DEBUG: 44
// DEBUG: (39, 149)
// DEBUG: Operating on is
// DEBUG: 59
// DEBUG: (54, 149)
// DEBUG: Operating on it?
// DEBUG: 81
// DEBUG: (76, 149)
// DEBUG: Operating on \"TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['what', 'time', 'is', 'it?']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (19, 161)
// DEBUG: Operating on son.\"
// DEBUG: 67
// DEBUG: (62, 161)
// DEBUG: Operating on But
// DEBUG: 89
// DEBUG: (84, 161)
// DEBUG: Operating on I
// DEBUG: 97
// DEBUG: (92, 161)
// DEBUG: Operating on mean
// DEBUG: 126
// DEBUG: (121, 161)
// DEBUG: Operating on what
// DEBUG: 155
// DEBUG: (150, 161)
// DEBUG: Operating on time?
// DEBUG: 191
// DEBUG: ['Nearly four']
// DEBUG: drawing cursor (76, 149)
// DEBUG: ['- Sometimes a Great Notion']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "Certain facts were apparent:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "dark; cold; thundering boots;", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "quilts; pillow; light under the door –", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the materials of reality - but I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "could not pin these materials down in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "time. And the raw materials of reality", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "without that glue of time are materials", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "adrift and reality is as meaningless", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "as the balsa parts of a model", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "airplane scattered to the wind...I am in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "my old room, yes, in the dark,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "certainly, and it is cold, obviously, but", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 149, "what time is it?", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(76, 149, "Nearly four", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Sometimes a Great Notion", &Font12, WHITE, BLACK);
      return;

    // Codegen for 03:58 for 2 quotations:
    case 238:
      option = random(0, 2);
      Serial.print(F("2 options for 03:58. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("03:58 - The ancient house was deserted, the crumbling garage padlocked, and one was just able to discern - by peering through a crack in the bubbling sun on the window - the face of a clock on the opposite wall. The clock had stopped at two minutes to four early in the morning, or who could tell, it may have been earlier still, yesterday in the afternoon, a couple of hours after Kaiser had left Kamaria for Bartica. - Wilson Harris, Heartland"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on ancient
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on house
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on was
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on deserted,
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on the
// DEBUG: ['The', 'ancient', 'house', 'was', 'deserted,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on crumbling
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on garage
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on padlocked,
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on and
// DEBUG: ['the', 'crumbling', 'garage', 'padlocked,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on one
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on was
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on just
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on able
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on to
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on discern
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on -
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on by
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on peering
// DEBUG: ['and', 'one', 'was', 'just', 'able', 'to', 'discern', '-', 'by']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on through
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on a
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on crack
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on in
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on the
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on bubbling
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on sun
// DEBUG: ['peering', 'through', 'a', 'crack', 'in', 'the', 'bubbling']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on on
// DEBUG: 29
// DEBUG: (24, 53)
// DEBUG: Operating on the
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on window
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on -
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on the
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on face
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on of
// DEBUG: 168
// DEBUG: (163, 53)
// DEBUG: Operating on a
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on clock
// DEBUG: ['sun', 'on', 'the', 'window', '-', 'the', 'face', 'of', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on opposite
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on wall.
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on The
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on clock
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on had
// DEBUG: ['clock', 'on', 'the', 'opposite', 'wall.', 'The', 'clock']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on stopped
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on at
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['had', 'stopped', 'at']
// DEBUG: drawing cursor (5, 77)
// DEBUG: []
// DEBUG: drawing cursor (5, 89)
// DEBUG: (16, 101)
// DEBUG: Operating on early
// DEBUG: 57
// DEBUG: (52, 101)
// DEBUG: Operating on in
// DEBUG: 72
// DEBUG: (67, 101)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 101)
// DEBUG: Operating on morning,
// DEBUG: 151
// DEBUG: (146, 101)
// DEBUG: Operating on or
// DEBUG: 166
// DEBUG: (161, 101)
// DEBUG: Operating on who
// DEBUG: 188
// DEBUG: (183, 101)
// DEBUG: Operating on could
// DEBUG: ['TIMESTRING', 'early', 'in', 'the', 'morning,', 'or', 'who']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on tell,
// DEBUG: 52
// DEBUG: (47, 113)
// DEBUG: Operating on it
// DEBUG: 67
// DEBUG: (62, 113)
// DEBUG: Operating on may
// DEBUG: 89
// DEBUG: (84, 113)
// DEBUG: Operating on have
// DEBUG: 118
// DEBUG: (113, 113)
// DEBUG: Operating on been
// DEBUG: 147
// DEBUG: (142, 113)
// DEBUG: Operating on earlier
// DEBUG: 197
// DEBUG: (192, 113)
// DEBUG: Operating on still,
// DEBUG: ['could', 'tell,', 'it', 'may', 'have', 'been', 'earlier']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (12, 125)
// DEBUG: Operating on yesterday
// DEBUG: 81
// DEBUG: (76, 125)
// DEBUG: Operating on in
// DEBUG: 96
// DEBUG: (91, 125)
// DEBUG: Operating on the
// DEBUG: 118
// DEBUG: (113, 125)
// DEBUG: Operating on afternoon,
// DEBUG: 189
// DEBUG: (184, 125)
// DEBUG: Operating on a
// DEBUG: 197
// DEBUG: (192, 125)
// DEBUG: Operating on couple
// DEBUG: ['still,', 'yesterday', 'in', 'the', 'afternoon,', 'a']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (12, 137)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 137)
// DEBUG: Operating on hours
// DEBUG: 68
// DEBUG: (63, 137)
// DEBUG: Operating on after
// DEBUG: 104
// DEBUG: (99, 137)
// DEBUG: Operating on Kaiser
// DEBUG: 147
// DEBUG: (142, 137)
// DEBUG: Operating on had
// DEBUG: 169
// DEBUG: (164, 137)
// DEBUG: Operating on left
// DEBUG: 198
// DEBUG: (193, 137)
// DEBUG: Operating on Kamaria
// DEBUG: ['couple', 'of', 'hours', 'after', 'Kaiser', 'had', 'left']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (13, 149)
// DEBUG: Operating on for
// DEBUG: 40
// DEBUG: (35, 149)
// DEBUG: Operating on Bartica.
// DEBUG: 97
// DEBUG: ['two minutes to four']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- Wilson Harris, Heartland']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "The ancient house was deserted,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the crumbling garage padlocked,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "and one was just able to discern - by", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "peering through a crack in the bubbling", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "sun on the window - the face of a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "clock on the opposite wall. The clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "had stopped at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "TIMESTRING early in the morning, or who", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "could tell, it may have been earlier", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "still, yesterday in the afternoon, a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "couple of hours after Kaiser had left", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "two minutes to four", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Wilson Harris, Heartland", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("03:58 - The clock atop the clubhouse reads 3:58. - Don Delillo, Underworld "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on clock
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on atop
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on the
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on clubhouse
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on reads
// DEBUG: ['The', 'clock', 'atop', 'the', 'clubhouse']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 123
// DEBUG: ['3:58']
// DEBUG: drawing cursor (11, 17)
// DEBUG: ['- Don Delillo, Underworld ']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "The clock atop the clubhouse", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(11, 17, "3:58", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Don Delillo, Underworld ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 03:59 for 1 quotations:
    case 239:
      Serial.println(F("Only one option for 03:59:"));
    Serial.println(F("03:59 - And the raw materials of reality without that glue of time are materials adrift and reality is as meaningless as the balsa parts of a model airplane scattered to the wind...I am in my old room, yes, in the dark, certainly, and it is cold, obviously, but what time is it? \"Nearly four, son.\" - Ken Kesey, Sometimes a Great Notion"));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on raw
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on materials
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on of
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on reality
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on without
// DEBUG: ['And', 'the', 'raw', 'materials', 'of', 'reality']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on that
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on glue
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on of
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on time
// DEBUG: 120
// DEBUG: (115, 17)
// DEBUG: Operating on are
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on materials
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on adrift
// DEBUG: ['without', 'that', 'glue', 'of', 'time', 'are', 'materials']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on reality
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on is
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on as
// DEBUG: 119
// DEBUG: (114, 29)
// DEBUG: Operating on meaningless
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on as
// DEBUG: ['adrift', 'and', 'reality', 'is', 'as', 'meaningless']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on balsa
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on parts
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on of
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on a
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on model
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on airplane
// DEBUG: ['as', 'the', 'balsa', 'parts', 'of', 'a', 'model']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on scattered
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on to
// DEBUG: 98
// DEBUG: (93, 53)
// DEBUG: Operating on the
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on wind...I
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on am
// DEBUG: 192
// DEBUG: (187, 53)
// DEBUG: Operating on in
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on my
// DEBUG: ['airplane', 'scattered', 'to', 'the', 'wind...I', 'am', 'in']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on old
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on room,
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on yes,
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on in
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on the
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on dark,
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on certainly,
// DEBUG: ['my', 'old', 'room,', 'yes,', 'in', 'the', 'dark,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 77)
// DEBUG: Operating on it
// DEBUG: 58
// DEBUG: (53, 77)
// DEBUG: Operating on is
// DEBUG: 73
// DEBUG: (68, 77)
// DEBUG: Operating on cold,
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on obviously,
// DEBUG: 180
// DEBUG: (175, 77)
// DEBUG: Operating on but
// DEBUG: 202
// DEBUG: (197, 77)
// DEBUG: Operating on what
// DEBUG: ['certainly,', 'and', 'it', 'is', 'cold,', 'obviously,', 'but']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on time
// DEBUG: 44
// DEBUG: (39, 89)
// DEBUG: Operating on is
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on it?
// DEBUG: 81
// DEBUG: (76, 89)
// DEBUG: Operating on \"TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['what', 'time', 'is', 'it?']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (19, 101)
// DEBUG: Operating on son.\"
// DEBUG: 67
// DEBUG: ['Nearly four']
// DEBUG: drawing cursor (76, 89)
// DEBUG: ['- Sometimes a Great Notion']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "And the raw materials of reality", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "without that glue of time are materials", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "adrift and reality is as meaningless", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "as the balsa parts of a model", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "airplane scattered to the wind...I am in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "my old room, yes, in the dark,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "certainly, and it is cold, obviously, but", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "what time is it?", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(76, 89, "Nearly four", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Sometimes a Great Notion", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:00 for 7 quotations:
    case 240:
      option = random(0, 7);
      Serial.print(F("7 options for 04:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("04:00 - Nothing happened, he said wanly. \"I waited, and about four o'clock she came to the window and stood there for a minute and then turned out the light. - F. Scott Fitzgerald, The Great Gatsby "));
// DEBUG: (5, 5)
// DEBUG: Operating on Nothing
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on happened,
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on he
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on said
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on wanly.
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on \"I
// DEBUG: ['Nothing', 'happened,', 'he', 'said', 'wanly.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on waited,
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on and
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on about
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['\\"I', 'waited,', 'and', 'about']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on she
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on came
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on to
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on window
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on and
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on stood
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on there
// DEBUG: ['TIMESTRING', 'she', 'came', 'to', 'the', 'window', 'and', 'stood']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on for
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on a
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on minute
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on and
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on then
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on turned
// DEBUG: 183
// DEBUG: (178, 41)
// DEBUG: Operating on out
// DEBUG: 205
// DEBUG: (200, 41)
// DEBUG: Operating on the
// DEBUG: ['there', 'for', 'a', 'minute', 'and', 'then', 'turned', 'out']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on light.
// DEBUG: 57
// DEBUG: ["four o'clock"]
// DEBUG: drawing cursor (117, 17)
// DEBUG: ['- The Great Gatsby']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "Nothing happened, he said wanly.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "\"I waited, and about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING she came to the window and stood", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "there for a minute and then turned out", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(117, 17, "four o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Great Gatsby", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("04:00 - I looked at the clock and it was (yes, you guessed it) four am. I should have taken comfort from the fact that approximately quarter of the Greenwich Mean Time world had just jolted awake also and were lying, staring miserably into the darkness, worrying ... - Marian Keyes, Watermelon "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on looked
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on at
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on the
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on clock
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on and
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on it
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on was
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on (yes,
// DEBUG: ['I', 'looked', 'at', 'the', 'clock', 'and', 'it', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on you
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on guessed
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on it)
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['(yes,', 'you', 'guessed', 'it)']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on I
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on should
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on have
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on taken
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on comfort
// DEBUG: 187
// DEBUG: (182, 29)
// DEBUG: Operating on from
// DEBUG: ['TIMESTRING', 'I', 'should', 'have', 'taken', 'comfort']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on fact
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on that
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on approximately
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on quarter
// DEBUG: ['from', 'the', 'fact', 'that', 'approximately']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on Greenwich
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on Mean
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on Time
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on world
// DEBUG: ['quarter', 'of', 'the', 'Greenwich', 'Mean', 'Time']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on had
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on just
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on jolted
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on awake
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on also
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on and
// DEBUG: 197
// DEBUG: (192, 65)
// DEBUG: Operating on were
// DEBUG: ['world', 'had', 'just', 'jolted', 'awake', 'also', 'and']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on lying,
// DEBUG: 58
// DEBUG: (53, 77)
// DEBUG: Operating on staring
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on miserably
// DEBUG: 172
// DEBUG: (167, 77)
// DEBUG: Operating on into
// DEBUG: 201
// DEBUG: (196, 77)
// DEBUG: Operating on the
// DEBUG: ['were', 'lying,', 'staring', 'miserably', 'into']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on darkness,
// DEBUG: 78
// DEBUG: (73, 89)
// DEBUG: Operating on worrying
// DEBUG: 135
// DEBUG: (130, 89)
// DEBUG: Operating on ...
// DEBUG: 157
// DEBUG: ['four am.']
// DEBUG: drawing cursor (105, 17)
// DEBUG: ['- Marian Keyes, Watermelon ']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "I looked at the clock and it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "(yes, you guessed it)", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING I should have taken comfort", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "from the fact that approximately", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "quarter of the Greenwich Mean Time", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "world had just jolted awake also and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "were lying, staring miserably into", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(105, 17, "four am.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Marian Keyes, Watermelon ", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("04:00 - Suddenly, he started to cry. Curled up on the sofa he sobbed loudly. Michel looked at his watch; it was just after 4am. On the screen a wild cat had a rabbit in its mouth. - Michel Houellebecq, Atomised "));
// DEBUG: (5, 5)
// DEBUG: Operating on Suddenly,
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on he
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on started
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on to
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on cry.
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on Curled
// DEBUG: ['Suddenly,', 'he', 'started', 'to', 'cry.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on up
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on on
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on sofa
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on he
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on sobbed
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on loudly.
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on Michel
// DEBUG: ['Curled', 'up', 'on', 'the', 'sofa', 'he', 'sobbed', 'loudly.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on looked
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on at
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on his
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on watch;
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on it
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on was
// DEBUG: 177
// DEBUG: (172, 29)
// DEBUG: Operating on just
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on after
// DEBUG: ['Michel', 'looked', 'at', 'his', 'watch;', 'it', 'was', 'just']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on On
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on the
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on screen
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on a
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on wild
// DEBUG: ['after', 'TIMESTRING.', 'On', 'the', 'screen', 'a']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on cat
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on had
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on a
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on rabbit
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on in
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on its
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on mouth.
// DEBUG: 190
// DEBUG: ['4am']
// DEBUG: drawing cursor (11, 41)
// DEBUG: ['- Atomised']
// DEBUG: drawing cursor (137, 192)
          paint.Paint_DrawString_EN(5, 5, "Suddenly, he started to cry.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Curled up on the sofa he sobbed loudly.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Michel looked at his watch; it was just", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "after TIMESTRING. On the screen a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(11, 41, "4am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(137, 192, "- Atomised", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("04:00 - The Birds begun at Four o'clock- Their period for Dawn- - Emily Dickinson, The Birds begun at Four o'clock"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Birds
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on begun
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on at
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on TIMESTRING-
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'Birds', 'begun', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on Their
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on period
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on for
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on Dawn-
// DEBUG: 159
// DEBUG: ["Four o'clock"]
// DEBUG: drawing cursor (114, 5)
// DEBUG: ['- Emily Dickinson']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "The Birds begun at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(114, 5, "Four o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Emily Dickinson", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("04:00 - The night before Albert Kessler arrived in Santa Teresa, at four in the morning, Sergio Gonzalez Rodriguez got a call from Azucena Esquivel Plata - Roberto Bolano, 2666"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on night
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on before
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on Albert
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on Kessler
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on arrived
// DEBUG: ['The', 'night', 'before', 'Albert', 'Kessler']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on Santa
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on Teresa,
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['arrived', 'in', 'Santa', 'Teresa,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on Sergio
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on Gonzalez
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on Rodriguez
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on got
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on a
// DEBUG: ['TIMESTRING,', 'Sergio', 'Gonzalez', 'Rodriguez', 'got']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (7, 53)
// DEBUG: Operating on call
// DEBUG: 41
// DEBUG: (36, 53)
// DEBUG: Operating on from
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on Azucena
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on Esquivel
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on Plata
// DEBUG: ['a', 'call', 'from', 'Azucena', 'Esquivel']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['at four in the morning']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Roberto Bolano, 2666']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "The night before Albert Kessler", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "arrived in Santa Teresa,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING, Sergio Gonzalez Rodriguez got", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "a call from Azucena Esquivel", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "at four in the morning", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Roberto Bolano, 2666", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("04:00 - Waking at four to soundless dark, I stare. In time the curtain-edges will grow light. Till then I see what's really always there: Unresting death, a whole day nearer now, Making all thought impossible but how And where and when I shall myself die. - Philip Larkin, Aubade "));
// DEBUG: (5, 5)
// DEBUG: Operating on Waking
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on to
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on soundless
// DEBUG: ['Waking', 'TIMESTRING', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on dark,
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on I
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on stare.
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on In
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on time
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on the
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on curtain-edges
// DEBUG: ['soundless', 'dark,', 'I', 'stare.', 'In', 'time', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (19, 29)
// DEBUG: Operating on will
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on grow
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on light.
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on Till
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on then
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on I
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on see
// DEBUG: ['curtain-edges', 'will', 'grow', 'light.', 'Till', 'then', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on what's
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on really
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on always
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on there:
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on Unresting
// DEBUG: ['see', "what's", 'really', 'always', 'there:']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on death,
// DEBUG: 63
// DEBUG: (58, 53)
// DEBUG: Operating on a
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on whole
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on day
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on nearer
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on now,
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on Making
// DEBUG: ['Unresting', 'death,', 'a', 'whole', 'day', 'nearer', 'now,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on all
// DEBUG: 39
// DEBUG: (34, 65)
// DEBUG: Operating on thought
// DEBUG: 89
// DEBUG: (84, 65)
// DEBUG: Operating on impossible
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on but
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on how
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on And
// DEBUG: ['Making', 'all', 'thought', 'impossible', 'but', 'how']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on where
// DEBUG: 50
// DEBUG: (45, 77)
// DEBUG: Operating on and
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on when
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on I
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on shall
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on myself
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on die.
// DEBUG: ['And', 'where', 'and', 'when', 'I', 'shall', 'myself']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['at four']
// DEBUG: drawing cursor (48, 5)
// DEBUG: ['- Philip Larkin, Aubade ']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "Waking TIMESTRING to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "soundless dark, I stare. In time the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "curtain-edges will grow light. Till then I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "see what's really always there:", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Unresting death, a whole day nearer now,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "Making all thought impossible but how", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "And where and when I shall myself", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(48, 5, "at four", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Philip Larkin, Aubade ", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("04:00 - he asked if he could have tea available for them. Tommy agreed, and the chefs, grateful for a hot drink at four in the morning, lingered and bought. - Jennifer Donnelly, The Tea Rose "));
// DEBUG: (5, 5)
// DEBUG: Operating on he
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on asked
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on if
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on he
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on could
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on have
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on tea
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on available
// DEBUG: ['he', 'asked', 'if', 'he', 'could', 'have', 'tea']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on for
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on them.
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on Tommy
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on agreed,
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on and
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on the
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on chefs,
// DEBUG: ['available', 'for', 'them.', 'Tommy', 'agreed,', 'and', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on grateful
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on for
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on a
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on hot
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on drink
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['chefs,', 'grateful', 'for', 'a', 'hot', 'drink']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on in
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on morning,
// DEBUG: ['TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on lingered
// DEBUG: 76
// DEBUG: (71, 53)
// DEBUG: Operating on and
// DEBUG: 98
// DEBUG: (93, 53)
// DEBUG: Operating on bought.
// DEBUG: 148
// DEBUG: ['at four']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- The Tea Rose']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "he asked if he could have tea", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "available for them. Tommy agreed, and the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "chefs, grateful for a hot drink", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "at four", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- The Tea Rose", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 04:01 for 1 quotations:
    case 241:
      Serial.println(F("Only one option for 04:01:"));
    Serial.println(F("04:01 - Suddenly, he started to cry. Curled up on the sofa he sobbed loudly. Michel looked at his watch; it was just after 4am. On the screen a wild cat had a rabbit in its mouth. - Michel Houellebecq, Atomised"));
// DEBUG: (5, 5)
// DEBUG: Operating on Suddenly,
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on he
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on started
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on to
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on cry.
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on Curled
// DEBUG: ['Suddenly,', 'he', 'started', 'to', 'cry.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on up
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on on
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on sofa
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on he
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on sobbed
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on loudly.
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on Michel
// DEBUG: ['Curled', 'up', 'on', 'the', 'sofa', 'he', 'sobbed', 'loudly.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on looked
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on at
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on his
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on watch;
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on it
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on was
// DEBUG: 177
// DEBUG: (172, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Michel', 'looked', 'at', 'his', 'watch;', 'it', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on On
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING.', 'On']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on screen
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on a
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on wild
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on cat
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on had
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on a
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on rabbit
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on in
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on its
// DEBUG: ['the', 'screen', 'a', 'wild', 'cat', 'had', 'a', 'rabbit', 'in']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on mouth.
// DEBUG: 57
// DEBUG: ['just after 4am']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Atomised']
// DEBUG: drawing cursor (137, 192)
    paint.Paint_DrawString_EN(5, 5, "Suddenly, he started to cry.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Curled up on the sofa he sobbed loudly.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Michel looked at his watch; it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING. On", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "the screen a wild cat had a rabbit in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "just after 4am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(137, 192, "- Atomised", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:02 for 1 quotations:
    case 242:
      Serial.println(F("Only one option for 04:02:"));
    Serial.println(F("04:02 - I walked up and down the row. No one gave me a second look. Finally I sat down next to a man. He paid no attention. My watch said 4:02. Maybe he was late. - Nicole Krauss, The History of Love"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on walked
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on up
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on and
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on down
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on the
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on row.
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on No
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on one
// DEBUG: ['I', 'walked', 'up', 'and', 'down', 'the', 'row.', 'No']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on gave
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on me
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on a
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on second
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on look.
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on Finally
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on I
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on sat
// DEBUG: ['one', 'gave', 'me', 'a', 'second', 'look.', 'Finally', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on down
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on next
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on to
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on a
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on man.
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on He
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on paid
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on no
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on attention.
// DEBUG: ['sat', 'down', 'next', 'to', 'a', 'man.', 'He', 'paid', 'no']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on My
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on watch
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on said
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on Maybe
// DEBUG: ['attention.', 'My', 'watch', 'said', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on he
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on was
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on late.
// DEBUG: 89
// DEBUG: ['4:02']
// DEBUG: drawing cursor (96, 41)
// DEBUG: ['- The History of Love']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "I walked up and down the row. No", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "one gave me a second look. Finally I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "sat down next to a man. He paid no", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "attention. My watch said TIMESTRING.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(96, 41, "4:02", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- The History of Love", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:03 for 1 quotations:
    case 243:
      Serial.println(F("Only one option for 04:03:"));
    Serial.println(F("04:03 - It's 4:03 a.m. on a supremely cold January morning and I'm just getting home. I've been out dancing and I'm only half drunk but utterly exhausted. - Audrey Niffenegger, The Time Traveler's Wife"));
// DEBUG: (5, 5)
// DEBUG: Operating on It's
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on on
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on a
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on supremely
// DEBUG: ["It's", 'TIMESTRING', 'on', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on cold
// DEBUG: 49
// DEBUG: (44, 17)
// DEBUG: Operating on January
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on morning
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on and
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on I'm
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on just
// DEBUG: ['supremely', 'cold', 'January', 'morning', 'and', "I'm"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on getting
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on home.
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on I've
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on been
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on out
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on dancing
// DEBUG: ['just', 'getting', 'home.', "I've", 'been', 'out']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on I'm
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on only
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on half
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on drunk
// DEBUG: 156
// DEBUG: (151, 41)
// DEBUG: Operating on but
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on utterly
// DEBUG: ['dancing', 'and', "I'm", 'only', 'half', 'drunk', 'but']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on exhausted.
// DEBUG: 89
// DEBUG: ['4:03 a.m.']
// DEBUG: drawing cursor (34, 5)
// DEBUG: ["- The Time Traveler's Wife"]
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "It's TIMESTRING on a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "supremely cold January morning and I'm", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "just getting home. I've been out", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "dancing and I'm only half drunk but", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(34, 5, "4:03 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- The Time Traveler's Wife", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:04 for 1 quotations:
    case 244:
      Serial.println(F("Only one option for 04:04:"));
    Serial.println(F("04:04 - Four minutes after four! It's still very early and to get from here to there won't take me more than 15 minutes, even walking slowly. She told me around five o'clock. Wouldn't it be better to wait on the corner? - Cirilo Villaverde, Angel Hill"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on It's
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on still
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on very
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on early
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on and
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on to
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on get
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on from
// DEBUG: ['TIMESTRING', "It's", 'still', 'very', 'early', 'and', 'to', 'get']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on here
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on to
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on there
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on won't
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on take
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on me
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on more
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on than
// DEBUG: ['from', 'here', 'to', 'there', "won't", 'take', 'me', 'more']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on 15
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on minutes,
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on even
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on walking
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on slowly.
// DEBUG: ['than', '15', 'minutes,', 'even', 'walking']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on She
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on told
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on me
// DEBUG: 84
// DEBUG: (79, 53)
// DEBUG: Operating on around
// DEBUG: 127
// DEBUG: (122, 53)
// DEBUG: Operating on five
// DEBUG: 156
// DEBUG: (151, 53)
// DEBUG: Operating on o'clock.
// DEBUG: ['slowly.', 'She', 'told', 'me', 'around', 'five']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on Wouldn't
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on it
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on be
// DEBUG: 106
// DEBUG: (101, 65)
// DEBUG: Operating on better
// DEBUG: 149
// DEBUG: (144, 65)
// DEBUG: Operating on to
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on wait
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on on
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on the
// DEBUG: ["o'clock.", "Wouldn't", 'it', 'be', 'better', 'to', 'wait', 'on']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on corner?
// DEBUG: 64
// DEBUG: ['Four minutes after four!']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Angel Hill']
// DEBUG: drawing cursor (123, 192)
    paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING It's still very early and to get", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "from here to there won't take me more", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "than 15 minutes, even walking", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "slowly. She told me around five", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "o'clock. Wouldn't it be better to wait on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "Four minutes after four!", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(123, 192, "- Angel Hill", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:05 for 1 quotations:
    case 245:
      Serial.println(F("Only one option for 04:05:"));
    Serial.println(F("04:05 - Leaves were being blown against my window. It was 4.05am. The moon had shifted in the sky, glaring through a clotted mass of clouds like a candled egg. - Joyce Carol Oates, We Were the Mulvaneys"));
// DEBUG: (5, 5)
// DEBUG: Operating on Leaves
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on were
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on being
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on blown
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on against
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on my
// DEBUG: ['Leaves', 'were', 'being', 'blown', 'against']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on window.
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on It
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on was
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['my', 'window.', 'It', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on The
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on moon
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on had
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on shifted
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on in
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on the
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on sky,
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on glaring
// DEBUG: ['TIMESTRING', 'The', 'moon', 'had', 'shifted', 'in', 'the', 'sky,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on through
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on a
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on clotted
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on mass
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on of
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on clouds
// DEBUG: ['glaring', 'through', 'a', 'clotted', 'mass', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on like
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on a
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on candled
// DEBUG: 104
// DEBUG: (99, 53)
// DEBUG: Operating on egg.
// DEBUG: 133
// DEBUG: ['4.05am.']
// DEBUG: drawing cursor (95, 17)
// DEBUG: ['- We Were the Mulvaneys']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "Leaves were being blown against", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "my window. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING The moon had shifted in the sky,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "glaring through a clotted mass of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(95, 17, "4.05am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- We Were the Mulvaneys", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:06 for 1 quotations:
    case 246:
      Serial.println(F("Only one option for 04:06:"));
    Serial.println(F("04:06 - Dexter looked at Kate's note, then her face, then the clock. It was 4.06am, the night before they would go to the restaurant. - Chris Pavone, The Expats"));
// DEBUG: (5, 5)
// DEBUG: Operating on Dexter
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on looked
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on at
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on Kate's
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on note,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on then
// DEBUG: ['Dexter', 'looked', 'at', "Kate's", 'note,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on her
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on face,
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on then
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on the
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on clock.
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on It
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on was
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['then', 'her', 'face,', 'then', 'the', 'clock.', 'It', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on the
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on night
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on before
// DEBUG: ['TIMESTRING,', 'the', 'night']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on they
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on would
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on go
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on to
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on the
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on restaurant.
// DEBUG: ['before', 'they', 'would', 'go', 'to', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['4.06am']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Chris Pavone, The Expats']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "Dexter looked at Kate's note,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "then her face, then the clock. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING, the night", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "before they would go to the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "4.06am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Chris Pavone, The Expats", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:07 for 1 quotations:
    case 247:
      Serial.println(F("Only one option for 04:07:"));
    Serial.println(F("04:07 - 4.07am. Why am I standing? My shoulders feel cold and I'm shivering. I become aware that I'm standing in the middle of the room. I immediately look at the bedroom door. Closed, with no signs of a break-in. Why did I get up? - Miha Mazzini, Guarding Hanna: A Novel"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 131
// DEBUG: (126, 5)
// DEBUG: Operating on Why
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on am
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on I
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on standing?
// DEBUG: ['TIMESTRING', 'Why', 'am', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on My
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on shoulders
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on feel
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on cold
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on and
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on I'm
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on shivering.
// DEBUG: ['standing?', 'My', 'shoulders', 'feel', 'cold', 'and', "I'm"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on I
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on become
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on aware
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on that
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on I'm
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on standing
// DEBUG: ['shivering.', 'I', 'become', 'aware', 'that', "I'm"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on in
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on the
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on middle
// DEBUG: 99
// DEBUG: (94, 41)
// DEBUG: Operating on of
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on the
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on room.
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on I
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on immediately
// DEBUG: ['standing', 'in', 'the', 'middle', 'of', 'the', 'room.', 'I']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on look
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on at
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on the
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on bedroom
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on door.
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on Closed,
// DEBUG: ['immediately', 'look', 'at', 'the', 'bedroom', 'door.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on with
// DEBUG: 47
// DEBUG: (42, 65)
// DEBUG: Operating on no
// DEBUG: 62
// DEBUG: (57, 65)
// DEBUG: Operating on signs
// DEBUG: 98
// DEBUG: (93, 65)
// DEBUG: Operating on of
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on a
// DEBUG: 121
// DEBUG: (116, 65)
// DEBUG: Operating on break-in.
// DEBUG: 185
// DEBUG: (180, 65)
// DEBUG: Operating on Why
// DEBUG: 207
// DEBUG: (202, 65)
// DEBUG: Operating on did
// DEBUG: ['Closed,', 'with', 'no', 'signs', 'of', 'a', 'break-in.', 'Why']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on I
// DEBUG: 22
// DEBUG: (17, 77)
// DEBUG: Operating on get
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on up?
// DEBUG: 66
// DEBUG: ['4.07am.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Guarding Hanna: A Novel']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING Why am I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "standing? My shoulders feel cold and I'm", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "shivering. I become aware that I'm", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "standing in the middle of the room. I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "immediately look at the bedroom door.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "Closed, with no signs of a break-in. Why", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "4.07am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- Guarding Hanna: A Novel", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:08 for 1 quotations:
    case 248:
      Serial.println(F("Only one option for 04:08:"));
    Serial.println(F("04:08 - It was at 4:08 a.m. beneath the cool metal of a jungle gym that all Andrew's dreams came true. He kissed his one true love and swore up and down that it would last forever to this exhausted companion throughout their long trek home. - Seth O'Connell, Dying in the Twilight of Summer"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on at
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on beneath
// DEBUG: ['It', 'was', 'at', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on cool
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on metal
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on of
// DEBUG: 120
// DEBUG: (115, 17)
// DEBUG: Operating on a
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on jungle
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on gym
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on that
// DEBUG: ['beneath', 'the', 'cool', 'metal', 'of', 'a', 'jungle', 'gym']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on all
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on Andrew's
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on dreams
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on came
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on true.
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on He
// DEBUG: ['that', 'all', "Andrew's", 'dreams', 'came', 'true.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on kissed
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on his
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on one
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on true
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on love
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on and
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on swore
// DEBUG: ['He', 'kissed', 'his', 'one', 'true', 'love', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on up
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on and
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on down
// DEBUG: 82
// DEBUG: (77, 53)
// DEBUG: Operating on that
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on it
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on would
// DEBUG: 162
// DEBUG: (157, 53)
// DEBUG: Operating on last
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on forever
// DEBUG: ['swore', 'up', 'and', 'down', 'that', 'it', 'would', 'last']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 65)
// DEBUG: Operating on this
// DEBUG: 62
// DEBUG: (57, 65)
// DEBUG: Operating on exhausted
// DEBUG: 126
// DEBUG: (121, 65)
// DEBUG: Operating on companion
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on throughout
// DEBUG: ['forever', 'to', 'this', 'exhausted', 'companion']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on their
// DEBUG: 57
// DEBUG: (52, 77)
// DEBUG: Operating on long
// DEBUG: 86
// DEBUG: (81, 77)
// DEBUG: Operating on trek
// DEBUG: 115
// DEBUG: (110, 77)
// DEBUG: Operating on home.
// DEBUG: 151
// DEBUG: ['4:08 a.m.']
// DEBUG: drawing cursor (57, 5)
// DEBUG: ["- Seth O'Connell"]
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "It was at TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "beneath the cool metal of a jungle gym", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "that all Andrew's dreams came true.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "He kissed his one true love and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "swore up and down that it would last", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "forever to this exhausted companion", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(57, 5, "4:08 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Seth O'Connell", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:09 for 0 quotations:
    case 249:
      Serial.println(F("No quotes for 04:09"));
      return;

    // Codegen for 04:10 for 0 quotations:
    case 250:
      Serial.println(F("No quotes for 04:10"));
      return;

    // Codegen for 04:11 for 1 quotations:
    case 251:
      Serial.println(F("Only one option for 04:11:"));
    Serial.println(F("04:11 - The next morning I awaken at exactly eleven minutes after four, having slept straight through my normal middle-of-the-night insomniac waking at three. - Karen Karbo, The Stuff of Life"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on next
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on morning
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on I
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on awaken
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on at
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on exactly
// DEBUG: ['The', 'next', 'morning', 'I', 'awaken', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['exactly']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on having
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on slept
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on straight
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on through
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on my
// DEBUG: ['TIMESTRING,', 'having', 'slept', 'straight', 'through']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on normal
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on middle-of-the-night
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on insomniac
// DEBUG: ['my', 'normal', 'middle-of-the-night']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on waking
// DEBUG: 63
// DEBUG: (58, 53)
// DEBUG: Operating on at
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on three.
// DEBUG: 121
// DEBUG: ['eleven minutes after four']
// DEBUG: drawing cursor (13, 17)
// DEBUG: ['- The Stuff of Life']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "The next morning I awaken at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "exactly", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING, having slept straight through", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "my normal middle-of-the-night", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(13, 17, "eleven minutes after four", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- The Stuff of Life", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:12 for 2 quotations:
    case 252:
      option = random(0, 2);
      Serial.print(F("2 options for 04:12. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("04:12 - Finally, she signalled with her light that she'd made it to the top. I signalled back, then shined the light downward to see how far the water had risen. I couldn't make out a thing. My watch read four-twelve in the morning. Not yet dawn. The morning papers still not delivered, trains not yet running, citizens of the surface world fast asleep, oblivious to all this. I pulled the rope taut with both hands, took a deep breath, then slowly began my climb. - Haruki Murakami, Hard Boiled Wonderland and the End of the World "));
// DEBUG: (5, 5)
// DEBUG: Operating on Finally,
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on she
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on signalled
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on with
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on her
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on light
// DEBUG: ['Finally,', 'she', 'signalled', 'with', 'her']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on she'd
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on made
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on it
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on to
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on the
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on top.
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on I
// DEBUG: 199
// DEBUG: (194, 17)
// DEBUG: Operating on signalled
// DEBUG: ['light', 'that', "she'd", 'made', 'it', 'to', 'the', 'top.', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on back,
// DEBUG: 56
// DEBUG: (51, 29)
// DEBUG: Operating on then
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on shined
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on the
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on light
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on downward
// DEBUG: ['signalled', 'back,', 'then', 'shined', 'the', 'light']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on see
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on how
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on far
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on the
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on water
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on had
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on risen.
// DEBUG: ['downward', 'to', 'see', 'how', 'far', 'the', 'water', 'had']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 53)
// DEBUG: Operating on couldn't
// DEBUG: 82
// DEBUG: (77, 53)
// DEBUG: Operating on make
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on out
// DEBUG: 133
// DEBUG: (128, 53)
// DEBUG: Operating on a
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on thing.
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on My
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on watch
// DEBUG: ['risen.', 'I', "couldn't", 'make', 'out', 'a', 'thing.', 'My']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on read
// DEBUG: 45
// DEBUG: (40, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on in
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on the
// DEBUG: ['watch', 'read', 'TIMESTRING', 'in']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on morning.
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on Not
// DEBUG: 93
// DEBUG: (88, 77)
// DEBUG: Operating on yet
// DEBUG: 115
// DEBUG: (110, 77)
// DEBUG: Operating on dawn.
// DEBUG: 151
// DEBUG: (146, 77)
// DEBUG: Operating on The
// DEBUG: 173
// DEBUG: (168, 77)
// DEBUG: Operating on morning
// DEBUG: ['the', 'morning.', 'Not', 'yet', 'dawn.', 'The']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on papers
// DEBUG: 61
// DEBUG: (56, 89)
// DEBUG: Operating on still
// DEBUG: 97
// DEBUG: (92, 89)
// DEBUG: Operating on not
// DEBUG: 119
// DEBUG: (114, 89)
// DEBUG: Operating on delivered,
// DEBUG: 190
// DEBUG: (185, 89)
// DEBUG: Operating on trains
// DEBUG: ['morning', 'papers', 'still', 'not', 'delivered,']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on not
// DEBUG: 39
// DEBUG: (34, 101)
// DEBUG: Operating on yet
// DEBUG: 61
// DEBUG: (56, 101)
// DEBUG: Operating on running,
// DEBUG: 118
// DEBUG: (113, 101)
// DEBUG: Operating on citizens
// DEBUG: 175
// DEBUG: (170, 101)
// DEBUG: Operating on of
// DEBUG: 190
// DEBUG: (185, 101)
// DEBUG: Operating on the
// DEBUG: ['trains', 'not', 'yet', 'running,', 'citizens', 'of']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on surface
// DEBUG: 64
// DEBUG: (59, 113)
// DEBUG: Operating on world
// DEBUG: 100
// DEBUG: (95, 113)
// DEBUG: Operating on fast
// DEBUG: 129
// DEBUG: (124, 113)
// DEBUG: Operating on asleep,
// DEBUG: 179
// DEBUG: (174, 113)
// DEBUG: Operating on oblivious
// DEBUG: ['the', 'surface', 'world', 'fast', 'asleep,']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (15, 125)
// DEBUG: Operating on to
// DEBUG: 35
// DEBUG: (30, 125)
// DEBUG: Operating on all
// DEBUG: 57
// DEBUG: (52, 125)
// DEBUG: Operating on this.
// DEBUG: 93
// DEBUG: (88, 125)
// DEBUG: Operating on I
// DEBUG: 101
// DEBUG: (96, 125)
// DEBUG: Operating on pulled
// DEBUG: 144
// DEBUG: (139, 125)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 125)
// DEBUG: Operating on rope
// DEBUG: 195
// DEBUG: (190, 125)
// DEBUG: Operating on taut
// DEBUG: ['oblivious', 'to', 'all', 'this.', 'I', 'pulled', 'the', 'rope']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (10, 137)
// DEBUG: Operating on with
// DEBUG: 44
// DEBUG: (39, 137)
// DEBUG: Operating on both
// DEBUG: 73
// DEBUG: (68, 137)
// DEBUG: Operating on hands,
// DEBUG: 116
// DEBUG: (111, 137)
// DEBUG: Operating on took
// DEBUG: 145
// DEBUG: (140, 137)
// DEBUG: Operating on a
// DEBUG: 153
// DEBUG: (148, 137)
// DEBUG: Operating on deep
// DEBUG: 182
// DEBUG: (177, 137)
// DEBUG: Operating on breath,
// DEBUG: ['taut', 'with', 'both', 'hands,', 'took', 'a', 'deep']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (13, 149)
// DEBUG: Operating on then
// DEBUG: 47
// DEBUG: (42, 149)
// DEBUG: Operating on slowly
// DEBUG: 90
// DEBUG: (85, 149)
// DEBUG: Operating on began
// DEBUG: 126
// DEBUG: (121, 149)
// DEBUG: Operating on my
// DEBUG: 141
// DEBUG: (136, 149)
// DEBUG: Operating on climb.
// DEBUG: 184
// DEBUG: ['four-twelve']
// DEBUG: drawing cursor (40, 65)
// DEBUG: ['- Haruki Murakami']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "Finally, she signalled with her", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "light that she'd made it to the top. I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "signalled back, then shined the light", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "downward to see how far the water had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "risen. I couldn't make out a thing. My", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "watch read TIMESTRING in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "the morning. Not yet dawn. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "morning papers still not delivered,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "trains not yet running, citizens of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "the surface world fast asleep,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "oblivious to all this. I pulled the rope", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "taut with both hands, took a deep", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(40, 65, "four-twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Haruki Murakami", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("04:12 - Karen felt the bed move beneath Harry's weight. Lying on her side she opened her eyes to see digital numbers in the dark, 4:12 in pale green. Behind her Harry continued to move, settling in. She watched the numbers change to 4:13. - Elmore Leonard, Get Shorty"));
// DEBUG: (5, 5)
// DEBUG: Operating on Karen
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on felt
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on bed
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on move
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on beneath
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on Harry's
// DEBUG: ['Karen', 'felt', 'the', 'bed', 'move', 'beneath']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on weight.
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on Lying
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on on
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on her
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on side
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on she
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on opened
// DEBUG: ["Harry's", 'weight.', 'Lying', 'on', 'her', 'side', 'she']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on her
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on eyes
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on to
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on see
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on digital
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on numbers
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on in
// DEBUG: ['opened', 'her', 'eyes', 'to', 'see', 'digital', 'numbers']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on dark,
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 171
// DEBUG: (166, 41)
// DEBUG: Operating on in
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on pale
// DEBUG: ['in', 'the', 'dark,', 'TIMESTRING', 'in']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on green.
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on Behind
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on her
// DEBUG: 123
// DEBUG: (118, 53)
// DEBUG: Operating on Harry
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on continued
// DEBUG: ['pale', 'green.', 'Behind', 'her', 'Harry']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on to
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on move,
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on settling
// DEBUG: 128
// DEBUG: (123, 65)
// DEBUG: Operating on in.
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on She
// DEBUG: 172
// DEBUG: (167, 65)
// DEBUG: Operating on watched
// DEBUG: ['continued', 'to', 'move,', 'settling', 'in.', 'She']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on numbers
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on change
// DEBUG: 133
// DEBUG: (128, 77)
// DEBUG: Operating on to
// DEBUG: 148
// DEBUG: (143, 77)
// DEBUG: Operating on 4:13.
// DEBUG: 184
// DEBUG: ['4:12']
// DEBUG: drawing cursor (66, 41)
// DEBUG: ['- Elmore Leonard, Get Shorty']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "Karen felt the bed move beneath", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Harry's weight. Lying on her side she", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "opened her eyes to see digital numbers", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "in the dark, TIMESTRING in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "pale green. Behind her Harry", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "continued to move, settling in. She", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(66, 41, "4:12", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Elmore Leonard, Get Shorty", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 04:13 for 1 quotations:
    case 253:
      Serial.println(F("Only one option for 04:13:"));
    Serial.println(F("04:13 - Karen felt the bed move beneath Harry's weight. Lying on her side she opened her eyes to see digital numbers in the dark, 4:12 in pale green. Behind her Harry continued to move, settling in. She watched the numbers change to 4:13. - Elmore Leonard, Get Shorty"));
// DEBUG: (5, 5)
// DEBUG: Operating on Karen
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on felt
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on bed
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on move
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on beneath
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on Harry's
// DEBUG: ['Karen', 'felt', 'the', 'bed', 'move', 'beneath']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on weight.
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on Lying
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on on
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on her
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on side
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on she
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on opened
// DEBUG: ["Harry's", 'weight.', 'Lying', 'on', 'her', 'side', 'she']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on her
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on eyes
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on to
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on see
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on digital
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on numbers
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on in
// DEBUG: ['opened', 'her', 'eyes', 'to', 'see', 'digital', 'numbers']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on dark,
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on 4:12
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on in
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on pale
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on green.
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on Behind
// DEBUG: ['in', 'the', 'dark,', '4:12', 'in', 'pale', 'green.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on her
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on Harry
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on continued
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on to
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on move,
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on settling
// DEBUG: ['Behind', 'her', 'Harry', 'continued', 'to', 'move,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on in.
// DEBUG: 41
// DEBUG: (36, 65)
// DEBUG: Operating on She
// DEBUG: 63
// DEBUG: (58, 65)
// DEBUG: Operating on watched
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on the
// DEBUG: 135
// DEBUG: (130, 65)
// DEBUG: Operating on numbers
// DEBUG: 185
// DEBUG: (180, 65)
// DEBUG: Operating on change
// DEBUG: ['settling', 'in.', 'She', 'watched', 'the', 'numbers']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 77)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 139
// DEBUG: ['4:13']
// DEBUG: drawing cursor (27, 77)
// DEBUG: ['- Elmore Leonard, Get Shorty']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "Karen felt the bed move beneath", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Harry's weight. Lying on her side she", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "opened her eyes to see digital numbers", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "in the dark, 4:12 in pale green.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Behind her Harry continued to move,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "settling in. She watched the numbers", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(27, 77, "4:13", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Elmore Leonard, Get Shorty", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:14 for 1 quotations:
    case 254:
      Serial.println(F("Only one option for 04:14:"));
    Serial.println(F("04:14 - At 4:14 a.m., the two men returned to the Jeep. After the passenger replaced the cans in the back of the Jeep, the driver backed out of the driveway and headed east. The last images found on the film appeared to be flames or smoke. - David H Swendsen, A Real Nightmare"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on the
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on two
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on men
// DEBUG: ['At', 'TIMESTRING,', 'the', 'two']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on returned
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on to
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on Jeep.
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on After
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on the
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on passenger
// DEBUG: ['men', 'returned', 'to', 'the', 'Jeep.', 'After', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on replaced
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on the
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on cans
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on in
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on the
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on back
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on of
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on the
// DEBUG: ['passenger', 'replaced', 'the', 'cans', 'in', 'the', 'back', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on Jeep,
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on the
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on driver
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on backed
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on out
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on of
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on the
// DEBUG: ['the', 'Jeep,', 'the', 'driver', 'backed', 'out', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on driveway
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on and
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on headed
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on east.
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on The
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on last
// DEBUG: ['the', 'driveway', 'and', 'headed', 'east.', 'The']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on images
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on found
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on on
// DEBUG: 109
// DEBUG: (104, 65)
// DEBUG: Operating on the
// DEBUG: 131
// DEBUG: (126, 65)
// DEBUG: Operating on film
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on appeared
// DEBUG: ['last', 'images', 'found', 'on', 'the', 'film']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 77)
// DEBUG: Operating on be
// DEBUG: 49
// DEBUG: (44, 77)
// DEBUG: Operating on flames
// DEBUG: 92
// DEBUG: (87, 77)
// DEBUG: Operating on or
// DEBUG: 107
// DEBUG: (102, 77)
// DEBUG: Operating on smoke.
// DEBUG: 150
// DEBUG: ['4:14 a.m.']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- A Real Nightmare']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING, the two", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "men returned to the Jeep. After the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "passenger replaced the cans in the back of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the Jeep, the driver backed out of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "the driveway and headed east. The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "last images found on the film", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "4:14 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- A Real Nightmare", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:15 for 1 quotations:
    case 255:
      Serial.println(F("Only one option for 04:15:"));
    Serial.println(F("04:15 - Alice wants to warn her that a defect runs in the family, like flat feet or diabetes: they're all in danger of ending up alone by their own stubborn choice. The ugly kitchen clock says four-fifteen. - Barbara Kingsolver, Pigs in Heaven"));
// DEBUG: (5, 5)
// DEBUG: Operating on Alice
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on wants
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on to
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on warn
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on her
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on that
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on a
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on defect
// DEBUG: ['Alice', 'wants', 'to', 'warn', 'her', 'that', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on runs
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on in
// DEBUG: 61
// DEBUG: (56, 17)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on family,
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on like
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on flat
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on feet
// DEBUG: ['defect', 'runs', 'in', 'the', 'family,', 'like', 'flat']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on or
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on diabetes:
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on they're
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on all
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on in
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on danger
// DEBUG: ['feet', 'or', 'diabetes:', "they're", 'all', 'in']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on ending
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on up
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on alone
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on by
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on their
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on own
// DEBUG: 199
// DEBUG: (194, 41)
// DEBUG: Operating on stubborn
// DEBUG: ['danger', 'of', 'ending', 'up', 'alone', 'by', 'their', 'own']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on choice.
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on The
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on ugly
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on kitchen
// DEBUG: 170
// DEBUG: (165, 53)
// DEBUG: Operating on clock
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on says
// DEBUG: ['stubborn', 'choice.', 'The', 'ugly', 'kitchen', 'clock']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 178
// DEBUG: ['four-fifteen']
// DEBUG: drawing cursor (10, 65)
// DEBUG: ['- Pigs in Heaven']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "Alice wants to warn her that a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "defect runs in the family, like flat", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "feet or diabetes: they're all in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "danger of ending up alone by their own", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "stubborn choice. The ugly kitchen clock", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(10, 65, "four-fifteen", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Pigs in Heaven", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:16 for 2 quotations:
    case 256:
      option = random(0, 2);
      Serial.print(F("2 options for 04:16. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("04:16 - I stooped to pick up my watch from the floor. Four-sixteen. Another hour until dawn. - Haruki Murakami, Hard Boiled Wonderland and the End of the World"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on stooped
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on to
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on pick
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on up
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on my
// DEBUG: 142
// DEBUG: (137, 5)
// DEBUG: Operating on watch
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on from
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on the
// DEBUG: ['I', 'stooped', 'to', 'pick', 'up', 'my', 'watch', 'from']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on floor.
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'floor.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on Another
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on hour
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on until
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on dawn.
// DEBUG: 173
// DEBUG: ['Four-sixteen']
// DEBUG: drawing cursor (52, 17)
// DEBUG: ['- Haruki Murakami']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "I stooped to pick up my watch from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the floor.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(52, 17, "Four-sixteen", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Haruki Murakami", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("04:16 - They pulled into the visitor's carpark at four sixteen am. He knew it was four sixteen because the entrance to the maternity unit sported a digital clock beneath the signage. - Maree Anderson, Freaks in the City: Book Two of the Freaks Series"));
// DEBUG: (5, 5)
// DEBUG: Operating on They
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on pulled
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on into
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on the
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on visitor's
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on carpark
// DEBUG: ['They', 'pulled', 'into', 'the', "visitor's"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on am.
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on He
// DEBUG: ['carpark', 'at', 'TIMESTRING', 'am.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on knew
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on it
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on was
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['He', 'knew', 'it', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on because
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on the
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on entrance
// DEBUG: 150
// DEBUG: (145, 41)
// DEBUG: Operating on to
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on the
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on maternity
// DEBUG: ['TIMESTRING', 'because', 'the', 'entrance', 'to', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on unit
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on sported
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on a
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on digital
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on clock
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on beneath
// DEBUG: ['maternity', 'unit', 'sported', 'a', 'digital', 'clock']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 65)
// DEBUG: Operating on signage.
// DEBUG: 97
// DEBUG: ['four sixteen']
// DEBUG: drawing cursor (74, 29)
// DEBUG: ['- Maree Anderson']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "They pulled into the visitor's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "carpark at TIMESTRING am.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "He knew it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING because the entrance to the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "maternity unit sported a digital clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(74, 29, "four sixteen", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- Maree Anderson", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 04:17 for 1 quotations:
    case 257:
      Serial.println(F("Only one option for 04:17:"));
    Serial.println(F("04:17 - He awoke at 4.17am in a sweat. He had been dreaming of Africa again, and then the dream had continued in the U.S. when he was a young man. But Inbata had been there, watching him. - Douglas Phinney, The Vile"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on awoke
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on at
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on in
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on a
// DEBUG: ['He', 'awoke', 'at', 'TIMESTRING', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (7, 17)
// DEBUG: Operating on sweat.
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on He
// DEBUG: 70
// DEBUG: (65, 17)
// DEBUG: Operating on had
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on been
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on dreaming
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on of
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on Africa
// DEBUG: ['a', 'sweat.', 'He', 'had', 'been', 'dreaming', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on again,
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on and
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on then
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on the
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on dream
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on had
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on continued
// DEBUG: ['Africa', 'again,', 'and', 'then', 'the', 'dream', 'had']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on in
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on the
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on U.S.
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on when
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on he
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on was
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on a
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on young
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on man.
// DEBUG: ['continued', 'in', 'the', 'U.S.', 'when', 'he', 'was', 'a', 'young']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on But
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on Inbata
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on had
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on been
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on there,
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on watching
// DEBUG: ['man.', 'But', 'Inbata', 'had', 'been', 'there,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on him.
// DEBUG: 48
// DEBUG: ['4.17am']
// DEBUG: drawing cursor (71, 5)
// DEBUG: ['- Douglas Phinney, The Vile']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "He awoke at TIMESTRING in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "a sweat. He had been dreaming of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Africa again, and then the dream had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "continued in the U.S. when he was a young", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "man. But Inbata had been there,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(71, 5, "4.17am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- Douglas Phinney, The Vile", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:18 for 1 quotations:
    case 258:
      Serial.println(F("Only one option for 04:18:"));
    Serial.println(F("04:18 - I grabbed the alarm clock, threw it on my lap, and slapped the red and black buttons with both hands. The ringing didn't stop. The telephone! The clock read four-eighteen. It was dark outside. Four-eighteen a.m. I got out of bed and picked up the receiver. \"Hello?\" - Haruki Murakami, Hard Boiled Wonderland and the End of the World "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on grabbed
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on alarm
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on clock,
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on threw
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on it
// DEBUG: ['I', 'grabbed', 'the', 'alarm', 'clock,', 'threw']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on on
// DEBUG: 28
// DEBUG: (23, 17)
// DEBUG: Operating on my
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on lap,
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on and
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on slapped
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on red
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on and
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on black
// DEBUG: ['it', 'on', 'my', 'lap,', 'and', 'slapped', 'the', 'red', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on buttons
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on with
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on both
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on hands.
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on The
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on ringing
// DEBUG: ['black', 'buttons', 'with', 'both', 'hands.', 'The']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on didn't
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on stop.
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on The
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on telephone!
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on The
// DEBUG: ['ringing', "didn't", 'stop.', 'The', 'telephone!']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on clock
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on read
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'clock', 'read']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on It
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on was
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on dark
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on outside.
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on Four-eighteen
// DEBUG: ['TIMESTRING.', 'It', 'was', 'dark', 'outside.']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (19, 77)
// DEBUG: Operating on a.m.
// DEBUG: 53
// DEBUG: (48, 77)
// DEBUG: Operating on I
// DEBUG: 61
// DEBUG: (56, 77)
// DEBUG: Operating on got
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on out
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on of
// DEBUG: 120
// DEBUG: (115, 77)
// DEBUG: Operating on bed
// DEBUG: 142
// DEBUG: (137, 77)
// DEBUG: Operating on and
// DEBUG: 164
// DEBUG: (159, 77)
// DEBUG: Operating on picked
// DEBUG: 207
// DEBUG: (202, 77)
// DEBUG: Operating on up
// DEBUG: ['Four-eighteen', 'a.m.', 'I', 'got', 'out', 'of', 'bed', 'and', 'picked']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 89)
// DEBUG: Operating on receiver.
// DEBUG: 99
// DEBUG: (94, 89)
// DEBUG: Operating on \"Hello?\"
// DEBUG: 170
// DEBUG: ['four-eighteen']
// DEBUG: drawing cursor (74, 53)
// DEBUG: ['- Haruki Murakami']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "I grabbed the alarm clock, threw", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "it on my lap, and slapped the red and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "black buttons with both hands. The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "ringing didn't stop. The telephone!", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "The clock read", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING. It was dark outside.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Four-eighteen a.m. I got out of bed and picked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(74, 53, "four-eighteen", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Haruki Murakami", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:19 for 0 quotations:
    case 259:
      Serial.println(F("No quotes for 04:19"));
      return;

    // Codegen for 04:20 for 0 quotations:
    case 260:
      Serial.println(F("No quotes for 04:20"));
      return;

    // Codegen for 04:21 for 0 quotations:
    case 261:
      Serial.println(F("No quotes for 04:21"));
      return;

    // Codegen for 04:22 for 1 quotations:
    case 262:
      Serial.println(F("Only one option for 04:22:"));
    Serial.println(F("04:22 - He hurt me to the point where I wanted to tell him something. My watch said 4.22 now. It had stopped. It was smashed. - Len Deighton, The Ipcress File"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on hurt
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on me
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on to
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on the
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on point
// DEBUG: 142
// DEBUG: (137, 5)
// DEBUG: Operating on where
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on I
// DEBUG: 186
// DEBUG: (181, 5)
// DEBUG: Operating on wanted
// DEBUG: ['He', 'hurt', 'me', 'to', 'the', 'point', 'where', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on tell
// DEBUG: 61
// DEBUG: (56, 17)
// DEBUG: Operating on him
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on something.
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on My
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on watch
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on said
// DEBUG: ['wanted', 'to', 'tell', 'him', 'something.', 'My', 'watch']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on now.
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on It
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on had
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on stopped.
// DEBUG: ['said', 'TIMESTRING', 'now.', 'It', 'had']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on It
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on was
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on smashed.
// DEBUG: 113
// DEBUG: ['4.22']
// DEBUG: drawing cursor (10, 29)
// DEBUG: ['- The Ipcress File']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "He hurt me to the point where I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "wanted to tell him something. My watch", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "said TIMESTRING now. It had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(10, 29, "4.22", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- The Ipcress File", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:23 for 2 quotations:
    case 263:
      option = random(0, 2);
      Serial.print(F("2 options for 04:23. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("04:23 - 4:23, Monday morning, Iceland Square. A number of people in the vicinity of Bjornsongatan are awakened by loud screams. - John Ajvide Lindqvist, Let The Right One In"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on Monday
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on morning,
// DEBUG: ['TIMESTRING,', 'Monday']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on Iceland
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on Square.
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on A
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on number
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on of
// DEBUG: 185
// DEBUG: (180, 17)
// DEBUG: Operating on people
// DEBUG: ['morning,', 'Iceland', 'Square.', 'A', 'number', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on vicinity
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on of
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on Bjornsongatan
// DEBUG: ['people', 'in', 'the', 'vicinity', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (19, 41)
// DEBUG: Operating on are
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on awakened
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on by
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on loud
// DEBUG: 147
// DEBUG: (142, 41)
// DEBUG: Operating on screams.
// DEBUG: 204
// DEBUG: ['4:23']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Let The Right One In']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING, Monday", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "morning, Iceland Square. A number of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "people in the vicinity of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "4:23", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Let The Right One In", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("04:23 - Her chip pulsed the time. 04:23:04. It had been a long day. - William Gibson, Neuromancer "));
// DEBUG: (5, 5)
// DEBUG: Operating on Her
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on chip
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on pulsed
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on the
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on time.
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on TIMESTRING:04.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Her', 'chip', 'pulsed', 'the', 'time.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (20, 17)
// DEBUG: Operating on It
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on had
// DEBUG: 62
// DEBUG: (57, 17)
// DEBUG: Operating on been
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on a
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on long
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on day.
// DEBUG: 157
// DEBUG: ['04:23']
// DEBUG: drawing cursor (157, 5)
// DEBUG: ['- Neuromancer']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "Her chip pulsed the time.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(157, 5, "04:23", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Neuromancer", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 04:24 for 0 quotations:
    case 264:
      Serial.println(F("No quotes for 04:24"));
      return;

    // Codegen for 04:25 for 1 quotations:
    case 265:
      Serial.println(F("Only one option for 04:25:"));
    Serial.println(F("04:25 - As I dressed I glanced at my watch. It was no wonder that no one was stirring. It was twenty-five minutes past four. - Sir Arthur Conan Doyle, The Adventures of Sherlock Holmes"));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on I
// DEBUG: 33
// DEBUG: (28, 5)
// DEBUG: Operating on dressed
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on I
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on glanced
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on at
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on my
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on watch.
// DEBUG: ['As', 'I', 'dressed', 'I', 'glanced', 'at', 'my']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on It
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on was
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on no
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on wonder
// DEBUG: 112
// DEBUG: (107, 17)
// DEBUG: Operating on that
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on no
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on one
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on was
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on stirring.
// DEBUG: ['watch.', 'It', 'was', 'no', 'wonder', 'that', 'no', 'one', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on It
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on was
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['stirring.', 'It', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['twenty-five minutes past four']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Sir Arthur Conan Doyle']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "As I dressed I glanced at my", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "watch. It was no wonder that no one was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "stirring. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "twenty-five minutes past four", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Sir Arthur Conan Doyle", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:26 for 0 quotations:
    case 266:
      Serial.println(F("No quotes for 04:26"));
      return;

    // Codegen for 04:27 for 0 quotations:
    case 267:
      Serial.println(F("No quotes for 04:27"));
      return;

    // Codegen for 04:28 for 0 quotations:
    case 268:
      Serial.println(F("No quotes for 04:28"));
      return;

    // Codegen for 04:29 for 0 quotations:
    case 269:
      Serial.println(F("No quotes for 04:29"));
      return;

    // Codegen for 04:30 for 3 quotations:
    case 270:
      option = random(0, 3);
      Serial.print(F("3 options for 04:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("04:30 - At the end of a relationship, it is the one who is not in love who makes the tender speeches. I was overwhelmed by a sense of betrayal, betrayal because a union in which I had invested so much had been declared bankrupt without my feeling it to be so. Chloe had not given it a chance, I argued with myself, knowing the hopelessness of these inner courts announcing hollow verdicts at four thirty in the morning. - Alain de Botton, Essays on Love "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on end
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on of
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on a
// DEBUG: 92
// DEBUG: (87, 5)
// DEBUG: Operating on relationship,
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on it
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on is
// DEBUG: ['At', 'the', 'end', 'of', 'a', 'relationship,', 'it']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on one
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on who
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on is
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on not
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on in
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on love
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on who
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on makes
// DEBUG: ['is', 'the', 'one', 'who', 'is', 'not', 'in', 'love', 'who']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on tender
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on speeches.
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on I
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on was
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on overwhelmed
// DEBUG: ['makes', 'the', 'tender', 'speeches.', 'I', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on by
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on a
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on sense
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on of
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on betrayal,
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on betrayal
// DEBUG: ['overwhelmed', 'by', 'a', 'sense', 'of', 'betrayal,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on because
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on a
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on union
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on in
// DEBUG: 128
// DEBUG: (123, 53)
// DEBUG: Operating on which
// DEBUG: 164
// DEBUG: (159, 53)
// DEBUG: Operating on I
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on had
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on invested
// DEBUG: ['betrayal', 'because', 'a', 'union', 'in', 'which', 'I', 'had']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on so
// DEBUG: 34
// DEBUG: (29, 65)
// DEBUG: Operating on much
// DEBUG: 63
// DEBUG: (58, 65)
// DEBUG: Operating on had
// DEBUG: 85
// DEBUG: (80, 65)
// DEBUG: Operating on been
// DEBUG: 114
// DEBUG: (109, 65)
// DEBUG: Operating on declared
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on bankrupt
// DEBUG: ['invested', 'so', 'much', 'had', 'been', 'declared']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on without
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on my
// DEBUG: 84
// DEBUG: (79, 77)
// DEBUG: Operating on feeling
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on it
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on to
// DEBUG: 164
// DEBUG: (159, 77)
// DEBUG: Operating on be
// DEBUG: 179
// DEBUG: (174, 77)
// DEBUG: Operating on so.
// DEBUG: 201
// DEBUG: (196, 77)
// DEBUG: Operating on Chloe
// DEBUG: ['bankrupt', 'without', 'my', 'feeling', 'it', 'to', 'be', 'so.']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on had
// DEBUG: 38
// DEBUG: (33, 89)
// DEBUG: Operating on not
// DEBUG: 60
// DEBUG: (55, 89)
// DEBUG: Operating on given
// DEBUG: 96
// DEBUG: (91, 89)
// DEBUG: Operating on it
// DEBUG: 111
// DEBUG: (106, 89)
// DEBUG: Operating on a
// DEBUG: 119
// DEBUG: (114, 89)
// DEBUG: Operating on chance,
// DEBUG: 169
// DEBUG: (164, 89)
// DEBUG: Operating on I
// DEBUG: 177
// DEBUG: (172, 89)
// DEBUG: Operating on argued
// DEBUG: ['Chloe', 'had', 'not', 'given', 'it', 'a', 'chance,', 'I']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on with
// DEBUG: 46
// DEBUG: (41, 101)
// DEBUG: Operating on myself,
// DEBUG: 96
// DEBUG: (91, 101)
// DEBUG: Operating on knowing
// DEBUG: 146
// DEBUG: (141, 101)
// DEBUG: Operating on the
// DEBUG: 168
// DEBUG: (163, 101)
// DEBUG: Operating on hopelessness
// DEBUG: ['argued', 'with', 'myself,', 'knowing', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (18, 113)
// DEBUG: Operating on of
// DEBUG: 38
// DEBUG: (33, 113)
// DEBUG: Operating on these
// DEBUG: 74
// DEBUG: (69, 113)
// DEBUG: Operating on inner
// DEBUG: 110
// DEBUG: (105, 113)
// DEBUG: Operating on courts
// DEBUG: 153
// DEBUG: (148, 113)
// DEBUG: Operating on announcing
// DEBUG: ['hopelessness', 'of', 'these', 'inner', 'courts']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (16, 125)
// DEBUG: Operating on hollow
// DEBUG: 64
// DEBUG: (59, 125)
// DEBUG: Operating on verdicts
// DEBUG: 121
// DEBUG: (116, 125)
// DEBUG: Operating on at
// DEBUG: 136
// DEBUG: (131, 125)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['announcing', 'hollow', 'verdicts', 'at']
// DEBUG: drawing cursor (5, 125)
// DEBUG: 158
// DEBUG: (153, 137)
// DEBUG: Operating on in
// DEBUG: 173
// DEBUG: (168, 137)
// DEBUG: Operating on the
// DEBUG: 195
// DEBUG: (190, 137)
// DEBUG: Operating on morning.
// DEBUG: ['TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 137)
// DEBUG: ['four thirty']
// DEBUG: drawing cursor (5, 137)
// DEBUG: ['- Essays on Love']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "At the end of a relationship, it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "is the one who is not in love who", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "makes the tender speeches. I was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "overwhelmed by a sense of betrayal,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "betrayal because a union in which I had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "invested so much had been declared", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "bankrupt without my feeling it to be so.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "Chloe had not given it a chance, I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "argued with myself, knowing the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "hopelessness of these inner courts", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "announcing hollow verdicts at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "four thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- Essays on Love", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("04:30 - Hester Thrale undulates in in a false fox jacket at 2330 as usual even though she has to be up at like 0430 for the breakfast shift at the Provident Nursing Home and sometimes eats breakfast with Gately, both their faces nodding perilously close to their Frosted Flakes. - David Foster Wallace, Infinite Jest"));
// DEBUG: (5, 5)
// DEBUG: Operating on Hester
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on Thrale
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on undulates
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on in
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on in
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on a
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on false
// DEBUG: ['Hester', 'Thrale', 'undulates', 'in', 'in', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on fox
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on jacket
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on at
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on 2330
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on as
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on usual
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on even
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on though
// DEBUG: ['false', 'fox', 'jacket', 'at', '2330', 'as', 'usual', 'even']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on she
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on has
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on to
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on be
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on up
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on at
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on like
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on 0TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['though', 'she', 'has', 'to', 'be', 'up', 'at', 'like']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on for
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on the
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on breakfast
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on shift
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on at
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on the
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on Provident
// DEBUG: ['0TIMESTRING', 'for', 'the', 'breakfast', 'shift', 'at', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on Nursing
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on Home
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on and
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on sometimes
// DEBUG: 185
// DEBUG: (180, 53)
// DEBUG: Operating on eats
// DEBUG: ['Provident', 'Nursing', 'Home', 'and', 'sometimes']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on breakfast
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on with
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on Gately,
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on both
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on their
// DEBUG: ['eats', 'breakfast', 'with', 'Gately,', 'both']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on faces
// DEBUG: 52
// DEBUG: (47, 77)
// DEBUG: Operating on nodding
// DEBUG: 102
// DEBUG: (97, 77)
// DEBUG: Operating on perilously
// DEBUG: 173
// DEBUG: (168, 77)
// DEBUG: Operating on close
// DEBUG: 209
// DEBUG: (204, 77)
// DEBUG: Operating on to
// DEBUG: ['their', 'faces', 'nodding', 'perilously', 'close']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on their
// DEBUG: 49
// DEBUG: (44, 89)
// DEBUG: Operating on Frosted
// DEBUG: 99
// DEBUG: (94, 89)
// DEBUG: Operating on Flakes.
// DEBUG: 149
// DEBUG: ['430']
// DEBUG: drawing cursor (145, 29)
// DEBUG: ['- Infinite Jest']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Hester Thrale undulates in in a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "false fox jacket at 2330 as usual even", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "though she has to be up at like", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "0TIMESTRING for the breakfast shift at the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Provident Nursing Home and sometimes", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "eats breakfast with Gately, both", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "their faces nodding perilously close", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(145, 29, "430", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Infinite Jest", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("04:30 - Tonight Clenette H. and the deeply whacked out Yolanda W. come back in from Footprints around 2315 in purple skirts and purple lipstick and ironed hair, tottering on heels and telling each other what a wicked time they just had. Hester Thrale undulates in in a false fox jacket at 2330 as usual even though she has to be up at like 0430 for the breakfast shift at the Provident Nursing Home and sometimes eats breakfast with Gately, both their faces nodding perilously close to their Frosted Flakes. - David Foster Wallace, Infinite Jest "));
// DEBUG: (5, 5)
// DEBUG: Operating on Tonight
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on Clenette
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on H.
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on and
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on the
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on deeply
// DEBUG: ['Tonight', 'Clenette', 'H.', 'and', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on whacked
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on out
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on Yolanda
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on W.
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on come
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on back
// DEBUG: ['deeply', 'whacked', 'out', 'Yolanda', 'W.', 'come']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on in
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on from
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on Footprints
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on around
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on 2315
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on in
// DEBUG: ['back', 'in', 'from', 'Footprints', 'around', '2315']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on purple
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on skirts
// DEBUG: 99
// DEBUG: (94, 41)
// DEBUG: Operating on and
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on purple
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on lipstick
// DEBUG: ['in', 'purple', 'skirts', 'and', 'purple']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on and
// DEBUG: 41
// DEBUG: (36, 53)
// DEBUG: Operating on ironed
// DEBUG: 84
// DEBUG: (79, 53)
// DEBUG: Operating on hair,
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on tottering
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on on
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on heels
// DEBUG: ['lipstick', 'and', 'ironed', 'hair,', 'tottering', 'on']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on telling
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on each
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on other
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on what
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on a
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on wicked
// DEBUG: ['heels', 'and', 'telling', 'each', 'other', 'what', 'a']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on time
// DEBUG: 46
// DEBUG: (41, 77)
// DEBUG: Operating on they
// DEBUG: 75
// DEBUG: (70, 77)
// DEBUG: Operating on just
// DEBUG: 104
// DEBUG: (99, 77)
// DEBUG: Operating on had.
// DEBUG: 133
// DEBUG: (128, 77)
// DEBUG: Operating on Hester
// DEBUG: 176
// DEBUG: (171, 77)
// DEBUG: Operating on Thrale
// DEBUG: ['wicked', 'time', 'they', 'just', 'had.', 'Hester']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on undulates
// DEBUG: 81
// DEBUG: (76, 89)
// DEBUG: Operating on in
// DEBUG: 96
// DEBUG: (91, 89)
// DEBUG: Operating on in
// DEBUG: 111
// DEBUG: (106, 89)
// DEBUG: Operating on a
// DEBUG: 119
// DEBUG: (114, 89)
// DEBUG: Operating on false
// DEBUG: 155
// DEBUG: (150, 89)
// DEBUG: Operating on fox
// DEBUG: 177
// DEBUG: (172, 89)
// DEBUG: Operating on jacket
// DEBUG: ['Thrale', 'undulates', 'in', 'in', 'a', 'false', 'fox']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 101)
// DEBUG: Operating on 2330
// DEBUG: 61
// DEBUG: (56, 101)
// DEBUG: Operating on as
// DEBUG: 76
// DEBUG: (71, 101)
// DEBUG: Operating on usual
// DEBUG: 112
// DEBUG: (107, 101)
// DEBUG: Operating on even
// DEBUG: 141
// DEBUG: (136, 101)
// DEBUG: Operating on though
// DEBUG: 184
// DEBUG: (179, 101)
// DEBUG: Operating on she
// DEBUG: 206
// DEBUG: (201, 101)
// DEBUG: Operating on has
// DEBUG: ['jacket', 'at', '2330', 'as', 'usual', 'even', 'though', 'she']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on to
// DEBUG: 29
// DEBUG: (24, 113)
// DEBUG: Operating on be
// DEBUG: 44
// DEBUG: (39, 113)
// DEBUG: Operating on up
// DEBUG: 59
// DEBUG: (54, 113)
// DEBUG: Operating on at
// DEBUG: 74
// DEBUG: (69, 113)
// DEBUG: Operating on like
// DEBUG: 103
// DEBUG: (98, 113)
// DEBUG: Operating on 0TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 203
// DEBUG: (198, 113)
// DEBUG: Operating on for
// DEBUG: ['has', 'to', 'be', 'up', 'at', 'like', '0TIMESTRING']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (9, 125)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 125)
// DEBUG: Operating on breakfast
// DEBUG: 100
// DEBUG: (95, 125)
// DEBUG: Operating on shift
// DEBUG: 136
// DEBUG: (131, 125)
// DEBUG: Operating on at
// DEBUG: 151
// DEBUG: (146, 125)
// DEBUG: Operating on the
// DEBUG: 173
// DEBUG: (168, 125)
// DEBUG: Operating on Provident
// DEBUG: ['for', 'the', 'breakfast', 'shift', 'at', 'the']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (15, 137)
// DEBUG: Operating on Nursing
// DEBUG: 70
// DEBUG: (65, 137)
// DEBUG: Operating on Home
// DEBUG: 99
// DEBUG: (94, 137)
// DEBUG: Operating on and
// DEBUG: 121
// DEBUG: (116, 137)
// DEBUG: Operating on sometimes
// DEBUG: 185
// DEBUG: (180, 137)
// DEBUG: Operating on eats
// DEBUG: ['Provident', 'Nursing', 'Home', 'and', 'sometimes']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (10, 149)
// DEBUG: Operating on breakfast
// DEBUG: 79
// DEBUG: (74, 149)
// DEBUG: Operating on with
// DEBUG: 108
// DEBUG: (103, 149)
// DEBUG: Operating on Gately,
// DEBUG: 158
// DEBUG: (153, 149)
// DEBUG: Operating on both
// DEBUG: 187
// DEBUG: (182, 149)
// DEBUG: Operating on their
// DEBUG: ['eats', 'breakfast', 'with', 'Gately,', 'both']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (11, 161)
// DEBUG: Operating on faces
// DEBUG: 52
// DEBUG: (47, 161)
// DEBUG: Operating on nodding
// DEBUG: 102
// DEBUG: (97, 161)
// DEBUG: Operating on perilously
// DEBUG: 173
// DEBUG: (168, 161)
// DEBUG: Operating on close
// DEBUG: 209
// DEBUG: (204, 161)
// DEBUG: Operating on to
// DEBUG: ['their', 'faces', 'nodding', 'perilously', 'close']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (8, 173)
// DEBUG: Operating on their
// DEBUG: 49
// DEBUG: (44, 173)
// DEBUG: Operating on Frosted
// DEBUG: 99
// DEBUG: (94, 173)
// DEBUG: Operating on Flakes.
// DEBUG: 149
// DEBUG: ['430']
// DEBUG: drawing cursor (98, 113)
// DEBUG: ['- Infinite Jest']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Tonight Clenette H. and the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "deeply whacked out Yolanda W. come", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "back in from Footprints around 2315", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "in purple skirts and purple", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "lipstick and ironed hair, tottering on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "heels and telling each other what a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "wicked time they just had. Hester", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "Thrale undulates in in a false fox", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "jacket at 2330 as usual even though she", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "has to be up at like 0TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "for the breakfast shift at the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "Provident Nursing Home and sometimes", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "eats breakfast with Gately, both", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "their faces nodding perilously close", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(98, 113, "430", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Infinite Jest", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 04:31 for 1 quotations:
    case 271:
      Serial.println(F("Only one option for 04:31:"));
    Serial.println(F("04:31 - An earthquake hit Los Angeles at 4:31 this morning and the images began arriving via CNN right away. - Douglas Coupland, Microserfs"));
// DEBUG: (5, 5)
// DEBUG: Operating on An
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on earthquake
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on hit
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on Los
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on Angeles
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on at
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['An', 'earthquake', 'hit', 'Los', 'Angeles', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on this
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on morning
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on and
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'this', 'morning', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on images
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on began
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on arriving
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on via
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on CNN
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on right
// DEBUG: ['the', 'images', 'began', 'arriving', 'via', 'CNN']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on away.
// DEBUG: 52
// DEBUG: ['4:31']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Microserfs']
// DEBUG: drawing cursor (123, 192)
    paint.Paint_DrawString_EN(5, 5, "An earthquake hit Los Angeles at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING this morning and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the images began arriving via CNN", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "4:31", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(123, 192, "- Microserfs", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:32 for 1 quotations:
    case 272:
      Serial.println(F("Only one option for 04:32:"));
    Serial.println(F("04:32 - On his first day of kindergarten, Peter Houghton woke up at 4:32 a.m. He padded into his parents' room and asked if it was time yet to take the school bus. - Jodi Picoult, Nineteen Minutes"));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on his
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on first
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on day
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on of
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on kindergarten,
// DEBUG: ['On', 'his', 'first', 'day', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (19, 17)
// DEBUG: Operating on Peter
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on Houghton
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on woke
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on up
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on at
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['kindergarten,', 'Peter', 'Houghton', 'woke', 'up', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on He
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on padded
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on into
// DEBUG: ['TIMESTRING', 'He', 'padded']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on his
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on parents'
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on room
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on and
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on asked
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on if
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on it
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on was
// DEBUG: ['into', 'his', "parents'", 'room', 'and', 'asked', 'if', 'it']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on time
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on yet
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on to
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on take
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on the
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on school
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on bus.
// DEBUG: 203
// DEBUG: ['4:32 a.m.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Nineteen Minutes']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "On his first day of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "kindergarten, Peter Houghton woke up at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING He padded", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "into his parents' room and asked if it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "4:32 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- Nineteen Minutes", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:33 for 0 quotations:
    case 273:
      Serial.println(F("No quotes for 04:33"));
      return;

    // Codegen for 04:34 for 0 quotations:
    case 274:
      Serial.println(F("No quotes for 04:34"));
      return;

    // Codegen for 04:35 for 1 quotations:
    case 275:
      Serial.println(F("Only one option for 04:35:"));
    Serial.println(F("04:35 - No manner of exhaustion can keep a child asleep much later than six a.m. on Christmas Day. Colby awoke at 4:35. - C Robert Cargill, Dreams and Shadows"));
// DEBUG: (5, 5)
// DEBUG: Operating on No
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on manner
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on of
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on exhaustion
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on can
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on keep
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on a
// DEBUG: ['No', 'manner', 'of', 'exhaustion', 'can', 'keep']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (7, 17)
// DEBUG: Operating on child
// DEBUG: 48
// DEBUG: (43, 17)
// DEBUG: Operating on asleep
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on much
// DEBUG: 120
// DEBUG: (115, 17)
// DEBUG: Operating on later
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on than
// DEBUG: 185
// DEBUG: (180, 17)
// DEBUG: Operating on six
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on a.m.
// DEBUG: ['a', 'child', 'asleep', 'much', 'later', 'than', 'six']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on on
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on Christmas
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on Day.
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on Colby
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on awoke
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on at
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['a.m.', 'on', 'Christmas', 'Day.', 'Colby', 'awoke', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 116
// DEBUG: ['4:35']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Dreams and Shadows']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "No manner of exhaustion can keep", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "a child asleep much later than six", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "a.m. on Christmas Day. Colby awoke at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "4:35", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Dreams and Shadows", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:36 for 1 quotations:
    case 276:
      Serial.println(F("Only one option for 04:36:"));
    Serial.println(F("04:36 - At 4:36 that morning, alone in my hotel room, it had been a much better scene. Spencer had blanched, confounded by the inescapable logic of my accusation. A few drops of perspiration had formed on his upper lip. A tiny vein had started to throb in his temple. - Ross Thomas, The Brass Go-Between"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on that
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on morning,
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on alone
// DEBUG: ['At', 'TIMESTRING', 'that', 'morning,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on my
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on hotel
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on room,
// DEBUG: 118
// DEBUG: (113, 17)
// DEBUG: Operating on it
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on had
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on been
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on a
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on much
// DEBUG: ['alone', 'in', 'my', 'hotel', 'room,', 'it', 'had', 'been', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on better
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on scene.
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on Spencer
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on had
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on blanched,
// DEBUG: ['much', 'better', 'scene.', 'Spencer', 'had']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on confounded
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on by
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on the
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on inescapable
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on logic
// DEBUG: ['blanched,', 'confounded', 'by', 'the', 'inescapable']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on my
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on accusation.
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on A
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on few
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on drops
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on of
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on perspiration
// DEBUG: ['logic', 'of', 'my', 'accusation.', 'A', 'few', 'drops', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (18, 65)
// DEBUG: Operating on had
// DEBUG: 45
// DEBUG: (40, 65)
// DEBUG: Operating on formed
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on on
// DEBUG: 103
// DEBUG: (98, 65)
// DEBUG: Operating on his
// DEBUG: 125
// DEBUG: (120, 65)
// DEBUG: Operating on upper
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on lip.
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on A
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on tiny
// DEBUG: ['perspiration', 'had', 'formed', 'on', 'his', 'upper', 'lip.', 'A']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on vein
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on had
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on started
// DEBUG: 116
// DEBUG: (111, 77)
// DEBUG: Operating on to
// DEBUG: 131
// DEBUG: (126, 77)
// DEBUG: Operating on throb
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on in
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on his
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on temple.
// DEBUG: ['tiny', 'vein', 'had', 'started', 'to', 'throb', 'in', 'his']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['4:36']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Brass Go-Between']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING that morning,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "alone in my hotel room, it had been a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "much better scene. Spencer had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "blanched, confounded by the inescapable", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "logic of my accusation. A few drops of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "perspiration had formed on his upper lip. A", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "tiny vein had started to throb in his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "4:36", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- The Brass Go-Between", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:37 for 0 quotations:
    case 277:
      Serial.println(F("No quotes for 04:37"));
      return;

    // Codegen for 04:38 for 1 quotations:
    case 278:
      Serial.println(F("Only one option for 04:38:"));
    Serial.println(F("04:38 - At 4.38 a.m. as the sun is coming up over Gorley Woods, I hear a strange rustling in the grass beside me. I peer closely but can see nothing. - Jonathan Barrow, The Queue"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on as
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on the
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on sun
// DEBUG: ['At', 'TIMESTRING', 'as', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on is
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on coming
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on up
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on over
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on Gorley
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on Woods,
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on I
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on hear
// DEBUG: ['sun', 'is', 'coming', 'up', 'over', 'Gorley', 'Woods,', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 29)
// DEBUG: Operating on strange
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on rustling
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on in
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on grass
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on beside
// DEBUG: ['hear', 'a', 'strange', 'rustling', 'in', 'the', 'grass']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on me.
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on I
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on peer
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on closely
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on but
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on can
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on see
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on nothing.
// DEBUG: ['beside', 'me.', 'I', 'peer', 'closely', 'but', 'can', 'see']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['4.38 a.m.']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Jonathan Barrow, The Queue']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING as the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "sun is coming up over Gorley Woods, I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "hear a strange rustling in the grass", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "beside me. I peer closely but can see", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "4.38 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Jonathan Barrow, The Queue", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:39 for 0 quotations:
    case 279:
      Serial.println(F("No quotes for 04:39"));
      return;

    // Codegen for 04:40 for 1 quotations:
    case 280:
      Serial.println(F("Only one option for 04:40:"));
    Serial.println(F("04:40 - I settled into a daily routine. Wake up at 4.40am, shower, get on the train north by ten after five. - Tina Fey, Bossypants"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on settled
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on into
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on a
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on daily
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on routine.
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on Wake
// DEBUG: ['I', 'settled', 'into', 'a', 'daily', 'routine.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on up
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on at
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on shower,
// DEBUG: ['Wake', 'up', 'at', 'TIMESTRING,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on get
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on on
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on the
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on train
// DEBUG: 113
// DEBUG: (108, 29)
// DEBUG: Operating on north
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on by
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on ten
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on after
// DEBUG: ['shower,', 'get', 'on', 'the', 'train', 'north', 'by', 'ten']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on five.
// DEBUG: 52
// DEBUG: ['4.40am']
// DEBUG: drawing cursor (40, 17)
// DEBUG: ['- Tina Fey, Bossypants']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "I settled into a daily routine.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Wake up at TIMESTRING,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "shower, get on the train north by ten", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(40, 17, "4.40am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Tina Fey, Bossypants", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:41 for 1 quotations:
    case 281:
      Serial.println(F("Only one option for 04:41:"));
    Serial.println(F("04:41 - At 4:41 Crane's voice crackled through the walkie-talkie as if he'd read their thoughts of mutiny. “Everyone into the elevator. Now!” Only moments before the call he and C.J. had finished what they hoped would be a successful diversion. - Roland S. Jefferson, Damaged Goods: A Novel"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on Crane's
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on voice
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on crackled
// DEBUG: ['At', 'TIMESTRING', "Crane's", 'voice']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on through
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on the
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on walkie-talkie
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on as
// DEBUG: 198
// DEBUG: (193, 17)
// DEBUG: Operating on if
// DEBUG: ['crackled', 'through', 'the', 'walkie-talkie', 'as']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on he'd
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on read
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on their
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on thoughts
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on of
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on mutiny.
// DEBUG: ['if', "he'd", 'read', 'their', 'thoughts', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on “Everyone
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on into
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on the
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on elevator.
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on Now!”
// DEBUG: ['mutiny.', '“Everyone', 'into', 'the', 'elevator.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on Only
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on moments
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on before
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on the
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on call
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on he
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on and
// DEBUG: ['Now!”', 'Only', 'moments', 'before', 'the', 'call', 'he']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on C.J.
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on had
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on finished
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on what
// DEBUG: 151
// DEBUG: (146, 65)
// DEBUG: Operating on they
// DEBUG: 180
// DEBUG: (175, 65)
// DEBUG: Operating on hoped
// DEBUG: ['and', 'C.J.', 'had', 'finished', 'what', 'they']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on would
// DEBUG: 52
// DEBUG: (47, 77)
// DEBUG: Operating on be
// DEBUG: 67
// DEBUG: (62, 77)
// DEBUG: Operating on a
// DEBUG: 75
// DEBUG: (70, 77)
// DEBUG: Operating on successful
// DEBUG: 146
// DEBUG: (141, 77)
// DEBUG: Operating on diversion.
// DEBUG: ['hoped', 'would', 'be', 'a', 'successful']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['4:41']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Damaged Goods: A Novel']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING Crane's voice", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "crackled through the walkie-talkie as", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "if he'd read their thoughts of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "mutiny. “Everyone into the elevator.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Now!” Only moments before the call he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "and C.J. had finished what they", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "hoped would be a successful", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "4:41", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Damaged Goods: A Novel", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:42 for 0 quotations:
    case 282:
      Serial.println(F("No quotes for 04:42"));
      return;

    // Codegen for 04:43 for 1 quotations:
    case 283:
      Serial.println(F("Only one option for 04:43:"));
    Serial.println(F("04:43 - The time is four forty-three in the mornin an it's almost light oot there. - Suhayl Saadi, Pyschoraag"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on time
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on is
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'time', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on mornin
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on an
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on it's
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on almost
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on light
// DEBUG: ['TIMESTRING', 'in', 'the', 'mornin', 'an', "it's", 'almost']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on oot
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on there.
// DEBUG: 81
// DEBUG: ['four forty-three']
// DEBUG: drawing cursor (71, 5)
// DEBUG: ['- Suhayl Saadi, Pyschoraag']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "The time is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING in the mornin an it's almost", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(71, 5, "four forty-three", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Suhayl Saadi, Pyschoraag", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:44 for 0 quotations:
    case 284:
      Serial.println(F("No quotes for 04:44"));
      return;

    // Codegen for 04:45 for 2 quotations:
    case 285:
      option = random(0, 2);
      Serial.print(F("2 options for 04:45. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("04:45 - He lies still in the darkness and listens. His wife's breathing at his side is so faint that he can scarcely hear it. One of these mornings she'll be lying dead beside me and I won't even notice, he thinks. Or maybe it'll be me. Daybreak will reveal that one of us has been left alone. He checks the clock on the table next to the bed. The hands glow and register 4:45 a.m. - Henning Mankell, Faceless Killers "));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on lies
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on still
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on in
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on the
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on darkness
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on and
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on listens.
// DEBUG: ['He', 'lies', 'still', 'in', 'the', 'darkness', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on His
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on wife's
// DEBUG: 84
// DEBUG: (79, 17)
// DEBUG: Operating on breathing
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on at
// DEBUG: 163
// DEBUG: (158, 17)
// DEBUG: Operating on his
// DEBUG: 185
// DEBUG: (180, 17)
// DEBUG: Operating on side
// DEBUG: ['listens.', 'His', "wife's", 'breathing', 'at', 'his']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on is
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on so
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on faint
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on that
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on he
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on can
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on scarcely
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on hear
// DEBUG: ['side', 'is', 'so', 'faint', 'that', 'he', 'can', 'scarcely']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on it.
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on One
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on of
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on these
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on mornings
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on she'll
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on be
// DEBUG: ['hear', 'it.', 'One', 'of', 'these', 'mornings', "she'll"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on lying
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on dead
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on beside
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on me
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on and
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on I
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on won't
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on even
// DEBUG: ['be', 'lying', 'dead', 'beside', 'me', 'and', 'I', "won't"]
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on notice,
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on he
// DEBUG: 80
// DEBUG: (75, 65)
// DEBUG: Operating on thinks.
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on Or
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on maybe
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on it'll
// DEBUG: ['even', 'notice,', 'he', 'thinks.', 'Or', 'maybe']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on be
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on me.
// DEBUG: 53
// DEBUG: (48, 77)
// DEBUG: Operating on Daybreak
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on will
// DEBUG: 139
// DEBUG: (134, 77)
// DEBUG: Operating on reveal
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on that
// DEBUG: 211
// DEBUG: (206, 77)
// DEBUG: Operating on one
// DEBUG: ["it'll", 'be', 'me.', 'Daybreak', 'will', 'reveal', 'that']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on of
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on us
// DEBUG: 44
// DEBUG: (39, 89)
// DEBUG: Operating on has
// DEBUG: 66
// DEBUG: (61, 89)
// DEBUG: Operating on been
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on left
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on alone.
// DEBUG: 167
// DEBUG: (162, 89)
// DEBUG: Operating on He
// DEBUG: 182
// DEBUG: (177, 89)
// DEBUG: Operating on checks
// DEBUG: ['one', 'of', 'us', 'has', 'been', 'left', 'alone.', 'He']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 101)
// DEBUG: Operating on clock
// DEBUG: 75
// DEBUG: (70, 101)
// DEBUG: Operating on on
// DEBUG: 90
// DEBUG: (85, 101)
// DEBUG: Operating on the
// DEBUG: 112
// DEBUG: (107, 101)
// DEBUG: Operating on table
// DEBUG: 148
// DEBUG: (143, 101)
// DEBUG: Operating on next
// DEBUG: 177
// DEBUG: (172, 101)
// DEBUG: Operating on to
// DEBUG: 192
// DEBUG: (187, 101)
// DEBUG: Operating on the
// DEBUG: ['checks', 'the', 'clock', 'on', 'the', 'table', 'next', 'to']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on bed.
// DEBUG: 43
// DEBUG: (38, 113)
// DEBUG: Operating on The
// DEBUG: 65
// DEBUG: (60, 113)
// DEBUG: Operating on hands
// DEBUG: 101
// DEBUG: (96, 113)
// DEBUG: Operating on glow
// DEBUG: 130
// DEBUG: (125, 113)
// DEBUG: Operating on and
// DEBUG: 152
// DEBUG: (147, 113)
// DEBUG: Operating on register
// DEBUG: 209
// DEBUG: (204, 113)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'bed.', 'The', 'hands', 'glow', 'and', 'register']
// DEBUG: drawing cursor (5, 113)
// DEBUG: 144
// DEBUG: ['4:45 a.m.']
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['- Faceless Killers']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "He lies still in the darkness and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "listens. His wife's breathing at his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "side is so faint that he can scarcely", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "hear it. One of these mornings she'll", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "be lying dead beside me and I won't", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "even notice, he thinks. Or maybe", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "it'll be me. Daybreak will reveal that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "one of us has been left alone. He", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "checks the clock on the table next to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "the bed. The hands glow and register", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "4:45 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- Faceless Killers", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("04:45 - His wife's breathing at his side is so faint that he can scarcely hear it. One of these mornings she'll be lying dead beside me and I won't even notice, he thinks. Or maybe it'll be me. Daybreak will reveal that one of us has been left alone. He checks the clock on the table next to the bed. The hands glow and register 4:45 a.m. - Henning Mankell, Faceless Killers"));
// DEBUG: (5, 5)
// DEBUG: Operating on His
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on wife's
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on breathing
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on his
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on side
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on is
// DEBUG: ['His', "wife's", 'breathing', 'at', 'his', 'side']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on so
// DEBUG: 28
// DEBUG: (23, 17)
// DEBUG: Operating on faint
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on that
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on he
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on can
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on scarcely
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on hear
// DEBUG: ['is', 'so', 'faint', 'that', 'he', 'can', 'scarcely']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on it.
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on One
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on of
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on these
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on mornings
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on she'll
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on be
// DEBUG: ['hear', 'it.', 'One', 'of', 'these', 'mornings', "she'll"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on lying
// DEBUG: 49
// DEBUG: (44, 41)
// DEBUG: Operating on dead
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on beside
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on me
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on and
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on I
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on won't
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on even
// DEBUG: ['be', 'lying', 'dead', 'beside', 'me', 'and', 'I', "won't"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on notice,
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on he
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on thinks.
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on Or
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on maybe
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on it'll
// DEBUG: ['even', 'notice,', 'he', 'thinks.', 'Or', 'maybe']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on be
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on me.
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on Daybreak
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on will
// DEBUG: 139
// DEBUG: (134, 65)
// DEBUG: Operating on reveal
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on that
// DEBUG: 211
// DEBUG: (206, 65)
// DEBUG: Operating on one
// DEBUG: ["it'll", 'be', 'me.', 'Daybreak', 'will', 'reveal', 'that']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on of
// DEBUG: 29
// DEBUG: (24, 77)
// DEBUG: Operating on us
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on has
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on been
// DEBUG: 95
// DEBUG: (90, 77)
// DEBUG: Operating on left
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on alone.
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on He
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on checks
// DEBUG: ['one', 'of', 'us', 'has', 'been', 'left', 'alone.', 'He']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 89)
// DEBUG: Operating on clock
// DEBUG: 75
// DEBUG: (70, 89)
// DEBUG: Operating on on
// DEBUG: 90
// DEBUG: (85, 89)
// DEBUG: Operating on the
// DEBUG: 112
// DEBUG: (107, 89)
// DEBUG: Operating on table
// DEBUG: 148
// DEBUG: (143, 89)
// DEBUG: Operating on next
// DEBUG: 177
// DEBUG: (172, 89)
// DEBUG: Operating on to
// DEBUG: 192
// DEBUG: (187, 89)
// DEBUG: Operating on the
// DEBUG: ['checks', 'the', 'clock', 'on', 'the', 'table', 'next', 'to']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on bed.
// DEBUG: 43
// DEBUG: (38, 101)
// DEBUG: Operating on The
// DEBUG: 65
// DEBUG: (60, 101)
// DEBUG: Operating on hands
// DEBUG: 101
// DEBUG: (96, 101)
// DEBUG: Operating on glow
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on and
// DEBUG: 152
// DEBUG: (147, 101)
// DEBUG: Operating on register
// DEBUG: 209
// DEBUG: (204, 101)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'bed.', 'The', 'hands', 'glow', 'and', 'register']
// DEBUG: drawing cursor (5, 101)
// DEBUG: 144
// DEBUG: ['4:45 a.m.']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ['- Faceless Killers']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "His wife's breathing at his side", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "is so faint that he can scarcely", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "hear it. One of these mornings she'll", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "be lying dead beside me and I won't", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "even notice, he thinks. Or maybe", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "it'll be me. Daybreak will reveal that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "one of us has been left alone. He", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "checks the clock on the table next to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "the bed. The hands glow and register", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "4:45 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- Faceless Killers", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 04:46 for 1 quotations:
    case 286:
      Serial.println(F("Only one option for 04:46:"));
    Serial.println(F("04:46 - The phone rang again at four-forty-six. \"Hello,\" I said. \"Hello,\" came a woman's voice. \"Sorry about the time before. There's a disturbance in the sound field. Sometimes the sound goes away.\" \"The sound goes away?\" \"Yes,\" she said. \"The sound field's slipping. Can you hear me?\" \"Loud and clear,\" I said. It was the granddaughter of that kooky old scientist who'd given me the unicorn skull. The girl in the pink suit. - Haruki Murakami, Hard Boiled Wonderland and the End of the World "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on phone
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on rang
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on again
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on at
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'phone', 'rang', 'again', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on \"Hello,\"
// DEBUG: ['TIMESTRING.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on I
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on said.
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on \"Hello,\"
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on came
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on a
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on woman's
// DEBUG: ['\\"Hello,\\"', 'I', 'said.', '\\"Hello,\\"', 'came', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on voice.
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on \"Sorry
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on about
// DEBUG: 147
// DEBUG: (142, 41)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on time
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on before.
// DEBUG: ["woman's", 'voice.', '\\"Sorry', 'about', 'the', 'time']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on There's
// DEBUG: 68
// DEBUG: (63, 53)
// DEBUG: Operating on a
// DEBUG: 76
// DEBUG: (71, 53)
// DEBUG: Operating on disturbance
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on in
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on the
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on sound
// DEBUG: ['before.', "There's", 'a', 'disturbance', 'in', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on field.
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on Sometimes
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on the
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on sound
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on goes
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on away.\"
// DEBUG: ['sound', 'field.', 'Sometimes', 'the', 'sound', 'goes']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on \"The
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on sound
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on goes
// DEBUG: 119
// DEBUG: (114, 77)
// DEBUG: Operating on away?\"
// DEBUG: 169
// DEBUG: (164, 77)
// DEBUG: Operating on \"Yes,\"
// DEBUG: ['away.\\"', '\\"The', 'sound', 'goes', 'away?\\"']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (14, 89)
// DEBUG: Operating on she
// DEBUG: 41
// DEBUG: (36, 89)
// DEBUG: Operating on said.
// DEBUG: 77
// DEBUG: (72, 89)
// DEBUG: Operating on \"The
// DEBUG: 113
// DEBUG: (108, 89)
// DEBUG: Operating on sound
// DEBUG: 149
// DEBUG: (144, 89)
// DEBUG: Operating on field's
// DEBUG: 199
// DEBUG: (194, 89)
// DEBUG: Operating on slipping.
// DEBUG: ['\\"Yes,\\"', 'she', 'said.', '\\"The', 'sound', "field's"]
// DEBUG: drawing cursor (5, 89)
// DEBUG: (15, 101)
// DEBUG: Operating on Can
// DEBUG: 42
// DEBUG: (37, 101)
// DEBUG: Operating on you
// DEBUG: 64
// DEBUG: (59, 101)
// DEBUG: Operating on hear
// DEBUG: 93
// DEBUG: (88, 101)
// DEBUG: Operating on me?\"
// DEBUG: 129
// DEBUG: (124, 101)
// DEBUG: Operating on \"Loud
// DEBUG: 172
// DEBUG: (167, 101)
// DEBUG: Operating on and
// DEBUG: 194
// DEBUG: (189, 101)
// DEBUG: Operating on clear,\"
// DEBUG: ['slipping.', 'Can', 'you', 'hear', 'me?\\"', '\\"Loud', 'and']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (14, 113)
// DEBUG: Operating on I
// DEBUG: 27
// DEBUG: (22, 113)
// DEBUG: Operating on said.
// DEBUG: 63
// DEBUG: (58, 113)
// DEBUG: Operating on It
// DEBUG: 78
// DEBUG: (73, 113)
// DEBUG: Operating on was
// DEBUG: 100
// DEBUG: (95, 113)
// DEBUG: Operating on the
// DEBUG: 122
// DEBUG: (117, 113)
// DEBUG: Operating on granddaughter
// DEBUG: ['clear,\\"', 'I', 'said.', 'It', 'was', 'the']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (19, 125)
// DEBUG: Operating on of
// DEBUG: 39
// DEBUG: (34, 125)
// DEBUG: Operating on that
// DEBUG: 68
// DEBUG: (63, 125)
// DEBUG: Operating on kooky
// DEBUG: 104
// DEBUG: (99, 125)
// DEBUG: Operating on old
// DEBUG: 126
// DEBUG: (121, 125)
// DEBUG: Operating on scientist
// DEBUG: 190
// DEBUG: (185, 125)
// DEBUG: Operating on who'd
// DEBUG: ['granddaughter', 'of', 'that', 'kooky', 'old', 'scientist']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (11, 137)
// DEBUG: Operating on given
// DEBUG: 52
// DEBUG: (47, 137)
// DEBUG: Operating on me
// DEBUG: 67
// DEBUG: (62, 137)
// DEBUG: Operating on the
// DEBUG: 89
// DEBUG: (84, 137)
// DEBUG: Operating on unicorn
// DEBUG: 139
// DEBUG: (134, 137)
// DEBUG: Operating on skull.
// DEBUG: 182
// DEBUG: (177, 137)
// DEBUG: Operating on The
// DEBUG: 204
// DEBUG: (199, 137)
// DEBUG: Operating on girl
// DEBUG: ["who'd", 'given', 'me', 'the', 'unicorn', 'skull.', 'The']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (10, 149)
// DEBUG: Operating on in
// DEBUG: 30
// DEBUG: (25, 149)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 149)
// DEBUG: Operating on pink
// DEBUG: 81
// DEBUG: (76, 149)
// DEBUG: Operating on suit.
// DEBUG: 117
// DEBUG: ['four-forty-six']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Haruki Murakami']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "The phone rang again at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "\"Hello,\" I said. \"Hello,\" came a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "woman's voice. \"Sorry about the time", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "before. There's a disturbance in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "sound field. Sometimes the sound goes", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "away.\" \"The sound goes away?\"", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "\"Yes,\" she said. \"The sound field's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "slipping. Can you hear me?\" \"Loud and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "clear,\" I said. It was the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "granddaughter of that kooky old scientist", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "who'd given me the unicorn skull. The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "four-forty-six", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Haruki Murakami", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:47 for 0 quotations:
    case 287:
      Serial.println(F("No quotes for 04:47"));
      return;

    // Codegen for 04:48 for 1 quotations:
    case 288:
      Serial.println(F("Only one option for 04:48:"));
    Serial.println(F("04:48 - At 4:48 the happy hour when clarity visits warm darkness which soaks my eyes I know no sin - Sarah Kane, 4:48 Psychosis"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on happy
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on hour
// DEBUG: ['At', 'TIMESTRING', 'the', 'happy']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on when
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on clarity
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on visits
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on warm
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on darkness
// DEBUG: ['hour', 'when', 'clarity', 'visits', 'warm']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on which
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on soaks
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on my
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on eyes
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on I
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on know
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on no
// DEBUG: 187
// DEBUG: (182, 29)
// DEBUG: Operating on sin
// DEBUG: 209
// DEBUG: ['4:48']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Sarah Kane, 4:48 Psychosis']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING the happy", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "hour when clarity visits warm", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "4:48", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Sarah Kane, 4:48 Psychosis", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:49 for 0 quotations:
    case 289:
      Serial.println(F("No quotes for 04:49"));
      return;

    // Codegen for 04:50 for 1 quotations:
    case 290:
      Serial.println(F("Only one option for 04:50:"));
    Serial.println(F("04:50 - Even the hands of his watch and the hands of all the thirteen clocks were frozen. They had all frozen at the same time, on a snowy night, seven years before, and after that it was always ten minutes to five in the castle. - James Thurber, The 13 Clocks"));
// DEBUG: (5, 5)
// DEBUG: Operating on Even
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on hands
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on of
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on his
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on watch
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on and
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on the
// DEBUG: ['Even', 'the', 'hands', 'of', 'his', 'watch', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on hands
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on of
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on all
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on thirteen
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on clocks
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on were
// DEBUG: ['the', 'hands', 'of', 'all', 'the', 'thirteen', 'clocks']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on frozen.
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on They
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on had
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on all
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on frozen
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on at
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on the
// DEBUG: ['were', 'frozen.', 'They', 'had', 'all', 'frozen', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on same
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on time,
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on on
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on a
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on snowy
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on night,
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on seven
// DEBUG: ['the', 'same', 'time,', 'on', 'a', 'snowy', 'night,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on years
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on before,
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on and
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on after
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on that
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on it
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on was
// DEBUG: ['seven', 'years', 'before,', 'and', 'after', 'that', 'it']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on always
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['was', 'always']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 77)
// DEBUG: Operating on castle.
// DEBUG: 108
// DEBUG: ['ten minutes to five']
// DEBUG: drawing cursor (52, 65)
// DEBUG: ['- The 13 Clocks']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "Even the hands of his watch and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "the hands of all the thirteen clocks", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "were frozen. They had all frozen at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the same time, on a snowy night,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "seven years before, and after that it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "was always", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(52, 65, "ten minutes to five", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- The 13 Clocks", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:51 for 0 quotations:
    case 291:
      Serial.println(F("No quotes for 04:51"));
      return;

    // Codegen for 04:52 for 0 quotations:
    case 292:
      Serial.println(F("No quotes for 04:52"));
      return;

    // Codegen for 04:53 for 0 quotations:
    case 293:
      Serial.println(F("No quotes for 04:53"));
      return;

    // Codegen for 04:54 for 1 quotations:
    case 294:
      Serial.println(F("Only one option for 04:54:"));
    Serial.println(F("04:54 - Six minutes to five. Six minutes to go. Suddenly I felt quite clearheaded. There was an unexpected light in the cell; the boundaries were drawn, the roles well defined. - Elie Wiesel, Dawn: A Novel"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on Six
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on minutes
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on to
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on go.
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on Suddenly
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on I
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on felt
// DEBUG: ['TIMESTRING.', 'Six', 'minutes', 'to', 'go.', 'Suddenly', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on quite
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on clearheaded.
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on There
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on was
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on an
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on unexpected
// DEBUG: ['felt', 'quite', 'clearheaded.', 'There', 'was', 'an']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on light
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on in
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on cell;
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on the
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on boundaries
// DEBUG: ['unexpected', 'light', 'in', 'the', 'cell;', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on were
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on drawn,
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on the
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on roles
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on well
// DEBUG: 180
// DEBUG: (175, 53)
// DEBUG: Operating on defined.
// DEBUG: ['boundaries', 'were', 'drawn,', 'the', 'roles', 'well']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['Six minutes to five']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Elie Wiesel, Dawn: A Novel']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. Six minutes to go. Suddenly I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "felt quite clearheaded. There was an", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "unexpected light in the cell; the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "boundaries were drawn, the roles well", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "Six minutes to five", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Elie Wiesel, Dawn: A Novel", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:55 for 1 quotations:
    case 295:
      Serial.println(F("Only one option for 04:55:"));
    Serial.println(F("04:55 - 4:55 - Mank holding phone. Turns to Caddell - 'Who is this?' Caddell: 'Jim.' (shrugs) 'I think he's our man in Cincinnati.' - Hunter S. Thompson, Fear and Loathing: On the Campaign Trail '72"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on -
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on Mank
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on holding
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on phone.
// DEBUG: ['TIMESTRING', '-', 'Mank', 'holding']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on Turns
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on to
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on Caddell
// DEBUG: 118
// DEBUG: (113, 17)
// DEBUG: Operating on -
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on 'Who
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on is
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on this?'
// DEBUG: ['phone.', 'Turns', 'to', 'Caddell', '-', "'Who", 'is']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on Caddell:
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on 'Jim.'
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on (shrugs)
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on 'I
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on think
// DEBUG: ["this?'", 'Caddell:', "'Jim.'", '(shrugs)', "'I"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on he's
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on our
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on man
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on in
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on Cincinnati.'
// DEBUG: 189
// DEBUG: ['4:55']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Hunter S. Thompson']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING - Mank holding", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "phone. Turns to Caddell - 'Who is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "this?' Caddell: 'Jim.' (shrugs) 'I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "4:55", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Hunter S. Thompson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:56 for 0 quotations:
    case 296:
      Serial.println(F("No quotes for 04:56"));
      return;

    // Codegen for 04:57 for 1 quotations:
    case 297:
      Serial.println(F("Only one option for 04:57:"));
    Serial.println(F("04:57 - The second said the same thing a few minutes before five, and mentioned eternity... I'm sure I'll meet you in the other world. Four minutes later she left a last, fleeting message: My love. Fernando. It's Suzana. Then, it seemed, she had shot herself. - Peter Robb, A Death in Brazil: A Book of Omissions"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on second
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on said
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on the
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on same
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on thing
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on a
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'second', 'said', 'the', 'same', 'thing', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on mentioned
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on eternity...
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on I'm
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on sure
// DEBUG: ['TIMESTRING,', 'and', 'mentioned', 'eternity...', "I'm"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on I'll
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on meet
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on you
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on in
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on the
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on other
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on world.
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on Four
// DEBUG: ['sure', "I'll", 'meet', 'you', 'in', 'the', 'other', 'world.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on minutes
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on later
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on she
// DEBUG: 123
// DEBUG: (118, 53)
// DEBUG: Operating on left
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on a
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on last,
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on fleeting
// DEBUG: ['Four', 'minutes', 'later', 'she', 'left', 'a', 'last,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on message:
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on My
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on love.
// DEBUG: 127
// DEBUG: (122, 65)
// DEBUG: Operating on Fernando.
// DEBUG: 191
// DEBUG: (186, 65)
// DEBUG: Operating on It's
// DEBUG: ['fleeting', 'message:', 'My', 'love.', 'Fernando.']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on Suzana.
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on Then,
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on it
// DEBUG: 116
// DEBUG: (111, 77)
// DEBUG: Operating on seemed,
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on she
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on had
// DEBUG: 210
// DEBUG: (205, 77)
// DEBUG: Operating on shot
// DEBUG: ["It's", 'Suzana.', 'Then,', 'it', 'seemed,', 'she', 'had']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on herself.
// DEBUG: 72
// DEBUG: ['few minutes before five']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Peter Robb']
// DEBUG: drawing cursor (123, 192)
    paint.Paint_DrawString_EN(5, 5, "The second said the same thing a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING, and mentioned eternity... I'm", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "sure I'll meet you in the other world.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Four minutes later she left a last,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "fleeting message: My love. Fernando.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "It's Suzana. Then, it seemed, she had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "few minutes before five", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(123, 192, "- Peter Robb", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:58 for 1 quotations:
    case 298:
      Serial.println(F("Only one option for 04:58:"));
    Serial.println(F("04:58 - He wants to look death in the face. Two minutes to five. I took a handkerchief out of my pocket, but John Dawson ordered me to put it back. An Englishman dies with his eyes open. He wants to look death in the face. - Elie Wiesel, Dawn: A Novel"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on wants
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on to
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on look
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on death
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on in
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on the
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on face.
// DEBUG: ['He', 'wants', 'to', 'look', 'death', 'in', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['face.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on I
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on took
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on a
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on handkerchief
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on out
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on of
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on my
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on pocket,
// DEBUG: ['TIMESTRING.', 'I', 'took', 'a', 'handkerchief', 'out', 'of', 'my']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on but
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on John
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on Dawson
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on ordered
// DEBUG: 162
// DEBUG: (157, 41)
// DEBUG: Operating on me
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on to
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on put
// DEBUG: ['pocket,', 'but', 'John', 'Dawson', 'ordered', 'me', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on it
// DEBUG: 29
// DEBUG: (24, 53)
// DEBUG: Operating on back.
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on An
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on Englishman
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on dies
// DEBUG: 180
// DEBUG: (175, 53)
// DEBUG: Operating on with
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on his
// DEBUG: ['put', 'it', 'back.', 'An', 'Englishman', 'dies', 'with']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on eyes
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on open.
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on He
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on wants
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on to
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on look
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on death
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on in
// DEBUG: ['his', 'eyes', 'open.', 'He', 'wants', 'to', 'look', 'death']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 77)
// DEBUG: Operating on face.
// DEBUG: 71
// DEBUG: ['Two minutes to five']
// DEBUG: drawing cursor (11, 17)
// DEBUG: ['- Elie Wiesel, Dawn: A Novel']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "He wants to look death in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "face.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING. I took a handkerchief out of my", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "pocket, but John Dawson ordered me to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "put it back. An Englishman dies with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "his eyes open. He wants to look death", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(11, 17, "Two minutes to five", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Elie Wiesel, Dawn: A Novel", &Font12, WHITE, BLACK);
      return;

    // Codegen for 04:59 for 1 quotations:
    case 299:
      Serial.println(F("Only one option for 04:59:"));
    Serial.println(F("04:59 - The whole place smells like death no matter what the fuck you do. Gately gets to the shelter at 04:59 and just shuts his head off as if his head had a control switch. - David Foster Wallace, Infinite Jest "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on whole
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on place
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on smells
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on like
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on death
// DEBUG: ['The', 'whole', 'place', 'smells', 'like']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on no
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on matter
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on what
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on the
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on fuck
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on you
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on do.
// DEBUG: 198
// DEBUG: (193, 17)
// DEBUG: Operating on Gately
// DEBUG: ['death', 'no', 'matter', 'what', 'the', 'fuck', 'you', 'do.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on gets
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on to
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on shelter
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on at
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on 0TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Gately', 'gets', 'to', 'the', 'shelter', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on just
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on shuts
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on his
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on head
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on off
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on as
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on if
// DEBUG: ['0TIMESTRING', 'and', 'just', 'shuts', 'his', 'head', 'off', 'as']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on his
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on head
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on had
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on a
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on control
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on switch.
// DEBUG: 194
// DEBUG: ['4:59']
// DEBUG: drawing cursor (143, 29)
// DEBUG: ['- Infinite Jest']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "The whole place smells like", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "death no matter what the fuck you do.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Gately gets to the shelter at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "0TIMESTRING and just shuts his head off as", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(143, 29, "4:59", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Infinite Jest", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:00 for 7 quotations:
    case 300:
      option = random(0, 7);
      Serial.print(F("7 options for 05:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("05:00 - Five o'clock had hardly struck on the morning of the 19th of January, when Bessie brought a candle into my closet and found me already up and nearly dressed. - Charlotte Brontë, Jane Eyre "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 166
// DEBUG: (161, 5)
// DEBUG: Operating on had
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on hardly
// DEBUG: ['TIMESTRING', 'had']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on struck
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on on
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 17)
// DEBUG: Operating on morning
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on of
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on the
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on 19th
// DEBUG: ['hardly', 'struck', 'on', 'the', 'morning', 'of', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on of
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on January,
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on when
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on Bessie
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on brought
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on a
// DEBUG: ['19th', 'of', 'January,', 'when', 'Bessie', 'brought']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (7, 41)
// DEBUG: Operating on candle
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on into
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on my
// DEBUG: 99
// DEBUG: (94, 41)
// DEBUG: Operating on closet
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on and
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on found
// DEBUG: 200
// DEBUG: (195, 41)
// DEBUG: Operating on me
// DEBUG: ['a', 'candle', 'into', 'my', 'closet', 'and', 'found']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on already
// DEBUG: 63
// DEBUG: (58, 53)
// DEBUG: Operating on up
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on and
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on nearly
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on dressed.
// DEBUG: 200
// DEBUG: ["Five o'clock"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Jane Eyre']
// DEBUG: drawing cursor (130, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "hardly struck on the morning of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "19th of January, when Bessie brought", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "a candle into my closet and found", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "Five o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(130, 192, "- Jane Eyre", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("05:00 - It was in the township of Dunwich, in a large and hardly inhabited farmhouse set against a hillside 4 miles from the village and a mile and a half from any other dwelling, that Wilbur Whately was born at 5 a.m. on Sunday, 2 February, 1913. The date was recalled because it was Candlemas, which people in Dunwich curiously observe under another name... - H.P. Lovecraft, The Dunwich Horror "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on in
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on the
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on township
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on of
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on Dunwich,
// DEBUG: ['It', 'was', 'in', 'the', 'township', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on in
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on a
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on large
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on and
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on hardly
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on inhabited
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on farmhouse
// DEBUG: ['Dunwich,', 'in', 'a', 'large', 'and', 'hardly', 'inhabited']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on set
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on against
// DEBUG: 92
// DEBUG: (87, 29)
// DEBUG: Operating on a
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on hillside
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on 4
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on miles
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on from
// DEBUG: ['farmhouse', 'set', 'against', 'a', 'hillside', '4', 'miles']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on village
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on and
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on a
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on mile
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on and
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on a
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on half
// DEBUG: 205
// DEBUG: (200, 41)
// DEBUG: Operating on from
// DEBUG: ['from', 'the', 'village', 'and', 'a', 'mile', 'and', 'a', 'half']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on any
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on other
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on dwelling,
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on that
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on Wilbur
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on Whately
// DEBUG: ['from', 'any', 'other', 'dwelling,', 'that', 'Wilbur']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on was
// DEBUG: 40
// DEBUG: (35, 65)
// DEBUG: Operating on born
// DEBUG: 69
// DEBUG: (64, 65)
// DEBUG: Operating on at
// DEBUG: 84
// DEBUG: (79, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on on
// DEBUG: ['Whately', 'was', 'born', 'at', 'TIMESTRING']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on Sunday,
// DEBUG: 63
// DEBUG: (58, 77)
// DEBUG: Operating on 2
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on February,
// DEBUG: 135
// DEBUG: (130, 77)
// DEBUG: Operating on 1913.
// DEBUG: 171
// DEBUG: (166, 77)
// DEBUG: Operating on The
// DEBUG: 193
// DEBUG: (188, 77)
// DEBUG: Operating on date
// DEBUG: ['on', 'Sunday,', '2', 'February,', '1913.', 'The']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on was
// DEBUG: 37
// DEBUG: (32, 89)
// DEBUG: Operating on recalled
// DEBUG: 94
// DEBUG: (89, 89)
// DEBUG: Operating on because
// DEBUG: 144
// DEBUG: (139, 89)
// DEBUG: Operating on it
// DEBUG: 159
// DEBUG: (154, 89)
// DEBUG: Operating on was
// DEBUG: 181
// DEBUG: (176, 89)
// DEBUG: Operating on Candlemas,
// DEBUG: ['date', 'was', 'recalled', 'because', 'it', 'was']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (16, 101)
// DEBUG: Operating on which
// DEBUG: 57
// DEBUG: (52, 101)
// DEBUG: Operating on people
// DEBUG: 100
// DEBUG: (95, 101)
// DEBUG: Operating on in
// DEBUG: 115
// DEBUG: (110, 101)
// DEBUG: Operating on Dunwich
// DEBUG: 165
// DEBUG: (160, 101)
// DEBUG: Operating on curiously
// DEBUG: ['Candlemas,', 'which', 'people', 'in', 'Dunwich']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (15, 113)
// DEBUG: Operating on observe
// DEBUG: 70
// DEBUG: (65, 113)
// DEBUG: Operating on under
// DEBUG: 106
// DEBUG: (101, 113)
// DEBUG: Operating on another
// DEBUG: 156
// DEBUG: (151, 113)
// DEBUG: Operating on name...
// DEBUG: 206
// DEBUG: ['5 a.m.']
// DEBUG: drawing cursor (79, 65)
// DEBUG: ['- The Dunwich Horror']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "It was in the township of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Dunwich, in a large and hardly inhabited", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "farmhouse set against a hillside 4 miles", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "from the village and a mile and a half", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "from any other dwelling, that Wilbur", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "Whately was born at TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "on Sunday, 2 February, 1913. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "date was recalled because it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "Candlemas, which people in Dunwich", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(79, 65, "5 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Dunwich Horror", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("05:00 - Just after five o'clock on this chill September morning, the fishmonger's cart, containing Kirsten and Emilia and such possessions as they have been able to assemble in the time allowed to them, is driven out of the gates of Rosenborg? - Rose Tremain, Music and Silence "));
// DEBUG: (5, 5)
// DEBUG: Operating on Just
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on after
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Just', 'after']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on on
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on this
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on chill
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on September
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on morning,
// DEBUG: ['TIMESTRING', 'on', 'this', 'chill', 'September']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on fishmonger's
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on cart,
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on containing
// DEBUG: ['morning,', 'the', "fishmonger's", 'cart,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on Kirsten
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on and
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on Emilia
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on and
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on such
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on possessions
// DEBUG: ['containing', 'Kirsten', 'and', 'Emilia', 'and', 'such']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on as
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on they
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on have
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on been
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on able
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on to
// DEBUG: 168
// DEBUG: (163, 53)
// DEBUG: Operating on assemble
// DEBUG: ['possessions', 'as', 'they', 'have', 'been', 'able', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on in
// DEBUG: 34
// DEBUG: (29, 65)
// DEBUG: Operating on the
// DEBUG: 56
// DEBUG: (51, 65)
// DEBUG: Operating on time
// DEBUG: 85
// DEBUG: (80, 65)
// DEBUG: Operating on allowed
// DEBUG: 135
// DEBUG: (130, 65)
// DEBUG: Operating on to
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on them,
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on is
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on driven
// DEBUG: ['assemble', 'in', 'the', 'time', 'allowed', 'to', 'them,', 'is']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on out
// DEBUG: 39
// DEBUG: (34, 77)
// DEBUG: Operating on of
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on the
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on gates
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on of
// DEBUG: 127
// DEBUG: (122, 77)
// DEBUG: Operating on Rosenborg?
// DEBUG: 198
// DEBUG: ["five o'clock"]
// DEBUG: drawing cursor (70, 5)
// DEBUG: ['- Music and Silence']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "Just after", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING on this chill September", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "morning, the fishmonger's cart,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "containing Kirsten and Emilia and such", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "possessions as they have been able to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "assemble in the time allowed to them, is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(70, 5, "five o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Music and Silence", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("05:00 - One! said Hark. \"Two!\" cried Zorn of Zorna. \"Three!\" the Duke's voice almost whispered. \"Four!\" sighed Saralinda. \"Five!\" the Golux crowed, and pointed at the table. - James Thurber, The 13 Clocks"));
// DEBUG: (5, 5)
// DEBUG: Operating on One!
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on said
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on Hark.
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on \"Two!\"
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on cried
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on Zorn
// DEBUG: ['One!', 'said', 'Hark.', '\\"Two!\\"', 'cried']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on of
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on Zorna.
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on \"Three!\"
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on Duke's
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on voice
// DEBUG: ['Zorn', 'of', 'Zorna.', '\\"Three!\\"', 'the', "Duke's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on almost
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on whispered.
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on \"Four!\"
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on sighed
// DEBUG: ['voice', 'almost', 'whispered.', '\\"Four!\\"']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on Saralinda.
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on \"TIMESTRING!\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['sighed', 'Saralinda.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (21, 53)
// DEBUG: Operating on the
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on Golux
// DEBUG: 84
// DEBUG: (79, 53)
// DEBUG: Operating on crowed,
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on and
// DEBUG: 156
// DEBUG: (151, 53)
// DEBUG: Operating on pointed
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on at
// DEBUG: ['\\"TIMESTRING!\\"', 'the', 'Golux', 'crowed,', 'and', 'pointed']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on table.
// DEBUG: 78
// DEBUG: ['Five']
// DEBUG: drawing cursor (83, 41)
// DEBUG: ['- The 13 Clocks']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "One! said Hark. \"Two!\" cried", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Zorn of Zorna. \"Three!\" the Duke's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "voice almost whispered. \"Four!\"", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "sighed Saralinda.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "\"TIMESTRING!\" the Golux crowed, and pointed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(83, 41, "Five", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- The 13 Clocks", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("05:00 - The day came slow, till five o'clock. Then sprang before the hills. Like hindered rubies, or the light. A sudden musket spills - Emily Dickinson, The Day Came Slow, Till Five O' Clock"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on day
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on came
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on slow,
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on till
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'day', 'came', 'slow,', 'till']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on Then
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on sprang
// DEBUG: ['TIMESTRING.', 'Then']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on before
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on the
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on hills.
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on Like
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on hindered
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on rubies,
// DEBUG: ['sprang', 'before', 'the', 'hills.', 'Like', 'hindered']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on or
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on light.
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on A
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on sudden
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on musket
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on spills
// DEBUG: ['rubies,', 'or', 'the', 'light.', 'A', 'sudden', 'musket']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ["five o'clock"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Emily Dickinson']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "The day came slow, till", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING. Then", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "sprang before the hills. Like hindered", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "rubies, or the light. A sudden musket", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "five o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Emily Dickinson", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("05:00 - There are worse things than having behaved foolishly in public. There are worse things than these miniature betrayals, committed or endured or suspected; there are worse things than not being able to sleep for thinking about them. It is 5 a.m. All the worse things come stalking in and stand icily about the bed looking worse and worse and worse. - Fleur Adcock, Things "));
// DEBUG: (5, 5)
// DEBUG: Operating on There
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on are
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on worse
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on things
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on than
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on having
// DEBUG: ['There', 'are', 'worse', 'things', 'than']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on behaved
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on foolishly
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on in
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on public.
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on There
// DEBUG: ['having', 'behaved', 'foolishly', 'in', 'public.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on are
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on worse
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on things
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on than
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on these
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on miniature
// DEBUG: ['There', 'are', 'worse', 'things', 'than', 'these']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on betrayals,
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on committed
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on or
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on endured
// DEBUG: ['miniature', 'betrayals,', 'committed', 'or']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on or
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on suspected;
// DEBUG: 104
// DEBUG: (99, 53)
// DEBUG: Operating on there
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on are
// DEBUG: 162
// DEBUG: (157, 53)
// DEBUG: Operating on worse
// DEBUG: 198
// DEBUG: (193, 53)
// DEBUG: Operating on things
// DEBUG: ['endured', 'or', 'suspected;', 'there', 'are', 'worse']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on than
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on not
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on being
// DEBUG: 104
// DEBUG: (99, 65)
// DEBUG: Operating on able
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on to
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on sleep
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on for
// DEBUG: 206
// DEBUG: (201, 65)
// DEBUG: Operating on thinking
// DEBUG: ['things', 'than', 'not', 'being', 'able', 'to', 'sleep', 'for']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on about
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on them.
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on It
// DEBUG: 106
// DEBUG: (101, 77)
// DEBUG: Operating on is
// DEBUG: 121
// DEBUG: (116, 77)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['thinking', 'about', 'them.', 'It', 'is']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on All
// DEBUG: 43
// DEBUG: (38, 89)
// DEBUG: Operating on the
// DEBUG: 65
// DEBUG: (60, 89)
// DEBUG: Operating on worse
// DEBUG: 101
// DEBUG: (96, 89)
// DEBUG: Operating on things
// DEBUG: 144
// DEBUG: (139, 89)
// DEBUG: Operating on come
// DEBUG: 173
// DEBUG: (168, 89)
// DEBUG: Operating on stalking
// DEBUG: ['TIMESTRING', 'All', 'the', 'worse', 'things', 'come']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (14, 101)
// DEBUG: Operating on in
// DEBUG: 34
// DEBUG: (29, 101)
// DEBUG: Operating on and
// DEBUG: 56
// DEBUG: (51, 101)
// DEBUG: Operating on stand
// DEBUG: 92
// DEBUG: (87, 101)
// DEBUG: Operating on icily
// DEBUG: 128
// DEBUG: (123, 101)
// DEBUG: Operating on about
// DEBUG: 164
// DEBUG: (159, 101)
// DEBUG: Operating on the
// DEBUG: 186
// DEBUG: (181, 101)
// DEBUG: Operating on bed
// DEBUG: 208
// DEBUG: (203, 101)
// DEBUG: Operating on looking
// DEBUG: ['stalking', 'in', 'and', 'stand', 'icily', 'about', 'the', 'bed']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (13, 113)
// DEBUG: Operating on worse
// DEBUG: 54
// DEBUG: (49, 113)
// DEBUG: Operating on and
// DEBUG: 76
// DEBUG: (71, 113)
// DEBUG: Operating on worse
// DEBUG: 112
// DEBUG: (107, 113)
// DEBUG: Operating on and
// DEBUG: 134
// DEBUG: (129, 113)
// DEBUG: Operating on worse.
// DEBUG: 177
// DEBUG: ['5 a.m.']
// DEBUG: drawing cursor (116, 77)
// DEBUG: ['- Fleur Adcock, Things ']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "There are worse things than", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "having behaved foolishly in public.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "There are worse things than these", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "miniature betrayals, committed or", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "endured or suspected; there are worse", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "things than not being able to sleep for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "thinking about them. It is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "TIMESTRING All the worse things come", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "stalking in and stand icily about the bed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(116, 77, "5 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- Fleur Adcock, Things ", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("05:00 - What causes young people to \"come out,\" but the noble ambition of matrimony? What sends them trooping to watering-places? What keeps them dancing till five o'clock in the morning through a whole mortal season? - William Makepeace Thackeray, Vanity Fair "));
// DEBUG: (5, 5)
// DEBUG: Operating on What
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on causes
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on young
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on people
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on to
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on \"come
// DEBUG: ['What', 'causes', 'young', 'people', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on out,\"
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on but
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on noble
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on ambition
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on of
// DEBUG: ['\\"come', 'out,\\"', 'but', 'the', 'noble', 'ambition']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on matrimony?
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on What
// DEBUG: 113
// DEBUG: (108, 29)
// DEBUG: Operating on sends
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on them
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on trooping
// DEBUG: ['of', 'matrimony?', 'What', 'sends', 'them']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on watering-places?
// DEBUG: 147
// DEBUG: (142, 41)
// DEBUG: Operating on What
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on keeps
// DEBUG: ['trooping', 'to', 'watering-places?', 'What']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on them
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on dancing
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on till
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['keeps', 'them', 'dancing', 'till']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on morning
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on through
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on a
// DEBUG: 166
// DEBUG: (161, 65)
// DEBUG: Operating on whole
// DEBUG: 202
// DEBUG: (197, 65)
// DEBUG: Operating on mortal
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning', 'through', 'a', 'whole']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on season?
// DEBUG: 67
// DEBUG: ["five o'clock"]
// DEBUG: drawing cursor (119, 53)
// DEBUG: ['- Vanity Fair']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "What causes young people to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "\"come out,\" but the noble ambition", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "of matrimony? What sends them", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "trooping to watering-places? What", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "keeps them dancing till", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING in the morning through a whole", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(119, 53, "five o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Vanity Fair", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 05:01 for 2 quotations:
    case 301:
      option = random(0, 2);
      Serial.print(F("2 options for 05:01. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("05:01 - Oh yes. His clocks were set at one minute past five, four minutes past five and seven minutes past five. That was the combination number of a safe, 515457. The safe was concealed behind a reproduction of the Mona Lisa. Inside the safe, continued Poirot, with distaste, \"were the Crown Jewels of the Russian Royal Family.\" - Agatha Christie, The clocks "));
// DEBUG: (5, 5)
// DEBUG: Operating on Oh
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on yes.
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on His
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on clocks
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on were
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on set
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on at
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Oh', 'yes.', 'His', 'clocks', 'were', 'set', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on four
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on minutes
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on past
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on five
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on and
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on seven
// DEBUG: ['TIMESTRING,', 'four', 'minutes', 'past', 'five', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on minutes
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on past
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on five.
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on That
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on was
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on the
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on combination
// DEBUG: ['seven', 'minutes', 'past', 'five.', 'That', 'was', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on number
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on of
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on a
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on safe,
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on 515457.
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on The
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on safe
// DEBUG: ['combination', 'number', 'of', 'a', 'safe,', '515457.', 'The']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on was
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on concealed
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on behind
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on a
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on reproduction
// DEBUG: ['safe', 'was', 'concealed', 'behind', 'a']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (18, 77)
// DEBUG: Operating on of
// DEBUG: 38
// DEBUG: (33, 77)
// DEBUG: Operating on the
// DEBUG: 60
// DEBUG: (55, 77)
// DEBUG: Operating on Mona
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on Lisa.
// DEBUG: 125
// DEBUG: (120, 77)
// DEBUG: Operating on Inside
// DEBUG: 168
// DEBUG: (163, 77)
// DEBUG: Operating on the
// DEBUG: 190
// DEBUG: (185, 77)
// DEBUG: Operating on safe,
// DEBUG: ['reproduction', 'of', 'the', 'Mona', 'Lisa.', 'Inside', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on continued
// DEBUG: 80
// DEBUG: (75, 89)
// DEBUG: Operating on Poirot,
// DEBUG: 130
// DEBUG: (125, 89)
// DEBUG: Operating on with
// DEBUG: 159
// DEBUG: (154, 89)
// DEBUG: Operating on distaste,
// DEBUG: ['safe,', 'continued', 'Poirot,', 'with']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (15, 101)
// DEBUG: Operating on \"were
// DEBUG: 63
// DEBUG: (58, 101)
// DEBUG: Operating on the
// DEBUG: 85
// DEBUG: (80, 101)
// DEBUG: Operating on Crown
// DEBUG: 121
// DEBUG: (116, 101)
// DEBUG: Operating on Jewels
// DEBUG: 164
// DEBUG: (159, 101)
// DEBUG: Operating on of
// DEBUG: 179
// DEBUG: (174, 101)
// DEBUG: Operating on the
// DEBUG: 201
// DEBUG: (196, 101)
// DEBUG: Operating on Russian
// DEBUG: ['distaste,', '\\"were', 'the', 'Crown', 'Jewels', 'of', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (13, 113)
// DEBUG: Operating on Royal
// DEBUG: 54
// DEBUG: (49, 113)
// DEBUG: Operating on Family.\"
// DEBUG: 118
// DEBUG: ['one minute past five']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The clocks']
// DEBUG: drawing cursor (123, 192)
          paint.Paint_DrawString_EN(5, 5, "Oh yes. His clocks were set at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, four minutes past five and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "seven minutes past five. That was the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "combination number of a safe, 515457. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "safe was concealed behind a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "reproduction of the Mona Lisa. Inside the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "safe, continued Poirot, with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "distaste, \"were the Crown Jewels of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "one minute past five", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(123, 192, "- The clocks", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("05:01 - Just after five o'clock on this chill September morning, the fishmonger's cart, containing Kirsten and Emilia and such possessions as they have been able to assemble in the time allowed to them, is driven out of the gates of Rosenborg? - Rose Tremain, Music and Silence"));
// DEBUG: (5, 5)
// DEBUG: Operating on Just
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Just']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on on
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on this
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on chill
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on September
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on morning,
// DEBUG: ['TIMESTRING', 'on', 'this', 'chill', 'September']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on fishmonger's
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on cart,
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on containing
// DEBUG: ['morning,', 'the', "fishmonger's", 'cart,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on Kirsten
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on and
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on Emilia
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on and
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on such
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on possessions
// DEBUG: ['containing', 'Kirsten', 'and', 'Emilia', 'and', 'such']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on as
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on they
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on have
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on been
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on able
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on to
// DEBUG: 168
// DEBUG: (163, 53)
// DEBUG: Operating on assemble
// DEBUG: ['possessions', 'as', 'they', 'have', 'been', 'able', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on in
// DEBUG: 34
// DEBUG: (29, 65)
// DEBUG: Operating on the
// DEBUG: 56
// DEBUG: (51, 65)
// DEBUG: Operating on time
// DEBUG: 85
// DEBUG: (80, 65)
// DEBUG: Operating on allowed
// DEBUG: 135
// DEBUG: (130, 65)
// DEBUG: Operating on to
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on them,
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on is
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on driven
// DEBUG: ['assemble', 'in', 'the', 'time', 'allowed', 'to', 'them,', 'is']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on out
// DEBUG: 39
// DEBUG: (34, 77)
// DEBUG: Operating on of
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on the
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on gates
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on of
// DEBUG: 127
// DEBUG: (122, 77)
// DEBUG: Operating on Rosenborg?
// DEBUG: 198
// DEBUG: ["after five o'clock"]
// DEBUG: drawing cursor (34, 5)
// DEBUG: ['- Music and Silence']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "Just", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING on this chill September", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "morning, the fishmonger's cart,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "containing Kirsten and Emilia and such", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "possessions as they have been able to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "assemble in the time allowed to them, is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(34, 5, "after five o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Music and Silence", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 05:02 for 1 quotations:
    case 302:
      Serial.println(F("Only one option for 05:02:"));
    Serial.println(F("05:02 - It was 5:02 a.m., December 14. In another fifty-eight minutes he would set sail for America. He did not want to leave his bride; he did not want to go. - Brenda Joyce, The Prize"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on December
// DEBUG: ['It', 'was', 'TIMESTRING,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on 14.
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on In
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on another
// DEBUG: 106
// DEBUG: (101, 17)
// DEBUG: Operating on fifty-eight
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on minutes
// DEBUG: ['December', '14.', 'In', 'another', 'fifty-eight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on he
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on would
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on set
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on sail
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on for
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on America.
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on He
// DEBUG: ['minutes', 'he', 'would', 'set', 'sail', 'for', 'America.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on did
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on not
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on want
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on to
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on leave
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on his
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on bride;
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on he
// DEBUG: ['He', 'did', 'not', 'want', 'to', 'leave', 'his', 'bride;']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on did
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on not
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on want
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on to
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on go.
// DEBUG: 123
// DEBUG: ['5:02 a.m.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Brenda Joyce, The Prize']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "December 14. In another fifty-eight", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "minutes he would set sail for America.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "He did not want to leave his bride;", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "5:02 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- Brenda Joyce, The Prize", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:03 for 1 quotations:
    case 303:
      Serial.println(F("Only one option for 05:03:"));
    Serial.println(F("05:03 - It was 5:03 a.m. It didn't matter. She wasn't going to get back to sleep. She threw off her covers and, swearing at herself, Caleb and Mr. Griffin, she headed into the shower. - Heather Graham, Unhallowed ground"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on It
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on didn't
// DEBUG: ['It', 'was', 'TIMESTRING', 'It']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on matter.
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on She
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on wasn't
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on going
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on to
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on get
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on back
// DEBUG: ["didn't", 'matter.', 'She', "wasn't", 'going', 'to', 'get']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on sleep.
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on She
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on threw
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on off
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on her
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on covers
// DEBUG: ['back', 'to', 'sleep.', 'She', 'threw', 'off', 'her']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on and,
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on swearing
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on at
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on herself,
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on Caleb
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on and
// DEBUG: ['covers', 'and,', 'swearing', 'at', 'herself,', 'Caleb']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on Mr.
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on Griffin,
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on she
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on headed
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on into
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on the
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on shower.
// DEBUG: ['and', 'Mr.', 'Griffin,', 'she', 'headed', 'into', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['5:03 a.m.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Unhallowed ground']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING It", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "didn't matter. She wasn't going to get", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "back to sleep. She threw off her", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "covers and, swearing at herself, Caleb", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "and Mr. Griffin, she headed into the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "5:03 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Unhallowed ground", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:04 for 3 quotations:
    case 304:
      option = random(0, 3);
      Serial.print(F("3 options for 05:04. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("05:04 - Oh yes. His clocks were set at one minute past five, four minutes past five and seven minutes past five. That was the combination number of a safe, 515457. The safe was concealed behind a reproduction of the Mona Lisa. Inside the safe, continued Poirot, with distaste, \"were the Crown Jewels of the Russian Royal Family.\" - Agatha Christie, The clocks "));
// DEBUG: (5, 5)
// DEBUG: Operating on Oh
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on yes.
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on His
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on clocks
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on were
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on set
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on at
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on one
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on minute
// DEBUG: ['Oh', 'yes.', 'His', 'clocks', 'were', 'set', 'at', 'one']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on past
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on five,
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['minute', 'past', 'five,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on seven
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on minutes
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on past
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on five.
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on That
// DEBUG: ['TIMESTRING', 'and', 'seven', 'minutes', 'past', 'five.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on was
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on the
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on combination
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on number
// DEBUG: 180
// DEBUG: (175, 53)
// DEBUG: Operating on of
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on a
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on safe,
// DEBUG: ['That', 'was', 'the', 'combination', 'number', 'of', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on 515457.
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on The
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on safe
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on was
// DEBUG: 139
// DEBUG: (134, 65)
// DEBUG: Operating on concealed
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on behind
// DEBUG: ['safe,', '515457.', 'The', 'safe', 'was', 'concealed']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on a
// DEBUG: 25
// DEBUG: (20, 77)
// DEBUG: Operating on reproduction
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on of
// DEBUG: 125
// DEBUG: (120, 77)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 77)
// DEBUG: Operating on Mona
// DEBUG: 176
// DEBUG: (171, 77)
// DEBUG: Operating on Lisa.
// DEBUG: ['behind', 'a', 'reproduction', 'of', 'the', 'Mona']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on Inside
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on the
// DEBUG: 81
// DEBUG: (76, 89)
// DEBUG: Operating on safe,
// DEBUG: 117
// DEBUG: (112, 89)
// DEBUG: Operating on continued
// DEBUG: 181
// DEBUG: (176, 89)
// DEBUG: Operating on Poirot,
// DEBUG: ['Lisa.', 'Inside', 'the', 'safe,', 'continued']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on with
// DEBUG: 47
// DEBUG: (42, 101)
// DEBUG: Operating on distaste,
// DEBUG: 111
// DEBUG: (106, 101)
// DEBUG: Operating on \"were
// DEBUG: 154
// DEBUG: (149, 101)
// DEBUG: Operating on the
// DEBUG: 176
// DEBUG: (171, 101)
// DEBUG: Operating on Crown
// DEBUG: ['Poirot,', 'with', 'distaste,', '\\"were', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on Jewels
// DEBUG: 59
// DEBUG: (54, 113)
// DEBUG: Operating on of
// DEBUG: 74
// DEBUG: (69, 113)
// DEBUG: Operating on the
// DEBUG: 96
// DEBUG: (91, 113)
// DEBUG: Operating on Russian
// DEBUG: 146
// DEBUG: (141, 113)
// DEBUG: Operating on Royal
// DEBUG: 182
// DEBUG: (177, 113)
// DEBUG: Operating on Family.\"
// DEBUG: ['Crown', 'Jewels', 'of', 'the', 'Russian', 'Royal']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ['four minutes past five']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- The clocks']
// DEBUG: drawing cursor (123, 192)
          paint.Paint_DrawString_EN(5, 5, "Oh yes. His clocks were set at one", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "minute past five,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING and seven minutes past five.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "That was the combination number of a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "safe, 515457. The safe was concealed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "behind a reproduction of the Mona", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "Lisa. Inside the safe, continued", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "Poirot, with distaste, \"were the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "Crown Jewels of the Russian Royal", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "four minutes past five", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(123, 192, "- The clocks", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("05:04 - 5.04 a.m. on the substandard clock radio. Because why do people always say the day starts now? Really it starts in the middle of the night at a fraction of a second past midnight. - Ali Smith, The Accidental "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on on
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on the
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on substandard
// DEBUG: ['TIMESTRING', 'on', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on clock
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on radio.
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on Because
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on why
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on do
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on people
// DEBUG: ['substandard', 'clock', 'radio.', 'Because', 'why', 'do']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on always
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on say
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on day
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on starts
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on now?
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on Really
// DEBUG: ['people', 'always', 'say', 'the', 'day', 'starts', 'now?']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on it
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on starts
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on in
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on the
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on middle
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on of
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on the
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on night
// DEBUG: ['Really', 'it', 'starts', 'in', 'the', 'middle', 'of', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on a
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on fraction
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on of
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on a
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on second
// DEBUG: 162
// DEBUG: (157, 53)
// DEBUG: Operating on past
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on midnight.
// DEBUG: ['night', 'at', 'a', 'fraction', 'of', 'a', 'second', 'past']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['5.04 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Ali Smith, The Accidental ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "substandard clock radio. Because why do", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "people always say the day starts now?", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Really it starts in the middle of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "night at a fraction of a second past", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "5.04 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Ali Smith, The Accidental ", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("05:04 - Oh yes. His clocks were set at one minute past five, four minutes past five and seven minutes past five. That was the combination number of a safe, 515457. The safe was concealed behind a reproduction of the Mona Lisa. Inside the safe, continued Poirot, with distaste, were the Crown Jewels of the Russian Royal Family.\" - Agatha Christie, The Clocks"));
// DEBUG: (5, 5)
// DEBUG: Operating on Oh
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on yes.
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on His
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on clocks
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on were
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on set
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on at
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on one
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on minute
// DEBUG: ['Oh', 'yes.', 'His', 'clocks', 'were', 'set', 'at', 'one']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on past
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on five,
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['minute', 'past', 'five,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on seven
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on minutes
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on past
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on five.
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on That
// DEBUG: ['TIMESTRING', 'and', 'seven', 'minutes', 'past', 'five.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on was
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on the
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on combination
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on number
// DEBUG: 180
// DEBUG: (175, 53)
// DEBUG: Operating on of
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on a
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on safe,
// DEBUG: ['That', 'was', 'the', 'combination', 'number', 'of', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on 515457.
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on The
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on safe
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on was
// DEBUG: 139
// DEBUG: (134, 65)
// DEBUG: Operating on concealed
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on behind
// DEBUG: ['safe,', '515457.', 'The', 'safe', 'was', 'concealed']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on a
// DEBUG: 25
// DEBUG: (20, 77)
// DEBUG: Operating on reproduction
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on of
// DEBUG: 125
// DEBUG: (120, 77)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 77)
// DEBUG: Operating on Mona
// DEBUG: 176
// DEBUG: (171, 77)
// DEBUG: Operating on Lisa.
// DEBUG: ['behind', 'a', 'reproduction', 'of', 'the', 'Mona']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on Inside
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on the
// DEBUG: 81
// DEBUG: (76, 89)
// DEBUG: Operating on safe,
// DEBUG: 117
// DEBUG: (112, 89)
// DEBUG: Operating on continued
// DEBUG: 181
// DEBUG: (176, 89)
// DEBUG: Operating on Poirot,
// DEBUG: ['Lisa.', 'Inside', 'the', 'safe,', 'continued']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on with
// DEBUG: 47
// DEBUG: (42, 101)
// DEBUG: Operating on distaste,
// DEBUG: 111
// DEBUG: (106, 101)
// DEBUG: Operating on were
// DEBUG: 140
// DEBUG: (135, 101)
// DEBUG: Operating on the
// DEBUG: 162
// DEBUG: (157, 101)
// DEBUG: Operating on Crown
// DEBUG: 198
// DEBUG: (193, 101)
// DEBUG: Operating on Jewels
// DEBUG: ['Poirot,', 'with', 'distaste,', 'were', 'the', 'Crown']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 113)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 113)
// DEBUG: Operating on Russian
// DEBUG: 104
// DEBUG: (99, 113)
// DEBUG: Operating on Royal
// DEBUG: 140
// DEBUG: (135, 113)
// DEBUG: Operating on Family.\"
// DEBUG: 204
// DEBUG: ['four minutes past five']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Agatha Christie, The Clocks']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Oh yes. His clocks were set at one", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "minute past five,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING and seven minutes past five.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "That was the combination number of a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "safe, 515457. The safe was concealed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "behind a reproduction of the Mona", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "Lisa. Inside the safe, continued", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "Poirot, with distaste, were the Crown", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "four minutes past five", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Agatha Christie, The Clocks", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 05:05 for 1 quotations:
    case 305:
      Serial.println(F("Only one option for 05:05:"));
    Serial.println(F("05:05 - The baby, a boy, is born at five past five in the morning. - Jhumpa Lahiri, The Namesake"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on baby,
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on a
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on boy,
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on is
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on born
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on at
// DEBUG: 164
// DEBUG: (159, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'baby,', 'a', 'boy,', 'is', 'born', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on in
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'in']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on morning.
// DEBUG: 71
// DEBUG: ['five past five']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Jhumpa Lahiri, The Namesake']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "The baby, a boy, is born at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "five past five", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Jhumpa Lahiri, The Namesake", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:06 for 1 quotations:
    case 306:
      Serial.println(F("Only one option for 05:06:"));
    Serial.println(F("05:06 - 5:06 a.m. I wake up strangely energized, my stomach growling. Upstairs, the overstocked fridge offers me its bounty of sympathy food. - Jonathon Tropper, This is Where I Leave you"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on I
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on wake
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on up
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on strangely
// DEBUG: ['TIMESTRING', 'I', 'wake', 'up']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on energized,
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on my
// DEBUG: 106
// DEBUG: (101, 17)
// DEBUG: Operating on stomach
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on growling.
// DEBUG: ['strangely', 'energized,', 'my', 'stomach']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on Upstairs,
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on the
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on overstocked
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on fridge
// DEBUG: ['growling.', 'Upstairs,', 'the', 'overstocked']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on offers
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on me
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on its
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on bounty
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on of
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on sympathy
// DEBUG: ['fridge', 'offers', 'me', 'its', 'bounty', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on food.
// DEBUG: 55
// DEBUG: ['5:06 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- This is Where I Leave you']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING I wake up", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "strangely energized, my stomach", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "growling. Upstairs, the overstocked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "fridge offers me its bounty of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "5:06 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- This is Where I Leave you", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:07 for 1 quotations:
    case 307:
      Serial.println(F("Only one option for 05:07:"));
    Serial.println(F("05:07 - Oh yes. His clocks were set at one minute past five, four minutes past five and seven minutes past five. That was the combination number of a safe, 515457. The safe was concealed behind a reproduction of the Mona Lisa. Inside the safe, continued Poirot, with distaste, \"were the Crown Jewels of the Russian Royal Family.\" - Agatha Christie, The clocks "));
// DEBUG: (5, 5)
// DEBUG: Operating on Oh
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on yes.
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on His
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on clocks
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on were
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on set
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on at
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on one
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on minute
// DEBUG: ['Oh', 'yes.', 'His', 'clocks', 'were', 'set', 'at', 'one']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on past
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on five,
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on four
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on minutes
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on past
// DEBUG: 190
// DEBUG: (185, 17)
// DEBUG: Operating on five
// DEBUG: ['minute', 'past', 'five,', 'four', 'minutes', 'past']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['five', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on That
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on was
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on the
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on combination
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on number
// DEBUG: ['TIMESTRING.', 'That', 'was', 'the', 'combination']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on a
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on safe,
// DEBUG: 76
// DEBUG: (71, 53)
// DEBUG: Operating on 515457.
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on The
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on safe
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on was
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on concealed
// DEBUG: ['number', 'of', 'a', 'safe,', '515457.', 'The', 'safe', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on behind
// DEBUG: 63
// DEBUG: (58, 65)
// DEBUG: Operating on a
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on reproduction
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on of
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on the
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on Mona
// DEBUG: ['concealed', 'behind', 'a', 'reproduction', 'of', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on Lisa.
// DEBUG: 51
// DEBUG: (46, 77)
// DEBUG: Operating on Inside
// DEBUG: 94
// DEBUG: (89, 77)
// DEBUG: Operating on the
// DEBUG: 116
// DEBUG: (111, 77)
// DEBUG: Operating on safe,
// DEBUG: 152
// DEBUG: (147, 77)
// DEBUG: Operating on continued
// DEBUG: ['Mona', 'Lisa.', 'Inside', 'the', 'safe,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on Poirot,
// DEBUG: 70
// DEBUG: (65, 89)
// DEBUG: Operating on with
// DEBUG: 99
// DEBUG: (94, 89)
// DEBUG: Operating on distaste,
// DEBUG: 163
// DEBUG: (158, 89)
// DEBUG: Operating on \"were
// DEBUG: 206
// DEBUG: (201, 89)
// DEBUG: Operating on the
// DEBUG: ['continued', 'Poirot,', 'with', 'distaste,', '\\"were']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on Crown
// DEBUG: 50
// DEBUG: (45, 101)
// DEBUG: Operating on Jewels
// DEBUG: 93
// DEBUG: (88, 101)
// DEBUG: Operating on of
// DEBUG: 108
// DEBUG: (103, 101)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on Russian
// DEBUG: 180
// DEBUG: (175, 101)
// DEBUG: Operating on Royal
// DEBUG: ['the', 'Crown', 'Jewels', 'of', 'the', 'Russian']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on Family.\"
// DEBUG: 80
// DEBUG: ['seven minutes past five']
// DEBUG: drawing cursor (32, 29)
// DEBUG: ['- The clocks']
// DEBUG: drawing cursor (123, 192)
    paint.Paint_DrawString_EN(5, 5, "Oh yes. His clocks were set at one", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "minute past five, four minutes past", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "five and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING. That was the combination", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "number of a safe, 515457. The safe was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "concealed behind a reproduction of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Mona Lisa. Inside the safe,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "continued Poirot, with distaste, \"were", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "the Crown Jewels of the Russian", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(32, 29, "seven minutes past five", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(123, 192, "- The clocks", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:08 for 1 quotations:
    case 308:
      Serial.println(F("Only one option for 05:08:"));
    Serial.println(F("05:08 - Ambrose and I will marry at Fort McHenry at 5:08 EDST this coming Saturday, Rosh Hashanah! - John Barth, Letters"));
// DEBUG: (5, 5)
// DEBUG: Operating on Ambrose
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on and
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on I
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on will
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on marry
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on at
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on Fort
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on McHenry
// DEBUG: ['Ambrose', 'and', 'I', 'will', 'marry', 'at', 'Fort']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on EDST
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on this
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on coming
// DEBUG: ['McHenry', 'at', 'TIMESTRING', 'EDST', 'this']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on Saturday,
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on Rosh
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on Hashanah!
// DEBUG: 174
// DEBUG: ['5:08']
// DEBUG: drawing cursor (28, 17)
// DEBUG: ['- John Barth, Letters']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "Ambrose and I will marry at Fort", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "McHenry at TIMESTRING EDST this", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(28, 17, "5:08", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- John Barth, Letters", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:09 for 1 quotations:
    case 309:
      Serial.println(F("Only one option for 05:09:"));
    Serial.println(F("05:09 - The primal flush of triumph which had saturated the American's humor on this signal success, proved but fictive and transitory when inquiry of the station attendants educed the information that the two earliest trains to be obtained were the 5:09 to Dunkerque and the 5:37 for Ostend. - Louis Joseph Vance, The Black Bag"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on primal
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on flush
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on of
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on triumph
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on which
// DEBUG: ['The', 'primal', 'flush', 'of', 'triumph']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on had
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on saturated
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on the
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on American's
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on humor
// DEBUG: ['which', 'had', 'saturated', 'the', "American's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 29)
// DEBUG: Operating on this
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on signal
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on success,
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on proved
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on but
// DEBUG: ['humor', 'on', 'this', 'signal', 'success,', 'proved']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on fictive
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on and
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on transitory
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on when
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on inquiry
// DEBUG: ['but', 'fictive', 'and', 'transitory', 'when']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on station
// DEBUG: 105
// DEBUG: (100, 53)
// DEBUG: Operating on attendants
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on educed
// DEBUG: ['inquiry', 'of', 'the', 'station', 'attendants']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 65)
// DEBUG: Operating on information
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on that
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on the
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on two
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on earliest
// DEBUG: ['educed', 'the', 'information', 'that', 'the', 'two']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on trains
// DEBUG: 62
// DEBUG: (57, 77)
// DEBUG: Operating on to
// DEBUG: 77
// DEBUG: (72, 77)
// DEBUG: Operating on be
// DEBUG: 92
// DEBUG: (87, 77)
// DEBUG: Operating on obtained
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on were
// DEBUG: 178
// DEBUG: (173, 77)
// DEBUG: Operating on the
// DEBUG: 200
// DEBUG: (195, 77)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['earliest', 'trains', 'to', 'be', 'obtained', 'were', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on to
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on Dunkerque
// DEBUG: 188
// DEBUG: (183, 89)
// DEBUG: Operating on and
// DEBUG: 210
// DEBUG: (205, 89)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'to', 'Dunkerque', 'and']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on 5:37
// DEBUG: 43
// DEBUG: (38, 101)
// DEBUG: Operating on for
// DEBUG: 65
// DEBUG: (60, 101)
// DEBUG: Operating on Ostend.
// DEBUG: 115
// DEBUG: ['5:09']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- The Black Bag']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "The primal flush of triumph", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "which had saturated the American's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "humor on this signal success, proved", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "but fictive and transitory when", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "inquiry of the station attendants", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "educed the information that the two", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "earliest trains to be obtained were the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "TIMESTRING to Dunkerque and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "5:09", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- The Black Bag", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:10 for 2 quotations:
    case 310:
      option = random(0, 2);
      Serial.print(F("2 options for 05:10. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("05:10 - If this is not enough to kill me, I have more left in the bottle. Ten minutes past five. \"You have just gone, after giving me my composing draught.\" - Wilkie Collins, The Law and the Lady "));
// DEBUG: (5, 5)
// DEBUG: Operating on If
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on this
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on is
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on not
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on enough
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on to
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on kill
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on me,
// DEBUG: 200
// DEBUG: (195, 5)
// DEBUG: Operating on I
// DEBUG: 208
// DEBUG: (203, 5)
// DEBUG: Operating on have
// DEBUG: ['If', 'this', 'is', 'not', 'enough', 'to', 'kill', 'me,', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on more
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on left
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on in
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on bottle.
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['have', 'more', 'left', 'in', 'the', 'bottle.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on \"You
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on have
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on just
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on gone,
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on after
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on giving
// DEBUG: ['TIMESTRING.', '\\"You', 'have', 'just', 'gone,', 'after']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on me
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on my
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on composing
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on draught.\"
// DEBUG: 182
// DEBUG: ['Ten minutes past five']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- The Law and the Lady']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "If this is not enough to kill me, I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "have more left in the bottle.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING. \"You have just gone, after", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Ten minutes past five", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- The Law and the Lady", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("05:10 - I settled into a daily routine. Wake up at 4:40am, shower, get on the train north by ten after five. - Tina Fey, Bossypants"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on settled
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on into
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on a
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on daily
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on routine.
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on Wake
// DEBUG: ['I', 'settled', 'into', 'a', 'daily', 'routine.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on up
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on at
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on 4:40am,
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on shower,
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on get
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on on
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on the
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on train
// DEBUG: ['Wake', 'up', 'at', '4:40am,', 'shower,', 'get', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on north
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on by
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['train', 'north', 'by']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['ten after five']
// DEBUG: drawing cursor (62, 29)
// DEBUG: ['- Tina Fey, Bossypants']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "I settled into a daily routine.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Wake up at 4:40am, shower, get on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "train north by", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(62, 29, "ten after five", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Tina Fey, Bossypants", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 05:11 for 1 quotations:
    case 311:
      Serial.println(F("Only one option for 05:11:"));
    Serial.println(F("05:11 - Today was Tuesday, the fifteenth of August; the sun had risen at eleven minutes past five this morning and would set at two minutes before seven this evening. - Donald E Westlake, The Hot Rock"));
// DEBUG: (5, 5)
// DEBUG: Operating on Today
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on was
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on Tuesday,
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on fifteenth
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on of
// DEBUG: ['Today', 'was', 'Tuesday,', 'the', 'fifteenth']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on August;
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on the
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on sun
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on had
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on risen
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on at
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['of', 'August;', 'the', 'sun', 'had', 'risen', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on this
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on morning
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on and
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on would
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on set
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on at
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on two
// DEBUG: ['TIMESTRING', 'this', 'morning', 'and', 'would', 'set', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on minutes
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on before
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on seven
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on this
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on evening.
// DEBUG: ['two', 'minutes', 'before', 'seven', 'this']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['eleven minutes past five']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- The Hot Rock']
// DEBUG: drawing cursor (109, 192)
    paint.Paint_DrawString_EN(5, 5, "Today was Tuesday, the fifteenth", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "of August; the sun had risen at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING this morning and would set at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "two minutes before seven this", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "eleven minutes past five", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(109, 192, "- The Hot Rock", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:12 for 1 quotations:
    case 312:
      Serial.println(F("Only one option for 05:12:"));
    Serial.println(F("05:12 - At twelve minutes and six seconds past five o'clock on the morning of April 18th, 1906, the San francisco peninsula began to shiver in the grip of an earthquake which, when its ultimate consequences are considered, was the most disastrous in the recorded history of the North American continent. - Herbert Asbury, Slummer's Paradise"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on on
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on morning
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on of
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on April
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on 18th,
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on 1906,
// DEBUG: ['TIMESTRING', 'on', 'the', 'morning', 'of', 'April', '18th,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on San
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on francisco
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on peninsula
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on began
// DEBUG: ['1906,', 'the', 'San', 'francisco', 'peninsula']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on shiver
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on in
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on the
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on grip
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on of
// DEBUG: 155
// DEBUG: (150, 53)
// DEBUG: Operating on an
// DEBUG: 170
// DEBUG: (165, 53)
// DEBUG: Operating on earthquake
// DEBUG: ['began', 'to', 'shiver', 'in', 'the', 'grip', 'of', 'an']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on which,
// DEBUG: 64
// DEBUG: (59, 65)
// DEBUG: Operating on when
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on its
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on ultimate
// DEBUG: 172
// DEBUG: (167, 65)
// DEBUG: Operating on consequences
// DEBUG: ['earthquake', 'which,', 'when', 'its', 'ultimate']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (18, 77)
// DEBUG: Operating on are
// DEBUG: 45
// DEBUG: (40, 77)
// DEBUG: Operating on considered,
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on was
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on most
// DEBUG: 196
// DEBUG: (191, 77)
// DEBUG: Operating on disastrous
// DEBUG: ['consequences', 'are', 'considered,', 'was', 'the', 'most']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 89)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 89)
// DEBUG: Operating on recorded
// DEBUG: 115
// DEBUG: (110, 89)
// DEBUG: Operating on history
// DEBUG: 165
// DEBUG: (160, 89)
// DEBUG: Operating on of
// DEBUG: 180
// DEBUG: (175, 89)
// DEBUG: Operating on the
// DEBUG: 202
// DEBUG: (197, 89)
// DEBUG: Operating on North
// DEBUG: ['disastrous', 'in', 'the', 'recorded', 'history', 'of', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on American
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on continent.
// DEBUG: 144
// DEBUG: ["twelve minutes and six seconds past five o'clock"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: ["- Slummer's Paradise"]
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING on the morning of April 18th,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "1906, the San francisco peninsula", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "began to shiver in the grip of an", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "earthquake which, when its ultimate", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "consequences are considered, was the most", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "disastrous in the recorded history of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "twelve minutes and six seconds past five o'clock", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Slummer's Paradise", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:13 for 1 quotations:
    case 313:
      Serial.println(F("Only one option for 05:13:"));
    Serial.println(F("05:13 - Lying on my side in bed, I stared at my alarm clock until it became a blemish, its red hue glowing like a welcome sign beckoning me into the depths of hell's crimson-colored cavities. 5:13 am. To describe this Monday as a blue Monday was an understatement. - Nakia D Johnson, Uptempo"));
// DEBUG: (5, 5)
// DEBUG: Operating on Lying
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on on
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on my
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on side
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on in
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on bed,
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on I
// DEBUG: 157
// DEBUG: (152, 5)
// DEBUG: Operating on stared
// DEBUG: 200
// DEBUG: (195, 5)
// DEBUG: Operating on at
// DEBUG: ['Lying', 'on', 'my', 'side', 'in', 'bed,', 'I', 'stared']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on my
// DEBUG: 28
// DEBUG: (23, 17)
// DEBUG: Operating on alarm
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on clock
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on until
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on it
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on became
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on a
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on blemish,
// DEBUG: ['at', 'my', 'alarm', 'clock', 'until', 'it', 'became', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on its
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on red
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on hue
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on glowing
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on like
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on a
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on welcome
// DEBUG: ['blemish,', 'its', 'red', 'hue', 'glowing', 'like', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on sign
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on beckoning
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on me
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on into
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on the
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on depths
// DEBUG: ['welcome', 'sign', 'beckoning', 'me', 'into', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on hell's
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on crimson-colored
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on cavities.
// DEBUG: ['depths', 'of', "hell's", 'crimson-colored']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on To
// DEBUG: 163
// DEBUG: (158, 65)
// DEBUG: Operating on describe
// DEBUG: ['cavities.', 'TIMESTRING', 'To']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on this
// DEBUG: 48
// DEBUG: (43, 77)
// DEBUG: Operating on Monday
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on as
// DEBUG: 106
// DEBUG: (101, 77)
// DEBUG: Operating on a
// DEBUG: 114
// DEBUG: (109, 77)
// DEBUG: Operating on blue
// DEBUG: 143
// DEBUG: (138, 77)
// DEBUG: Operating on Monday
// DEBUG: 186
// DEBUG: (181, 77)
// DEBUG: Operating on was
// DEBUG: 208
// DEBUG: (203, 77)
// DEBUG: Operating on an
// DEBUG: ['describe', 'this', 'Monday', 'as', 'a', 'blue', 'Monday', 'was']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on understatement.
// DEBUG: 119
// DEBUG: ['5:13 am.']
// DEBUG: drawing cursor (15, 65)
// DEBUG: ['- Nakia D Johnson, Uptempo']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "Lying on my side in bed, I stared", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "at my alarm clock until it became a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "blemish, its red hue glowing like a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "welcome sign beckoning me into the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "depths of hell's crimson-colored", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "cavities. TIMESTRING To", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "describe this Monday as a blue Monday was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(15, 65, "5:13 am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Nakia D Johnson, Uptempo", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:14 for 1 quotations:
    case 314:
      Serial.println(F("Only one option for 05:14:"));
    Serial.println(F("05:14 - The time was 5.14am, a very strange time indeed for the sheriff to have seen what he claimed he saw as he made his early-morning rounds, first patrolling back and forth along the deserted, snowbound streets of Kingdom City before extending his vigilance northward, along County Road. - Thomas H Cook, Into the Web"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on time
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on was
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on a
// DEBUG: ['The', 'time', 'was', 'TIMESTRING,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (7, 17)
// DEBUG: Operating on very
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on strange
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on time
// DEBUG: 120
// DEBUG: (115, 17)
// DEBUG: Operating on indeed
// DEBUG: 163
// DEBUG: (158, 17)
// DEBUG: Operating on for
// DEBUG: 185
// DEBUG: (180, 17)
// DEBUG: Operating on the
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on sheriff
// DEBUG: ['a', 'very', 'strange', 'time', 'indeed', 'for', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on have
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on seen
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on what
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on he
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on claimed
// DEBUG: 185
// DEBUG: (180, 29)
// DEBUG: Operating on he
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on saw
// DEBUG: ['sheriff', 'to', 'have', 'seen', 'what', 'he', 'claimed', 'he']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on as
// DEBUG: 29
// DEBUG: (24, 41)
// DEBUG: Operating on he
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on made
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on his
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on early-morning
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on rounds,
// DEBUG: ['saw', 'as', 'he', 'made', 'his', 'early-morning']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on first
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on patrolling
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on back
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on and
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on forth
// DEBUG: ['rounds,', 'first', 'patrolling', 'back', 'and']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on along
// DEBUG: 52
// DEBUG: (47, 65)
// DEBUG: Operating on the
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on deserted,
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on snowbound
// DEBUG: 202
// DEBUG: (197, 65)
// DEBUG: Operating on streets
// DEBUG: ['forth', 'along', 'the', 'deserted,', 'snowbound']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 77)
// DEBUG: Operating on Kingdom
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on City
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on before
// DEBUG: 155
// DEBUG: (150, 77)
// DEBUG: Operating on extending
// DEBUG: ['streets', 'of', 'Kingdom', 'City', 'before']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on his
// DEBUG: 42
// DEBUG: (37, 89)
// DEBUG: Operating on vigilance
// DEBUG: 106
// DEBUG: (101, 89)
// DEBUG: Operating on northward,
// DEBUG: 177
// DEBUG: (172, 89)
// DEBUG: Operating on along
// DEBUG: ['extending', 'his', 'vigilance', 'northward,']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on County
// DEBUG: 59
// DEBUG: (54, 101)
// DEBUG: Operating on Road.
// DEBUG: 95
// DEBUG: ['5.14am']
// DEBUG: drawing cursor (78, 5)
// DEBUG: ['- Thomas H Cook, Into the Web']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "The time was TIMESTRING,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "a very strange time indeed for the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "sheriff to have seen what he claimed he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "saw as he made his early-morning", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "rounds, first patrolling back and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "forth along the deserted, snowbound", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "streets of Kingdom City before", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "extending his vigilance northward,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(78, 5, "5.14am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Thomas H Cook, Into the Web", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:15 for 2 quotations:
    case 315:
      option = random(0, 2);
      Serial.print(F("2 options for 05:15. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("05:15 - By the first week of May, Ralph was waking up to birdsong at 5:15 a.m. He tried earplugs for a few nights, although he doubted from the outset that they would work. It wasn’t the newly returned birds that were waking him up, nor the occasional delivery-truck backfire out on Harris Avenue. He had always been the sort of guy who could sleep in the middle of a brass marching bad, and he didn’t think that had changed. What had changed was inside his head. - Stephen King, Insomnia "));
// DEBUG: (5, 5)
// DEBUG: Operating on By
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on first
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on week
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on of
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on May,
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on Ralph
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on was
// DEBUG: ['By', 'the', 'first', 'week', 'of', 'May,', 'Ralph']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on waking
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on up
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on to
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on birdsong
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on at
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['was', 'waking', 'up', 'to', 'birdsong', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on He
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on tried
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on earplugs
// DEBUG: ['TIMESTRING', 'He', 'tried']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on for
// DEBUG: 41
// DEBUG: (36, 41)
// DEBUG: Operating on a
// DEBUG: 49
// DEBUG: (44, 41)
// DEBUG: Operating on few
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on nights,
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on although
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on he
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on doubted
// DEBUG: ['earplugs', 'for', 'a', 'few', 'nights,', 'although', 'he']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on from
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on outset
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on that
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on they
// DEBUG: 170
// DEBUG: (165, 53)
// DEBUG: Operating on would
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on work.
// DEBUG: ['doubted', 'from', 'the', 'outset', 'that', 'they', 'would']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on It
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on wasn’t
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on the
// DEBUG: 96
// DEBUG: (91, 65)
// DEBUG: Operating on newly
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on returned
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on birds
// DEBUG: ['work.', 'It', 'wasn’t', 'the', 'newly', 'returned']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 77)
// DEBUG: Operating on were
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on waking
// DEBUG: 117
// DEBUG: (112, 77)
// DEBUG: Operating on him
// DEBUG: 139
// DEBUG: (134, 77)
// DEBUG: Operating on up,
// DEBUG: 161
// DEBUG: (156, 77)
// DEBUG: Operating on nor
// DEBUG: 183
// DEBUG: (178, 77)
// DEBUG: Operating on the
// DEBUG: 205
// DEBUG: (200, 77)
// DEBUG: Operating on occasional
// DEBUG: ['birds', 'that', 'were', 'waking', 'him', 'up,', 'nor', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on delivery-truck
// DEBUG: 120
// DEBUG: (115, 89)
// DEBUG: Operating on backfire
// DEBUG: 177
// DEBUG: (172, 89)
// DEBUG: Operating on out
// DEBUG: 199
// DEBUG: (194, 89)
// DEBUG: Operating on on
// DEBUG: ['occasional', 'delivery-truck', 'backfire', 'out']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on Harris
// DEBUG: 56
// DEBUG: (51, 101)
// DEBUG: Operating on Avenue.
// DEBUG: 106
// DEBUG: (101, 101)
// DEBUG: Operating on He
// DEBUG: 121
// DEBUG: (116, 101)
// DEBUG: Operating on had
// DEBUG: 143
// DEBUG: (138, 101)
// DEBUG: Operating on always
// DEBUG: 186
// DEBUG: (181, 101)
// DEBUG: Operating on been
// DEBUG: ['on', 'Harris', 'Avenue.', 'He', 'had', 'always']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 113)
// DEBUG: Operating on sort
// DEBUG: 66
// DEBUG: (61, 113)
// DEBUG: Operating on of
// DEBUG: 81
// DEBUG: (76, 113)
// DEBUG: Operating on guy
// DEBUG: 103
// DEBUG: (98, 113)
// DEBUG: Operating on who
// DEBUG: 125
// DEBUG: (120, 113)
// DEBUG: Operating on could
// DEBUG: 161
// DEBUG: (156, 113)
// DEBUG: Operating on sleep
// DEBUG: 197
// DEBUG: (192, 113)
// DEBUG: Operating on in
// DEBUG: ['been', 'the', 'sort', 'of', 'guy', 'who', 'could', 'sleep']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (8, 125)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 125)
// DEBUG: Operating on middle
// DEBUG: 78
// DEBUG: (73, 125)
// DEBUG: Operating on of
// DEBUG: 93
// DEBUG: (88, 125)
// DEBUG: Operating on a
// DEBUG: 101
// DEBUG: (96, 125)
// DEBUG: Operating on brass
// DEBUG: 137
// DEBUG: (132, 125)
// DEBUG: Operating on marching
// DEBUG: 194
// DEBUG: (189, 125)
// DEBUG: Operating on bad,
// DEBUG: ['in', 'the', 'middle', 'of', 'a', 'brass', 'marching']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (10, 137)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 137)
// DEBUG: Operating on he
// DEBUG: 52
// DEBUG: (47, 137)
// DEBUG: Operating on didn’t
// DEBUG: 95
// DEBUG: (90, 137)
// DEBUG: Operating on think
// DEBUG: 131
// DEBUG: (126, 137)
// DEBUG: Operating on that
// DEBUG: 160
// DEBUG: (155, 137)
// DEBUG: Operating on had
// DEBUG: 182
// DEBUG: (177, 137)
// DEBUG: Operating on changed.
// DEBUG: ['bad,', 'and', 'he', 'didn’t', 'think', 'that', 'had']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (14, 149)
// DEBUG: Operating on What
// DEBUG: 48
// DEBUG: (43, 149)
// DEBUG: Operating on had
// DEBUG: 70
// DEBUG: (65, 149)
// DEBUG: Operating on changed
// DEBUG: 120
// DEBUG: (115, 149)
// DEBUG: Operating on was
// DEBUG: 142
// DEBUG: (137, 149)
// DEBUG: Operating on inside
// DEBUG: 185
// DEBUG: (180, 149)
// DEBUG: Operating on his
// DEBUG: 207
// DEBUG: (202, 149)
// DEBUG: Operating on head.
// DEBUG: ['changed.', 'What', 'had', 'changed', 'was', 'inside', 'his']
// DEBUG: drawing cursor (5, 149)
// DEBUG: ['5:15 a.m.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Stephen King, Insomnia ']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "By the first week of May, Ralph", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "was waking up to birdsong at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING He tried", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "earplugs for a few nights, although he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "doubted from the outset that they would", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "work. It wasn’t the newly returned", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "birds that were waking him up, nor the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "occasional delivery-truck backfire out", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "on Harris Avenue. He had always", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "been the sort of guy who could sleep", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "in the middle of a brass marching", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "bad, and he didn’t think that had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "changed. What had changed was inside his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "5:15 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Stephen King, Insomnia ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("05:15 - Weird conversation with Brown, a tired & confused old man who's been jerked out of bed at 5:15. - Hunter S Thompson, Fear and Loathing: On the Campaign Trail '72"));
// DEBUG: (5, 5)
// DEBUG: Operating on Weird
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on conversation
// DEBUG: 131
// DEBUG: (126, 5)
// DEBUG: Operating on with
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on Brown,
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on a
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on tired
// DEBUG: ['Weird', 'conversation', 'with', 'Brown,', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on &
// DEBUG: 24
// DEBUG: (19, 17)
// DEBUG: Operating on confused
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on old
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on man
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on who's
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on been
// DEBUG: 190
// DEBUG: (185, 17)
// DEBUG: Operating on jerked
// DEBUG: ['tired', '&', 'confused', 'old', 'man', "who's", 'been']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on out
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on of
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on bed
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on at
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 198
// DEBUG: ['5:15']
// DEBUG: drawing cursor (86, 29)
// DEBUG: ['- Hunter S Thompson']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "Weird conversation with Brown, a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "tired & confused old man who's been", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(86, 29, "5:15", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Hunter S Thompson", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 05:16 for 2 quotations:
    case 316:
      option = random(0, 2);
      Serial.print(F("2 options for 05:16. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("05:16 - 5:16 - Mank on phone to Secretary of State Brown: 'Mr Brown, we're profoundly disturbed about this situation in the 21st. We can't get a single result out of there. - Hunter S Thompson, Fear and Loathing: On the Campaign Trail '72"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on -
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on Mank
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on on
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on phone
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on to
// DEBUG: ['TIMESTRING', '-', 'Mank', 'on', 'phone']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on Secretary
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on of
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on State
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on Brown:
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on 'Mr
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on Brown,
// DEBUG: ['to', 'Secretary', 'of', 'State', 'Brown:', "'Mr"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on we're
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on profoundly
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on disturbed
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on about
// DEBUG: ['Brown,', "we're", 'profoundly', 'disturbed']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on this
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on situation
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on in
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on 21st.
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on We
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on can't
// DEBUG: ['about', 'this', 'situation', 'in', 'the', '21st.', 'We']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on get
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on a
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on single
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on result
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on out
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on of
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on there.
// DEBUG: ["can't", 'get', 'a', 'single', 'result', 'out', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['5:16']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Hunter S Thompson']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING - Mank on phone", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "to Secretary of State Brown: 'Mr", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Brown, we're profoundly disturbed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "about this situation in the 21st. We", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "can't get a single result out of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "5:16", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Hunter S Thompson", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("05:16 - She could go back to sleep. But typical and ironic, she is completely awake. It is completely light outside now; you can see for miles. Except there is nothing to see here; trees and fields and that kind of thing. 5:16 a.m on the substandard clock radio. She is really awake. - Ali Smith, The Accidental "));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on could
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on go
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on back
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on to
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on sleep.
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on But
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on typical
// DEBUG: ['She', 'could', 'go', 'back', 'to', 'sleep.', 'But']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on ironic,
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on she
// DEBUG: 112
// DEBUG: (107, 17)
// DEBUG: Operating on is
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on completely
// DEBUG: 198
// DEBUG: (193, 17)
// DEBUG: Operating on awake.
// DEBUG: ['typical', 'and', 'ironic,', 'she', 'is', 'completely']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on It
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on is
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on completely
// DEBUG: 118
// DEBUG: (113, 29)
// DEBUG: Operating on light
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on outside
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on now;
// DEBUG: ['awake.', 'It', 'is', 'completely', 'light', 'outside']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on you
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on can
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on see
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on for
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on miles.
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on Except
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on there
// DEBUG: ['now;', 'you', 'can', 'see', 'for', 'miles.', 'Except']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on is
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on nothing
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on to
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on see
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on here;
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on trees
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on and
// DEBUG: ['there', 'is', 'nothing', 'to', 'see', 'here;', 'trees']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on fields
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on and
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on that
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on kind
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on of
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on thing.
// DEBUG: 195
// DEBUG: (190, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['and', 'fields', 'and', 'that', 'kind', 'of', 'thing.']
// DEBUG: drawing cursor (5, 65)
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on on
// DEBUG: 152
// DEBUG: (147, 77)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 77)
// DEBUG: Operating on substandard
// DEBUG: ['TIMESTRING', 'on', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (17, 89)
// DEBUG: Operating on clock
// DEBUG: 58
// DEBUG: (53, 89)
// DEBUG: Operating on radio.
// DEBUG: 101
// DEBUG: (96, 89)
// DEBUG: Operating on She
// DEBUG: 123
// DEBUG: (118, 89)
// DEBUG: Operating on is
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on really
// DEBUG: 181
// DEBUG: (176, 89)
// DEBUG: Operating on awake.
// DEBUG: ['substandard', 'clock', 'radio.', 'She', 'is', 'really']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['5:16 a.m']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['- Ali Smith, The Accidental ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "She could go back to sleep. But", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "typical and ironic, she is completely", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "awake. It is completely light outside", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "now; you can see for miles. Except", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "there is nothing to see here; trees", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "and fields and that kind of thing.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "TIMESTRING on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "substandard clock radio. She is really", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "5:16 a.m", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Ali Smith, The Accidental ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 05:17 for 0 quotations:
    case 317:
      Serial.println(F("No quotes for 05:17"));
      return;

    // Codegen for 05:18 for 0 quotations:
    case 318:
      Serial.println(F("No quotes for 05:18"));
      return;

    // Codegen for 05:19 for 0 quotations:
    case 319:
      Serial.println(F("No quotes for 05:19"));
      return;

    // Codegen for 05:20 for 1 quotations:
    case 320:
      Serial.println(F("Only one option for 05:20:"));
    Serial.println(F("05:20 - He saw on the floor his cigarette reduced to a long thin cylinder of ash: it had smoked itself. It was five twenty, dawn was breaking behind the shed of empty barrels, the thermometer pointed to 210 degrees. - Primo Levi, The Periodic Table"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on saw
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on on
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on the
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on floor
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on his
// DEBUG: 142
// DEBUG: (137, 5)
// DEBUG: Operating on cigarette
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on reduced
// DEBUG: ['He', 'saw', 'on', 'the', 'floor', 'his', 'cigarette']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on a
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on long
// DEBUG: 70
// DEBUG: (65, 17)
// DEBUG: Operating on thin
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on cylinder
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on of
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on ash:
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on it
// DEBUG: ['reduced', 'to', 'a', 'long', 'thin', 'cylinder', 'of', 'ash:']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on had
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on smoked
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on itself.
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on It
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on was
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['it', 'had', 'smoked', 'itself.', 'It', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on dawn
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on was
// DEBUG: ['TIMESTRING,', 'dawn']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on breaking
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on behind
// DEBUG: 114
// DEBUG: (109, 53)
// DEBUG: Operating on the
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on shed
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on of
// DEBUG: 180
// DEBUG: (175, 53)
// DEBUG: Operating on empty
// DEBUG: ['was', 'breaking', 'behind', 'the', 'shed', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on barrels,
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on the
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on thermometer
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on pointed
// DEBUG: ['empty', 'barrels,', 'the', 'thermometer']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 77)
// DEBUG: Operating on 210
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on degrees.
// DEBUG: 112
// DEBUG: ['five twenty']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- The Periodic Table']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "He saw on the floor his cigarette", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "reduced to a long thin cylinder of ash:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "it had smoked itself. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING, dawn", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "was breaking behind the shed of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "empty barrels, the thermometer", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "five twenty", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- The Periodic Table", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:21 for 0 quotations:
    case 321:
      Serial.println(F("No quotes for 05:21"));
      return;

    // Codegen for 05:22 for 0 quotations:
    case 322:
      Serial.println(F("No quotes for 05:22"));
      return;

    // Codegen for 05:23 for 1 quotations:
    case 323:
      Serial.println(F("Only one option for 05:23:"));
    Serial.println(F("05:23 - If I could count precisely to sixty between two passing orange minutes on her digital clock, starting at 5.23am and ending exactly as it melted into 5:24, then when she woke she would love me and not say this had been a terrible mistake. - Arthur Phillips, The Tragedy of Arthur"));
// DEBUG: (5, 5)
// DEBUG: Operating on If
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on I
// DEBUG: 33
// DEBUG: (28, 5)
// DEBUG: Operating on could
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on count
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on precisely
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on to
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on sixty
// DEBUG: ['If', 'I', 'could', 'count', 'precisely', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on between
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on two
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on passing
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on orange
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on minutes
// DEBUG: ['sixty', 'between', 'two', 'passing', 'orange']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on on
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on her
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on digital
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on clock,
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on starting
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on at
// DEBUG: ['minutes', 'on', 'her', 'digital', 'clock,', 'starting']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on and
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on ending
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on exactly
// DEBUG: ['at', 'TIMESTRING', 'and', 'ending']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on as
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on it
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on melted
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on into
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on 5:24,
// DEBUG: 156
// DEBUG: (151, 53)
// DEBUG: Operating on then
// DEBUG: 185
// DEBUG: (180, 53)
// DEBUG: Operating on when
// DEBUG: ['exactly', 'as', 'it', 'melted', 'into', '5:24,', 'then']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on she
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on woke
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on she
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on would
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on love
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on me
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on and
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on not
// DEBUG: ['when', 'she', 'woke', 'she', 'would', 'love', 'me', 'and']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on say
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on this
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on had
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on been
// DEBUG: 116
// DEBUG: (111, 77)
// DEBUG: Operating on a
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on terrible
// DEBUG: 181
// DEBUG: (176, 77)
// DEBUG: Operating on mistake.
// DEBUG: ['not', 'say', 'this', 'had', 'been', 'a', 'terrible']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['5.23am']
// DEBUG: drawing cursor (8, 41)
// DEBUG: ['- The Tragedy of Arthur']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "If I could count precisely to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "sixty between two passing orange", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "minutes on her digital clock, starting", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "at TIMESTRING and ending", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "exactly as it melted into 5:24, then", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "when she woke she would love me and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "not say this had been a terrible", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(8, 41, "5.23am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- The Tragedy of Arthur", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:24 for 1 quotations:
    case 324:
      Serial.println(F("Only one option for 05:24:"));
    Serial.println(F("05:24 - If I could count precisely to sixty between two passing orange minutes on her digital clock, starting at 523am. and ending exactly as it melted into 5:24, then when she woke she would love me and not say this had been a terrible mistake. - Arthur Phillips, The Tragedy of Arthur"));
// DEBUG: (5, 5)
// DEBUG: Operating on If
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on I
// DEBUG: 33
// DEBUG: (28, 5)
// DEBUG: Operating on could
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on count
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on precisely
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on to
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on sixty
// DEBUG: ['If', 'I', 'could', 'count', 'precisely', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on between
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on two
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on passing
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on orange
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on minutes
// DEBUG: ['sixty', 'between', 'two', 'passing', 'orange']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on on
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on her
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on digital
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on clock,
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on starting
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on at
// DEBUG: ['minutes', 'on', 'her', 'digital', 'clock,', 'starting']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on 523am.
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on and
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on ending
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on exactly
// DEBUG: 171
// DEBUG: (166, 41)
// DEBUG: Operating on as
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on it
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on melted
// DEBUG: ['at', '523am.', 'and', 'ending', 'exactly', 'as', 'it']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on into
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on then
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on when
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on she
// DEBUG: ['melted', 'into', 'TIMESTRING,', 'then', 'when']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on woke
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on she
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on would
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on love
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on me
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on and
// DEBUG: 167
// DEBUG: (162, 65)
// DEBUG: Operating on not
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on say
// DEBUG: 211
// DEBUG: (206, 65)
// DEBUG: Operating on this
// DEBUG: ['she', 'woke', 'she', 'would', 'love', 'me', 'and', 'not', 'say']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on had
// DEBUG: 37
// DEBUG: (32, 77)
// DEBUG: Operating on been
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on a
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on terrible
// DEBUG: 131
// DEBUG: (126, 77)
// DEBUG: Operating on mistake.
// DEBUG: 188
// DEBUG: ['5:24']
// DEBUG: drawing cursor (41, 53)
// DEBUG: ['- The Tragedy of Arthur']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "If I could count precisely to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "sixty between two passing orange", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "minutes on her digital clock, starting", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "at 523am. and ending exactly as it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "melted into TIMESTRING, then when", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "she woke she would love me and not say", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(41, 53, "5:24", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- The Tragedy of Arthur", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:25 for 1 quotations:
    case 325:
      Serial.println(F("Only one option for 05:25:"));
    Serial.println(F("05:25 - George's train home from New Street leaves at 5.25. On the return journey, there are rarely schoolboys. - Julian Barnes, Arthur and George"));
// DEBUG: (5, 5)
// DEBUG: Operating on George's
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on train
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on home
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on from
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on New
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on Street
// DEBUG: ["George's", 'train', 'home', 'from', 'New']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on leaves
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on at
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on On
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on the
// DEBUG: ['Street', 'leaves', 'at', 'TIMESTRING.', 'On']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on return
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on journey,
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on there
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on are
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on rarely
// DEBUG: ['the', 'return', 'journey,', 'there', 'are']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on schoolboys.
// DEBUG: 95
// DEBUG: ['5.25']
// DEBUG: drawing cursor (70, 17)
// DEBUG: ['- Arthur and George']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "George's train home from New", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Street leaves at TIMESTRING. On", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the return journey, there are", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(70, 17, "5.25", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Arthur and George", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:26 for 1 quotations:
    case 326:
      Serial.println(F("Only one option for 05:26:"));
    Serial.println(F("05:26 - I think this is actually bump number 1,970. And the boy keeps plugging away at the same speed. There isn’t a sound from them. Not a moan. Poor them. Poor me. I look at the clock. 05:26. - Hallgrímur Helgason, 101 Reykjavik"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on think
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on this
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on is
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on actually
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on bump
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on number
// DEBUG: ['I', 'think', 'this', 'is', 'actually', 'bump']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on 1,970.
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on And
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on boy
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on keeps
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on plugging
// DEBUG: ['number', '1,970.', 'And', 'the', 'boy', 'keeps']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on away
// DEBUG: 48
// DEBUG: (43, 29)
// DEBUG: Operating on at
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on the
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on same
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on speed.
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on There
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on isn’t
// DEBUG: ['plugging', 'away', 'at', 'the', 'same', 'speed.', 'There']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on a
// DEBUG: 24
// DEBUG: (19, 41)
// DEBUG: Operating on sound
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on from
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on them.
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on Not
// DEBUG: 147
// DEBUG: (142, 41)
// DEBUG: Operating on a
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on moan.
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on Poor
// DEBUG: ['isn’t', 'a', 'sound', 'from', 'them.', 'Not', 'a', 'moan.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on them.
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on Poor
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on me.
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on I
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on look
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on the
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on clock.
// DEBUG: ['Poor', 'them.', 'Poor', 'me.', 'I', 'look', 'at', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 131
// DEBUG: ['05:26']
// DEBUG: drawing cursor (12, 65)
// DEBUG: ['- 101 Reykjavik']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "I think this is actually bump", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "number 1,970. And the boy keeps", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "plugging away at the same speed. There", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "isn’t a sound from them. Not a moan.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Poor them. Poor me. I look at the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(12, 65, "05:26", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- 101 Reykjavik", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:27 for 0 quotations:
    case 327:
      Serial.println(F("No quotes for 05:27"));
      return;

    // Codegen for 05:28 for 1 quotations:
    case 328:
      Serial.println(F("Only one option for 05:28:"));
    Serial.println(F("05:28 - I pulled into the Aoyama supermarket parking garage at five-twenty-eight. The sky to the east was getting light. I entered the store carrying my bag. Almost no one was in the place. A young clerk in a striped uniform sat reading a magazine; a woman of indeterminate age was buying a cartload of cans and instant food. I turned past the liquor display and went straight to the snack bar. - Haruki Murakami, Hard Boiled Wonderland and the End of the World "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on pulled
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on into
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on the
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on Aoyama
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on supermarket
// DEBUG: ['I', 'pulled', 'into', 'the', 'Aoyama']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on parking
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on garage
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on at
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['supermarket', 'parking', 'garage', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on The
// DEBUG: ['TIMESTRING.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on sky
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on to
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on east
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on was
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on getting
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on light.
// DEBUG: ['The', 'sky', 'to', 'the', 'east', 'was', 'getting']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 53)
// DEBUG: Operating on entered
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 53)
// DEBUG: Operating on store
// DEBUG: 133
// DEBUG: (128, 53)
// DEBUG: Operating on carrying
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on my
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on bag.
// DEBUG: ['light.', 'I', 'entered', 'the', 'store', 'carrying', 'my']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on Almost
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on no
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on one
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on was
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on in
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on the
// DEBUG: 154
// DEBUG: (149, 65)
// DEBUG: Operating on place.
// DEBUG: 197
// DEBUG: (192, 65)
// DEBUG: Operating on A
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on young
// DEBUG: ['bag.', 'Almost', 'no', 'one', 'was', 'in', 'the', 'place.', 'A']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on clerk
// DEBUG: 52
// DEBUG: (47, 77)
// DEBUG: Operating on in
// DEBUG: 67
// DEBUG: (62, 77)
// DEBUG: Operating on a
// DEBUG: 75
// DEBUG: (70, 77)
// DEBUG: Operating on striped
// DEBUG: 125
// DEBUG: (120, 77)
// DEBUG: Operating on uniform
// DEBUG: 175
// DEBUG: (170, 77)
// DEBUG: Operating on sat
// DEBUG: 197
// DEBUG: (192, 77)
// DEBUG: Operating on reading
// DEBUG: ['young', 'clerk', 'in', 'a', 'striped', 'uniform', 'sat']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on a
// DEBUG: 26
// DEBUG: (21, 89)
// DEBUG: Operating on magazine;
// DEBUG: 90
// DEBUG: (85, 89)
// DEBUG: Operating on a
// DEBUG: 98
// DEBUG: (93, 89)
// DEBUG: Operating on woman
// DEBUG: 134
// DEBUG: (129, 89)
// DEBUG: Operating on of
// DEBUG: 149
// DEBUG: (144, 89)
// DEBUG: Operating on indeterminate
// DEBUG: ['reading', 'a', 'magazine;', 'a', 'woman', 'of']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (19, 101)
// DEBUG: Operating on age
// DEBUG: 46
// DEBUG: (41, 101)
// DEBUG: Operating on was
// DEBUG: 68
// DEBUG: (63, 101)
// DEBUG: Operating on buying
// DEBUG: 111
// DEBUG: (106, 101)
// DEBUG: Operating on a
// DEBUG: 119
// DEBUG: (114, 101)
// DEBUG: Operating on cartload
// DEBUG: 176
// DEBUG: (171, 101)
// DEBUG: Operating on of
// DEBUG: 191
// DEBUG: (186, 101)
// DEBUG: Operating on cans
// DEBUG: ['indeterminate', 'age', 'was', 'buying', 'a', 'cartload', 'of']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 113)
// DEBUG: Operating on instant
// DEBUG: 87
// DEBUG: (82, 113)
// DEBUG: Operating on food.
// DEBUG: 123
// DEBUG: (118, 113)
// DEBUG: Operating on I
// DEBUG: 131
// DEBUG: (126, 113)
// DEBUG: Operating on turned
// DEBUG: 174
// DEBUG: (169, 113)
// DEBUG: Operating on past
// DEBUG: 203
// DEBUG: (198, 113)
// DEBUG: Operating on the
// DEBUG: ['cans', 'and', 'instant', 'food.', 'I', 'turned', 'past']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (9, 125)
// DEBUG: Operating on liquor
// DEBUG: 57
// DEBUG: (52, 125)
// DEBUG: Operating on display
// DEBUG: 107
// DEBUG: (102, 125)
// DEBUG: Operating on and
// DEBUG: 129
// DEBUG: (124, 125)
// DEBUG: Operating on went
// DEBUG: 158
// DEBUG: (153, 125)
// DEBUG: Operating on straight
// DEBUG: ['the', 'liquor', 'display', 'and', 'went']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (14, 137)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 137)
// DEBUG: Operating on the
// DEBUG: 56
// DEBUG: (51, 137)
// DEBUG: Operating on snack
// DEBUG: 92
// DEBUG: (87, 137)
// DEBUG: Operating on bar.
// DEBUG: 121
// DEBUG: ['five-twenty-eight']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Haruki Murakami']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "I pulled into the Aoyama", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "supermarket parking garage at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "The sky to the east was getting", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "light. I entered the store carrying my", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "bag. Almost no one was in the place. A", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "young clerk in a striped uniform sat", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "reading a magazine; a woman of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "indeterminate age was buying a cartload of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "cans and instant food. I turned past", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "the liquor display and went", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "five-twenty-eight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Haruki Murakami", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:29 for 0 quotations:
    case 329:
      Serial.println(F("No quotes for 05:29"));
      return;

    // Codegen for 05:30 for 3 quotations:
    case 330:
      option = random(0, 3);
      Serial.print(F("3 options for 05:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("05:30 - Gideon has been most unlike Gideon. As Walter Eastman is preoccupied himself, he has not had time, or more to the point, inclination, to notice aberrant behaviour. For instance, it is half-past five in the summer morning. Young Chase's narrow bachelor bed has evidently been slept in, for it is rumpled in that barely disturbed way which can never be counterfeited. His jug's empty and there's grey water in the basin, cleanly boy. The window is open, admitting the salubrious sea-breeze. He doesn't smoke anyway. What an innocent room it is. - Timothy Mo, An Insular Possession "));
// DEBUG: (5, 5)
// DEBUG: Operating on Gideon
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on has
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on been
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on most
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on unlike
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on Gideon.
// DEBUG: ['Gideon', 'has', 'been', 'most', 'unlike']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on As
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on Walter
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on Eastman
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on is
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on preoccupied
// DEBUG: ['Gideon.', 'As', 'Walter', 'Eastman', 'is']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on himself,
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on he
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on has
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on not
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on had
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on time,
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on or
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on more
// DEBUG: ['preoccupied', 'himself,', 'he', 'has', 'not', 'had', 'time,', 'or']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on point,
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on inclination,
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on to
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on notice
// DEBUG: ['more', 'to', 'the', 'point,', 'inclination,', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on aberrant
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on behaviour.
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on For
// DEBUG: 167
// DEBUG: (162, 53)
// DEBUG: Operating on instance,
// DEBUG: ['notice', 'aberrant', 'behaviour.', 'For']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on it
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on is
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['instance,', 'it', 'is']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 77)
// DEBUG: Operating on summer
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on morning.
// DEBUG: 158
// DEBUG: (153, 77)
// DEBUG: Operating on Young
// DEBUG: 194
// DEBUG: (189, 77)
// DEBUG: Operating on Chase's
// DEBUG: ['TIMESTRING', 'in', 'the', 'summer', 'morning.', 'Young']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on narrow
// DEBUG: 61
// DEBUG: (56, 89)
// DEBUG: Operating on bachelor
// DEBUG: 118
// DEBUG: (113, 89)
// DEBUG: Operating on bed
// DEBUG: 140
// DEBUG: (135, 89)
// DEBUG: Operating on has
// DEBUG: 162
// DEBUG: (157, 89)
// DEBUG: Operating on evidently
// DEBUG: ["Chase's", 'narrow', 'bachelor', 'bed', 'has']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (15, 101)
// DEBUG: Operating on been
// DEBUG: 49
// DEBUG: (44, 101)
// DEBUG: Operating on slept
// DEBUG: 85
// DEBUG: (80, 101)
// DEBUG: Operating on in,
// DEBUG: 107
// DEBUG: (102, 101)
// DEBUG: Operating on for
// DEBUG: 129
// DEBUG: (124, 101)
// DEBUG: Operating on it
// DEBUG: 144
// DEBUG: (139, 101)
// DEBUG: Operating on is
// DEBUG: 159
// DEBUG: (154, 101)
// DEBUG: Operating on rumpled
// DEBUG: 209
// DEBUG: (204, 101)
// DEBUG: Operating on in
// DEBUG: ['evidently', 'been', 'slept', 'in,', 'for', 'it', 'is', 'rumpled']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (8, 113)
// DEBUG: Operating on that
// DEBUG: 42
// DEBUG: (37, 113)
// DEBUG: Operating on barely
// DEBUG: 85
// DEBUG: (80, 113)
// DEBUG: Operating on disturbed
// DEBUG: 149
// DEBUG: (144, 113)
// DEBUG: Operating on way
// DEBUG: 171
// DEBUG: (166, 113)
// DEBUG: Operating on which
// DEBUG: 207
// DEBUG: (202, 113)
// DEBUG: Operating on can
// DEBUG: ['in', 'that', 'barely', 'disturbed', 'way', 'which']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (9, 125)
// DEBUG: Operating on never
// DEBUG: 50
// DEBUG: (45, 125)
// DEBUG: Operating on be
// DEBUG: 65
// DEBUG: (60, 125)
// DEBUG: Operating on counterfeited.
// DEBUG: 164
// DEBUG: (159, 125)
// DEBUG: Operating on His
// DEBUG: 186
// DEBUG: (181, 125)
// DEBUG: Operating on jug's
// DEBUG: ['can', 'never', 'be', 'counterfeited.', 'His']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (11, 137)
// DEBUG: Operating on empty
// DEBUG: 52
// DEBUG: (47, 137)
// DEBUG: Operating on and
// DEBUG: 74
// DEBUG: (69, 137)
// DEBUG: Operating on there's
// DEBUG: 124
// DEBUG: (119, 137)
// DEBUG: Operating on grey
// DEBUG: 153
// DEBUG: (148, 137)
// DEBUG: Operating on water
// DEBUG: 189
// DEBUG: (184, 137)
// DEBUG: Operating on in
// DEBUG: 204
// DEBUG: (199, 137)
// DEBUG: Operating on the
// DEBUG: ["jug's", 'empty', 'and', "there's", 'grey', 'water', 'in']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on basin,
// DEBUG: 57
// DEBUG: (52, 149)
// DEBUG: Operating on cleanly
// DEBUG: 107
// DEBUG: (102, 149)
// DEBUG: Operating on boy.
// DEBUG: 136
// DEBUG: (131, 149)
// DEBUG: Operating on The
// DEBUG: 158
// DEBUG: (153, 149)
// DEBUG: Operating on window
// DEBUG: 201
// DEBUG: (196, 149)
// DEBUG: Operating on is
// DEBUG: ['the', 'basin,', 'cleanly', 'boy.', 'The', 'window']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (8, 161)
// DEBUG: Operating on open,
// DEBUG: 49
// DEBUG: (44, 161)
// DEBUG: Operating on admitting
// DEBUG: 113
// DEBUG: (108, 161)
// DEBUG: Operating on the
// DEBUG: 135
// DEBUG: (130, 161)
// DEBUG: Operating on salubrious
// DEBUG: 206
// DEBUG: (201, 161)
// DEBUG: Operating on sea-breeze.
// DEBUG: ['is', 'open,', 'admitting', 'the', 'salubrious']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (17, 173)
// DEBUG: Operating on He
// DEBUG: 37
// DEBUG: (32, 173)
// DEBUG: Operating on doesn't
// DEBUG: 87
// DEBUG: (82, 173)
// DEBUG: Operating on smoke
// DEBUG: 123
// DEBUG: (118, 173)
// DEBUG: Operating on anyway.
// DEBUG: 173
// DEBUG: (168, 173)
// DEBUG: Operating on What
// DEBUG: 202
// DEBUG: (197, 173)
// DEBUG: Operating on an
// DEBUG: ['sea-breeze.', 'He', "doesn't", 'smoke', 'anyway.', 'What']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (8, 185)
// DEBUG: Operating on innocent
// DEBUG: 70
// DEBUG: (65, 185)
// DEBUG: Operating on room
// DEBUG: 99
// DEBUG: (94, 185)
// DEBUG: Operating on it
// DEBUG: 114
// DEBUG: (109, 185)
// DEBUG: Operating on is.
// DEBUG: 136
// DEBUG: ['half-past five']
// DEBUG: drawing cursor (45, 65)
// DEBUG: ['- An Insular Possession']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "Gideon has been most unlike", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Gideon. As Walter Eastman is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "preoccupied himself, he has not had time, or", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "more to the point, inclination, to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "notice aberrant behaviour. For", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "instance, it is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "TIMESTRING in the summer morning. Young", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "Chase's narrow bachelor bed has", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "evidently been slept in, for it is rumpled", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "in that barely disturbed way which", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "can never be counterfeited. His", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "jug's empty and there's grey water in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "the basin, cleanly boy. The window", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "is open, admitting the salubrious", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "sea-breeze. He doesn't smoke anyway. What", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(45, 65, "half-past five", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- An Insular Possession", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("05:30 - It was by this time half-past five, and the sun was on the point of rising; but I found the kitchen still dark and silent. … The stillness of early morning slumbered everywhere .. the carriage horses stamped from time to time in their closed stables: all else was still. - Charlotte Brontë, Jane Eyre "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on by
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on this
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on time
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'by', 'this', 'time']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on and
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING,', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on sun
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on was
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on on
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on the
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on point
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on of
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on rising;
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on but
// DEBUG: ['the', 'sun', 'was', 'on', 'the', 'point', 'of', 'rising;']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on I
// DEBUG: 22
// DEBUG: (17, 41)
// DEBUG: Operating on found
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on the
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on kitchen
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on still
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on dark
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on and
// DEBUG: ['but', 'I', 'found', 'the', 'kitchen', 'still', 'dark']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on silent.
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on …
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on The
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on stillness
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on of
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on early
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on morning
// DEBUG: ['and', 'silent.', '…', 'The', 'stillness', 'of', 'early']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on slumbered
// DEBUG: 82
// DEBUG: (77, 65)
// DEBUG: Operating on everywhere
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on ..
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on the
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on carriage
// DEBUG: ['morning', 'slumbered', 'everywhere', '..', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on horses
// DEBUG: 62
// DEBUG: (57, 77)
// DEBUG: Operating on stamped
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on from
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on time
// DEBUG: 170
// DEBUG: (165, 77)
// DEBUG: Operating on to
// DEBUG: 185
// DEBUG: (180, 77)
// DEBUG: Operating on time
// DEBUG: ['carriage', 'horses', 'stamped', 'from', 'time', 'to']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on in
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on their
// DEBUG: 66
// DEBUG: (61, 89)
// DEBUG: Operating on closed
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on stables:
// DEBUG: 166
// DEBUG: (161, 89)
// DEBUG: Operating on all
// DEBUG: 188
// DEBUG: (183, 89)
// DEBUG: Operating on else
// DEBUG: ['time', 'in', 'their', 'closed', 'stables:', 'all']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on was
// DEBUG: 37
// DEBUG: (32, 101)
// DEBUG: Operating on still.
// DEBUG: 80
// DEBUG: ['half-past five']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Jane Eyre']
// DEBUG: drawing cursor (130, 192)
          paint.Paint_DrawString_EN(5, 5, "It was by this time", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the sun was on the point of rising;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "but I found the kitchen still dark", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "and silent. … The stillness of early", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "morning slumbered everywhere .. the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "carriage horses stamped from time to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "time in their closed stables: all", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "half-past five", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(130, 192, "- Jane Eyre", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("05:30 - On the day they were going to kill him, Santiago Nasar got up at five-thirty in the morning to wait for the boat the bishop was coming on. - Gabriel García Márquez, Chronicle of a Death Foretold "));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on day
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on they
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on were
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on going
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on to
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on kill
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on him,
// DEBUG: ['On', 'the', 'day', 'they', 'were', 'going', 'to', 'kill']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on Santiago
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on Nasar
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on got
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on up
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on at
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['him,', 'Santiago', 'Nasar', 'got', 'up', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on in
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on the
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on morning
// DEBUG: ['TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on wait
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on for
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on the
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on boat
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on the
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on bishop
// DEBUG: 200
// DEBUG: (195, 41)
// DEBUG: Operating on was
// DEBUG: ['morning', 'to', 'wait', 'for', 'the', 'boat', 'the', 'bishop']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on coming
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on on.
// DEBUG: 79
// DEBUG: ['five-thirty']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Gabriel García Márquez']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "On the day they were going to kill", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "him, Santiago Nasar got up at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "morning to wait for the boat the bishop", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "five-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Gabriel García Márquez", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 05:31 for 1 quotations:
    case 331:
      Serial.println(F("Only one option for 05:31:"));
    Serial.println(F("05:31 - 5:31 - Mank on phone to lawyer: 'Jesus, I think we gotta go in there and get those ballots! Impound 'em! Every damn one!' - Hunter S Thompson, Fear and Loathing: On the Campaign Trail '72"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on -
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on Mank
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on on
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on phone
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on to
// DEBUG: ['TIMESTRING', '-', 'Mank', 'on', 'phone']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on lawyer:
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on 'Jesus,
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on I
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on think
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on we
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on gotta
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on go
// DEBUG: ['to', 'lawyer:', "'Jesus,", 'I', 'think', 'we', 'gotta']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on in
// DEBUG: 28
// DEBUG: (23, 29)
// DEBUG: Operating on there
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on and
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on get
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on those
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on ballots!
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on Impound
// DEBUG: ['go', 'in', 'there', 'and', 'get', 'those', 'ballots!']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on 'em!
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on Every
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on damn
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on one!'
// DEBUG: 148
// DEBUG: ['5:31']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Hunter S Thompson']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING - Mank on phone", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "to lawyer: 'Jesus, I think we gotta", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "go in there and get those ballots!", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "5:31", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Hunter S Thompson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:32 for 0 quotations:
    case 332:
      Serial.println(F("No quotes for 05:32"));
      return;

    // Codegen for 05:33 for 0 quotations:
    case 333:
      Serial.println(F("No quotes for 05:33"));
      return;

    // Codegen for 05:34 for 1 quotations:
    case 334:
      Serial.println(F("Only one option for 05:34:"));
    Serial.println(F("05:34 - I asked \"What time is sunrise?\" A second's silence while the crestfallen Bush absorbed his rebuke, and then another voice answered: \"Five-thirty-four, sir.\" - C.S. Forester, The Commodore"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on asked
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on \"What
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on time
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on is
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on sunrise?\"
// DEBUG: ['I', 'asked', '\\"What', 'time', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on A
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on second's
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on silence
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on while
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on the
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on crestfallen
// DEBUG: ['sunrise?\\"', 'A', "second's", 'silence', 'while', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on Bush
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on absorbed
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on his
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on rebuke,
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on and
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on then
// DEBUG: ['crestfallen', 'Bush', 'absorbed', 'his', 'rebuke,', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on another
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on voice
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on answered:
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on \"TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['then', 'another', 'voice', 'answered:']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: (19, 65)
// DEBUG: Operating on sir.\"
// DEBUG: 67
// DEBUG: ['Five-thirty-four']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- The Commodore']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "I asked \"What time is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "sunrise?\" A second's silence while the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "crestfallen Bush absorbed his rebuke, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "then another voice answered:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Five-thirty-four", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- The Commodore", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:35 for 2 quotations:
    case 335:
      option = random(0, 2);
      Serial.print(F("2 options for 05:35. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("05:35 - 5:35 - All phones ringing now, the swing shift has shot the gap - now the others are waking up. - Hunter S Thompson, Fear and Loathing: On the Campaign Trail '72"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on -
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on All
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on phones
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on ringing
// DEBUG: ['TIMESTRING', '-', 'All', 'phones']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on now,
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on swing
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on shift
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on has
// DEBUG: 163
// DEBUG: (158, 17)
// DEBUG: Operating on shot
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on the
// DEBUG: ['ringing', 'now,', 'the', 'swing', 'shift', 'has', 'shot']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on gap
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on -
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on now
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on the
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on others
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on are
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on waking
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on up.
// DEBUG: ['the', 'gap', '-', 'now', 'the', 'others', 'are', 'waking']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['5:35']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Hunter S Thompson']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING - All phones", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "ringing now, the swing shift has shot", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the gap - now the others are waking", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "5:35", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Hunter S Thompson", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("05:35 - I squinted at the clock. 'It says twenty-five before six,' I said and rolled away from him. - Luke Rhinehart, the dice man "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on squinted
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on at
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on the
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on clock.
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on 'It
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on says
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on TIMESTRING,'
// DEBUG: Wrorking on the timestring
// DEBUG: ['I', 'squinted', 'at', 'the', 'clock.', "'It", 'says']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (18, 29)
// DEBUG: Operating on I
// DEBUG: 31
// DEBUG: (26, 29)
// DEBUG: Operating on said
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on and
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on rolled
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on away
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on from
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on him.
// DEBUG: ["TIMESTRING,'", 'I', 'said', 'and', 'rolled', 'away', 'from']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['twenty-five before six']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- the dice man']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "I squinted at the clock. 'It says", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING,' I said and rolled away from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "twenty-five before six", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- the dice man", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 05:36 for 0 quotations:
    case 336:
      Serial.println(F("No quotes for 05:36"));
      return;

    // Codegen for 05:37 for 1 quotations:
    case 337:
      Serial.println(F("Only one option for 05:37:"));
    Serial.println(F("05:37 - Richard glanced at the clock on the microwave - 5:37 - almost twelve hours, almost one half-day since he'd dialed 911. - AM Homes, This Book Will Save Your Life"));
// DEBUG: (5, 5)
// DEBUG: Operating on Richard
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on glanced
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on at
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on clock
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on on
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on the
// DEBUG: ['Richard', 'glanced', 'at', 'the', 'clock', 'on']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on microwave
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on -
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on -
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on almost
// DEBUG: ['the', 'microwave', '-', 'TIMESTRING', '-']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on twelve
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on hours,
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on almost
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on one
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on half-day
// DEBUG: ['almost', 'twelve', 'hours,', 'almost', 'one']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on since
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on he'd
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on dialed
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on 911.
// DEBUG: 156
// DEBUG: ['5:37']
// DEBUG: drawing cursor (81, 17)
// DEBUG: ['- AM Homes']
// DEBUG: drawing cursor (137, 192)
    paint.Paint_DrawString_EN(5, 5, "Richard glanced at the clock on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "the microwave - TIMESTRING -", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "almost twelve hours, almost one", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(81, 17, "5:37", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(137, 192, "- AM Homes", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:38 for 1 quotations:
    case 338:
      Serial.println(F("Only one option for 05:38:"));
    Serial.println(F("05:38 - Kovac,’ said Johnny sleepily. It was very rare for the quantum computer and not Sol to wake him up. ‘What’s going on? What time is it?’ ‘Good morning, Johnny,’ said the ship. ‘It is 5.38 a.m.’ ‘What?’ said Johnny. ‘It’s Saturday.’ ‘I told you he wouldn’t like it,’ said Sol, presumably to Kovac. ‘It’s hardly a matter of likes or dislikes,’ said the computer. ‘I have information I deem important enough to pass on at the earliest opportunity – whatever time it is.’ - Keith Mansfield, Johnny Mackintosh: Battle for Earth "));
// DEBUG: (5, 5)
// DEBUG: Operating on Kovac,’
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on said
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on Johnny
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on sleepily.
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on It
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on was
// DEBUG: ['Kovac,’', 'said', 'Johnny', 'sleepily.', 'It']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on very
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on rare
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on for
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on the
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on quantum
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on computer
// DEBUG: ['was', 'very', 'rare', 'for', 'the', 'quantum']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on and
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on not
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on Sol
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on to
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on wake
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on him
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on up.
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on ‘What’s
// DEBUG: ['computer', 'and', 'not', 'Sol', 'to', 'wake', 'him', 'up.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on going
// DEBUG: 54
// DEBUG: (49, 41)
// DEBUG: Operating on on?
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on What
// DEBUG: 105
// DEBUG: (100, 41)
// DEBUG: Operating on time
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on is
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on it?’
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on ‘Good
// DEBUG: ['‘What’s', 'going', 'on?', 'What', 'time', 'is', 'it?’']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on morning,
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on Johnny,’
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on said
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on the
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on ship.
// DEBUG: ['‘Good', 'morning,', 'Johnny,’', 'said', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on ‘It
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on is
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on TIMESTRING’
// DEBUG: Wrorking on the timestring
// DEBUG: 195
// DEBUG: (190, 65)
// DEBUG: Operating on ‘What?’
// DEBUG: ['ship.', '‘It', 'is', 'TIMESTRING’']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on said
// DEBUG: 47
// DEBUG: (42, 77)
// DEBUG: Operating on Johnny.
// DEBUG: 97
// DEBUG: (92, 77)
// DEBUG: Operating on ‘It’s
// DEBUG: 133
// DEBUG: (128, 77)
// DEBUG: Operating on Saturday.’
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on ‘I
// DEBUG: ['‘What?’', 'said', 'Johnny.', '‘It’s', 'Saturday.’']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on told
// DEBUG: 42
// DEBUG: (37, 89)
// DEBUG: Operating on you
// DEBUG: 64
// DEBUG: (59, 89)
// DEBUG: Operating on he
// DEBUG: 79
// DEBUG: (74, 89)
// DEBUG: Operating on wouldn’t
// DEBUG: 136
// DEBUG: (131, 89)
// DEBUG: Operating on like
// DEBUG: 165
// DEBUG: (160, 89)
// DEBUG: Operating on it,’
// DEBUG: 194
// DEBUG: (189, 89)
// DEBUG: Operating on said
// DEBUG: ['‘I', 'told', 'you', 'he', 'wouldn’t', 'like', 'it,’']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on Sol,
// DEBUG: 44
// DEBUG: (39, 101)
// DEBUG: Operating on presumably
// DEBUG: 115
// DEBUG: (110, 101)
// DEBUG: Operating on to
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on Kovac.
// DEBUG: 173
// DEBUG: (168, 101)
// DEBUG: Operating on ‘It’s
// DEBUG: 209
// DEBUG: (204, 101)
// DEBUG: Operating on hardly
// DEBUG: ['said', 'Sol,', 'presumably', 'to', 'Kovac.', '‘It’s']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on a
// DEBUG: 25
// DEBUG: (20, 113)
// DEBUG: Operating on matter
// DEBUG: 68
// DEBUG: (63, 113)
// DEBUG: Operating on of
// DEBUG: 83
// DEBUG: (78, 113)
// DEBUG: Operating on likes
// DEBUG: 119
// DEBUG: (114, 113)
// DEBUG: Operating on or
// DEBUG: 134
// DEBUG: (129, 113)
// DEBUG: Operating on dislikes,’
// DEBUG: 205
// DEBUG: (200, 113)
// DEBUG: Operating on said
// DEBUG: ['hardly', 'a', 'matter', 'of', 'likes', 'or', 'dislikes,’']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (10, 125)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 125)
// DEBUG: Operating on computer.
// DEBUG: 101
// DEBUG: (96, 125)
// DEBUG: Operating on ‘I
// DEBUG: 116
// DEBUG: (111, 125)
// DEBUG: Operating on have
// DEBUG: 145
// DEBUG: (140, 125)
// DEBUG: Operating on information
// DEBUG: ['said', 'the', 'computer.', '‘I', 'have']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (17, 137)
// DEBUG: Operating on I
// DEBUG: 30
// DEBUG: (25, 137)
// DEBUG: Operating on deem
// DEBUG: 59
// DEBUG: (54, 137)
// DEBUG: Operating on important
// DEBUG: 123
// DEBUG: (118, 137)
// DEBUG: Operating on enough
// DEBUG: 166
// DEBUG: (161, 137)
// DEBUG: Operating on to
// DEBUG: 181
// DEBUG: (176, 137)
// DEBUG: Operating on pass
// DEBUG: 210
// DEBUG: (205, 137)
// DEBUG: Operating on on
// DEBUG: ['information', 'I', 'deem', 'important', 'enough', 'to', 'pass']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (8, 149)
// DEBUG: Operating on at
// DEBUG: 28
// DEBUG: (23, 149)
// DEBUG: Operating on the
// DEBUG: 50
// DEBUG: (45, 149)
// DEBUG: Operating on earliest
// DEBUG: 107
// DEBUG: (102, 149)
// DEBUG: Operating on opportunity
// DEBUG: 185
// DEBUG: (180, 149)
// DEBUG: Operating on –
// DEBUG: 193
// DEBUG: (188, 149)
// DEBUG: Operating on whatever
// DEBUG: ['on', 'at', 'the', 'earliest', 'opportunity', '–']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (14, 161)
// DEBUG: Operating on time
// DEBUG: 48
// DEBUG: (43, 161)
// DEBUG: Operating on it
// DEBUG: 63
// DEBUG: (58, 161)
// DEBUG: Operating on is.’
// DEBUG: 92
// DEBUG: ['5.38 a.m.']
// DEBUG: drawing cursor (48, 65)
// DEBUG: ['- Keith Mansfield']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "Kovac,’ said Johnny sleepily. It", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "was very rare for the quantum", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "computer and not Sol to wake him up.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "‘What’s going on? What time is it?’", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "‘Good morning, Johnny,’ said the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "ship. ‘It is TIMESTRING’", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "‘What?’ said Johnny. ‘It’s Saturday.’", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "‘I told you he wouldn’t like it,’", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "said Sol, presumably to Kovac. ‘It’s", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "hardly a matter of likes or dislikes,’", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "said the computer. ‘I have", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "information I deem important enough to pass", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 149, "on at the earliest opportunity –", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(48, 65, "5.38 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Keith Mansfield", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:39 for 0 quotations:
    case 339:
      Serial.println(F("No quotes for 05:39"));
      return;

    // Codegen for 05:40 for 1 quotations:
    case 340:
      Serial.println(F("Only one option for 05:40:"));
    Serial.println(F("05:40 - Twenty minutes to six. 'Rob's boys were already on the platform, barrows ready. - Bruce Robinson, The Peculiar Memories of Thomas Penman"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on 'Rob's
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on boys
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on were
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on already
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on on
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on the
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on platform,
// DEBUG: ['TIMESTRING.', "'Rob's", 'boys', 'were', 'already', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on barrows
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on ready.
// DEBUG: 113
// DEBUG: ['Twenty minutes to six']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Bruce Robinson']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. 'Rob's boys were already on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "Twenty minutes to six", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Bruce Robinson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:41 for 0 quotations:
    case 341:
      Serial.println(F("No quotes for 05:41"));
      return;

    // Codegen for 05:42 for 0 quotations:
    case 342:
      Serial.println(F("No quotes for 05:42"));
      return;

    // Codegen for 05:43 for 1 quotations:
    case 343:
      Serial.println(F("Only one option for 05:43:"));
    Serial.println(F("05:43 - 5.43 - Mank on phone to 'Mary' in Washington; 'It now appears quite clear that we'll lead the state - without the 21st.' - Hunter S. Thompson, Fear and Loathing: On the Campaign Trail '72"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on -
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on Mank
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on on
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on phone
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on to
// DEBUG: ['TIMESTRING', '-', 'Mank', 'on', 'phone']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on 'Mary'
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on in
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on Washington;
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on 'It
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on now
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on appears
// DEBUG: ['to', "'Mary'", 'in', 'Washington;', "'It", 'now']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on quite
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on clear
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on that
// DEBUG: 119
// DEBUG: (114, 29)
// DEBUG: Operating on we'll
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on lead
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on the
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on state
// DEBUG: ['appears', 'quite', 'clear', 'that', "we'll", 'lead', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on -
// DEBUG: 24
// DEBUG: (19, 41)
// DEBUG: Operating on without
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on the
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on 21st.'
// DEBUG: 139
// DEBUG: ['5.43']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Hunter S. Thompson']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING - Mank on phone", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "to 'Mary' in Washington; 'It now", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "appears quite clear that we'll lead the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "5.43", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Hunter S. Thompson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:44 for 0 quotations:
    case 344:
      Serial.println(F("No quotes for 05:44"));
      return;

    // Codegen for 05:45 for 1 quotations:
    case 345:
      Serial.println(F("Only one option for 05:45:"));
    Serial.println(F("05:45 - At 5:45 a power-transformer on a pole beside the abandoned Tracker Brothers’ Truck Depot exploded in a flash of purple light, spraying twisted chunks of metal onto the shingled roof. - Stephen King, IT"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on a
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on power-transformer
// DEBUG: ['At', 'TIMESTRING', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (23, 17)
// DEBUG: Operating on on
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on a
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on pole
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on beside
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on the
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on abandoned
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on Tracker
// DEBUG: ['power-transformer', 'on', 'a', 'pole', 'beside', 'the', 'abandoned']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on Brothers’
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on Truck
// DEBUG: 118
// DEBUG: (113, 29)
// DEBUG: Operating on Depot
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on exploded
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on in
// DEBUG: ['Tracker', 'Brothers’', 'Truck', 'Depot', 'exploded']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 41)
// DEBUG: Operating on flash
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on of
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on purple
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on light,
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on spraying
// DEBUG: ['in', 'a', 'flash', 'of', 'purple', 'light,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on twisted
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on chunks
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on of
// DEBUG: 127
// DEBUG: (122, 53)
// DEBUG: Operating on metal
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on onto
// DEBUG: 192
// DEBUG: (187, 53)
// DEBUG: Operating on the
// DEBUG: ['spraying', 'twisted', 'chunks', 'of', 'metal', 'onto']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on shingled
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on roof.
// DEBUG: 107
// DEBUG: ['5:45']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Stephen King, IT']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "power-transformer on a pole beside the abandoned", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Tracker Brothers’ Truck Depot exploded", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "in a flash of purple light,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "spraying twisted chunks of metal onto", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "5:45", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- Stephen King, IT", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:46 for 1 quotations:
    case 346:
      Serial.println(F("Only one option for 05:46:"));
    Serial.println(F("05:46 - Herbert could feel nothing. He wrote a legal-sounding phrase to the effect that the sentence had been carried out at 5.46am, adding, 'without a snag'. The burial party had cursed him quietly as they'd hacked at the thick roots and tight soil. - William Brodrick, A Whispered Name"));
// DEBUG: (5, 5)
// DEBUG: Operating on Herbert
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on could
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on feel
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on nothing.
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on He
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on wrote
// DEBUG: ['Herbert', 'could', 'feel', 'nothing.', 'He']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on a
// DEBUG: 24
// DEBUG: (19, 17)
// DEBUG: Operating on legal-sounding
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on phrase
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on to
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on the
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on effect
// DEBUG: ['wrote', 'a', 'legal-sounding', 'phrase', 'to', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on that
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on sentence
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on had
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on been
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on carried
// DEBUG: ['effect', 'that', 'the', 'sentence', 'had', 'been']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on out
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on at
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on adding,
// DEBUG: ['carried', 'out', 'at', 'TIMESTRING,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on 'without
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on a
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on snag'.
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on The
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on burial
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on party
// DEBUG: ['adding,', "'without", 'a', "snag'.", 'The', 'burial']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on had
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on cursed
// DEBUG: 81
// DEBUG: (76, 65)
// DEBUG: Operating on him
// DEBUG: 103
// DEBUG: (98, 65)
// DEBUG: Operating on quietly
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on as
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on they'd
// DEBUG: 211
// DEBUG: (206, 65)
// DEBUG: Operating on hacked
// DEBUG: ['party', 'had', 'cursed', 'him', 'quietly', 'as', "they'd"]
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 77)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on thick
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on roots
// DEBUG: 126
// DEBUG: (121, 77)
// DEBUG: Operating on and
// DEBUG: 148
// DEBUG: (143, 77)
// DEBUG: Operating on tight
// DEBUG: 184
// DEBUG: (179, 77)
// DEBUG: Operating on soil.
// DEBUG: ['hacked', 'at', 'the', 'thick', 'roots', 'and', 'tight']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['5.46am']
// DEBUG: drawing cursor (50, 41)
// DEBUG: ['- A Whispered Name']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "Herbert could feel nothing. He", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "wrote a legal-sounding phrase to the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "effect that the sentence had been", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "carried out at TIMESTRING,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "adding, 'without a snag'. The burial", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "party had cursed him quietly as they'd", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "hacked at the thick roots and tight", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(50, 41, "5.46am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- A Whispered Name", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:47 for 0 quotations:
    case 347:
      Serial.println(F("No quotes for 05:47"));
      return;

    // Codegen for 05:48 for 0 quotations:
    case 348:
      Serial.println(F("No quotes for 05:48"));
      return;

    // Codegen for 05:49 for 0 quotations:
    case 349:
      Serial.println(F("No quotes for 05:49"));
      return;

    // Codegen for 05:50 for 0 quotations:
    case 350:
      Serial.println(F("No quotes for 05:50"));
      return;

    // Codegen for 05:51 for 0 quotations:
    case 351:
      Serial.println(F("No quotes for 05:51"));
      return;

    // Codegen for 05:52 for 1 quotations:
    case 352:
      Serial.println(F("Only one option for 05:52:"));
    Serial.println(F("05:52 - At 5.52am paramedics from the St. Petersburg Fire Department and SunStar Medic One ambulance service responded to a medical emergency call at 12201 Ninth Street North, St. Petersburg, apartment 2210. - Mark Fuhrman, Silent Witness"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on paramedics
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on from
// DEBUG: ['At', 'TIMESTRING', 'paramedics']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on St.
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on Petersburg
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on Fire
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on Department
// DEBUG: ['from', 'the', 'St.', 'Petersburg', 'Fire']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on SunStar
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on Medic
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on One
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on ambulance
// DEBUG: ['Department', 'and', 'SunStar', 'Medic', 'One']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on service
// DEBUG: 70
// DEBUG: (65, 41)
// DEBUG: Operating on responded
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on to
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on a
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on medical
// DEBUG: 207
// DEBUG: (202, 41)
// DEBUG: Operating on emergency
// DEBUG: ['ambulance', 'service', 'responded', 'to', 'a', 'medical']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on call
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on at
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on 12201
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on Ninth
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on Street
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on North,
// DEBUG: ['emergency', 'call', 'at', '12201', 'Ninth', 'Street']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on St.
// DEBUG: 39
// DEBUG: (34, 65)
// DEBUG: Operating on Petersburg,
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on apartment
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on 2210.
// DEBUG: ['North,', 'St.', 'Petersburg,', 'apartment']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['5.52am']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Silent Witness']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING paramedics", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "from the St. Petersburg Fire", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Department and SunStar Medic One", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "ambulance service responded to a medical", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "emergency call at 12201 Ninth Street", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "North, St. Petersburg, apartment", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "5.52am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Silent Witness", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:53 for 0 quotations:
    case 353:
      Serial.println(F("No quotes for 05:53"));
      return;

    // Codegen for 05:54 for 0 quotations:
    case 354:
      Serial.println(F("No quotes for 05:54"));
      return;

    // Codegen for 05:55 for 1 quotations:
    case 355:
      Serial.println(F("Only one option for 05:55:"));
    Serial.println(F("05:55 - It was 5.55am and raining hard when I pedalled up to the bike stand just outside the forecourt of the station and dashed inside. I raced past the bookstall, where all the placards of the Yorkshire Post (a morning paper) read 'York Horror', but also 'Terrific February Gales at Coast'. - Andrew Martin, The Lost Luggage Porter"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on and
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on raining
// DEBUG: ['It', 'was', 'TIMESTRING', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on hard
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on when
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on I
// DEBUG: 84
// DEBUG: (79, 17)
// DEBUG: Operating on pedalled
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on up
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on to
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on the
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on bike
// DEBUG: ['raining', 'hard', 'when', 'I', 'pedalled', 'up', 'to', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on stand
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on just
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on outside
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on the
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on forecourt
// DEBUG: ['bike', 'stand', 'just', 'outside', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on of
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on the
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on station
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on and
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on dashed
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on inside.
// DEBUG: ['forecourt', 'of', 'the', 'station', 'and', 'dashed']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on I
// DEBUG: 26
// DEBUG: (21, 53)
// DEBUG: Operating on raced
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on past
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on the
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on bookstall,
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on where
// DEBUG: ['inside.', 'I', 'raced', 'past', 'the', 'bookstall,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on all
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on the
// DEBUG: 60
// DEBUG: (55, 65)
// DEBUG: Operating on placards
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on of
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on the
// DEBUG: 154
// DEBUG: (149, 65)
// DEBUG: Operating on Yorkshire
// DEBUG: ['where', 'all', 'the', 'placards', 'of', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on Post
// DEBUG: 49
// DEBUG: (44, 77)
// DEBUG: Operating on (a
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on morning
// DEBUG: 114
// DEBUG: (109, 77)
// DEBUG: Operating on paper)
// DEBUG: 157
// DEBUG: (152, 77)
// DEBUG: Operating on read
// DEBUG: 186
// DEBUG: (181, 77)
// DEBUG: Operating on 'York
// DEBUG: ['Yorkshire', 'Post', '(a', 'morning', 'paper)', 'read']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on Horror',
// DEBUG: 73
// DEBUG: (68, 89)
// DEBUG: Operating on but
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on also
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on 'Terrific
// DEBUG: 188
// DEBUG: (183, 89)
// DEBUG: Operating on February
// DEBUG: ["'York", "Horror',", 'but', 'also', "'Terrific"]
// DEBUG: drawing cursor (5, 89)
// DEBUG: (14, 101)
// DEBUG: Operating on Gales
// DEBUG: 55
// DEBUG: (50, 101)
// DEBUG: Operating on at
// DEBUG: 70
// DEBUG: (65, 101)
// DEBUG: Operating on Coast'.
// DEBUG: 120
// DEBUG: ['5.55am']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- The Lost Luggage Porter']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "raining hard when I pedalled up to the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "bike stand just outside the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "forecourt of the station and dashed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "inside. I raced past the bookstall,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "where all the placards of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Yorkshire Post (a morning paper) read", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "'York Horror', but also 'Terrific", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "5.55am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- The Lost Luggage Porter", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:56 for 0 quotations:
    case 356:
      Serial.println(F("No quotes for 05:56"));
      return;

    // Codegen for 05:57 for 0 quotations:
    case 357:
      Serial.println(F("No quotes for 05:57"));
      return;

    // Codegen for 05:58 for 1 quotations:
    case 358:
      Serial.println(F("Only one option for 05:58:"));
    Serial.println(F("05:58 - Annika Giannini woke with a start. She saw that it was 5.58 a.m. - Stieg Larsson, The Girl who Kicked the Hornet's Nest"));
// DEBUG: (5, 5)
// DEBUG: Operating on Annika
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on Giannini
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on woke
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on with
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on a
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on start.
// DEBUG: ['Annika', 'Giannini', 'woke', 'with', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on She
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on saw
// DEBUG: 61
// DEBUG: (56, 17)
// DEBUG: Operating on that
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on it
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on was
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['start.', 'She', 'saw', 'that', 'it', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['5.58 a.m.']
// DEBUG: drawing cursor (122, 17)
// DEBUG: ['- Stieg Larsson']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "Annika Giannini woke with a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "start. She saw that it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(122, 17, "5.58 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Stieg Larsson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 05:59 for 0 quotations:
    case 359:
      Serial.println(F("No quotes for 05:59"));
      return;

    // Codegen for 06:00 for 7 quotations:
    case 360:
      option = random(0, 7);
      Serial.print(F("7 options for 06:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("06:00 - ‘What’s the time?’ I ask, and telling him so that he knows, ‘My mother likes “peace and quiet” to sleep late on Saturday mornings.’ ‘She does, does she? It’s six o’clock. I couldn’t sleep,’ he says wearily, like an afterthought, as if it’s what he expects. ‘Why are you up so early?’ ‘I woke up and needed my panda. I can’t find him.’ ‘Where do you think he can be?’ His face changes and he smiles again, bending down to look under the table and behind the curtain. But he isn’t clowning or teasing. He’s in earnest. - Patsy Hickman, The Saints "));
// DEBUG: (5, 5)
// DEBUG: Operating on ‘What’s
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on the
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on time?’
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on I
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on ask,
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on and
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on telling
// DEBUG: ['‘What’s', 'the', 'time?’', 'I', 'ask,', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on him
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on so
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on that
// DEBUG: 84
// DEBUG: (79, 17)
// DEBUG: Operating on he
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on knows,
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on ‘My
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on mother
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on likes
// DEBUG: ['telling', 'him', 'so', 'that', 'he', 'knows,', '‘My', 'mother']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on “peace
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on and
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on quiet”
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on to
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on sleep
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on late
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on on
// DEBUG: ['likes', '“peace', 'and', 'quiet”', 'to', 'sleep', 'late']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on Saturday
// DEBUG: 70
// DEBUG: (65, 41)
// DEBUG: Operating on mornings.’
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on ‘She
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on does,
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on does
// DEBUG: ['on', 'Saturday', 'mornings.’', '‘She', 'does,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on she?
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on It’s
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['does', 'she?', 'It’s']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on I
// DEBUG: 30
// DEBUG: (25, 65)
// DEBUG: Operating on couldn’t
// DEBUG: 87
// DEBUG: (82, 65)
// DEBUG: Operating on sleep,’
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on he
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on says
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on wearily,
// DEBUG: ['TIMESTRING.', 'I', 'couldn’t', 'sleep,’', 'he', 'says']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on like
// DEBUG: 48
// DEBUG: (43, 77)
// DEBUG: Operating on an
// DEBUG: 63
// DEBUG: (58, 77)
// DEBUG: Operating on afterthought,
// DEBUG: 155
// DEBUG: (150, 77)
// DEBUG: Operating on as
// DEBUG: 170
// DEBUG: (165, 77)
// DEBUG: Operating on if
// DEBUG: 185
// DEBUG: (180, 77)
// DEBUG: Operating on it’s
// DEBUG: ['wearily,', 'like', 'an', 'afterthought,', 'as', 'if']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on what
// DEBUG: 44
// DEBUG: (39, 89)
// DEBUG: Operating on he
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on expects.
// DEBUG: 116
// DEBUG: (111, 89)
// DEBUG: Operating on ‘Why
// DEBUG: 145
// DEBUG: (140, 89)
// DEBUG: Operating on are
// DEBUG: 167
// DEBUG: (162, 89)
// DEBUG: Operating on you
// DEBUG: 189
// DEBUG: (184, 89)
// DEBUG: Operating on up
// DEBUG: 204
// DEBUG: (199, 89)
// DEBUG: Operating on so
// DEBUG: ['it’s', 'what', 'he', 'expects.', '‘Why', 'are', 'you', 'up']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on early?’
// DEBUG: 63
// DEBUG: (58, 101)
// DEBUG: Operating on ‘I
// DEBUG: 78
// DEBUG: (73, 101)
// DEBUG: Operating on woke
// DEBUG: 107
// DEBUG: (102, 101)
// DEBUG: Operating on up
// DEBUG: 122
// DEBUG: (117, 101)
// DEBUG: Operating on and
// DEBUG: 144
// DEBUG: (139, 101)
// DEBUG: Operating on needed
// DEBUG: 187
// DEBUG: (182, 101)
// DEBUG: Operating on my
// DEBUG: 202
// DEBUG: (197, 101)
// DEBUG: Operating on panda.
// DEBUG: ['so', 'early?’', '‘I', 'woke', 'up', 'and', 'needed', 'my']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 113)
// DEBUG: Operating on can’t
// DEBUG: 61
// DEBUG: (56, 113)
// DEBUG: Operating on find
// DEBUG: 90
// DEBUG: (85, 113)
// DEBUG: Operating on him.’
// DEBUG: 126
// DEBUG: (121, 113)
// DEBUG: Operating on ‘Where
// DEBUG: 169
// DEBUG: (164, 113)
// DEBUG: Operating on do
// DEBUG: 184
// DEBUG: (179, 113)
// DEBUG: Operating on you
// DEBUG: 206
// DEBUG: (201, 113)
// DEBUG: Operating on think
// DEBUG: ['panda.', 'I', 'can’t', 'find', 'him.’', '‘Where', 'do', 'you']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (11, 125)
// DEBUG: Operating on he
// DEBUG: 31
// DEBUG: (26, 125)
// DEBUG: Operating on can
// DEBUG: 53
// DEBUG: (48, 125)
// DEBUG: Operating on be?’
// DEBUG: 82
// DEBUG: (77, 125)
// DEBUG: Operating on His
// DEBUG: 104
// DEBUG: (99, 125)
// DEBUG: Operating on face
// DEBUG: 133
// DEBUG: (128, 125)
// DEBUG: Operating on changes
// DEBUG: 183
// DEBUG: (178, 125)
// DEBUG: Operating on and
// DEBUG: 205
// DEBUG: (200, 125)
// DEBUG: Operating on he
// DEBUG: ['think', 'he', 'can', 'be?’', 'His', 'face', 'changes', 'and']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (8, 137)
// DEBUG: Operating on smiles
// DEBUG: 56
// DEBUG: (51, 137)
// DEBUG: Operating on again,
// DEBUG: 99
// DEBUG: (94, 137)
// DEBUG: Operating on bending
// DEBUG: 149
// DEBUG: (144, 137)
// DEBUG: Operating on down
// DEBUG: 178
// DEBUG: (173, 137)
// DEBUG: Operating on to
// DEBUG: 193
// DEBUG: (188, 137)
// DEBUG: Operating on look
// DEBUG: ['he', 'smiles', 'again,', 'bending', 'down', 'to']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (10, 149)
// DEBUG: Operating on under
// DEBUG: 51
// DEBUG: (46, 149)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 149)
// DEBUG: Operating on table
// DEBUG: 109
// DEBUG: (104, 149)
// DEBUG: Operating on and
// DEBUG: 131
// DEBUG: (126, 149)
// DEBUG: Operating on behind
// DEBUG: 174
// DEBUG: (169, 149)
// DEBUG: Operating on the
// DEBUG: 196
// DEBUG: (191, 149)
// DEBUG: Operating on curtain.
// DEBUG: ['look', 'under', 'the', 'table', 'and', 'behind', 'the']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (14, 161)
// DEBUG: Operating on But
// DEBUG: 41
// DEBUG: (36, 161)
// DEBUG: Operating on he
// DEBUG: 56
// DEBUG: (51, 161)
// DEBUG: Operating on isn’t
// DEBUG: 92
// DEBUG: (87, 161)
// DEBUG: Operating on clowning
// DEBUG: 149
// DEBUG: (144, 161)
// DEBUG: Operating on or
// DEBUG: 164
// DEBUG: (159, 161)
// DEBUG: Operating on teasing.
// DEBUG: ['curtain.', 'But', 'he', 'isn’t', 'clowning', 'or']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (14, 173)
// DEBUG: Operating on He’s
// DEBUG: 48
// DEBUG: (43, 173)
// DEBUG: Operating on in
// DEBUG: 63
// DEBUG: (58, 173)
// DEBUG: Operating on earnest.
// DEBUG: 120
// DEBUG: ['six o’clock']
// DEBUG: drawing cursor (68, 53)
// DEBUG: ['- Patsy Hickman, The Saints ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "‘What’s the time?’ I ask, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "telling him so that he knows, ‘My mother", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "likes “peace and quiet” to sleep late", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "on Saturday mornings.’ ‘She does,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "does she? It’s", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING. I couldn’t sleep,’ he says", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "wearily, like an afterthought, as if", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "it’s what he expects. ‘Why are you up", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "so early?’ ‘I woke up and needed my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "panda. I can’t find him.’ ‘Where do you", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "think he can be?’ His face changes and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "he smiles again, bending down to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "look under the table and behind the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "curtain. But he isn’t clowning or", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(68, 53, "six o’clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Patsy Hickman, The Saints ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("06:00 - But every morning, even if there's been a nighttime session and he has only slept two hours, he gets up at six and reads his paper while he drinks a strong cup of coffee. In this way Papa constructs himself every day. - Muriel Barbery, The Elegance of the Hedgehog "));
// DEBUG: (5, 5)
// DEBUG: Operating on But
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on every
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on morning,
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on even
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on if
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on there's
// DEBUG: ['But', 'every', 'morning,', 'even', 'if']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on been
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on a
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on nighttime
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on session
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on and
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on he
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on has
// DEBUG: ["there's", 'been', 'a', 'nighttime', 'session', 'and', 'he']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on only
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on slept
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on two
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on hours,
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on he
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on gets
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on up
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['has', 'only', 'slept', 'two', 'hours,', 'he', 'gets', 'up']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on and
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on reads
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on his
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on paper
// DEBUG: ['TIMESTRING', 'and', 'reads', 'his']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on while
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on he
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on drinks
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on a
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on strong
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on cup
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on of
// DEBUG: 198
// DEBUG: (193, 53)
// DEBUG: Operating on coffee.
// DEBUG: ['paper', 'while', 'he', 'drinks', 'a', 'strong', 'cup', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on In
// DEBUG: 33
// DEBUG: (28, 65)
// DEBUG: Operating on this
// DEBUG: 62
// DEBUG: (57, 65)
// DEBUG: Operating on way
// DEBUG: 84
// DEBUG: (79, 65)
// DEBUG: Operating on Papa
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on constructs
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on himself
// DEBUG: ['coffee.', 'In', 'this', 'way', 'Papa', 'constructs']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on every
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on day.
// DEBUG: 83
// DEBUG: ['at six']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Muriel Barbery']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "But every morning, even if", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "there's been a nighttime session and he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "has only slept two hours, he gets up", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING and reads his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "paper while he drinks a strong cup of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "coffee. In this way Papa constructs", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "at six", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- Muriel Barbery", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("06:00 - I had risen half-an-hour before her entrance, and had washed my face, and put on my clothes by the light of a half-moon just setting, whose rays streamed through the narrow window near my crib. I was to leave Gateshead that day by a coach which passed the lodge gates at six a.m. - Charlotte Brontë, Jane Eyre"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on had
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on risen
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on half-an-hour
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on before
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on her
// DEBUG: ['I', 'had', 'risen', 'half-an-hour', 'before']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on entrance,
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on and
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on had
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on washed
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on my
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on face,
// DEBUG: ['her', 'entrance,', 'and', 'had', 'washed', 'my']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on put
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on on
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on my
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on clothes
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on by
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on the
// DEBUG: 177
// DEBUG: (172, 29)
// DEBUG: Operating on light
// DEBUG: ['face,', 'and', 'put', 'on', 'my', 'clothes', 'by', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 41)
// DEBUG: Operating on a
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on half-moon
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on just
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on setting,
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on whose
// DEBUG: ['light', 'of', 'a', 'half-moon', 'just', 'setting,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on rays
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on streamed
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on through
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on narrow
// DEBUG: ['whose', 'rays', 'streamed', 'through', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on window
// DEBUG: 60
// DEBUG: (55, 65)
// DEBUG: Operating on near
// DEBUG: 89
// DEBUG: (84, 65)
// DEBUG: Operating on my
// DEBUG: 104
// DEBUG: (99, 65)
// DEBUG: Operating on crib.
// DEBUG: 140
// DEBUG: (135, 65)
// DEBUG: Operating on I
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on was
// DEBUG: 170
// DEBUG: (165, 65)
// DEBUG: Operating on to
// DEBUG: 185
// DEBUG: (180, 65)
// DEBUG: Operating on leave
// DEBUG: ['narrow', 'window', 'near', 'my', 'crib.', 'I', 'was', 'to']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on Gateshead
// DEBUG: 80
// DEBUG: (75, 77)
// DEBUG: Operating on that
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on day
// DEBUG: 131
// DEBUG: (126, 77)
// DEBUG: Operating on by
// DEBUG: 146
// DEBUG: (141, 77)
// DEBUG: Operating on a
// DEBUG: 154
// DEBUG: (149, 77)
// DEBUG: Operating on coach
// DEBUG: 190
// DEBUG: (185, 77)
// DEBUG: Operating on which
// DEBUG: ['leave', 'Gateshead', 'that', 'day', 'by', 'a', 'coach']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on passed
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on the
// DEBUG: 81
// DEBUG: (76, 89)
// DEBUG: Operating on lodge
// DEBUG: 117
// DEBUG: (112, 89)
// DEBUG: Operating on gates
// DEBUG: 153
// DEBUG: (148, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['which', 'passed', 'the', 'lodge', 'gates']
// DEBUG: drawing cursor (5, 89)
// DEBUG: 158
// DEBUG: ['at six a.m.']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- Charlotte Brontë, Jane Eyre']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "I had risen half-an-hour before", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "her entrance, and had washed my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "face, and put on my clothes by the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "light of a half-moon just setting,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "whose rays streamed through the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "narrow window near my crib. I was to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "leave Gateshead that day by a coach", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "which passed the lodge gates", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "at six a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Charlotte Brontë, Jane Eyre", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("06:00 - Lying awake in my attic room, i hear a clock strike six downstairs. It was fairly light and people were beginning to walk up and down the stairs...- i heard the clock strike eight downstairs before i rose and got dressed... I looked up - the clock tower of our saviour's showed ten. - Knut Hamsun, Hunger "));
// DEBUG: (5, 5)
// DEBUG: Operating on Lying
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on awake
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on in
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on my
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on attic
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on room,
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on i
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on hear
// DEBUG: ['Lying', 'awake', 'in', 'my', 'attic', 'room,', 'i']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 17)
// DEBUG: Operating on clock
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on strike
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on TIMESTRINGdownstairs.
// DEBUG: Wrorking on the timestring
// DEBUG: ['hear', 'a', 'clock', 'strike']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (27, 29)
// DEBUG: Operating on It
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on was
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on fairly
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on light
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on and
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on people
// DEBUG: ['TIMESTRINGdownstairs.', 'It', 'was', 'fairly', 'light', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on were
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on beginning
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on to
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on walk
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on up
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on and
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on down
// DEBUG: ['people', 'were', 'beginning', 'to', 'walk', 'up', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on stairs...-
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on i
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on heard
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on clock
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on strike
// DEBUG: ['down', 'the', 'stairs...-', 'i', 'heard', 'the', 'clock']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on eight
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on downstairs
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on before
// DEBUG: 167
// DEBUG: (162, 65)
// DEBUG: Operating on i
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on rose
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on and
// DEBUG: ['strike', 'eight', 'downstairs', 'before', 'i', 'rose']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on got
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on dressed...
// DEBUG: 107
// DEBUG: (102, 77)
// DEBUG: Operating on I
// DEBUG: 115
// DEBUG: (110, 77)
// DEBUG: Operating on looked
// DEBUG: 158
// DEBUG: (153, 77)
// DEBUG: Operating on up
// DEBUG: 173
// DEBUG: (168, 77)
// DEBUG: Operating on -
// DEBUG: 181
// DEBUG: (176, 77)
// DEBUG: Operating on the
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on clock
// DEBUG: ['and', 'got', 'dressed...', 'I', 'looked', 'up', '-', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on tower
// DEBUG: 52
// DEBUG: (47, 89)
// DEBUG: Operating on of
// DEBUG: 67
// DEBUG: (62, 89)
// DEBUG: Operating on our
// DEBUG: 89
// DEBUG: (84, 89)
// DEBUG: Operating on saviour's
// DEBUG: 153
// DEBUG: (148, 89)
// DEBUG: Operating on showed
// DEBUG: 196
// DEBUG: (191, 89)
// DEBUG: Operating on ten.
// DEBUG: ['clock', 'tower', 'of', 'our', "saviour's", 'showed']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['six ']
// DEBUG: drawing cursor (97, 17)
// DEBUG: ['- Knut Hamsun, Hunger ']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "Lying awake in my attic room, i", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "hear a clock strike", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRINGdownstairs. It was fairly light and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "people were beginning to walk up and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "down the stairs...- i heard the clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "strike eight downstairs before i rose", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "and got dressed... I looked up - the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "clock tower of our saviour's showed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(97, 17, "six ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Knut Hamsun, Hunger ", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("06:00 - On the 15th of September 1840, about six o'clock in the morning, the Ville-de-Montereau, ready to depart, pouring out great whirls of smoke by the quai Saint-Bernard. - Gustave Flaubert, L'Education sentimentale "));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on 15th
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on of
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on September
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on 1840,
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on about
// DEBUG: ['On', 'the', '15th', 'of', 'September', '1840,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on in
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on the
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on morning,
// DEBUG: ['about', 'TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on Ville-de-Montereau,
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on ready
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on to
// DEBUG: ['morning,', 'the', 'Ville-de-Montereau,', 'ready']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on depart,
// DEBUG: 63
// DEBUG: (58, 41)
// DEBUG: Operating on pouring
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on out
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on great
// DEBUG: 171
// DEBUG: (166, 41)
// DEBUG: Operating on whirls
// DEBUG: ['to', 'depart,', 'pouring', 'out', 'great']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on smoke
// DEBUG: 68
// DEBUG: (63, 53)
// DEBUG: Operating on by
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 53)
// DEBUG: Operating on quai
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on Saint-Bernard.
// DEBUG: ['whirls', 'of', 'smoke', 'by', 'the', 'quai']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ["six o'clock"]
// DEBUG: drawing cursor (11, 17)
// DEBUG: ["- L'Education sentimentale"]
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "On the 15th of September 1840,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "about TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "morning, the Ville-de-Montereau, ready", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "to depart, pouring out great", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "whirls of smoke by the quai", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(11, 17, "six o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- L'Education sentimentale", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("06:00 - Rise from bed ............... . 6.00 A.M. - F. Scott Fitzgerald, The Great Gatsby "));
// DEBUG: (5, 5)
// DEBUG: Operating on Rise
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on from
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on bed
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on ...............
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on .
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Rise', 'from', 'bed', '...............', '.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 144
// DEBUG: ['6.00 A.M.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Great Gatsby']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "Rise from bed ............... .", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "6.00 A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Great Gatsby", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("06:00 - The ball went on for a long time, until six in the morning; all were exhausted and wishing they had been in bed for at least three hours; but to leave early was like proclaiming the party a failure and offending the host and hostess who had taken such a lot of trouble, poor dears. - Giuseppe Tomasi di Lampedusa, The Leopard "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on ball
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on went
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on on
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on for
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on a
// DEBUG: 135
// DEBUG: (130, 5)
// DEBUG: Operating on long
// DEBUG: 164
// DEBUG: (159, 5)
// DEBUG: Operating on time,
// DEBUG: 200
// DEBUG: (195, 5)
// DEBUG: Operating on until
// DEBUG: ['The', 'ball', 'went', 'on', 'for', 'a', 'long', 'time,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on TIMESTRINGin
// DEBUG: Wrorking on the timestring
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on the
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on morning;
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on all
// DEBUG: ['until', 'TIMESTRINGin', 'the', 'morning;']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on were
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on exhausted
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on and
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on wishing
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on they
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on had
// DEBUG: ['all', 'were', 'exhausted', 'and', 'wishing', 'they']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on been
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on in
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on bed
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on for
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on at
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on least
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on three
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on hours;
// DEBUG: ['had', 'been', 'in', 'bed', 'for', 'at', 'least', 'three']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on but
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on to
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on leave
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on early
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on was
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on like
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on proclaiming
// DEBUG: ['hours;', 'but', 'to', 'leave', 'early', 'was', 'like']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on party
// DEBUG: 80
// DEBUG: (75, 65)
// DEBUG: Operating on a
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on failure
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on and
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on offending
// DEBUG: ['proclaiming', 'the', 'party', 'a', 'failure', 'and']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on the
// DEBUG: 42
// DEBUG: (37, 77)
// DEBUG: Operating on host
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on and
// DEBUG: 93
// DEBUG: (88, 77)
// DEBUG: Operating on hostess
// DEBUG: 143
// DEBUG: (138, 77)
// DEBUG: Operating on who
// DEBUG: 165
// DEBUG: (160, 77)
// DEBUG: Operating on had
// DEBUG: 187
// DEBUG: (182, 77)
// DEBUG: Operating on taken
// DEBUG: ['offending', 'the', 'host', 'and', 'hostess', 'who', 'had']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on such
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on a
// DEBUG: 53
// DEBUG: (48, 89)
// DEBUG: Operating on lot
// DEBUG: 75
// DEBUG: (70, 89)
// DEBUG: Operating on of
// DEBUG: 90
// DEBUG: (85, 89)
// DEBUG: Operating on trouble,
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on poor
// DEBUG: 176
// DEBUG: (171, 89)
// DEBUG: Operating on dears.
// DEBUG: ['taken', 'such', 'a', 'lot', 'of', 'trouble,', 'poor']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['six ']
// DEBUG: drawing cursor (11, 17)
// DEBUG: ['- The Leopard']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "The ball went on for a long time,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "until TIMESTRINGin the morning;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "all were exhausted and wishing they", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "had been in bed for at least three", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "hours; but to leave early was like", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "proclaiming the party a failure and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "offending the host and hostess who had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "taken such a lot of trouble, poor", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(11, 17, "six ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- The Leopard", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 06:01 for 0 quotations:
    case 361:
      Serial.println(F("No quotes for 06:01"));
      return;

    // Codegen for 06:02 for 1 quotations:
    case 362:
      Serial.println(F("Only one option for 06:02:"));
    Serial.println(F("06:02 - Bimingham New Street 5.25. Walsall 5.55. This train does not stop at Birchills, for reasons George has never been able to ascertain. Then it is Bloxwich 6.02, Wyrley & Churchbridge 6.09. At 6.10 he nods to Mr Merriman the stationmaster. - Julian Barnes, Arthur and George"));
// DEBUG: (5, 5)
// DEBUG: Operating on Bimingham
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on New
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on Street
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on 5.25.
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on Walsall
// DEBUG: ['Bimingham', 'New', 'Street', '5.25.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on 5.55.
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on This
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on train
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on does
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on not
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on stop
// DEBUG: 199
// DEBUG: (194, 17)
// DEBUG: Operating on at
// DEBUG: ['Walsall', '5.55.', 'This', 'train', 'does', 'not', 'stop']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on Birchills,
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on for
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on reasons
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on George
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on has
// DEBUG: ['at', 'Birchills,', 'for', 'reasons', 'George']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on never
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on been
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on able
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on to
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on ascertain.
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on Then
// DEBUG: ['has', 'never', 'been', 'able', 'to', 'ascertain.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 53)
// DEBUG: Operating on is
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on Bloxwich
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on Wyrley
// DEBUG: ['Then', 'it', 'is', 'Bloxwich', 'TIMESTRING,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on &
// DEBUG: 25
// DEBUG: (20, 65)
// DEBUG: Operating on Churchbridge
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on 6.09.
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on At
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on 6.10
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on he
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on nods
// DEBUG: ['Wyrley', '&', 'Churchbridge', '6.09.', 'At', '6.10', 'he']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 77)
// DEBUG: Operating on Mr
// DEBUG: 45
// DEBUG: (40, 77)
// DEBUG: Operating on Merriman
// DEBUG: 102
// DEBUG: (97, 77)
// DEBUG: Operating on the
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on stationmaster.
// DEBUG: ['nods', 'to', 'Mr', 'Merriman', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['6.02']
// DEBUG: drawing cursor (97, 53)
// DEBUG: ['- Arthur and George']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "Bimingham New Street 5.25.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Walsall 5.55. This train does not stop", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "at Birchills, for reasons George", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "has never been able to ascertain.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Then it is Bloxwich TIMESTRING,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "Wyrley & Churchbridge 6.09. At 6.10 he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "nods to Mr Merriman the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(97, 53, "6.02", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Arthur and George", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:03 for 0 quotations:
    case 363:
      Serial.println(F("No quotes for 06:03"));
      return;

    // Codegen for 06:04 for 0 quotations:
    case 364:
      Serial.println(F("No quotes for 06:04"));
      return;

    // Codegen for 06:05 for 1 quotations:
    case 365:
      Serial.println(F("Only one option for 06:05:"));
    Serial.println(F("06:05 - A second man went in and found the shop empty, as he thought, at five minutes past six. That puts the time at between 5:30 and 6:05. - Agatha Christie, The ABC Murders"));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on second
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on man
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on went
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on in
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on and
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on found
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on the
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on shop
// DEBUG: ['A', 'second', 'man', 'went', 'in', 'and', 'found', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on empty,
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on as
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on he
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on thought,
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on at
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['shop', 'empty,', 'as', 'he', 'thought,', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on That
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on puts
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on the
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on time
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on at
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on between
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on 5:30
// DEBUG: ['TIMESTRING.', 'That', 'puts', 'the', 'time', 'at', 'between']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on 6:05.
// DEBUG: 73
// DEBUG: ['five minutes past six']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- The ABC Murders']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "A second man went in and found the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "shop empty, as he thought, at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING. That puts the time at between", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "five minutes past six", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- The ABC Murders", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:06 for 1 quotations:
    case 366:
      Serial.println(F("Only one option for 06:06:"));
    Serial.println(F("06:06 - At 6:06, every toilet on Merit Street suddenly exploded in a geyser of shit and raw sewage as some unimaginable reversal took place in the pipes which fed the holding tanks of the new waste-treatment plant in the Barrens. - Stephen King, IT"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on every
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on toilet
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on on
// DEBUG: ['At', 'TIMESTRING,', 'every', 'toilet']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on Merit
// DEBUG: 49
// DEBUG: (44, 17)
// DEBUG: Operating on Street
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on suddenly
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on exploded
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on in
// DEBUG: ['on', 'Merit', 'Street', 'suddenly', 'exploded']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 29)
// DEBUG: Operating on geyser
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on of
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on shit
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on and
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on raw
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on sewage
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on as
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on some
// DEBUG: ['in', 'a', 'geyser', 'of', 'shit', 'and', 'raw', 'sewage', 'as']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on unimaginable
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on reversal
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on took
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on place
// DEBUG: ['some', 'unimaginable', 'reversal', 'took']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on pipes
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on which
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on fed
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on holding
// DEBUG: ['place', 'in', 'the', 'pipes', 'which', 'fed', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on tanks
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on of
// DEBUG: 69
// DEBUG: (64, 65)
// DEBUG: Operating on the
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on new
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on waste-treatment
// DEBUG: ['holding', 'tanks', 'of', 'the', 'new']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (21, 77)
// DEBUG: Operating on plant
// DEBUG: 62
// DEBUG: (57, 77)
// DEBUG: Operating on in
// DEBUG: 77
// DEBUG: (72, 77)
// DEBUG: Operating on the
// DEBUG: 99
// DEBUG: (94, 77)
// DEBUG: Operating on Barrens.
// DEBUG: 156
// DEBUG: ['6:06']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Stephen King, IT']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING, every toilet", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "on Merit Street suddenly exploded", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "in a geyser of shit and raw sewage as", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "some unimaginable reversal took", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "place in the pipes which fed the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "holding tanks of the new", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "6:06", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- Stephen King, IT", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:07 for 0 quotations:
    case 367:
      Serial.println(F("No quotes for 06:07"));
      return;

    // Codegen for 06:08 for 1 quotations:
    case 368:
      Serial.println(F("Only one option for 06:08:"));
    Serial.println(F("06:08 - At six oh-eight a.m. two men wearing ragged trench coats approached the Casino. The shorter of the men burst into flames. - Ilona Andrews, Magic Bleeds"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on two
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on men
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on wearing
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on ragged
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on trench
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on coats
// DEBUG: ['TIMESTRING', 'two', 'men', 'wearing', 'ragged', 'trench']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on approached
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on Casino.
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on The
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on shorter
// DEBUG: ['coats', 'approached', 'the', 'Casino.', 'The']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on men
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on burst
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on into
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on flames.
// DEBUG: 192
// DEBUG: ['six oh-eight a.m.']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Ilona Andrews, Magic Bleeds']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING two men wearing ragged trench", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "coats approached the Casino. The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "six oh-eight a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Ilona Andrews, Magic Bleeds", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:09 for 0 quotations:
    case 369:
      Serial.println(F("No quotes for 06:09"));
      return;

    // Codegen for 06:10 for 1 quotations:
    case 370:
      Serial.println(F("Only one option for 06:10:"));
    Serial.println(F("06:10 - The bus left the station at ten past six - and she sat proud, like an accustomed traveller, apart from her father, John Henry, and Berenice. But after a while a serious doubt came in her, which even the answers of the bus-driver could not quite satisfy. - Carson McCullers, The Member of the Wedding"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on bus
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on left
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on station
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on at
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'bus', 'left', 'the', 'station', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on -
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on and
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on she
// DEBUG: ['TIMESTRING', '-', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on sat
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on proud,
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on like
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on an
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on accustomed
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on traveller,
// DEBUG: ['she', 'sat', 'proud,', 'like', 'an', 'accustomed']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on apart
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on from
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on her
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on father,
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on John
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on Henry,
// DEBUG: ['traveller,', 'apart', 'from', 'her', 'father,', 'John']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on Berenice.
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on But
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on after
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on a
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on while
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on a
// DEBUG: ['Henry,', 'and', 'Berenice.', 'But', 'after', 'a', 'while']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (7, 65)
// DEBUG: Operating on serious
// DEBUG: 62
// DEBUG: (57, 65)
// DEBUG: Operating on doubt
// DEBUG: 98
// DEBUG: (93, 65)
// DEBUG: Operating on came
// DEBUG: 127
// DEBUG: (122, 65)
// DEBUG: Operating on in
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on her,
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on which
// DEBUG: 207
// DEBUG: (202, 65)
// DEBUG: Operating on even
// DEBUG: ['a', 'serious', 'doubt', 'came', 'in', 'her,', 'which']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 77)
// DEBUG: Operating on answers
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on of
// DEBUG: 102
// DEBUG: (97, 77)
// DEBUG: Operating on the
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on bus-driver
// DEBUG: 195
// DEBUG: (190, 77)
// DEBUG: Operating on could
// DEBUG: ['even', 'the', 'answers', 'of', 'the', 'bus-driver']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on not
// DEBUG: 38
// DEBUG: (33, 89)
// DEBUG: Operating on quite
// DEBUG: 74
// DEBUG: (69, 89)
// DEBUG: Operating on satisfy.
// DEBUG: 131
// DEBUG: ['ten past six']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Member of the Wedding']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "The bus left the station at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING - and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "she sat proud, like an accustomed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "traveller, apart from her father, John", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Henry, and Berenice. But after a while", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "a serious doubt came in her, which", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "even the answers of the bus-driver", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "ten past six", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- The Member of the Wedding", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:11 for 0 quotations:
    case 371:
      Serial.println(F("No quotes for 06:11"));
      return;

    // Codegen for 06:12 for 0 quotations:
    case 372:
      Serial.println(F("No quotes for 06:12"));
      return;

    // Codegen for 06:13 for 1 quotations:
    case 373:
      Serial.println(F("Only one option for 06:13:"));
    Serial.println(F("06:13 - It's 06:13 .........Ma says I ought to be wrapped up in Rug already, Old Nick might possibly come. - Emma Donoghue, Room "));
// DEBUG: (5, 5)
// DEBUG: Operating on It's
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on .........Ma
// DEBUG: ["It's", 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on says
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on I
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on ought
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on to
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on be
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on wrapped
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on up
// DEBUG: 190
// DEBUG: (185, 17)
// DEBUG: Operating on in
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on Rug
// DEBUG: ['.........Ma', 'says', 'I', 'ought', 'to', 'be', 'wrapped', 'up', 'in']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on already,
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on Old
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on Nick
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on might
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on possibly
// DEBUG: ['Rug', 'already,', 'Old', 'Nick', 'might']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on come.
// DEBUG: 55
// DEBUG: ['06:13']
// DEBUG: drawing cursor (34, 5)
// DEBUG: ['- Emma Donoghue, Room ']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "It's TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, ".........Ma says I ought to be wrapped up in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Rug already, Old Nick might", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(34, 5, "06:13", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Emma Donoghue, Room ", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:14 for 0 quotations:
    case 374:
      Serial.println(F("No quotes for 06:14"));
      return;

    // Codegen for 06:15 for 4 quotations:
    case 375:
      option = random(0, 4);
      Serial.print(F("4 options for 06:15. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("06:15 - Dumbbell exercise and wall-scaling ..... . 6.15-6.30 - F. Scott Fitzgerald, The Great Gatsby "));
// DEBUG: (5, 5)
// DEBUG: Operating on Dumbbell
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on exercise
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on and
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on wall-scaling
// DEBUG: ['Dumbbell', 'exercise', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (18, 17)
// DEBUG: Operating on .....
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on .
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on TIMESTRING-6.30
// DEBUG: Wrorking on the timestring
// DEBUG: 202
// DEBUG: ['6.15']
// DEBUG: drawing cursor (62, 17)
// DEBUG: ['- The Great Gatsby']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "Dumbbell exercise and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(62, 17, "6.15", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Great Gatsby", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("06:15 - Father expected his shaving-water to be ready at a quarter past six. Just seven minutes late, Dorothy took the can upstairs and knocked at her father's door. - George Orwell, A Clergyman's Daughter"));
// DEBUG: (5, 5)
// DEBUG: Operating on Father
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on expected
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on his
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on shaving-water
// DEBUG: ['Father', 'expected', 'his']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (19, 17)
// DEBUG: Operating on to
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on be
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on ready
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on at
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on a
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['shaving-water', 'to', 'be', 'ready', 'at', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on Just
// DEBUG: ['TIMESTRING.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on seven
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on minutes
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on late,
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on Dorothy
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on took
// DEBUG: ['Just', 'seven', 'minutes', 'late,', 'Dorothy']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on can
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on upstairs
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on and
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on knocked
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on at
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on her
// DEBUG: ['took', 'the', 'can', 'upstairs', 'and', 'knocked', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on father's
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on door.
// DEBUG: 107
// DEBUG: ['quarter past six']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ["- A Clergyman's Daughter"]
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "Father expected his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "shaving-water to be ready at a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Just seven minutes late, Dorothy", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "took the can upstairs and knocked at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "quarter past six", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- A Clergyman's Daughter", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("06:15 - It was 6.15 am. Just starting to get light. A small knot of older teenagers were leaning against a nearby wall. They looked as though they had been out all night.Two of the guys stared at us. Their eyes hard and threatening. - Sophie McKenzie, Girl Missing"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on Just
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on starting
// DEBUG: ['It', 'was', 'TIMESTRING', 'Just']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on get
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on light.
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on A
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on small
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on knot
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on of
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on older
// DEBUG: ['starting', 'to', 'get', 'light.', 'A', 'small', 'knot', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on teenagers
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on were
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on leaning
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on against
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on a
// DEBUG: ['older', 'teenagers', 'were', 'leaning', 'against']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (7, 41)
// DEBUG: Operating on nearby
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on wall.
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on They
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on looked
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on as
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on though
// DEBUG: ['a', 'nearby', 'wall.', 'They', 'looked', 'as']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on they
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on had
// DEBUG: 68
// DEBUG: (63, 53)
// DEBUG: Operating on been
// DEBUG: 97
// DEBUG: (92, 53)
// DEBUG: Operating on out
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on all
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on night.Two
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on of
// DEBUG: ['though', 'they', 'had', 'been', 'out', 'all', 'night.Two']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on guys
// DEBUG: 64
// DEBUG: (59, 65)
// DEBUG: Operating on stared
// DEBUG: 107
// DEBUG: (102, 65)
// DEBUG: Operating on at
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on us.
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on Their
// DEBUG: 180
// DEBUG: (175, 65)
// DEBUG: Operating on eyes
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on hard
// DEBUG: ['of', 'the', 'guys', 'stared', 'at', 'us.', 'Their', 'eyes']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 77)
// DEBUG: Operating on threatening.
// DEBUG: 122
// DEBUG: ['6.15 am.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Girl Missing']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING Just", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "starting to get light. A small knot of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "older teenagers were leaning against", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "a nearby wall. They looked as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "though they had been out all night.Two", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "of the guys stared at us. Their eyes", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 5, "6.15 am.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Girl Missing", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("06:15 - It was 6.15 am. Just starting to get light. A small knot of older teenagers were leaning against a nearby wall. They looked as though they had been out all night.Two of the guys stared at us. Their eyes hard and threatening. - Sophie McKenzie, Girl Missing "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on Just
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on starting
// DEBUG: ['It', 'was', 'TIMESTRING', 'Just']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on get
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on light.
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on A
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on small
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on knot
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on of
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on older
// DEBUG: ['starting', 'to', 'get', 'light.', 'A', 'small', 'knot', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on teenagers
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on were
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on leaning
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on against
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on a
// DEBUG: ['older', 'teenagers', 'were', 'leaning', 'against']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (7, 41)
// DEBUG: Operating on nearby
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on wall.
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on They
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on looked
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on as
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on though
// DEBUG: ['a', 'nearby', 'wall.', 'They', 'looked', 'as']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on they
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on had
// DEBUG: 68
// DEBUG: (63, 53)
// DEBUG: Operating on been
// DEBUG: 97
// DEBUG: (92, 53)
// DEBUG: Operating on out
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on all
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on night.Two
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on of
// DEBUG: ['though', 'they', 'had', 'been', 'out', 'all', 'night.Two']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on guys
// DEBUG: 64
// DEBUG: (59, 65)
// DEBUG: Operating on stared
// DEBUG: 107
// DEBUG: (102, 65)
// DEBUG: Operating on at
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on us.
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on Their
// DEBUG: 180
// DEBUG: (175, 65)
// DEBUG: Operating on eyes
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on hard
// DEBUG: ['of', 'the', 'guys', 'stared', 'at', 'us.', 'Their', 'eyes']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 77)
// DEBUG: Operating on threatening.
// DEBUG: 122
// DEBUG: ['6.15 am.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Girl Missing']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING Just", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "starting to get light. A small knot of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "older teenagers were leaning against", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "a nearby wall. They looked as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "though they had been out all night.Two", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "of the guys stared at us. Their eyes", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 5, "6.15 am.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Girl Missing", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 06:16 for 0 quotations:
    case 376:
      Serial.println(F("No quotes for 06:16"));
      return;

    // Codegen for 06:17 for 1 quotations:
    case 377:
      Serial.println(F("Only one option for 06:17:"));
    Serial.println(F("06:17 - Dizzy, come on.' He turned slowly, coaxing the animal down on to the pillow. The clock read six-seventeen. A second cat, Miles, purred on contentedly from the patch in the covers where Resnick's legs had made a deep V. - John Harvey, Lonely Hearts"));
// DEBUG: (5, 5)
// DEBUG: Operating on Dizzy,
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on come
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on on.'
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on He
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on turned
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on slowly,
// DEBUG: ['Dizzy,', 'come', "on.'", 'He', 'turned']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on coaxing
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on animal
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on down
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on on
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on to
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on the
// DEBUG: ['slowly,', 'coaxing', 'the', 'animal', 'down', 'on', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on pillow.
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on The
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on clock
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on read
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'pillow.', 'The', 'clock', 'read']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on A
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on second
// DEBUG: ['TIMESTRING.', 'A']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on cat,
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on Miles,
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on purred
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on on
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on contentedly
// DEBUG: ['second', 'cat,', 'Miles,', 'purred', 'on']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on from
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on patch
// DEBUG: 109
// DEBUG: (104, 65)
// DEBUG: Operating on in
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on covers
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on where
// DEBUG: ['contentedly', 'from', 'the', 'patch', 'in', 'the', 'covers']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on Resnick's
// DEBUG: 80
// DEBUG: (75, 77)
// DEBUG: Operating on legs
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on had
// DEBUG: 131
// DEBUG: (126, 77)
// DEBUG: Operating on made
// DEBUG: 160
// DEBUG: (155, 77)
// DEBUG: Operating on a
// DEBUG: 168
// DEBUG: (163, 77)
// DEBUG: Operating on deep
// DEBUG: 197
// DEBUG: (192, 77)
// DEBUG: Operating on V.
// DEBUG: ['where', "Resnick's", 'legs', 'had', 'made', 'a', 'deep']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['six-seventeen']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- John Harvey, Lonely Hearts']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "Dizzy, come on.' He turned", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "slowly, coaxing the animal down on to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the pillow. The clock read", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING. A", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "second cat, Miles, purred on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "contentedly from the patch in the covers", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "where Resnick's legs had made a deep", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "six-seventeen", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- John Harvey, Lonely Hearts", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:18 for 0 quotations:
    case 378:
      Serial.println(F("No quotes for 06:18"));
      return;

    // Codegen for 06:19 for 1 quotations:
    case 379:
      Serial.println(F("Only one option for 06:19:"));
    Serial.println(F("06:19 - 6.19 am, 8th June 2004, the jet of your pupil set in the gold of your eye. - Carol Ann Duffy, Venus"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 138
// DEBUG: (133, 5)
// DEBUG: Operating on 8th
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on June
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on 2004,
// DEBUG: ['TIMESTRING,', '8th', 'June']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on jet
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on of
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on your
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on pupil
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on set
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on in
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on the
// DEBUG: 199
// DEBUG: (194, 17)
// DEBUG: Operating on gold
// DEBUG: ['2004,', 'the', 'jet', 'of', 'your', 'pupil', 'set', 'in', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on of
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on your
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on eye.
// DEBUG: 88
// DEBUG: ['6.19 am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Carol Ann Duffy, Venus']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING, 8th June", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "2004, the jet of your pupil set in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "6.19 am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Carol Ann Duffy, Venus", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:20 for 1 quotations:
    case 380:
      Serial.println(F("Only one option for 06:20:"));
    Serial.println(F("06:20 - It was 6:20 a.m., and my parents and I were standing, stunned and haf-awake, in the parking lot of a Howard Johnson's in Iowa. - Austin Grossman, Soon I Will Be Invincible"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on and
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on my
// DEBUG: ['It', 'was', 'TIMESTRING,', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on parents
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on and
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on I
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on were
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on standing,
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on stunned
// DEBUG: ['my', 'parents', 'and', 'I', 'were', 'standing,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on haf-awake,
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on in
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on the
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on parking
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on lot
// DEBUG: ['stunned', 'and', 'haf-awake,', 'in', 'the', 'parking']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on of
// DEBUG: 29
// DEBUG: (24, 41)
// DEBUG: Operating on a
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on Howard
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on Johnson's
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on in
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on Iowa.
// DEBUG: 195
// DEBUG: ['6:20 a.m.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Soon I Will Be Invincible']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "my parents and I were standing,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "stunned and haf-awake, in the parking", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "6:20 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- Soon I Will Be Invincible", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:21 for 0 quotations:
    case 381:
      Serial.println(F("No quotes for 06:21"));
      return;

    // Codegen for 06:22 for 0 quotations:
    case 382:
      Serial.println(F("No quotes for 06:22"));
      return;

    // Codegen for 06:23 for 0 quotations:
    case 383:
      Serial.println(F("No quotes for 06:23"));
      return;

    // Codegen for 06:24 for 0 quotations:
    case 384:
      Serial.println(F("No quotes for 06:24"));
      return;

    // Codegen for 06:25 for 2 quotations:
    case 385:
      option = random(0, 2);
      Serial.print(F("2 options for 06:25. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("06:25 - Simon is happy to travel scum class when he's on his own and even sometimes deliberately aims for the 6.25. But today the .25 is delayed to 6.44. - Mark Lawson, The Deaths"));
// DEBUG: (5, 5)
// DEBUG: Operating on Simon
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on is
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on happy
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on to
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on travel
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on scum
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on class
// DEBUG: ['Simon', 'is', 'happy', 'to', 'travel', 'scum']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on when
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on he's
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on on
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on his
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on own
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on and
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on even
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on sometimes
// DEBUG: ['class', 'when', "he's", 'on', 'his', 'own', 'and', 'even']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on deliberately
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on aims
// DEBUG: 134
// DEBUG: (129, 29)
// DEBUG: Operating on for
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on the
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['sometimes', 'deliberately', 'aims', 'for', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on But
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on today
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on the
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on .25
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on is
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on delayed
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on to
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on 6.44.
// DEBUG: ['TIMESTRING.', 'But', 'today', 'the', '.25', 'is', 'delayed', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['6.25']
// DEBUG: drawing cursor (173, 29)
// DEBUG: ['- Mark Lawson, The Deaths']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "Simon is happy to travel scum", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "class when he's on his own and even", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "sometimes deliberately aims for the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING. But today the .25 is delayed to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(173, 29, "6.25", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Mark Lawson, The Deaths", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("06:25 - The Professor looked at his watch. I looked at my watch. Six-twenty-five. Well past daybreak. Morning papers delivered. - Haruki Murakami, Hard Boiled Wonderland and the End of the World"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Professor
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on looked
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on his
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on watch.
// DEBUG: ['The', 'Professor', 'looked', 'at', 'his']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 17)
// DEBUG: Operating on looked
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on at
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on my
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on watch.
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['watch.', 'I', 'looked', 'at', 'my', 'watch.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on Well
// DEBUG: ['TIMESTRING.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on past
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on daybreak.
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on Morning
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on papers
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on delivered.
// DEBUG: ['Well', 'past', 'daybreak.', 'Morning', 'papers']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['Six-twenty-five']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Haruki Murakami']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "The Professor looked at his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "watch. I looked at my watch.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Well past daybreak. Morning papers", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Six-twenty-five", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Haruki Murakami", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 06:26 for 0 quotations:
    case 386:
      Serial.println(F("No quotes for 06:26"));
      return;

    // Codegen for 06:27 for 2 quotations:
    case 387:
      option = random(0, 2);
      Serial.print(F("2 options for 06:27. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("06:27 - 06:27:52 by the chip in her optic nerve; Case had been following her progress through Villa Straylight for over an hour, letting the endorphin analogue she'd taken blot out his hangover. - William Gibson, Neuromancer "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING:52
// DEBUG: Wrorking on the timestring
// DEBUG: 138
// DEBUG: (133, 5)
// DEBUG: Operating on by
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on the
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on chip
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on in
// DEBUG: ['TIMESTRING:52', 'by', 'the', 'chip']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on her
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on optic
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on nerve;
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on Case
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on had
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on been
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on following
// DEBUG: ['in', 'her', 'optic', 'nerve;', 'Case', 'had', 'been']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on her
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on progress
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on through
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on Villa
// DEBUG: 185
// DEBUG: (180, 29)
// DEBUG: Operating on Straylight
// DEBUG: ['following', 'her', 'progress', 'through', 'Villa']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on for
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on over
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on an
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on hour,
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on letting
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on the
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on endorphin
// DEBUG: ['Straylight', 'for', 'over', 'an', 'hour,', 'letting', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on analogue
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on she'd
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on taken
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on blot
// DEBUG: 178
// DEBUG: (173, 53)
// DEBUG: Operating on out
// DEBUG: 200
// DEBUG: (195, 53)
// DEBUG: Operating on his
// DEBUG: ['endorphin', 'analogue', "she'd", 'taken', 'blot', 'out']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on hangover.
// DEBUG: 78
// DEBUG: ['06:27']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Neuromancer']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING:52 by the chip", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "in her optic nerve; Case had been", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "following her progress through Villa", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Straylight for over an hour, letting the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "endorphin analogue she'd taken blot out", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "06:27", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Neuromancer", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("06:27 - Early in the morning, late in the century, Cricklewood Broadway. At 0627 hours on January 1, 1975, Alfred Archibald Jones was dressed in corduroy and sat in a fume-filled Cavalier Musketeer Estate, facedown on the steering wheel, hoping the judgment would not be too heavy upon him. - Zadie Smith, White Teeth "));
// DEBUG: (5, 5)
// DEBUG: Operating on Early
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on in
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on morning,
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on late
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on in
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on the
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on century,
// DEBUG: ['Early', 'in', 'the', 'morning,', 'late', 'in', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on Cricklewood
// DEBUG: 97
// DEBUG: (92, 17)
// DEBUG: Operating on Broadway.
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on At
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['century,', 'Cricklewood', 'Broadway.', 'At']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on on
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on January
// DEBUG: ['TIMESTRING', 'on']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on 1,
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on 1975,
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on Alfred
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on Archibald
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on Jones
// DEBUG: ['January', '1,', '1975,', 'Alfred', 'Archibald']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on was
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on dressed
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on in
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on corduroy
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on and
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on sat
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on in
// DEBUG: ['Jones', 'was', 'dressed', 'in', 'corduroy', 'and', 'sat']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 65)
// DEBUG: Operating on fume-filled
// DEBUG: 99
// DEBUG: (94, 65)
// DEBUG: Operating on Cavalier
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on Musketeer
// DEBUG: ['in', 'a', 'fume-filled', 'Cavalier']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on Estate,
// DEBUG: 70
// DEBUG: (65, 77)
// DEBUG: Operating on facedown
// DEBUG: 127
// DEBUG: (122, 77)
// DEBUG: Operating on on
// DEBUG: 142
// DEBUG: (137, 77)
// DEBUG: Operating on the
// DEBUG: 164
// DEBUG: (159, 77)
// DEBUG: Operating on steering
// DEBUG: ['Musketeer', 'Estate,', 'facedown', 'on', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (14, 89)
// DEBUG: Operating on wheel,
// DEBUG: 62
// DEBUG: (57, 89)
// DEBUG: Operating on hoping
// DEBUG: 105
// DEBUG: (100, 89)
// DEBUG: Operating on the
// DEBUG: 127
// DEBUG: (122, 89)
// DEBUG: Operating on judgment
// DEBUG: 184
// DEBUG: (179, 89)
// DEBUG: Operating on would
// DEBUG: ['steering', 'wheel,', 'hoping', 'the', 'judgment']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on not
// DEBUG: 38
// DEBUG: (33, 101)
// DEBUG: Operating on be
// DEBUG: 53
// DEBUG: (48, 101)
// DEBUG: Operating on too
// DEBUG: 75
// DEBUG: (70, 101)
// DEBUG: Operating on heavy
// DEBUG: 111
// DEBUG: (106, 101)
// DEBUG: Operating on upon
// DEBUG: 140
// DEBUG: (135, 101)
// DEBUG: Operating on him.
// DEBUG: 169
// DEBUG: ['0627 hours']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Zadie Smith, White Teeth ']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "Early in the morning, late in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "century, Cricklewood Broadway. At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "January 1, 1975, Alfred Archibald", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Jones was dressed in corduroy and sat", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "in a fume-filled Cavalier", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "Musketeer Estate, facedown on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "steering wheel, hoping the judgment", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "0627 hours", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Zadie Smith, White Teeth ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 06:28 for 0 quotations:
    case 388:
      Serial.println(F("No quotes for 06:28"));
      return;

    // Codegen for 06:29 for 1 quotations:
    case 389:
      Serial.println(F("Only one option for 06:29:"));
    Serial.println(F("06:29 - I sat up. There was a rug over me. I threw that off and got my feet on the floor. I scowled at a clock. The clock said a minute short of six-thirty. - Raymond Chandler, The Big Sleep"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on sat
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on up.
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on There
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on was
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on a
// DEBUG: 128
// DEBUG: (123, 5)
// DEBUG: Operating on rug
// DEBUG: 150
// DEBUG: (145, 5)
// DEBUG: Operating on over
// DEBUG: 179
// DEBUG: (174, 5)
// DEBUG: Operating on me.
// DEBUG: 201
// DEBUG: (196, 5)
// DEBUG: Operating on I
// DEBUG: 209
// DEBUG: (204, 5)
// DEBUG: Operating on threw
// DEBUG: ['I', 'sat', 'up.', 'There', 'was', 'a', 'rug', 'over', 'me.', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on off
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on and
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on got
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on my
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on feet
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on on
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on the
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on floor.
// DEBUG: ['threw', 'that', 'off', 'and', 'got', 'my', 'feet', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 29)
// DEBUG: Operating on scowled
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on at
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on a
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on clock.
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on The
// DEBUG: 163
// DEBUG: (158, 29)
// DEBUG: Operating on clock
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on said
// DEBUG: ['floor.', 'I', 'scowled', 'at', 'a', 'clock.', 'The', 'clock']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['said']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['a minute short of six-thirty']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- The Big Sleep']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "I sat up. There was a rug over me. I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "threw that off and got my feet on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "floor. I scowled at a clock. The clock", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "said", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "a minute short of six-thirty", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- The Big Sleep", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:30 for 7 quotations:
    case 390:
      option = random(0, 7);
      Serial.print(F("7 options for 06:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("06:30 - Inside now MJ ordered. She pushed the three of us into the hotel room, thern shut the soor. I glanced at the clock by the bed. 6.30 am. Why were they waking Mum and Dad up this early? - Sophie McKenzie, Girl Missing "));
// DEBUG: (5, 5)
// DEBUG: Operating on Inside
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on now
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on MJ
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on ordered.
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on She
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on pushed
// DEBUG: ['Inside', 'now', 'MJ', 'ordered.', 'She']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on three
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on of
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on us
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on into
// DEBUG: 134
// DEBUG: (129, 17)
// DEBUG: Operating on the
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on hotel
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on room,
// DEBUG: ['pushed', 'the', 'three', 'of', 'us', 'into', 'the', 'hotel']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on thern
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on shut
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on the
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on soor.
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on I
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on glanced
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on at
// DEBUG: ['room,', 'thern', 'shut', 'the', 'soor.', 'I', 'glanced']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on clock
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on by
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on bed.
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['at', 'the', 'clock', 'by', 'the', 'bed.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on Why
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on were
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on they
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on waking
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on Mum
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on and
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on Dad
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on up
// DEBUG: ['TIMESTRING', 'Why', 'were', 'they', 'waking', 'Mum', 'and', 'Dad']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on this
// DEBUG: 42
// DEBUG: (37, 65)
// DEBUG: Operating on early?
// DEBUG: 85
// DEBUG: ['6.30 am.']
// DEBUG: drawing cursor (132, 41)
// DEBUG: ['- Girl Missing']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "Inside now MJ ordered. She", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "pushed the three of us into the hotel", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "room, thern shut the soor. I glanced", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "at the clock by the bed.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "TIMESTRING Why were they waking Mum and Dad", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(132, 41, "6.30 am.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Girl Missing", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("06:30 - Daniel and the FBI men listened to the sounds of his mother waking up his father. Daniel still held the door-knob. He was ready to close the door the second he was told to. \"What time is it?\" said his father in a drugged voice. \"Oh my God, it's six-thirty,\" his mother said. - E.L. Doctorow, The Book of Daniel"));
// DEBUG: (5, 5)
// DEBUG: Operating on Daniel
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on and
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on FBI
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on men
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on listened
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on to
// DEBUG: ['Daniel', 'and', 'the', 'FBI', 'men', 'listened']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on sounds
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on of
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on his
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on mother
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on waking
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on up
// DEBUG: ['to', 'the', 'sounds', 'of', 'his', 'mother', 'waking']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on his
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on father.
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on Daniel
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on still
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on held
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on the
// DEBUG: ['up', 'his', 'father.', 'Daniel', 'still', 'held']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on door-knob.
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on He
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on was
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on ready
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on to
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on close
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on the
// DEBUG: ['the', 'door-knob.', 'He', 'was', 'ready', 'to', 'close']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on door
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on the
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on second
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on he
// DEBUG: 123
// DEBUG: (118, 53)
// DEBUG: Operating on was
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on told
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on to.
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on \"What
// DEBUG: ['the', 'door', 'the', 'second', 'he', 'was', 'told', 'to.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on time
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on is
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on it?\"
// DEBUG: 97
// DEBUG: (92, 65)
// DEBUG: Operating on said
// DEBUG: 126
// DEBUG: (121, 65)
// DEBUG: Operating on his
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on father
// DEBUG: 191
// DEBUG: (186, 65)
// DEBUG: Operating on in
// DEBUG: 206
// DEBUG: (201, 65)
// DEBUG: Operating on a
// DEBUG: ['\\"What', 'time', 'is', 'it?\\"', 'said', 'his', 'father', 'in']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (7, 77)
// DEBUG: Operating on drugged
// DEBUG: 62
// DEBUG: (57, 77)
// DEBUG: Operating on voice.
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on \"Oh
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on my
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on God,
// DEBUG: 178
// DEBUG: (173, 77)
// DEBUG: Operating on it's
// DEBUG: 207
// DEBUG: (202, 77)
// DEBUG: Operating on TIMESTRING,\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['a', 'drugged', 'voice.', '\\"Oh', 'my', 'God,', "it's"]
// DEBUG: drawing cursor (5, 77)
// DEBUG: 172
// DEBUG: (167, 89)
// DEBUG: Operating on his
// DEBUG: 194
// DEBUG: (189, 89)
// DEBUG: Operating on mother
// DEBUG: ['TIMESTRING,\\"', 'his']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on said.
// DEBUG: 53
// DEBUG: ['six-thirty']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- The Book of Daniel']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "Daniel and the FBI men listened", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "to the sounds of his mother waking", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "up his father. Daniel still held", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the door-knob. He was ready to close", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "the door the second he was told to.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "\"What time is it?\" said his father in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "a drugged voice. \"Oh my God, it's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "TIMESTRING,\" his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "six-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Book of Daniel", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("06:30 - It was six-thirty. When the baby's cry came, they could not pick it out, and Sam, eagerly thrusting his face amongst their ears, said, \"Listen, there, there, that's the new baby.\" He was red with delight and success. - Christina Stead, The Man Who Loved Children "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on When
// DEBUG: ['It', 'was', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on baby's
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on cry
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on came,
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on they
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on could
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on not
// DEBUG: ['When', 'the', "baby's", 'cry', 'came,', 'they', 'could']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on pick
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on it
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on out,
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on and
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on Sam,
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on eagerly
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on thrusting
// DEBUG: ['not', 'pick', 'it', 'out,', 'and', 'Sam,', 'eagerly']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on his
// DEBUG: 42
// DEBUG: (37, 41)
// DEBUG: Operating on face
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on amongst
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on their
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on ears,
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on said,
// DEBUG: ['thrusting', 'his', 'face', 'amongst', 'their', 'ears,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on \"Listen,
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on there,
// DEBUG: 123
// DEBUG: (118, 53)
// DEBUG: Operating on there,
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on that's
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on the
// DEBUG: ['said,', '\\"Listen,', 'there,', 'there,', "that's"]
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on new
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on baby.\"
// DEBUG: 86
// DEBUG: (81, 65)
// DEBUG: Operating on He
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on was
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on red
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on with
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on delight
// DEBUG: ['the', 'new', 'baby.\\"', 'He', 'was', 'red', 'with']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on success.
// DEBUG: 97
// DEBUG: ['six-thirty']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- The Man Who Loved Children']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "When the baby's cry came, they could", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "not pick it out, and Sam, eagerly", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "thrusting his face amongst their ears,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "said, \"Listen, there, there, that's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "the new baby.\" He was red with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 5, "six-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- The Man Who Loved Children", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("06:30 - It was very cold sitting in the truck and after a while he got out and walked around and flailed at himself with his arms and stamped his boots. Then he got back in the truck. The bar clock said six-thirty...By eight-thirty he’d decided that it that was it would take to make the cab arrive then that’s what he would do and he started the engine. - Cormac McCarthy, Cities of the Plain"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on very
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on cold
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on sitting
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on in
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on the
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on truck
// DEBUG: ['It', 'was', 'very', 'cold', 'sitting', 'in', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on after
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on a
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on while
// DEBUG: 118
// DEBUG: (113, 17)
// DEBUG: Operating on he
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on got
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on out
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on and
// DEBUG: 199
// DEBUG: (194, 17)
// DEBUG: Operating on walked
// DEBUG: ['truck', 'and', 'after', 'a', 'while', 'he', 'got', 'out', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on around
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on and
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on flailed
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on at
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on himself
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on with
// DEBUG: ['walked', 'around', 'and', 'flailed', 'at', 'himself']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on his
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on arms
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on and
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on stamped
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on his
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on boots.
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on Then
// DEBUG: ['with', 'his', 'arms', 'and', 'stamped', 'his', 'boots.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on he
// DEBUG: 30
// DEBUG: (25, 53)
// DEBUG: Operating on got
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on back
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on in
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on the
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on truck.
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on The
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on bar
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on clock
// DEBUG: ['Then', 'he', 'got', 'back', 'in', 'the', 'truck.', 'The', 'bar']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on said
// DEBUG: 45
// DEBUG: (40, 65)
// DEBUG: Operating on TIMESTRING...By
// DEBUG: Wrorking on the timestring
// DEBUG: ['clock', 'said']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (21, 77)
// DEBUG: Operating on eight-thirty
// DEBUG: 111
// DEBUG: (106, 77)
// DEBUG: Operating on he’d
// DEBUG: 140
// DEBUG: (135, 77)
// DEBUG: Operating on decided
// DEBUG: 190
// DEBUG: (185, 77)
// DEBUG: Operating on that
// DEBUG: ['TIMESTRING...By', 'eight-thirty', 'he’d', 'decided']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on that
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on was
// DEBUG: 81
// DEBUG: (76, 89)
// DEBUG: Operating on it
// DEBUG: 96
// DEBUG: (91, 89)
// DEBUG: Operating on would
// DEBUG: 132
// DEBUG: (127, 89)
// DEBUG: Operating on take
// DEBUG: 161
// DEBUG: (156, 89)
// DEBUG: Operating on to
// DEBUG: 176
// DEBUG: (171, 89)
// DEBUG: Operating on make
// DEBUG: 205
// DEBUG: (200, 89)
// DEBUG: Operating on the
// DEBUG: ['that', 'it', 'that', 'was', 'it', 'would', 'take', 'to', 'make']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on cab
// DEBUG: 36
// DEBUG: (31, 101)
// DEBUG: Operating on arrive
// DEBUG: 79
// DEBUG: (74, 101)
// DEBUG: Operating on then
// DEBUG: 108
// DEBUG: (103, 101)
// DEBUG: Operating on that’s
// DEBUG: 151
// DEBUG: (146, 101)
// DEBUG: Operating on what
// DEBUG: 180
// DEBUG: (175, 101)
// DEBUG: Operating on he
// DEBUG: 195
// DEBUG: (190, 101)
// DEBUG: Operating on would
// DEBUG: ['the', 'cab', 'arrive', 'then', 'that’s', 'what', 'he']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on do
// DEBUG: 31
// DEBUG: (26, 113)
// DEBUG: Operating on and
// DEBUG: 53
// DEBUG: (48, 113)
// DEBUG: Operating on he
// DEBUG: 68
// DEBUG: (63, 113)
// DEBUG: Operating on started
// DEBUG: 118
// DEBUG: (113, 113)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 113)
// DEBUG: Operating on engine.
// DEBUG: 190
// DEBUG: ['six-thirty']
// DEBUG: drawing cursor (40, 65)
// DEBUG: ['- Cities of the Plain']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "It was very cold sitting in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "truck and after a while he got out and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "walked around and flailed at himself", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "with his arms and stamped his boots.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Then he got back in the truck. The bar", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "clock said", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "TIMESTRING...By eight-thirty he’d decided", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "that it that was it would take to make", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "the cab arrive then that’s what he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(40, 65, "six-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Cities of the Plain", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("06:30 - Nervously she jumped up and listened; the house itself was as still as ever; the footsteps had retreated. Through her wide-open window the brilliant rays of the morning sun were flooding her room with light. She looked up at the clock; it was half-past six—too early for any of the household to be already astir. - Baroness Orczy, The Scarlet Pimpernel "));
// DEBUG: (5, 5)
// DEBUG: Operating on Nervously
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on she
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on jumped
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on up
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on and
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on listened;
// DEBUG: ['Nervously', 'she', 'jumped', 'up', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on the
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on house
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on itself
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on was
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on as
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on still
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on as
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on ever;
// DEBUG: ['listened;', 'the', 'house', 'itself', 'was', 'as', 'still', 'as']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on footsteps
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on had
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on retreated.
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on Through
// DEBUG: ['ever;', 'the', 'footsteps', 'had', 'retreated.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on her
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on wide-open
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on window
// DEBUG: 147
// DEBUG: (142, 41)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on brilliant
// DEBUG: ['Through', 'her', 'wide-open', 'window', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on rays
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on of
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on the
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on morning
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on sun
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on were
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on flooding
// DEBUG: ['brilliant', 'rays', 'of', 'the', 'morning', 'sun', 'were']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on her
// DEBUG: 41
// DEBUG: (36, 65)
// DEBUG: Operating on room
// DEBUG: 70
// DEBUG: (65, 65)
// DEBUG: Operating on with
// DEBUG: 99
// DEBUG: (94, 65)
// DEBUG: Operating on light.
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on She
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on looked
// DEBUG: 207
// DEBUG: (202, 65)
// DEBUG: Operating on up
// DEBUG: ['flooding', 'her', 'room', 'with', 'light.', 'She', 'looked']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on at
// DEBUG: 28
// DEBUG: (23, 77)
// DEBUG: Operating on the
// DEBUG: 50
// DEBUG: (45, 77)
// DEBUG: Operating on clock;
// DEBUG: 93
// DEBUG: (88, 77)
// DEBUG: Operating on it
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on was
// DEBUG: 130
// DEBUG: (125, 77)
// DEBUG: Operating on TIMESTRING—too
// DEBUG: Wrorking on the timestring
// DEBUG: ['up', 'at', 'the', 'clock;', 'it', 'was']
// DEBUG: drawing cursor (5, 77)
// DEBUG: 200
// DEBUG: (195, 89)
// DEBUG: Operating on early
// DEBUG: ['TIMESTRING—too']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on for
// DEBUG: 38
// DEBUG: (33, 101)
// DEBUG: Operating on any
// DEBUG: 60
// DEBUG: (55, 101)
// DEBUG: Operating on of
// DEBUG: 75
// DEBUG: (70, 101)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 101)
// DEBUG: Operating on household
// DEBUG: 161
// DEBUG: (156, 101)
// DEBUG: Operating on to
// DEBUG: 176
// DEBUG: (171, 101)
// DEBUG: Operating on be
// DEBUG: 191
// DEBUG: (186, 101)
// DEBUG: Operating on already
// DEBUG: ['early', 'for', 'any', 'of', 'the', 'household', 'to', 'be']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (13, 113)
// DEBUG: Operating on astir.
// DEBUG: 61
// DEBUG: ['half-past six']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- The Scarlet Pimpernel']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "Nervously she jumped up and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "listened; the house itself was as still as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "ever; the footsteps had retreated.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Through her wide-open window the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "brilliant rays of the morning sun were", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "flooding her room with light. She looked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "up at the clock; it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "TIMESTRING—too", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "early for any of the household to be", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "half-past six", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- The Scarlet Pimpernel", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("06:30 - Six-thirty was clearly a preposterous time and he, the client, obviously hadn't meant it seriously. A civilised six-thirty for twelve noon was almost certainly what he had in mind, and if he wanted to cut up rough about it, Dirk would have no option but to start handing out some serious statistics. Nobody got murdered before lunch. But nobody. People weren't up to it. You needed a good lunch to get both the blood-sugar and blood-lust levels up. Dirk had the figures to prove it. - Douglas Adams, The Long Dark Tea-time of the Soul "));
// DEBUG: (5, 5)
// DEBUG: Operating on Six-thirty
// DEBUG: 81
// DEBUG: (76, 5)
// DEBUG: Operating on was
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on clearly
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on a
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on preposterous
// DEBUG: ['Six-thirty', 'was', 'clearly', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (18, 17)
// DEBUG: Operating on time
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on and
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on he,
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on the
// DEBUG: 118
// DEBUG: (113, 17)
// DEBUG: Operating on client,
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on obviously
// DEBUG: ['preposterous', 'time', 'and', 'he,', 'the', 'client,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on hadn't
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on meant
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on it
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on seriously.
// DEBUG: 185
// DEBUG: (180, 29)
// DEBUG: Operating on A
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on civilised
// DEBUG: ['obviously', "hadn't", 'meant', 'it', 'seriously.', 'A']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 162
// DEBUG: (157, 41)
// DEBUG: Operating on for
// DEBUG: 184
// DEBUG: (179, 41)
// DEBUG: Operating on twelve
// DEBUG: ['civilised', 'TIMESTRING', 'for']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on noon
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on was
// DEBUG: 68
// DEBUG: (63, 53)
// DEBUG: Operating on almost
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on certainly
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on what
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on he
// DEBUG: ['twelve', 'noon', 'was', 'almost', 'certainly', 'what']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on had
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on in
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on mind,
// DEBUG: 86
// DEBUG: (81, 65)
// DEBUG: Operating on and
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on if
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on he
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on wanted
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on to
// DEBUG: 196
// DEBUG: (191, 65)
// DEBUG: Operating on cut
// DEBUG: ['he', 'had', 'in', 'mind,', 'and', 'if', 'he', 'wanted', 'to']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on up
// DEBUG: 29
// DEBUG: (24, 77)
// DEBUG: Operating on rough
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on about
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on it,
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on Dirk
// DEBUG: 152
// DEBUG: (147, 77)
// DEBUG: Operating on would
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on have
// DEBUG: ['cut', 'up', 'rough', 'about', 'it,', 'Dirk', 'would']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on no
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on option
// DEBUG: 73
// DEBUG: (68, 89)
// DEBUG: Operating on but
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on to
// DEBUG: 110
// DEBUG: (105, 89)
// DEBUG: Operating on start
// DEBUG: 146
// DEBUG: (141, 89)
// DEBUG: Operating on handing
// DEBUG: 196
// DEBUG: (191, 89)
// DEBUG: Operating on out
// DEBUG: ['have', 'no', 'option', 'but', 'to', 'start', 'handing']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on some
// DEBUG: 43
// DEBUG: (38, 101)
// DEBUG: Operating on serious
// DEBUG: 93
// DEBUG: (88, 101)
// DEBUG: Operating on statistics.
// DEBUG: 171
// DEBUG: (166, 101)
// DEBUG: Operating on Nobody
// DEBUG: ['out', 'some', 'serious', 'statistics.']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on got
// DEBUG: 39
// DEBUG: (34, 113)
// DEBUG: Operating on murdered
// DEBUG: 96
// DEBUG: (91, 113)
// DEBUG: Operating on before
// DEBUG: 139
// DEBUG: (134, 113)
// DEBUG: Operating on lunch.
// DEBUG: 182
// DEBUG: (177, 113)
// DEBUG: Operating on But
// DEBUG: 204
// DEBUG: (199, 113)
// DEBUG: Operating on nobody.
// DEBUG: ['Nobody', 'got', 'murdered', 'before', 'lunch.', 'But']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (13, 125)
// DEBUG: Operating on People
// DEBUG: 61
// DEBUG: (56, 125)
// DEBUG: Operating on weren't
// DEBUG: 111
// DEBUG: (106, 125)
// DEBUG: Operating on up
// DEBUG: 126
// DEBUG: (121, 125)
// DEBUG: Operating on to
// DEBUG: 141
// DEBUG: (136, 125)
// DEBUG: Operating on it.
// DEBUG: 163
// DEBUG: (158, 125)
// DEBUG: Operating on You
// DEBUG: 185
// DEBUG: (180, 125)
// DEBUG: Operating on needed
// DEBUG: ['nobody.', 'People', "weren't", 'up', 'to', 'it.', 'You']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (12, 137)
// DEBUG: Operating on a
// DEBUG: 25
// DEBUG: (20, 137)
// DEBUG: Operating on good
// DEBUG: 54
// DEBUG: (49, 137)
// DEBUG: Operating on lunch
// DEBUG: 90
// DEBUG: (85, 137)
// DEBUG: Operating on to
// DEBUG: 105
// DEBUG: (100, 137)
// DEBUG: Operating on get
// DEBUG: 127
// DEBUG: (122, 137)
// DEBUG: Operating on both
// DEBUG: 156
// DEBUG: (151, 137)
// DEBUG: Operating on the
// DEBUG: 178
// DEBUG: (173, 137)
// DEBUG: Operating on blood-sugar
// DEBUG: ['needed', 'a', 'good', 'lunch', 'to', 'get', 'both', 'the']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (17, 149)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 149)
// DEBUG: Operating on blood-lust
// DEBUG: 115
// DEBUG: (110, 149)
// DEBUG: Operating on levels
// DEBUG: 158
// DEBUG: (153, 149)
// DEBUG: Operating on up.
// DEBUG: 180
// DEBUG: (175, 149)
// DEBUG: Operating on Dirk
// DEBUG: 209
// DEBUG: (204, 149)
// DEBUG: Operating on had
// DEBUG: ['blood-sugar', 'and', 'blood-lust', 'levels', 'up.', 'Dirk']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (9, 161)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 161)
// DEBUG: Operating on figures
// DEBUG: 86
// DEBUG: (81, 161)
// DEBUG: Operating on to
// DEBUG: 101
// DEBUG: (96, 161)
// DEBUG: Operating on prove
// DEBUG: 137
// DEBUG: (132, 161)
// DEBUG: Operating on it.
// DEBUG: 159
// DEBUG: ['six-thirty']
// DEBUG: drawing cursor (15, 41)
// DEBUG: ['- Douglas Adams']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Six-thirty was clearly a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "preposterous time and he, the client,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "obviously hadn't meant it seriously. A", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "civilised TIMESTRING for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "twelve noon was almost certainly what", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "he had in mind, and if he wanted to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "cut up rough about it, Dirk would", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "have no option but to start handing", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "out some serious statistics.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "Nobody got murdered before lunch. But", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "nobody. People weren't up to it. You", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "needed a good lunch to get both the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "blood-sugar and blood-lust levels up. Dirk", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(15, 41, "six-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Douglas Adams", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("06:30 - Sometimes they were hooded carts, sometimes they were just open carts, with planks for seats, on which sat twelve cloaked and bonneted women, six a side, squeezed together, for the interminable journey. As late as 1914 I knew the carrier of Croydon-cum-Clopton, twelve miles from Cambridge; his cart started at 6.30 in the morning and got back at about ten at night. Though he was not old, he could neither read nor write; but he took commissions all along the road - a packet of needles for Mrs. This, and a new teapot for Mrs. That - and delivered them all correctly on the way back. - Gwen Raverat, Period Piece "));
// DEBUG: (5, 5)
// DEBUG: Operating on Sometimes
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on they
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on were
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on hooded
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on carts,
// DEBUG: ['Sometimes', 'they', 'were', 'hooded']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on sometimes
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on they
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on were
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on just
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on open
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on carts,
// DEBUG: ['carts,', 'sometimes', 'they', 'were', 'just', 'open']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on with
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on planks
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on for
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on seats,
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on on
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on which
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on sat
// DEBUG: ['carts,', 'with', 'planks', 'for', 'seats,', 'on', 'which']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on twelve
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on cloaked
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on and
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on bonneted
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on women,
// DEBUG: ['sat', 'twelve', 'cloaked', 'and', 'bonneted']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on six
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on a
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on side,
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on squeezed
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on together,
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on for
// DEBUG: ['women,', 'six', 'a', 'side,', 'squeezed', 'together,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on interminable
// DEBUG: 121
// DEBUG: (116, 65)
// DEBUG: Operating on journey.
// DEBUG: 178
// DEBUG: (173, 65)
// DEBUG: Operating on As
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on late
// DEBUG: ['for', 'the', 'interminable', 'journey.', 'As']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on as
// DEBUG: 30
// DEBUG: (25, 77)
// DEBUG: Operating on 1914
// DEBUG: 59
// DEBUG: (54, 77)
// DEBUG: Operating on I
// DEBUG: 67
// DEBUG: (62, 77)
// DEBUG: Operating on knew
// DEBUG: 96
// DEBUG: (91, 77)
// DEBUG: Operating on the
// DEBUG: 118
// DEBUG: (113, 77)
// DEBUG: Operating on carrier
// DEBUG: 168
// DEBUG: (163, 77)
// DEBUG: Operating on of
// DEBUG: 183
// DEBUG: (178, 77)
// DEBUG: Operating on Croydon-cum-Clopton,
// DEBUG: ['late', 'as', '1914', 'I', 'knew', 'the', 'carrier', 'of']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (26, 89)
// DEBUG: Operating on twelve
// DEBUG: 74
// DEBUG: (69, 89)
// DEBUG: Operating on miles
// DEBUG: 110
// DEBUG: (105, 89)
// DEBUG: Operating on from
// DEBUG: 139
// DEBUG: (134, 89)
// DEBUG: Operating on Cambridge;
// DEBUG: 210
// DEBUG: (205, 89)
// DEBUG: Operating on his
// DEBUG: ['Croydon-cum-Clopton,', 'twelve', 'miles', 'from', 'Cambridge;']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on cart
// DEBUG: 43
// DEBUG: (38, 101)
// DEBUG: Operating on started
// DEBUG: 93
// DEBUG: (88, 101)
// DEBUG: Operating on at
// DEBUG: 108
// DEBUG: (103, 101)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 208
// DEBUG: (203, 101)
// DEBUG: Operating on in
// DEBUG: ['his', 'cart', 'started', 'at', 'TIMESTRING']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (8, 113)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 113)
// DEBUG: Operating on morning
// DEBUG: 85
// DEBUG: (80, 113)
// DEBUG: Operating on and
// DEBUG: 107
// DEBUG: (102, 113)
// DEBUG: Operating on got
// DEBUG: 129
// DEBUG: (124, 113)
// DEBUG: Operating on back
// DEBUG: 158
// DEBUG: (153, 113)
// DEBUG: Operating on at
// DEBUG: 173
// DEBUG: (168, 113)
// DEBUG: Operating on about
// DEBUG: 209
// DEBUG: (204, 113)
// DEBUG: Operating on ten
// DEBUG: ['in', 'the', 'morning', 'and', 'got', 'back', 'at', 'about']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (9, 125)
// DEBUG: Operating on at
// DEBUG: 29
// DEBUG: (24, 125)
// DEBUG: Operating on night.
// DEBUG: 72
// DEBUG: (67, 125)
// DEBUG: Operating on Though
// DEBUG: 115
// DEBUG: (110, 125)
// DEBUG: Operating on he
// DEBUG: 130
// DEBUG: (125, 125)
// DEBUG: Operating on was
// DEBUG: 152
// DEBUG: (147, 125)
// DEBUG: Operating on not
// DEBUG: 174
// DEBUG: (169, 125)
// DEBUG: Operating on old,
// DEBUG: 203
// DEBUG: (198, 125)
// DEBUG: Operating on he
// DEBUG: ['ten', 'at', 'night.', 'Though', 'he', 'was', 'not', 'old,']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (8, 137)
// DEBUG: Operating on could
// DEBUG: 49
// DEBUG: (44, 137)
// DEBUG: Operating on neither
// DEBUG: 99
// DEBUG: (94, 137)
// DEBUG: Operating on read
// DEBUG: 128
// DEBUG: (123, 137)
// DEBUG: Operating on nor
// DEBUG: 150
// DEBUG: (145, 137)
// DEBUG: Operating on write;
// DEBUG: 193
// DEBUG: (188, 137)
// DEBUG: Operating on but
// DEBUG: ['he', 'could', 'neither', 'read', 'nor', 'write;']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on he
// DEBUG: 29
// DEBUG: (24, 149)
// DEBUG: Operating on took
// DEBUG: 58
// DEBUG: (53, 149)
// DEBUG: Operating on commissions
// DEBUG: 136
// DEBUG: (131, 149)
// DEBUG: Operating on all
// DEBUG: 158
// DEBUG: (153, 149)
// DEBUG: Operating on along
// DEBUG: 194
// DEBUG: (189, 149)
// DEBUG: Operating on the
// DEBUG: ['but', 'he', 'took', 'commissions', 'all', 'along']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (9, 161)
// DEBUG: Operating on road
// DEBUG: 43
// DEBUG: (38, 161)
// DEBUG: Operating on -
// DEBUG: 51
// DEBUG: (46, 161)
// DEBUG: Operating on a
// DEBUG: 59
// DEBUG: (54, 161)
// DEBUG: Operating on packet
// DEBUG: 102
// DEBUG: (97, 161)
// DEBUG: Operating on of
// DEBUG: 117
// DEBUG: (112, 161)
// DEBUG: Operating on needles
// DEBUG: 167
// DEBUG: (162, 161)
// DEBUG: Operating on for
// DEBUG: 189
// DEBUG: (184, 161)
// DEBUG: Operating on Mrs.
// DEBUG: ['the', 'road', '-', 'a', 'packet', 'of', 'needles', 'for']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (10, 173)
// DEBUG: Operating on This,
// DEBUG: 51
// DEBUG: (46, 173)
// DEBUG: Operating on and
// DEBUG: 73
// DEBUG: (68, 173)
// DEBUG: Operating on a
// DEBUG: 81
// DEBUG: (76, 173)
// DEBUG: Operating on new
// DEBUG: 103
// DEBUG: (98, 173)
// DEBUG: Operating on teapot
// DEBUG: 146
// DEBUG: (141, 173)
// DEBUG: Operating on for
// DEBUG: 168
// DEBUG: (163, 173)
// DEBUG: Operating on Mrs.
// DEBUG: 197
// DEBUG: (192, 173)
// DEBUG: Operating on That
// DEBUG: ['Mrs.', 'This,', 'and', 'a', 'new', 'teapot', 'for', 'Mrs.']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (10, 185)
// DEBUG: Operating on -
// DEBUG: 23
// DEBUG: (18, 185)
// DEBUG: Operating on and
// DEBUG: 45
// DEBUG: (40, 185)
// DEBUG: Operating on delivered
// DEBUG: 109
// DEBUG: (104, 185)
// DEBUG: Operating on them
// DEBUG: 138
// DEBUG: (133, 185)
// DEBUG: Operating on all
// DEBUG: 160
// DEBUG: (155, 185)
// DEBUG: Operating on correctly
// DEBUG: ['That', '-', 'and', 'delivered', 'them', 'all']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (15, 197)
// DEBUG: Operating on on
// DEBUG: 35
// DEBUG: (30, 197)
// DEBUG: Operating on the
// DEBUG: 57
// DEBUG: (52, 197)
// DEBUG: Operating on way
// DEBUG: 79
// DEBUG: (74, 197)
// DEBUG: Operating on back.
// DEBUG: 115
// DEBUG: ['6.30']
// DEBUG: drawing cursor (103, 101)
// DEBUG: ['- Gwen Raverat, Period Piece ']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Sometimes they were hooded", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "carts, sometimes they were just open", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "carts, with planks for seats, on which", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "sat twelve cloaked and bonneted", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "women, six a side, squeezed together,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "for the interminable journey. As", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "late as 1914 I knew the carrier of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "Croydon-cum-Clopton, twelve miles from Cambridge;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "his cart started at TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "in the morning and got back at about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "ten at night. Though he was not old,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "he could neither read nor write;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "but he took commissions all along", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "the road - a packet of needles for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "Mrs. This, and a new teapot for Mrs.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "That - and delivered them all", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(103, 101, "6.30", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Gwen Raverat, Period Piece ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 06:31 for 0 quotations:
    case 391:
      Serial.println(F("No quotes for 06:31"));
      return;

    // Codegen for 06:32 for 1 quotations:
    case 392:
      Serial.println(F("Only one option for 06:32:"));
    Serial.println(F("06:32 - The familiar radium numerals on my left wrist confirmed the clock tower. It was twenty-eight minutes to seven. I seemed to be filling a set of loud maroon pajamas which were certainly not mine. My vis-a-vis was wearing a little number in yellow. - Dana Chambers, Too Like the Lightning"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on familiar
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on radium
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on numerals
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on on
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on my
// DEBUG: ['The', 'familiar', 'radium', 'numerals', 'on']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on left
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on wrist
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on confirmed
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on the
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on clock
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on tower.
// DEBUG: ['my', 'left', 'wrist', 'confirmed', 'the', 'clock']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on It
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on was
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['tower.', 'It', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on I
// DEBUG: 30
// DEBUG: (25, 53)
// DEBUG: Operating on seemed
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on to
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on be
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on filling
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on a
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on set
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on of
// DEBUG: 198
// DEBUG: (193, 53)
// DEBUG: Operating on loud
// DEBUG: ['TIMESTRING.', 'I', 'seemed', 'to', 'be', 'filling', 'a', 'set', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on maroon
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on pajamas
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on which
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on were
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on certainly
// DEBUG: ['loud', 'maroon', 'pajamas', 'which', 'were']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on not
// DEBUG: 42
// DEBUG: (37, 77)
// DEBUG: Operating on mine.
// DEBUG: 78
// DEBUG: (73, 77)
// DEBUG: Operating on My
// DEBUG: 93
// DEBUG: (88, 77)
// DEBUG: Operating on vis-a-vis
// DEBUG: 157
// DEBUG: (152, 77)
// DEBUG: Operating on was
// DEBUG: 179
// DEBUG: (174, 77)
// DEBUG: Operating on wearing
// DEBUG: ['certainly', 'not', 'mine.', 'My', 'vis-a-vis', 'was']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on a
// DEBUG: 26
// DEBUG: (21, 89)
// DEBUG: Operating on little
// DEBUG: 69
// DEBUG: (64, 89)
// DEBUG: Operating on number
// DEBUG: 112
// DEBUG: (107, 89)
// DEBUG: Operating on in
// DEBUG: 127
// DEBUG: (122, 89)
// DEBUG: Operating on yellow.
// DEBUG: 177
// DEBUG: ['twenty-eight minutes to seven']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Too Like the Lightning']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "The familiar radium numerals on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "my left wrist confirmed the clock", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "tower. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING. I seemed to be filling a set of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "loud maroon pajamas which were", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "certainly not mine. My vis-a-vis was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "twenty-eight minutes to seven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Too Like the Lightning", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:33 for 1 quotations:
    case 393:
      Serial.println(F("Only one option for 06:33:"));
    Serial.println(F("06:33 - Woke 6.33 a.m. Last session with Anderson. He made it plain he's seen enough of me, and from now on I'm better alone. To sleep 8:00? (These count-downs terrify me.) He paused, then added: Goodbye, Eniwetok. - JG Ballard, The Voices of Time "));
// DEBUG: (5, 5)
// DEBUG: Operating on Woke
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on Last
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on session
// DEBUG: ['Woke', 'TIMESTRING', 'Last']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on with
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on Anderson.
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on He
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on made
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on it
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on plain
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on he's
// DEBUG: ['session', 'with', 'Anderson.', 'He', 'made', 'it', 'plain']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on seen
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on enough
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on of
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on me,
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on and
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on from
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on now
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on on
// DEBUG: ["he's", 'seen', 'enough', 'of', 'me,', 'and', 'from', 'now']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on I'm
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on better
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on alone.
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on To
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on sleep
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on 8:00?
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on (These
// DEBUG: ['on', "I'm", 'better', 'alone.', 'To', 'sleep', '8:00?']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on count-downs
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on terrify
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on me.)
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on He
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on paused,
// DEBUG: ['(These', 'count-downs', 'terrify', 'me.)', 'He']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on then
// DEBUG: 47
// DEBUG: (42, 65)
// DEBUG: Operating on added:
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on Goodbye,
// DEBUG: 147
// DEBUG: (142, 65)
// DEBUG: Operating on Eniwetok.
// DEBUG: 211
// DEBUG: ['6.33 a.m.']
// DEBUG: drawing cursor (34, 5)
// DEBUG: ['- The Voices of Time']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "Woke TIMESTRING Last", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "session with Anderson. He made it plain", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "he's seen enough of me, and from now", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "on I'm better alone. To sleep 8:00?", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "(These count-downs terrify me.) He", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(34, 5, "6.33 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- The Voices of Time", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:34 for 0 quotations:
    case 394:
      Serial.println(F("No quotes for 06:34"));
      return;

    // Codegen for 06:35 for 1 quotations:
    case 395:
      Serial.println(F("Only one option for 06:35:"));
    Serial.println(F("06:35 - My watch lay on the dressing-table close by; glancing at it, I saw that the time was twenty-five minutes to seven. I had been told that the family breakfasted at nine, so I had nearly two-and-a-half hours of leisure. Of course, I would go out, and enjoy the freshness of the morning. - J.S. Fletcher, Ravensdene Court"));
// DEBUG: (5, 5)
// DEBUG: Operating on My
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on watch
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on lay
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on on
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on the
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on dressing-table
// DEBUG: ['My', 'watch', 'lay', 'on', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (20, 17)
// DEBUG: Operating on close
// DEBUG: 61
// DEBUG: (56, 17)
// DEBUG: Operating on by;
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on glancing
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on at
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on it,
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on I
// DEBUG: 185
// DEBUG: (180, 17)
// DEBUG: Operating on saw
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on that
// DEBUG: ['dressing-table', 'close', 'by;', 'glancing', 'at', 'it,', 'I', 'saw']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on time
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on was
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['that', 'the', 'time', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on I
// DEBUG: 30
// DEBUG: (25, 53)
// DEBUG: Operating on had
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on been
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on told
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on that
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on the
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on family
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on breakfasted
// DEBUG: ['TIMESTRING.', 'I', 'had', 'been', 'told', 'that', 'the', 'family']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on at
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on nine,
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on so
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on I
// DEBUG: 96
// DEBUG: (91, 65)
// DEBUG: Operating on had
// DEBUG: 118
// DEBUG: (113, 65)
// DEBUG: Operating on nearly
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on two-and-a-half
// DEBUG: ['breakfasted', 'at', 'nine,', 'so', 'I', 'had', 'nearly']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (20, 77)
// DEBUG: Operating on hours
// DEBUG: 61
// DEBUG: (56, 77)
// DEBUG: Operating on of
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on leisure.
// DEBUG: 133
// DEBUG: (128, 77)
// DEBUG: Operating on Of
// DEBUG: 148
// DEBUG: (143, 77)
// DEBUG: Operating on course,
// DEBUG: 198
// DEBUG: (193, 77)
// DEBUG: Operating on I
// DEBUG: 206
// DEBUG: (201, 77)
// DEBUG: Operating on would
// DEBUG: ['two-and-a-half', 'hours', 'of', 'leisure.', 'Of', 'course,', 'I']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on go
// DEBUG: 31
// DEBUG: (26, 89)
// DEBUG: Operating on out,
// DEBUG: 60
// DEBUG: (55, 89)
// DEBUG: Operating on and
// DEBUG: 82
// DEBUG: (77, 89)
// DEBUG: Operating on enjoy
// DEBUG: 118
// DEBUG: (113, 89)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 89)
// DEBUG: Operating on freshness
// DEBUG: 204
// DEBUG: (199, 89)
// DEBUG: Operating on of
// DEBUG: ['would', 'go', 'out,', 'and', 'enjoy', 'the', 'freshness']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 101)
// DEBUG: Operating on morning.
// DEBUG: 92
// DEBUG: ['twenty-five minutes to seven']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Ravensdene Court']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "My watch lay on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "dressing-table close by; glancing at it, I saw", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "that the time was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING. I had been told that the family", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "breakfasted at nine, so I had nearly", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "two-and-a-half hours of leisure. Of course, I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "would go out, and enjoy the freshness", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "twenty-five minutes to seven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- Ravensdene Court", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:36 for 1 quotations:
    case 396:
      Serial.println(F("Only one option for 06:36:"));
    Serial.println(F("06:36 - Kaldren pursues me like luminescent shadow. He has chalked up on the gateway '96,688,365,498,702'. Should confuse the mail man. Woke 9:05. To sleep 6:36. - JG Ballard, The Voices of Time "));
// DEBUG: (5, 5)
// DEBUG: Operating on Kaldren
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on pursues
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on me
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on like
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on luminescent
// DEBUG: ['Kaldren', 'pursues', 'me', 'like']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on shadow.
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on He
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on has
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on chalked
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on up
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on on
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on the
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on gateway
// DEBUG: ['luminescent', 'shadow.', 'He', 'has', 'chalked', 'up', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on '96,688,365,498,702'.
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on Should
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on confuse
// DEBUG: ['gateway', "'96,688,365,498,702'.", 'Should']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on mail
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on man.
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on Woke
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on 9:05.
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on To
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on sleep
// DEBUG: ['confuse', 'the', 'mail', 'man.', 'Woke', '9:05.', 'To']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 123
// DEBUG: ['6:36']
// DEBUG: drawing cursor (11, 53)
// DEBUG: ['- The Voices of Time']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "Kaldren pursues me like", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "luminescent shadow. He has chalked up on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "gateway '96,688,365,498,702'. Should", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "confuse the mail man. Woke 9:05. To", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(11, 53, "6:36", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- The Voices of Time", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:37 for 1 quotations:
    case 397:
      Serial.println(F("Only one option for 06:37:"));
    Serial.println(F("06:37 - The dashboard clock said 6.37am Town frowned, and checked his wristwatch, which blinked that it was 1.58pm. Great, he thought. I was either up on that tree for eight hours, or for minus a minute. - Neil Gaiman, American Gods"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on dashboard
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on clock
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on said
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'dashboard', 'clock', 'said']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on Town
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on frowned,
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on and
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on checked
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on his
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on wristwatch,
// DEBUG: ['TIMESTRING', 'Town', 'frowned,', 'and', 'checked', 'his']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on which
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on blinked
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on that
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on it
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on was
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on 1.58pm.
// DEBUG: ['wristwatch,', 'which', 'blinked', 'that', 'it', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on Great,
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on he
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on thought.
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on I
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on was
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on either
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on up
// DEBUG: ['1.58pm.', 'Great,', 'he', 'thought.', 'I', 'was', 'either']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on on
// DEBUG: 28
// DEBUG: (23, 53)
// DEBUG: Operating on that
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on tree
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on for
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on eight
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on hours,
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on or
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on for
// DEBUG: ['up', 'on', 'that', 'tree', 'for', 'eight', 'hours,', 'or']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on minus
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on a
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on minute.
// DEBUG: 108
// DEBUG: ['6.37am']
// DEBUG: drawing cursor (156, 5)
// DEBUG: ['- Neil Gaiman, American Gods']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "The dashboard clock said", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING Town frowned, and checked his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "wristwatch, which blinked that it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "1.58pm. Great, he thought. I was either", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "up on that tree for eight hours, or", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(156, 5, "6.37am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Neil Gaiman, American Gods", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:38 for 1 quotations:
    case 398:
      Serial.println(F("Only one option for 06:38:"));
    Serial.println(F("06:38 - The clock on the dashboard said it was 6.38am. He left the keys in the car, and walked toward the tree. - Neil Gaiman, American Gods"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on clock
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on on
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on dashboard
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on said
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on it
// DEBUG: ['The', 'clock', 'on', 'the', 'dashboard', 'said']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on was
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on He
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on left
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on the
// DEBUG: ['it', 'was', 'TIMESTRING', 'He', 'left']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on keys
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on in
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on the
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on car,
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on and
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on walked
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on toward
// DEBUG: ['the', 'keys', 'in', 'the', 'car,', 'and', 'walked']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on tree.
// DEBUG: 75
// DEBUG: ['6.38am.']
// DEBUG: drawing cursor (30, 17)
// DEBUG: ['- Neil Gaiman, American Gods']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "The clock on the dashboard said", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "it was TIMESTRING He left", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the keys in the car, and walked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(30, 17, "6.38am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Neil Gaiman, American Gods", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:39 for 0 quotations:
    case 399:
      Serial.println(F("No quotes for 06:39"));
      return;

    // Codegen for 06:40 for 1 quotations:
    case 400:
      Serial.println(F("Only one option for 06:40:"));
    Serial.println(F("06:40 - At eleven o'clock the phone rang, and still the figure did not respond, any more than it has responded when the phone had rung at twenty-five to seven in the morning, and again at twenty to seven - Douglas Adams, The Long Dark Tea-Time of the Soul"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on eleven
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on o'clock
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on phone
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on rang,
// DEBUG: ['At', 'eleven', "o'clock", 'the', 'phone']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on still
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on the
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on figure
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on did
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on not
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on respond,
// DEBUG: ['rang,', 'and', 'still', 'the', 'figure', 'did', 'not']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on any
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on more
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on than
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on it
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on has
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on responded
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on when
// DEBUG: ['respond,', 'any', 'more', 'than', 'it', 'has', 'responded']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on phone
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on had
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on rung
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on at
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on twenty-five
// DEBUG: ['when', 'the', 'phone', 'had', 'rung', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on to
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on seven
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on in
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on morning,
// DEBUG: 167
// DEBUG: (162, 53)
// DEBUG: Operating on and
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on again
// DEBUG: ['twenty-five', 'to', 'seven', 'in', 'the', 'morning,', 'and']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 208
// DEBUG: ['twenty to seven']
// DEBUG: drawing cursor (26, 65)
// DEBUG: ['- Douglas Adams']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "At eleven o'clock the phone", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "rang, and still the figure did not", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "respond, any more than it has responded", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "when the phone had rung at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "twenty-five to seven in the morning, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(26, 65, "twenty to seven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Douglas Adams", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:41 for 0 quotations:
    case 401:
      Serial.println(F("No quotes for 06:41"));
      return;

    // Codegen for 06:42 for 0 quotations:
    case 402:
      Serial.println(F("No quotes for 06:42"));
      return;

    // Codegen for 06:43 for 1 quotations:
    case 403:
      Serial.println(F("Only one option for 06:43:"));
    Serial.println(F("06:43 - To London on the 6.43am. Jessica is back from her holiday. Things are looking up, she called me Chris, instead of Minister, when we talked on the phone this afternoon. - Chris Mullin, A View From the Foothills"));
// DEBUG: (5, 5)
// DEBUG: Operating on To
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on London
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on on
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['To', 'London', 'on', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on Jessica
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on is
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on back
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on from
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on her
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on holiday.
// DEBUG: ['TIMESTRING', 'Jessica', 'is', 'back', 'from', 'her']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on Things
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on are
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on looking
// DEBUG: 134
// DEBUG: (129, 29)
// DEBUG: Operating on up,
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on she
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on called
// DEBUG: ['holiday.', 'Things', 'are', 'looking', 'up,', 'she']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on me
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on Chris,
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on instead
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on of
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on Minister,
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on when
// DEBUG: ['called', 'me', 'Chris,', 'instead', 'of', 'Minister,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on we
// DEBUG: 30
// DEBUG: (25, 53)
// DEBUG: Operating on talked
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on on
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on phone
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on this
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on afternoon.
// DEBUG: ['when', 'we', 'talked', 'on', 'the', 'phone', 'this']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['6.43am.']
// DEBUG: drawing cursor (100, 5)
// DEBUG: ['- A View From the Foothills']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "To London on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING Jessica is back from her", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "holiday. Things are looking up, she", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "called me Chris, instead of Minister,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "when we talked on the phone this", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(100, 5, "6.43am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- A View From the Foothills", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:44 for 1 quotations:
    case 404:
      Serial.println(F("Only one option for 06:44:"));
    Serial.println(F("06:44 - Simon is happy to travel scum class when he's on his own and even sometimes deliberately aims for the 6.25. But today the .25 is delayed to 6.44. - Mark Lawson, The Deaths"));
// DEBUG: (5, 5)
// DEBUG: Operating on Simon
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on is
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on happy
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on to
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on travel
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on scum
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on class
// DEBUG: ['Simon', 'is', 'happy', 'to', 'travel', 'scum']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on when
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on he's
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on on
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on his
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on own
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on and
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on even
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on sometimes
// DEBUG: ['class', 'when', "he's", 'on', 'his', 'own', 'and', 'even']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on deliberately
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on aims
// DEBUG: 134
// DEBUG: (129, 29)
// DEBUG: Operating on for
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on the
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on 6.25.
// DEBUG: ['sometimes', 'deliberately', 'aims', 'for', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on But
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on today
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on the
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on .25
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on is
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on delayed
// DEBUG: 183
// DEBUG: (178, 41)
// DEBUG: Operating on to
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['6.25.', 'But', 'today', 'the', '.25', 'is', 'delayed', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: 116
// DEBUG: ['6.44']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- Mark Lawson, The Deaths']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "Simon is happy to travel scum", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "class when he's on his own and even", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "sometimes deliberately aims for the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "6.25. But today the .25 is delayed to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "6.44", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- Mark Lawson, The Deaths", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:45 for 2 quotations:
    case 405:
      option = random(0, 2);
      Serial.print(F("2 options for 06:45. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("06:45 - As the clock pointed to a quarter to seven, the dog woke and shook himself. After waiting in vain for the footman, who was accustomed to let him out, the animal wandered restlessly from one closed door to another on the ground floor; and, returning to his mat in great perplexity, appealed to the sleeping family, with a long and melancholy howl.' - Wilkie Collins, No Name "));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on clock
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on pointed
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on to
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on a
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['As', 'the', 'clock', 'pointed', 'to', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on dog
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on woke
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on and
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on shook
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on himself.
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on After
// DEBUG: ['the', 'dog', 'woke', 'and', 'shook', 'himself.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on waiting
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on in
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on vain
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on for
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on the
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on footman,
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on who
// DEBUG: ['After', 'waiting', 'in', 'vain', 'for', 'the', 'footman,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on was
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on accustomed
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on to
// DEBUG: 122
// DEBUG: (117, 53)
// DEBUG: Operating on let
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on him
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on out,
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on the
// DEBUG: ['who', 'was', 'accustomed', 'to', 'let', 'him', 'out,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on animal
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on wandered
// DEBUG: 114
// DEBUG: (109, 65)
// DEBUG: Operating on restlessly
// DEBUG: 185
// DEBUG: (180, 65)
// DEBUG: Operating on from
// DEBUG: ['the', 'animal', 'wandered', 'restlessly']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on one
// DEBUG: 37
// DEBUG: (32, 77)
// DEBUG: Operating on closed
// DEBUG: 80
// DEBUG: (75, 77)
// DEBUG: Operating on door
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on to
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on another
// DEBUG: 174
// DEBUG: (169, 77)
// DEBUG: Operating on on
// DEBUG: 189
// DEBUG: (184, 77)
// DEBUG: Operating on the
// DEBUG: 211
// DEBUG: (206, 77)
// DEBUG: Operating on ground
// DEBUG: ['from', 'one', 'closed', 'door', 'to', 'another', 'on', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on floor;
// DEBUG: 60
// DEBUG: (55, 89)
// DEBUG: Operating on and,
// DEBUG: 89
// DEBUG: (84, 89)
// DEBUG: Operating on returning
// DEBUG: 153
// DEBUG: (148, 89)
// DEBUG: Operating on to
// DEBUG: 168
// DEBUG: (163, 89)
// DEBUG: Operating on his
// DEBUG: 190
// DEBUG: (185, 89)
// DEBUG: Operating on mat
// DEBUG: ['ground', 'floor;', 'and,', 'returning', 'to', 'his']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on in
// DEBUG: 29
// DEBUG: (24, 101)
// DEBUG: Operating on great
// DEBUG: 65
// DEBUG: (60, 101)
// DEBUG: Operating on perplexity,
// DEBUG: 143
// DEBUG: (138, 101)
// DEBUG: Operating on appealed
// DEBUG: 200
// DEBUG: (195, 101)
// DEBUG: Operating on to
// DEBUG: ['mat', 'in', 'great', 'perplexity,', 'appealed']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (8, 113)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 113)
// DEBUG: Operating on sleeping
// DEBUG: 92
// DEBUG: (87, 113)
// DEBUG: Operating on family,
// DEBUG: 142
// DEBUG: (137, 113)
// DEBUG: Operating on with
// DEBUG: 171
// DEBUG: (166, 113)
// DEBUG: Operating on a
// DEBUG: 179
// DEBUG: (174, 113)
// DEBUG: Operating on long
// DEBUG: 208
// DEBUG: (203, 113)
// DEBUG: Operating on and
// DEBUG: ['to', 'the', 'sleeping', 'family,', 'with', 'a', 'long']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (9, 125)
// DEBUG: Operating on melancholy
// DEBUG: 85
// DEBUG: (80, 125)
// DEBUG: Operating on howl.'
// DEBUG: 128
// DEBUG: ['quarter to seven']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Wilkie Collins, No Name ']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "As the clock pointed to a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the dog woke and shook himself.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "After waiting in vain for the footman,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "who was accustomed to let him out,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "the animal wandered restlessly", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "from one closed door to another on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "ground floor; and, returning to his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "mat in great perplexity, appealed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "to the sleeping family, with a long", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "quarter to seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Wilkie Collins, No Name ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("06:45 - He was still hurriedly thinking all this through, unable to decide to get out of the bed, when the clock struck quarter to seven. There was a cautious knock at the door near his head. \"Gregor\", somebody called - it was his mother - \"it's quarter to seven. Didn't you want to go somewhere?\" - Franz Kafka, Metamorphosis"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on still
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on hurriedly
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on thinking
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on all
// DEBUG: ['He', 'was', 'still', 'hurriedly', 'thinking']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on this
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on through,
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on unable
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on to
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on decide
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on to
// DEBUG: ['all', 'this', 'through,', 'unable', 'to', 'decide']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on get
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on out
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on of
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on bed,
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on when
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on clock
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on struck
// DEBUG: ['to', 'get', 'out', 'of', 'the', 'bed,', 'when', 'the', 'clock']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on There
// DEBUG: ['struck', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on was
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on a
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on cautious
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on knock
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on the
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on door
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on near
// DEBUG: ['There', 'was', 'a', 'cautious', 'knock', 'at', 'the', 'door']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on his
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on head.
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on \"Gregor\",
// DEBUG: 151
// DEBUG: (146, 65)
// DEBUG: Operating on somebody
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on called
// DEBUG: ['near', 'his', 'head.', '\\"Gregor\\",', 'somebody']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on -
// DEBUG: 25
// DEBUG: (20, 77)
// DEBUG: Operating on it
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on was
// DEBUG: 62
// DEBUG: (57, 77)
// DEBUG: Operating on his
// DEBUG: 84
// DEBUG: (79, 77)
// DEBUG: Operating on mother
// DEBUG: 127
// DEBUG: (122, 77)
// DEBUG: Operating on -
// DEBUG: 135
// DEBUG: (130, 77)
// DEBUG: Operating on \"it's
// DEBUG: 178
// DEBUG: (173, 77)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['called', '-', 'it', 'was', 'his', 'mother', '-', '\\"it\'s']
// DEBUG: drawing cursor (5, 77)
// DEBUG: 200
// DEBUG: (195, 89)
// DEBUG: Operating on Didn't
// DEBUG: ['TIMESTRING.']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on you
// DEBUG: 39
// DEBUG: (34, 101)
// DEBUG: Operating on want
// DEBUG: 68
// DEBUG: (63, 101)
// DEBUG: Operating on to
// DEBUG: 83
// DEBUG: (78, 101)
// DEBUG: Operating on go
// DEBUG: 98
// DEBUG: (93, 101)
// DEBUG: Operating on somewhere?\"
// DEBUG: 183
// DEBUG: ['quarter to seven']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- Franz Kafka, Metamorphosis']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "He was still hurriedly thinking", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "all this through, unable to decide", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "to get out of the bed, when the clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "struck TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "There was a cautious knock at the door", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "near his head. \"Gregor\", somebody", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "called - it was his mother - \"it's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "quarter to seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Franz Kafka, Metamorphosis", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 06:46 for 2 quotations:
    case 406:
      option = random(0, 2);
      Serial.print(F("2 options for 06:46. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("06:46 - At one minute after the quarter to seven I heard the rattle of the cans outside. I opened the front door, and there was my man, singling out my cans from a bunch he carried and whistling through his teeth. - John Buchan, The Thirty-Nine Steps"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on I
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on heard
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on rattle
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on of
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on cans
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on outside.
// DEBUG: ['TIMESTRING', 'I', 'heard', 'the', 'rattle', 'of', 'the', 'cans']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on I
// DEBUG: 27
// DEBUG: (22, 41)
// DEBUG: Operating on opened
// DEBUG: 70
// DEBUG: (65, 41)
// DEBUG: Operating on the
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on front
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on door,
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on and
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on there
// DEBUG: ['outside.', 'I', 'opened', 'the', 'front', 'door,', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on was
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on my
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on man,
// DEBUG: 82
// DEBUG: (77, 53)
// DEBUG: Operating on singling
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on out
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on my
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on cans
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on from
// DEBUG: ['there', 'was', 'my', 'man,', 'singling', 'out', 'my', 'cans']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 65)
// DEBUG: Operating on bunch
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on he
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on carried
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on and
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on whistling
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on through
// DEBUG: ['from', 'a', 'bunch', 'he', 'carried', 'and', 'whistling']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on his
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on teeth.
// DEBUG: 83
// DEBUG: ['one minute after the quarter to seven']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Thirty-Nine Steps']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING I heard the rattle of the cans", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "outside. I opened the front door, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "there was my man, singling out my cans", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "from a bunch he carried and whistling", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "one minute after the quarter to seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- The Thirty-Nine Steps", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("06:46 - Then I hung about in the hall waiting for the milkman. That was the worst part of the business, for I was fairly choking to get out of doors. Six-thirty passed, then six-forty, but still he did not come. The fool had chosen this day of all days to be late. At one minute after the quarter to seven I heard the rattle of the cans outside. I opened the front door, and there was my man, singling out my cans from a bunch he carried and whistling through his teeth. He jumped a bit at the sight of me. - John Buchan, The Thirty-Nine Steps "));
// DEBUG: (5, 5)
// DEBUG: Operating on Then
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on I
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on hung
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on about
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on in
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on the
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on hall
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on waiting
// DEBUG: ['Then', 'I', 'hung', 'about', 'in', 'the', 'hall']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on for
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on the
// DEBUG: 62
// DEBUG: (57, 17)
// DEBUG: Operating on milkman.
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on That
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on was
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on the
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on worst
// DEBUG: ['waiting', 'for', 'the', 'milkman.', 'That', 'was', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on part
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on of
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on the
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on business,
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on for
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on I
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on was
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on fairly
// DEBUG: ['worst', 'part', 'of', 'the', 'business,', 'for', 'I', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on choking
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on to
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on get
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on out
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on of
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on doors.
// DEBUG: 184
// DEBUG: (179, 41)
// DEBUG: Operating on Six-thirty
// DEBUG: ['fairly', 'choking', 'to', 'get', 'out', 'of', 'doors.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on passed,
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on then
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on six-forty,
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on but
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on still
// DEBUG: ['Six-thirty', 'passed,', 'then', 'six-forty,', 'but']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on he
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on did
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on not
// DEBUG: 75
// DEBUG: (70, 65)
// DEBUG: Operating on come.
// DEBUG: 111
// DEBUG: (106, 65)
// DEBUG: Operating on The
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on fool
// DEBUG: 162
// DEBUG: (157, 65)
// DEBUG: Operating on had
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on chosen
// DEBUG: ['still', 'he', 'did', 'not', 'come.', 'The', 'fool', 'had']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on this
// DEBUG: 46
// DEBUG: (41, 77)
// DEBUG: Operating on day
// DEBUG: 68
// DEBUG: (63, 77)
// DEBUG: Operating on of
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on all
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on days
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on to
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on be
// DEBUG: 164
// DEBUG: (159, 77)
// DEBUG: Operating on late.
// DEBUG: 200
// DEBUG: (195, 77)
// DEBUG: Operating on At
// DEBUG: ['chosen', 'this', 'day', 'of', 'all', 'days', 'to', 'be', 'late.']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 89)
// DEBUG: []
// DEBUG: drawing cursor (5, 101)
// DEBUG: (16, 113)
// DEBUG: Operating on I
// DEBUG: 29
// DEBUG: (24, 113)
// DEBUG: Operating on heard
// DEBUG: 65
// DEBUG: (60, 113)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 113)
// DEBUG: Operating on rattle
// DEBUG: 130
// DEBUG: (125, 113)
// DEBUG: Operating on of
// DEBUG: 145
// DEBUG: (140, 113)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 113)
// DEBUG: Operating on cans
// DEBUG: 196
// DEBUG: (191, 113)
// DEBUG: Operating on outside.
// DEBUG: ['TIMESTRING', 'I', 'heard', 'the', 'rattle', 'of', 'the', 'cans']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on I
// DEBUG: 27
// DEBUG: (22, 125)
// DEBUG: Operating on opened
// DEBUG: 70
// DEBUG: (65, 125)
// DEBUG: Operating on the
// DEBUG: 92
// DEBUG: (87, 125)
// DEBUG: Operating on front
// DEBUG: 128
// DEBUG: (123, 125)
// DEBUG: Operating on door,
// DEBUG: 164
// DEBUG: (159, 125)
// DEBUG: Operating on and
// DEBUG: 186
// DEBUG: (181, 125)
// DEBUG: Operating on there
// DEBUG: ['outside.', 'I', 'opened', 'the', 'front', 'door,', 'and']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (11, 137)
// DEBUG: Operating on was
// DEBUG: 38
// DEBUG: (33, 137)
// DEBUG: Operating on my
// DEBUG: 53
// DEBUG: (48, 137)
// DEBUG: Operating on man,
// DEBUG: 82
// DEBUG: (77, 137)
// DEBUG: Operating on singling
// DEBUG: 139
// DEBUG: (134, 137)
// DEBUG: Operating on out
// DEBUG: 161
// DEBUG: (156, 137)
// DEBUG: Operating on my
// DEBUG: 176
// DEBUG: (171, 137)
// DEBUG: Operating on cans
// DEBUG: 205
// DEBUG: (200, 137)
// DEBUG: Operating on from
// DEBUG: ['there', 'was', 'my', 'man,', 'singling', 'out', 'my', 'cans']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (10, 149)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 149)
// DEBUG: Operating on bunch
// DEBUG: 59
// DEBUG: (54, 149)
// DEBUG: Operating on he
// DEBUG: 74
// DEBUG: (69, 149)
// DEBUG: Operating on carried
// DEBUG: 124
// DEBUG: (119, 149)
// DEBUG: Operating on and
// DEBUG: 146
// DEBUG: (141, 149)
// DEBUG: Operating on whistling
// DEBUG: 210
// DEBUG: (205, 149)
// DEBUG: Operating on through
// DEBUG: ['from', 'a', 'bunch', 'he', 'carried', 'and', 'whistling']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (13, 161)
// DEBUG: Operating on his
// DEBUG: 40
// DEBUG: (35, 161)
// DEBUG: Operating on teeth.
// DEBUG: 83
// DEBUG: (78, 161)
// DEBUG: Operating on He
// DEBUG: 98
// DEBUG: (93, 161)
// DEBUG: Operating on jumped
// DEBUG: 141
// DEBUG: (136, 161)
// DEBUG: Operating on a
// DEBUG: 149
// DEBUG: (144, 161)
// DEBUG: Operating on bit
// DEBUG: 171
// DEBUG: (166, 161)
// DEBUG: Operating on at
// DEBUG: 186
// DEBUG: (181, 161)
// DEBUG: Operating on the
// DEBUG: 208
// DEBUG: (203, 161)
// DEBUG: Operating on sight
// DEBUG: ['through', 'his', 'teeth.', 'He', 'jumped', 'a', 'bit', 'at', 'the']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (11, 173)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 173)
// DEBUG: Operating on me.
// DEBUG: 53
// DEBUG: ['one minute after the quarter to seven']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- The Thirty-Nine Steps']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "Then I hung about in the hall", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "waiting for the milkman. That was the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "worst part of the business, for I was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "fairly choking to get out of doors.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Six-thirty passed, then six-forty, but", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "still he did not come. The fool had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "chosen this day of all days to be late.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "TIMESTRING I heard the rattle of the cans", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "outside. I opened the front door, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "there was my man, singling out my cans", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "from a bunch he carried and whistling", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "through his teeth. He jumped a bit at the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "one minute after the quarter to seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- The Thirty-Nine Steps", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 06:47 for 0 quotations:
    case 407:
      Serial.println(F("No quotes for 06:47"));
      return;

    // Codegen for 06:48 for 0 quotations:
    case 408:
      Serial.println(F("No quotes for 06:48"));
      return;

    // Codegen for 06:49 for 1 quotations:
    case 409:
      Serial.println(F("Only one option for 06:49:"));
    Serial.println(F("06:49 - Night ends, 6:49. Meet in the coffee shop at 7:30; press conference at 10:00. - Hunter S. Thompson, Fear and Loathing: On the Campaign Trail '72"));
// DEBUG: (5, 5)
// DEBUG: Operating on Night
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on ends,
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on Meet
// DEBUG: ['Night', 'ends,', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on in
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on coffee
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on shop
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on at
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on 7:30;
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on press
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on conference
// DEBUG: ['Meet', 'in', 'the', 'coffee', 'shop', 'at', '7:30;', 'press']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on at
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on 10:00.
// DEBUG: 79
// DEBUG: ['6:49']
// DEBUG: drawing cursor (77, 5)
// DEBUG: ['- Hunter S. Thompson']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "Night ends, TIMESTRING.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Meet in the coffee shop at 7:30; press", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(77, 5, "6:49", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Hunter S. Thompson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:50 for 1 quotations:
    case 410:
      Serial.println(F("Only one option for 06:50:"));
    Serial.println(F("06:50 - Will, my fiancé, was coming from Boston on the six-fifty train - the dawn train, the only train that still stopped in the small Ohio city where I lived. - Mary Robison, Pretty Ice"));
// DEBUG: (5, 5)
// DEBUG: Operating on Will,
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on my
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on fiancé,
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on was
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on coming
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on from
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on Boston
// DEBUG: ['Will,', 'my', 'fiancé,', 'was', 'coming', 'from']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on on
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on train
// DEBUG: ['Boston', 'on', 'the', 'TIMESTRING']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on -
// DEBUG: 24
// DEBUG: (19, 29)
// DEBUG: Operating on the
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on dawn
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on train,
// DEBUG: 118
// DEBUG: (113, 29)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on only
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on train
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on that
// DEBUG: ['train', '-', 'the', 'dawn', 'train,', 'the', 'only', 'train']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on still
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on stopped
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on in
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on the
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on small
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on Ohio
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on city
// DEBUG: ['that', 'still', 'stopped', 'in', 'the', 'small', 'Ohio']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on where
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on I
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on lived.
// DEBUG: 102
// DEBUG: ['six-fifty']
// DEBUG: drawing cursor (49, 17)
// DEBUG: ['- Mary Robison, Pretty Ice']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "Will, my fiancé, was coming from", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Boston on the TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "train - the dawn train, the only train", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "that still stopped in the small Ohio", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(49, 17, "six-fifty", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Mary Robison, Pretty Ice", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:51 for 0 quotations:
    case 411:
      Serial.println(F("No quotes for 06:51"));
      return;

    // Codegen for 06:52 for 0 quotations:
    case 412:
      Serial.println(F("No quotes for 06:52"));
      return;

    // Codegen for 06:53 for 0 quotations:
    case 413:
      Serial.println(F("No quotes for 06:53"));
      return;

    // Codegen for 06:54 for 0 quotations:
    case 414:
      Serial.println(F("No quotes for 06:54"));
      return;

    // Codegen for 06:55 for 1 quotations:
    case 415:
      Serial.println(F("Only one option for 06:55:"));
    Serial.println(F("06:55 - At 6:55 am Lisa parked and took the lift from the frozen underground car park up to level 1 of Green Oaks Shopping Centre. - Catherine O'Flynn, What was Lost"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on Lisa
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on parked
// DEBUG: ['At', 'TIMESTRING', 'Lisa']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on took
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on lift
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on from
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on frozen
// DEBUG: ['parked', 'and', 'took', 'the', 'lift', 'from', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on underground
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on car
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on park
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on up
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on to
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on level
// DEBUG: ['frozen', 'underground', 'car', 'park', 'up', 'to']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on 1
// DEBUG: 24
// DEBUG: (19, 41)
// DEBUG: Operating on of
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on Green
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on Oaks
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on Shopping
// DEBUG: 161
// DEBUG: (156, 41)
// DEBUG: Operating on Centre.
// DEBUG: 211
// DEBUG: ['6:55 am']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- What was Lost']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING Lisa", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "parked and took the lift from the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "frozen underground car park up to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "6:55 am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- What was Lost", &Font12, WHITE, BLACK);
      return;

    // Codegen for 06:56 for 0 quotations:
    case 416:
      Serial.println(F("No quotes for 06:56"));
      return;

    // Codegen for 06:57 for 0 quotations:
    case 417:
      Serial.println(F("No quotes for 06:57"));
      return;

    // Codegen for 06:58 for 0 quotations:
    case 418:
      Serial.println(F("No quotes for 06:58"));
      return;

    // Codegen for 06:59 for 1 quotations:
    case 419:
      Serial.println(F("Only one option for 06:59:"));
    Serial.println(F("06:59 - It was 6.59 a.m. on Maundy Thursday as Blomkvist and Berger let themselves into the \"Millennium\" offices. - Stieg Larsson, The Girl who Played with Fire"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on on
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on Maundy
// DEBUG: ['It', 'was', 'TIMESTRING', 'on']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on Thursday
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on as
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on Blomkvist
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on and
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on Berger
// DEBUG: ['Maundy', 'Thursday', 'as', 'Blomkvist', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on let
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on themselves
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on into
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on the
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on \"Millennium\"
// DEBUG: ['Berger', 'let', 'themselves', 'into', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (20, 41)
// DEBUG: Operating on offices.
// DEBUG: 82
// DEBUG: ['6.59 a.m.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Stieg Larsson']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Maundy Thursday as Blomkvist and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Berger let themselves into the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "6.59 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Stieg Larsson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:00 for 4 quotations:
    case 420:
      option = random(0, 4);
      Serial.print(F("4 options for 07:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:00 - Seven o'clock, already, he said to himself when the clock struck again, \"seven o'clock, and there's still a fog like this.\" - Franz Kafka, Metamorphosis "));
// DEBUG: (5, 5)
// DEBUG: Operating on Seven
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on o'clock,
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on already,
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on he
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on said
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on to
// DEBUG: ['Seven', "o'clock,", 'already,', 'he', 'said']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on himself
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on when
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on the
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on clock
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on struck
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on again,
// DEBUG: ['to', 'himself', 'when', 'the', 'clock', 'struck']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on \"TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on and
// DEBUG: ['again,', '\\"TIMESTRING,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on there's
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on still
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on a
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on fog
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on like
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on this.\"
// DEBUG: 209
// DEBUG: ["seven o'clock"]
// DEBUG: drawing cursor (12, 29)
// DEBUG: ['- Franz Kafka, Metamorphosis ']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Seven o'clock, already, he said", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "to himself when the clock struck", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "again, \"TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(12, 29, "seven o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Franz Kafka, Metamorphosis ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:00 - At seven o’clock in the morning, Rubashov was awakened by a bugle, but he did not get up. Soon he heard sounds in the corridor. He imagined that someone was to be tortured, and he dreaded hearing the first screams of pain. When the footsteps reached his own section, he saw through the eye hole that guards were serving breakfast. Rubashov did not receive any breakfast because he had reported himself ill. He began to pace up and down the cell, six and a half steps to the window, six and a half steps back. - Arthur Koestler, Darkness at Noon "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on in
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on the
// DEBUG: ['At', 'TIMESTRING', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on morning,
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on Rubashov
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on was
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on awakened
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on by
// DEBUG: ['the', 'morning,', 'Rubashov', 'was', 'awakened']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 29)
// DEBUG: Operating on bugle,
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on but
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on he
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on did
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on not
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on get
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on up.
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on Soon
// DEBUG: ['by', 'a', 'bugle,', 'but', 'he', 'did', 'not', 'get', 'up.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on he
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on heard
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on sounds
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on in
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on corridor.
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on He
// DEBUG: ['Soon', 'he', 'heard', 'sounds', 'in', 'the', 'corridor.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on imagined
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on that
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on someone
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on was
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on to
// DEBUG: 186
// DEBUG: (181, 53)
// DEBUG: Operating on be
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on tortured,
// DEBUG: ['He', 'imagined', 'that', 'someone', 'was', 'to', 'be']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 65)
// DEBUG: Operating on he
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on dreaded
// DEBUG: 107
// DEBUG: (102, 65)
// DEBUG: Operating on hearing
// DEBUG: 157
// DEBUG: (152, 65)
// DEBUG: Operating on the
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on first
// DEBUG: ['tortured,', 'and', 'he', 'dreaded', 'hearing', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on screams
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on of
// DEBUG: 81
// DEBUG: (76, 77)
// DEBUG: Operating on pain.
// DEBUG: 117
// DEBUG: (112, 77)
// DEBUG: Operating on When
// DEBUG: 146
// DEBUG: (141, 77)
// DEBUG: Operating on the
// DEBUG: 168
// DEBUG: (163, 77)
// DEBUG: Operating on footsteps
// DEBUG: ['first', 'screams', 'of', 'pain.', 'When', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on reached
// DEBUG: 70
// DEBUG: (65, 89)
// DEBUG: Operating on his
// DEBUG: 92
// DEBUG: (87, 89)
// DEBUG: Operating on own
// DEBUG: 114
// DEBUG: (109, 89)
// DEBUG: Operating on section,
// DEBUG: 171
// DEBUG: (166, 89)
// DEBUG: Operating on he
// DEBUG: 186
// DEBUG: (181, 89)
// DEBUG: Operating on saw
// DEBUG: 208
// DEBUG: (203, 89)
// DEBUG: Operating on through
// DEBUG: ['footsteps', 'reached', 'his', 'own', 'section,', 'he', 'saw']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 101)
// DEBUG: Operating on eye
// DEBUG: 62
// DEBUG: (57, 101)
// DEBUG: Operating on hole
// DEBUG: 91
// DEBUG: (86, 101)
// DEBUG: Operating on that
// DEBUG: 120
// DEBUG: (115, 101)
// DEBUG: Operating on guards
// DEBUG: 163
// DEBUG: (158, 101)
// DEBUG: Operating on were
// DEBUG: 192
// DEBUG: (187, 101)
// DEBUG: Operating on serving
// DEBUG: ['through', 'the', 'eye', 'hole', 'that', 'guards', 'were']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (13, 113)
// DEBUG: Operating on breakfast.
// DEBUG: 89
// DEBUG: (84, 113)
// DEBUG: Operating on Rubashov
// DEBUG: 146
// DEBUG: (141, 113)
// DEBUG: Operating on did
// DEBUG: 168
// DEBUG: (163, 113)
// DEBUG: Operating on not
// DEBUG: 190
// DEBUG: (185, 113)
// DEBUG: Operating on receive
// DEBUG: ['serving', 'breakfast.', 'Rubashov', 'did', 'not']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (13, 125)
// DEBUG: Operating on any
// DEBUG: 40
// DEBUG: (35, 125)
// DEBUG: Operating on breakfast
// DEBUG: 104
// DEBUG: (99, 125)
// DEBUG: Operating on because
// DEBUG: 154
// DEBUG: (149, 125)
// DEBUG: Operating on he
// DEBUG: 169
// DEBUG: (164, 125)
// DEBUG: Operating on had
// DEBUG: 191
// DEBUG: (186, 125)
// DEBUG: Operating on reported
// DEBUG: ['receive', 'any', 'breakfast', 'because', 'he', 'had']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (14, 137)
// DEBUG: Operating on himself
// DEBUG: 69
// DEBUG: (64, 137)
// DEBUG: Operating on ill.
// DEBUG: 98
// DEBUG: (93, 137)
// DEBUG: Operating on He
// DEBUG: 113
// DEBUG: (108, 137)
// DEBUG: Operating on began
// DEBUG: 149
// DEBUG: (144, 137)
// DEBUG: Operating on to
// DEBUG: 164
// DEBUG: (159, 137)
// DEBUG: Operating on pace
// DEBUG: 193
// DEBUG: (188, 137)
// DEBUG: Operating on up
// DEBUG: 208
// DEBUG: (203, 137)
// DEBUG: Operating on and
// DEBUG: ['reported', 'himself', 'ill.', 'He', 'began', 'to', 'pace', 'up']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on down
// DEBUG: 43
// DEBUG: (38, 149)
// DEBUG: Operating on the
// DEBUG: 65
// DEBUG: (60, 149)
// DEBUG: Operating on cell,
// DEBUG: 101
// DEBUG: (96, 149)
// DEBUG: Operating on six
// DEBUG: 123
// DEBUG: (118, 149)
// DEBUG: Operating on and
// DEBUG: 145
// DEBUG: (140, 149)
// DEBUG: Operating on a
// DEBUG: 153
// DEBUG: (148, 149)
// DEBUG: Operating on half
// DEBUG: 182
// DEBUG: (177, 149)
// DEBUG: Operating on steps
// DEBUG: ['and', 'down', 'the', 'cell,', 'six', 'and', 'a', 'half']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (11, 161)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 161)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 161)
// DEBUG: Operating on window,
// DEBUG: 103
// DEBUG: (98, 161)
// DEBUG: Operating on six
// DEBUG: 125
// DEBUG: (120, 161)
// DEBUG: Operating on and
// DEBUG: 147
// DEBUG: (142, 161)
// DEBUG: Operating on a
// DEBUG: 155
// DEBUG: (150, 161)
// DEBUG: Operating on half
// DEBUG: 184
// DEBUG: (179, 161)
// DEBUG: Operating on steps
// DEBUG: ['steps', 'to', 'the', 'window,', 'six', 'and', 'a', 'half']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (11, 173)
// DEBUG: Operating on back.
// DEBUG: 52
// DEBUG: ['seven o’clock']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Darkness at Noon']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the morning, Rubashov was awakened", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "by a bugle, but he did not get up.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Soon he heard sounds in the corridor.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "He imagined that someone was to be", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "tortured, and he dreaded hearing the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "first screams of pain. When the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "footsteps reached his own section, he saw", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "through the eye hole that guards were", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "serving breakfast. Rubashov did not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "receive any breakfast because he had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "reported himself ill. He began to pace up", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "and down the cell, six and a half", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "steps to the window, six and a half", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "seven o’clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- Darkness at Noon", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("07:00 - I had left directions that I was to be called at seven; for it was plain that I must see Wemmick before seeing any one else - Charles Dickens, Great Expectations"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on had
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on left
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on directions
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on that
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on I
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on was
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on to
// DEBUG: ['I', 'had', 'left', 'directions', 'that', 'I', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on be
// DEBUG: 28
// DEBUG: (23, 17)
// DEBUG: Operating on called
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on for
// DEBUG: ['to', 'be', 'called', 'TIMESTRING;']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on it
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on was
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on plain
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on that
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on I
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on must
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on see
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on Wemmick
// DEBUG: ['for', 'it', 'was', 'plain', 'that', 'I', 'must', 'see']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on before
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on seeing
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on any
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on one
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on else
// DEBUG: 177
// DEBUG: ['at seven']
// DEBUG: drawing cursor (66, 17)
// DEBUG: ['- Great Expectations']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "I had left directions that I was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "to be called TIMESTRING;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "for it was plain that I must see", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(66, 17, "at seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Great Expectations", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("07:00 - She locked herself in, made no reply to my bonjour through the door; she was up at seven o'clock, the samovar was taken in to her from the kitchen. - Fyodor Dostoyevsky, Crime and Punishment "));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on locked
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on herself
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on in,
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on made
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on no
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on reply
// DEBUG: ['She', 'locked', 'herself', 'in,', 'made', 'no']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on my
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on bonjour
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on through
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on the
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on door;
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on she
// DEBUG: ['reply', 'to', 'my', 'bonjour', 'through', 'the', 'door;']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on was
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on up
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on at
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['she', 'was', 'up', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on samovar
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on was
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on taken
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on in
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on to
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on her
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on from
// DEBUG: ['TIMESTRING,', 'the', 'samovar', 'was', 'taken', 'in', 'to', 'her']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on kitchen.
// DEBUG: 94
// DEBUG: ["seven o'clock"]
// DEBUG: drawing cursor (61, 29)
// DEBUG: ['- Crime and Punishment']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "She locked herself in, made no", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "reply to my bonjour through the door;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "she was up at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING, the samovar was taken in to her", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(61, 29, "seven o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Crime and Punishment", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:01 for 0 quotations:
    case 421:
      Serial.println(F("No quotes for 07:01"));
      return;

    // Codegen for 07:02 for 1 quotations:
    case 422:
      Serial.println(F("Only one option for 07:02:"));
    Serial.println(F("07:02 - 07:02:18 One and a half hours. 'Case,' she said, 'I wanna favour.' - William Gibson, Neuromancer"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING:18
// DEBUG: Wrorking on the timestring
// DEBUG: 138
// DEBUG: (133, 5)
// DEBUG: Operating on One
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on and
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on a
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on half
// DEBUG: ['TIMESTRING:18', 'One', 'and', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on hours.
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on 'Case,'
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on she
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on said,
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on 'I
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on wanna
// DEBUG: ['half', 'hours.', "'Case,'", 'she', 'said,', "'I"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on favour.'
// DEBUG: 73
// DEBUG: ['07:02']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- William Gibson, Neuromancer']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING:18 One and a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "half hours. 'Case,' she said, 'I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "07:02", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- William Gibson, Neuromancer", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:03 for 1 quotations:
    case 423:
      Serial.println(F("Only one option for 07:03:"));
    Serial.println(F("07:03 - 7:03am General Tanz woke up as though aroused by a mental alarm-clock. - Hans Hellmut Kirst, The Night of the Generals"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on General
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on Tanz
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on woke
// DEBUG: ['TIMESTRING', 'General', 'Tanz']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on up
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on as
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on though
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on aroused
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on by
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on a
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on mental
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on alarm-clock.
// DEBUG: ['woke', 'up', 'as', 'though', 'aroused', 'by', 'a', 'mental']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['7:03am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Night of the Generals']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING General Tanz", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "woke up as though aroused by a mental", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "7:03am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- The Night of the Generals", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:04 for 1 quotations:
    case 424:
      Serial.println(F("Only one option for 07:04:"));
    Serial.println(F("07:04 - Sunday evening at almost the same hour (to be precise, at about 7:04 p.m.) she rings the front door bell at the home of Walter Moeding, Crime Commissioner, who is at that moment engaged, for professional rather than private reasons, in disguising himself as a sheikh. - Heinrich Böll, The Lost Honour of Katharina Blum"));
// DEBUG: (5, 5)
// DEBUG: Operating on Sunday
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on evening
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on at
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on almost
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on the
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on same
// DEBUG: ['Sunday', 'evening', 'at', 'almost', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on hour
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on (to
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on be
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on precise,
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on at
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on about
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on TIMESTRING)
// DEBUG: Wrorking on the timestring
// DEBUG: ['same', 'hour', '(to', 'be', 'precise,', 'at', 'about']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on she
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on rings
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING)', 'she', 'rings']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on front
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on door
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on bell
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on at
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on the
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on home
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on of
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on Walter
// DEBUG: ['the', 'front', 'door', 'bell', 'at', 'the', 'home', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on Moeding,
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on Crime
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on Commissioner,
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on who
// DEBUG: ['Walter', 'Moeding,', 'Crime', 'Commissioner,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on is
// DEBUG: 29
// DEBUG: (24, 65)
// DEBUG: Operating on at
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on that
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on moment
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on engaged,
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on for
// DEBUG: 195
// DEBUG: (190, 65)
// DEBUG: Operating on professional
// DEBUG: ['who', 'is', 'at', 'that', 'moment', 'engaged,', 'for']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (18, 77)
// DEBUG: Operating on rather
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on than
// DEBUG: 95
// DEBUG: (90, 77)
// DEBUG: Operating on private
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on reasons,
// DEBUG: 202
// DEBUG: (197, 77)
// DEBUG: Operating on in
// DEBUG: ['professional', 'rather', 'than', 'private', 'reasons,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on disguising
// DEBUG: 84
// DEBUG: (79, 89)
// DEBUG: Operating on himself
// DEBUG: 134
// DEBUG: (129, 89)
// DEBUG: Operating on as
// DEBUG: 149
// DEBUG: (144, 89)
// DEBUG: Operating on a
// DEBUG: 157
// DEBUG: (152, 89)
// DEBUG: Operating on sheikh.
// DEBUG: 207
// DEBUG: ['7:04 p.m.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Heinrich Böll']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "Sunday evening at almost the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "same hour (to be precise, at about", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING) she rings", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the front door bell at the home of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Walter Moeding, Crime Commissioner,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "who is at that moment engaged, for", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "professional rather than private reasons,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "7:04 p.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Heinrich Böll", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:05 for 3 quotations:
    case 425:
      option = random(0, 3);
      Serial.print(F("3 options for 07:05. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:05 - He really couldn't believe that the old woman who'd phoned him last night would show up this morning, as she'd said she would. He decided he'd wait until five minutes after seven o'clock, and then he'd call in, take the day off, and make every effort in the book to locate someone reliable. - Raymond Carver, Where I'm Calling From "));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on really
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on couldn't
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on believe
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on that
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on the
// DEBUG: ['He', 'really', "couldn't", 'believe', 'that']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on old
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on woman
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on who'd
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on phoned
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on him
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on last
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on night
// DEBUG: ['the', 'old', 'woman', "who'd", 'phoned', 'him', 'last']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on would
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on show
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on up
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on this
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on morning,
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on as
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on she'd
// DEBUG: ['night', 'would', 'show', 'up', 'this', 'morning,', 'as']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on said
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on she
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on would.
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on He
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on decided
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on he'd
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on wait
// DEBUG: ["she'd", 'said', 'she', 'would.', 'He', 'decided', "he'd"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on until
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['wait', 'until']
// DEBUG: drawing cursor (5, 53)
// DEBUG: []
// DEBUG: drawing cursor (5, 65)
// DEBUG: (17, 77)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on then
// DEBUG: 73
// DEBUG: (68, 77)
// DEBUG: Operating on he'd
// DEBUG: 102
// DEBUG: (97, 77)
// DEBUG: Operating on call
// DEBUG: 131
// DEBUG: (126, 77)
// DEBUG: Operating on in,
// DEBUG: 153
// DEBUG: (148, 77)
// DEBUG: Operating on take
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on the
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on day
// DEBUG: ['TIMESTRING,', 'and', 'then', "he'd", 'call', 'in,', 'take', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on off,
// DEBUG: 43
// DEBUG: (38, 89)
// DEBUG: Operating on and
// DEBUG: 65
// DEBUG: (60, 89)
// DEBUG: Operating on make
// DEBUG: 94
// DEBUG: (89, 89)
// DEBUG: Operating on every
// DEBUG: 130
// DEBUG: (125, 89)
// DEBUG: Operating on effort
// DEBUG: 173
// DEBUG: (168, 89)
// DEBUG: Operating on in
// DEBUG: 188
// DEBUG: (183, 89)
// DEBUG: Operating on the
// DEBUG: 210
// DEBUG: (205, 89)
// DEBUG: Operating on book
// DEBUG: ['day', 'off,', 'and', 'make', 'every', 'effort', 'in', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 101)
// DEBUG: Operating on locate
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on someone
// DEBUG: 123
// DEBUG: (118, 101)
// DEBUG: Operating on reliable.
// DEBUG: 187
// DEBUG: ["five minutes after seven o'clock"]
// DEBUG: drawing cursor (5, 65)
// DEBUG: ["- Where I'm Calling From"]
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "He really couldn't believe that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the old woman who'd phoned him last", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "night would show up this morning, as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "she'd said she would. He decided he'd", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "wait until", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "TIMESTRING, and then he'd call in, take the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "day off, and make every effort in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "five minutes after seven o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Where I'm Calling From", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:05 - Outside my window the sky hung low and gray. It looked like snow, which added to my malaise. The clock read five after seven. I punched the remote control and watched the morning news as I lay in bed. - Haruki Murakami, Dance Dance Dance"));
// DEBUG: (5, 5)
// DEBUG: Operating on Outside
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on my
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on window
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on sky
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on hung
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on low
// DEBUG: ['Outside', 'my', 'window', 'the', 'sky', 'hung']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on and
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on gray.
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on It
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on looked
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on like
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on snow,
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on which
// DEBUG: ['low', 'and', 'gray.', 'It', 'looked', 'like', 'snow,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on added
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on to
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on my
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on malaise.
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on The
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on clock
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on read
// DEBUG: ['which', 'added', 'to', 'my', 'malaise.', 'The', 'clock']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on I
// DEBUG: ['read', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (7, 53)
// DEBUG: Operating on punched
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on the
// DEBUG: 84
// DEBUG: (79, 53)
// DEBUG: Operating on remote
// DEBUG: 127
// DEBUG: (122, 53)
// DEBUG: Operating on control
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on and
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on watched
// DEBUG: ['I', 'punched', 'the', 'remote', 'control', 'and']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 65)
// DEBUG: Operating on morning
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on news
// DEBUG: 119
// DEBUG: (114, 65)
// DEBUG: Operating on as
// DEBUG: 134
// DEBUG: (129, 65)
// DEBUG: Operating on I
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on lay
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on in
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on bed.
// DEBUG: 208
// DEBUG: ['five after seven']
// DEBUG: drawing cursor (10, 41)
// DEBUG: ['- Dance Dance Dance']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "Outside my window the sky hung", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "low and gray. It looked like snow,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "which added to my malaise. The clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "read TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "I punched the remote control and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(10, 41, "five after seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Dance Dance Dance", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("07:05 - Ryan missed the dawn. He boarded a TWA 747 that left Dulles on time, at 7:05 A.M. The sky was overcast, and when the aircraft burst through the cloud layer into sunlight, Ryan did something he had never done before. For the first time in his life, Jack Ryan fell asleep on an airplane. - Tom Clancy, The Hunt for Red October "));
// DEBUG: (5, 5)
// DEBUG: Operating on Ryan
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on missed
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on dawn.
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on He
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on boarded
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on a
// DEBUG: ['Ryan', 'missed', 'the', 'dawn.', 'He', 'boarded']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (7, 17)
// DEBUG: Operating on TWA
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on 747
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on that
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on left
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on Dulles
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on on
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on time,
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on at
// DEBUG: ['a', 'TWA', '747', 'that', 'left', 'Dulles', 'on', 'time,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on The
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on sky
// DEBUG: 192
// DEBUG: (187, 29)
// DEBUG: Operating on was
// DEBUG: ['at', 'TIMESTRING', 'The', 'sky']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on overcast,
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on and
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on when
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on the
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on aircraft
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on burst
// DEBUG: ['was', 'overcast,', 'and', 'when', 'the', 'aircraft']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on through
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on the
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on cloud
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on layer
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on into
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on sunlight,
// DEBUG: ['burst', 'through', 'the', 'cloud', 'layer', 'into']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on Ryan
// DEBUG: 49
// DEBUG: (44, 65)
// DEBUG: Operating on did
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on something
// DEBUG: 135
// DEBUG: (130, 65)
// DEBUG: Operating on he
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on had
// DEBUG: 172
// DEBUG: (167, 65)
// DEBUG: Operating on never
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on done
// DEBUG: ['sunlight,', 'Ryan', 'did', 'something', 'he', 'had', 'never']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on before.
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on For
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on first
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on time
// DEBUG: 174
// DEBUG: (169, 77)
// DEBUG: Operating on in
// DEBUG: 189
// DEBUG: (184, 77)
// DEBUG: Operating on his
// DEBUG: 211
// DEBUG: (206, 77)
// DEBUG: Operating on life,
// DEBUG: ['done', 'before.', 'For', 'the', 'first', 'time', 'in', 'his']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on Jack
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on Ryan
// DEBUG: 74
// DEBUG: (69, 89)
// DEBUG: Operating on fell
// DEBUG: 103
// DEBUG: (98, 89)
// DEBUG: Operating on asleep
// DEBUG: 146
// DEBUG: (141, 89)
// DEBUG: Operating on on
// DEBUG: 161
// DEBUG: (156, 89)
// DEBUG: Operating on an
// DEBUG: 176
// DEBUG: (171, 89)
// DEBUG: Operating on airplane.
// DEBUG: ['life,', 'Jack', 'Ryan', 'fell', 'asleep', 'on', 'an']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['7:05 A.M.']
// DEBUG: drawing cursor (8, 29)
// DEBUG: ['- The Hunt for Red October']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "Ryan missed the dawn. He boarded", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "a TWA 747 that left Dulles on time,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "at TIMESTRING The sky", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "was overcast, and when the aircraft", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "burst through the cloud layer into", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "sunlight, Ryan did something he had never", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "done before. For the first time in his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "life, Jack Ryan fell asleep on an", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(8, 29, "7:05 A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- The Hunt for Red October", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:06 for 2 quotations:
    case 426:
      option = random(0, 2);
      Serial.print(F("2 options for 07:06. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:06 - So far so good. There followed a little passage of time when we stood by the duty desk, drinking coffee and studiously not mentioning what we were all thinking and hoping: that Percy was late, that maybe Percy wasn't going to show up at all. Considering the hostile reviews he'd gotten on the way he'd handled the electrocution, that seemed at least possible. But Percy subscribed to that old axiom about how you should get right back on the horse that had thrown you, because here he came through the door at six minutes past seven, resplendent in his blue uniform with his sidearm on one hip and his hickory stick in its ridiculous custom-made holster on the other. - Stephen King, The Green Mile "));
// DEBUG: (5, 5)
// DEBUG: Operating on So
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on far
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on so
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on good.
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on There
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on followed
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on a
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on little
// DEBUG: ['So', 'far', 'so', 'good.', 'There', 'followed', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on passage
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on of
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on time
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on when
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on we
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on stood
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on by
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on the
// DEBUG: ['little', 'passage', 'of', 'time', 'when', 'we', 'stood', 'by']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on duty
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on desk,
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on drinking
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on coffee
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on and
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on studiously
// DEBUG: ['the', 'duty', 'desk,', 'drinking', 'coffee', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on not
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on mentioning
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on what
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on we
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on were
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on all
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on thinking
// DEBUG: ['studiously', 'not', 'mentioning', 'what', 'we', 'were', 'all']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on and
// DEBUG: 41
// DEBUG: (36, 53)
// DEBUG: Operating on hoping:
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on that
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on Percy
// DEBUG: 156
// DEBUG: (151, 53)
// DEBUG: Operating on was
// DEBUG: 178
// DEBUG: (173, 53)
// DEBUG: Operating on late,
// DEBUG: ['thinking', 'and', 'hoping:', 'that', 'Percy', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 65)
// DEBUG: Operating on maybe
// DEBUG: 81
// DEBUG: (76, 65)
// DEBUG: Operating on Percy
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on wasn't
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on going
// DEBUG: 196
// DEBUG: (191, 65)
// DEBUG: Operating on to
// DEBUG: 211
// DEBUG: (206, 65)
// DEBUG: Operating on show
// DEBUG: ['late,', 'that', 'maybe', 'Percy', "wasn't", 'going', 'to']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on up
// DEBUG: 30
// DEBUG: (25, 77)
// DEBUG: Operating on at
// DEBUG: 45
// DEBUG: (40, 77)
// DEBUG: Operating on all.
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on Considering
// DEBUG: 152
// DEBUG: (147, 77)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 77)
// DEBUG: Operating on hostile
// DEBUG: ['show', 'up', 'at', 'all.', 'Considering', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on reviews
// DEBUG: 68
// DEBUG: (63, 89)
// DEBUG: Operating on he'd
// DEBUG: 97
// DEBUG: (92, 89)
// DEBUG: Operating on gotten
// DEBUG: 140
// DEBUG: (135, 89)
// DEBUG: Operating on on
// DEBUG: 155
// DEBUG: (150, 89)
// DEBUG: Operating on the
// DEBUG: 177
// DEBUG: (172, 89)
// DEBUG: Operating on way
// DEBUG: 199
// DEBUG: (194, 89)
// DEBUG: Operating on he'd
// DEBUG: ['hostile', 'reviews', "he'd", 'gotten', 'on', 'the', 'way']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on handled
// DEBUG: 65
// DEBUG: (60, 101)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 101)
// DEBUG: Operating on electrocution,
// DEBUG: 186
// DEBUG: (181, 101)
// DEBUG: Operating on that
// DEBUG: ["he'd", 'handled', 'the', 'electrocution,']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on seemed
// DEBUG: 58
// DEBUG: (53, 113)
// DEBUG: Operating on at
// DEBUG: 73
// DEBUG: (68, 113)
// DEBUG: Operating on least
// DEBUG: 109
// DEBUG: (104, 113)
// DEBUG: Operating on possible.
// DEBUG: 173
// DEBUG: (168, 113)
// DEBUG: Operating on But
// DEBUG: 195
// DEBUG: (190, 113)
// DEBUG: Operating on Percy
// DEBUG: ['that', 'seemed', 'at', 'least', 'possible.', 'But']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (11, 125)
// DEBUG: Operating on subscribed
// DEBUG: 87
// DEBUG: (82, 125)
// DEBUG: Operating on to
// DEBUG: 102
// DEBUG: (97, 125)
// DEBUG: Operating on that
// DEBUG: 131
// DEBUG: (126, 125)
// DEBUG: Operating on old
// DEBUG: 153
// DEBUG: (148, 125)
// DEBUG: Operating on axiom
// DEBUG: 189
// DEBUG: (184, 125)
// DEBUG: Operating on about
// DEBUG: ['Percy', 'subscribed', 'to', 'that', 'old', 'axiom']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (11, 137)
// DEBUG: Operating on how
// DEBUG: 38
// DEBUG: (33, 137)
// DEBUG: Operating on you
// DEBUG: 60
// DEBUG: (55, 137)
// DEBUG: Operating on should
// DEBUG: 103
// DEBUG: (98, 137)
// DEBUG: Operating on get
// DEBUG: 125
// DEBUG: (120, 137)
// DEBUG: Operating on right
// DEBUG: 161
// DEBUG: (156, 137)
// DEBUG: Operating on back
// DEBUG: 190
// DEBUG: (185, 137)
// DEBUG: Operating on on
// DEBUG: 205
// DEBUG: (200, 137)
// DEBUG: Operating on the
// DEBUG: ['about', 'how', 'you', 'should', 'get', 'right', 'back', 'on']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on horse
// DEBUG: 50
// DEBUG: (45, 149)
// DEBUG: Operating on that
// DEBUG: 79
// DEBUG: (74, 149)
// DEBUG: Operating on had
// DEBUG: 101
// DEBUG: (96, 149)
// DEBUG: Operating on thrown
// DEBUG: 144
// DEBUG: (139, 149)
// DEBUG: Operating on you,
// DEBUG: 173
// DEBUG: (168, 149)
// DEBUG: Operating on because
// DEBUG: ['the', 'horse', 'that', 'had', 'thrown', 'you,']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (13, 161)
// DEBUG: Operating on here
// DEBUG: 47
// DEBUG: (42, 161)
// DEBUG: Operating on he
// DEBUG: 62
// DEBUG: (57, 161)
// DEBUG: Operating on came
// DEBUG: 91
// DEBUG: (86, 161)
// DEBUG: Operating on through
// DEBUG: 141
// DEBUG: (136, 161)
// DEBUG: Operating on the
// DEBUG: 163
// DEBUG: (158, 161)
// DEBUG: Operating on door
// DEBUG: 192
// DEBUG: (187, 161)
// DEBUG: Operating on at
// DEBUG: 207
// DEBUG: (202, 161)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['because', 'here', 'he', 'came', 'through', 'the', 'door', 'at']
// DEBUG: drawing cursor (5, 161)
// DEBUG: []
// DEBUG: drawing cursor (5, 173)
// DEBUG: (17, 185)
// DEBUG: Operating on resplendent
// DEBUG: 100
// DEBUG: (95, 185)
// DEBUG: Operating on in
// DEBUG: 115
// DEBUG: (110, 185)
// DEBUG: Operating on his
// DEBUG: 137
// DEBUG: (132, 185)
// DEBUG: Operating on blue
// DEBUG: 166
// DEBUG: (161, 185)
// DEBUG: Operating on uniform
// DEBUG: ['TIMESTRING,', 'resplendent', 'in', 'his', 'blue']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (13, 197)
// DEBUG: Operating on with
// DEBUG: 47
// DEBUG: (42, 197)
// DEBUG: Operating on his
// DEBUG: 69
// DEBUG: (64, 197)
// DEBUG: Operating on sidearm
// DEBUG: 119
// DEBUG: (114, 197)
// DEBUG: Operating on on
// DEBUG: 134
// DEBUG: (129, 197)
// DEBUG: Operating on one
// DEBUG: 156
// DEBUG: (151, 197)
// DEBUG: Operating on hip
// DEBUG: 178
// DEBUG: (173, 197)
// DEBUG: Operating on and
// DEBUG: 200
// DEBUG: (195, 197)
// DEBUG: Operating on his
// DEBUG: ['uniform', 'with', 'his', 'sidearm', 'on', 'one', 'hip', 'and']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (9, 209)
// DEBUG: Operating on hickory
// DEBUG: 64
// DEBUG: (59, 209)
// DEBUG: Operating on stick
// DEBUG: 100
// DEBUG: (95, 209)
// DEBUG: Operating on in
// DEBUG: 115
// DEBUG: (110, 209)
// DEBUG: Operating on its
// DEBUG: 137
// DEBUG: (132, 209)
// DEBUG: Operating on ridiculous
// DEBUG: 208
// DEBUG: (203, 209)
// DEBUG: Operating on custom-made
// DEBUG: ['his', 'hickory', 'stick', 'in', 'its', 'ridiculous']
// DEBUG: drawing cursor (5, 209)
// DEBUG: (17, 221)
// DEBUG: Operating on holster
// DEBUG: 72
// DEBUG: (67, 221)
// DEBUG: Operating on on
// DEBUG: 87
// DEBUG: (82, 221)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 221)
// DEBUG: Operating on other.
// DEBUG: 152
// DEBUG: ['six minutes past seven']
// DEBUG: drawing cursor (5, 173)
// DEBUG: ['- The Green Mile']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "So far so good. There followed a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "little passage of time when we stood by", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the duty desk, drinking coffee and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "studiously not mentioning what we were all", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "thinking and hoping: that Percy was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "late, that maybe Percy wasn't going to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "show up at all. Considering the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "hostile reviews he'd gotten on the way", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "he'd handled the electrocution,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "that seemed at least possible. But", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "Percy subscribed to that old axiom", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "about how you should get right back on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "the horse that had thrown you,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "because here he came through the door at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "TIMESTRING, resplendent in his blue", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 197, "uniform with his sidearm on one hip and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 209, "his hickory stick in its ridiculous", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "six minutes past seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- The Green Mile", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:06 - Percy subscribed to that old axiom about how you should get right back on the horse that had thrown you, because here he came through the door at six minutes past seven, resplendent in his blue uniform with his sidearm on one hip and his hickory stick in its ridiculous custom-made holster on the other. - Stephen King, The Green Mile"));
// DEBUG: (5, 5)
// DEBUG: Operating on Percy
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on subscribed
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on to
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on that
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on old
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on axiom
// DEBUG: ['Percy', 'subscribed', 'to', 'that', 'old']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on about
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on how
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on you
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on should
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on get
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on right
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on back
// DEBUG: ['axiom', 'about', 'how', 'you', 'should', 'get', 'right']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on on
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on horse
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on that
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on had
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on thrown
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on you,
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on because
// DEBUG: ['back', 'on', 'the', 'horse', 'that', 'had', 'thrown', 'you,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on here
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on he
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on came
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on through
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on the
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on door
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on at
// DEBUG: 207
// DEBUG: (202, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['because', 'here', 'he', 'came', 'through', 'the', 'door', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on resplendent
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on in
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on his
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on blue
// DEBUG: 166
// DEBUG: (161, 65)
// DEBUG: Operating on uniform
// DEBUG: ['TIMESTRING,', 'resplendent', 'in', 'his', 'blue']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on with
// DEBUG: 47
// DEBUG: (42, 77)
// DEBUG: Operating on his
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on sidearm
// DEBUG: 119
// DEBUG: (114, 77)
// DEBUG: Operating on on
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on one
// DEBUG: 156
// DEBUG: (151, 77)
// DEBUG: Operating on hip
// DEBUG: 178
// DEBUG: (173, 77)
// DEBUG: Operating on and
// DEBUG: 200
// DEBUG: (195, 77)
// DEBUG: Operating on his
// DEBUG: ['uniform', 'with', 'his', 'sidearm', 'on', 'one', 'hip', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on hickory
// DEBUG: 64
// DEBUG: (59, 89)
// DEBUG: Operating on stick
// DEBUG: 100
// DEBUG: (95, 89)
// DEBUG: Operating on in
// DEBUG: 115
// DEBUG: (110, 89)
// DEBUG: Operating on its
// DEBUG: 137
// DEBUG: (132, 89)
// DEBUG: Operating on ridiculous
// DEBUG: 208
// DEBUG: (203, 89)
// DEBUG: Operating on custom-made
// DEBUG: ['his', 'hickory', 'stick', 'in', 'its', 'ridiculous']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on holster
// DEBUG: 72
// DEBUG: (67, 101)
// DEBUG: Operating on on
// DEBUG: 87
// DEBUG: (82, 101)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 101)
// DEBUG: Operating on other.
// DEBUG: 152
// DEBUG: ['six minutes past seven']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- The Green Mile']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "Percy subscribed to that old", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "axiom about how you should get right", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "back on the horse that had thrown you,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "because here he came through the door at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING, resplendent in his blue", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "uniform with his sidearm on one hip and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "his hickory stick in its ridiculous", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "six minutes past seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- The Green Mile", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:07 for 0 quotations:
    case 427:
      Serial.println(F("No quotes for 07:07"));
      return;

    // Codegen for 07:08 for 1 quotations:
    case 428:
      Serial.println(F("Only one option for 07:08:"));
    Serial.println(F("07:08 - Reacher had no watch but he figured when he saw Gregory it must have been between eight and nine minutes after seven o'clock. - Lee Child, The Hard Way"));
// DEBUG: (5, 5)
// DEBUG: Operating on Reacher
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on had
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on no
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on watch
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on but
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on he
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on figured
// DEBUG: ['Reacher', 'had', 'no', 'watch', 'but', 'he']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on when
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on he
// DEBUG: 62
// DEBUG: (57, 17)
// DEBUG: Operating on saw
// DEBUG: 84
// DEBUG: (79, 17)
// DEBUG: Operating on Gregory
// DEBUG: 134
// DEBUG: (129, 17)
// DEBUG: Operating on it
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on must
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on have
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on been
// DEBUG: ['figured', 'when', 'he', 'saw', 'Gregory', 'it', 'must', 'have']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['been']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: ["between eight and nine minutes after seven o'clock"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Lee Child, The Hard Way']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "Reacher had no watch but he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "figured when he saw Gregory it must have", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "been", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "between eight and nine minutes after seven o'clock", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- Lee Child, The Hard Way", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:09 for 2 quotations:
    case 429:
      option = random(0, 2);
      Serial.print(F("2 options for 07:09. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:09 - In the living room the voice-clock sang, Tick-tock, seven o'clock, time to get up, time to get up, seven o 'clock! as if it were afraid that nobody would. The morning house lay empty. The clock ticked on, repeating and repeating its sounds into the emptiness. Seven-nine, breakfast time, seven-nine! - Ray Bradbury, There Will Come Soft Rains "));
// DEBUG: (5, 5)
// DEBUG: Operating on In
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on living
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on room
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on the
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on voice-clock
// DEBUG: ['In', 'the', 'living', 'room', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on sang,
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on Tick-tock,
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on seven
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on o'clock,
// DEBUG: ['voice-clock', 'sang,', 'Tick-tock,', 'seven']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on time
// DEBUG: 48
// DEBUG: (43, 29)
// DEBUG: Operating on to
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on get
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on up,
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on time
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on to
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on get
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on up,
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on seven
// DEBUG: ["o'clock,", 'time', 'to', 'get', 'up,', 'time', 'to', 'get', 'up,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on o
// DEBUG: 24
// DEBUG: (19, 41)
// DEBUG: Operating on 'clock!
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on as
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on if
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on it
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on were
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on afraid
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on that
// DEBUG: ['seven', 'o', "'clock!", 'as', 'if', 'it', 'were', 'afraid']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on nobody
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on would.
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on The
// DEBUG: 123
// DEBUG: (118, 53)
// DEBUG: Operating on morning
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on house
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on lay
// DEBUG: ['that', 'nobody', 'would.', 'The', 'morning', 'house']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on empty.
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on The
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on clock
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on ticked
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on on,
// DEBUG: 180
// DEBUG: (175, 65)
// DEBUG: Operating on repeating
// DEBUG: ['lay', 'empty.', 'The', 'clock', 'ticked', 'on,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 77)
// DEBUG: Operating on repeating
// DEBUG: 106
// DEBUG: (101, 77)
// DEBUG: Operating on its
// DEBUG: 128
// DEBUG: (123, 77)
// DEBUG: Operating on sounds
// DEBUG: 171
// DEBUG: (166, 77)
// DEBUG: Operating on into
// DEBUG: 200
// DEBUG: (195, 77)
// DEBUG: Operating on the
// DEBUG: ['repeating', 'and', 'repeating', 'its', 'sounds', 'into']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on emptiness.
// DEBUG: 85
// DEBUG: (80, 89)
// DEBUG: Operating on Seven-nine,
// DEBUG: 163
// DEBUG: (158, 89)
// DEBUG: Operating on breakfast
// DEBUG: ['the', 'emptiness.', 'Seven-nine,']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (15, 101)
// DEBUG: Operating on time,
// DEBUG: 56
// DEBUG: (51, 101)
// DEBUG: Operating on TIMESTRING!
// DEBUG: Wrorking on the timestring
// DEBUG: 205
// DEBUG: ['seven-nine']
// DEBUG: drawing cursor (51, 101)
// DEBUG: ['- There Will Come Soft Rains']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "In the living room the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "voice-clock sang, Tick-tock, seven", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "o'clock, time to get up, time to get up,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "seven o 'clock! as if it were afraid", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "that nobody would. The morning house", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "lay empty. The clock ticked on,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "repeating and repeating its sounds into", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "the emptiness. Seven-nine,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(51, 101, "seven-nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- There Will Come Soft Rains", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:09 - Seven-nine, breakfast time, seven-nine! - Ray Bradbury, There Will Come Soft Rains"));
// DEBUG: (5, 5)
// DEBUG: Operating on Seven-nine,
// DEBUG: 88
// DEBUG: (83, 5)
// DEBUG: Operating on breakfast
// DEBUG: 152
// DEBUG: (147, 5)
// DEBUG: Operating on time,
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on TIMESTRING!
// DEBUG: Wrorking on the timestring
// DEBUG: ['Seven-nine,', 'breakfast', 'time,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 158
// DEBUG: ['seven-nine']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- There Will Come Soft Rains']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "Seven-nine, breakfast time,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "seven-nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- There Will Come Soft Rains", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:10 for 2 quotations:
    case 430:
      option = random(0, 2);
      Serial.print(F("2 options for 07:10. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:10 - A search in Bradshaw informed me that a train left St Pancras at 7.10, which would land me at any Galloway station in the late afternoon. - John Buchan, The Thirty-Nine Steps"));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on search
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on in
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on Bradshaw
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on informed
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on me
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on that
// DEBUG: ['A', 'search', 'in', 'Bradshaw', 'informed', 'me']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 17)
// DEBUG: Operating on train
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on left
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on St
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on Pancras
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on at
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['that', 'a', 'train', 'left', 'St', 'Pancras', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on which
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on would
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on land
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on me
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on at
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on any
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on Galloway
// DEBUG: ['TIMESTRING,', 'which', 'would', 'land', 'me', 'at', 'any']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on station
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on in
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on the
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on late
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on afternoon.
// DEBUG: 206
// DEBUG: ['7.10']
// DEBUG: drawing cursor (163, 17)
// DEBUG: ['- The Thirty-Nine Steps']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "A search in Bradshaw informed me", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "that a train left St Pancras at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, which would land me at any", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(163, 17, "7.10", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- The Thirty-Nine Steps", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:10 - There were many others waiting to execute the same operation, so she would have to move fast, elbow her way to the front so that she emerged first. The time was 7:10 in the morning. The manoeuvre would start at 7:12. She looked apprehensively at the giant clock at the railway station. - Mini Nair, The Fourth Passenger "));
// DEBUG: (5, 5)
// DEBUG: Operating on There
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on were
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on many
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on others
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on waiting
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on to
// DEBUG: ['There', 'were', 'many', 'others', 'waiting']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on execute
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on the
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on same
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on operation,
// DEBUG: 185
// DEBUG: (180, 17)
// DEBUG: Operating on so
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on she
// DEBUG: ['to', 'execute', 'the', 'same', 'operation,', 'so']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on would
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on have
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on to
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on move
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on fast,
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on elbow
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on her
// DEBUG: ['she', 'would', 'have', 'to', 'move', 'fast,', 'elbow']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on way
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on to
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on front
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on so
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on that
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on she
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on emerged
// DEBUG: ['her', 'way', 'to', 'the', 'front', 'so', 'that', 'she']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on first.
// DEBUG: 61
// DEBUG: (56, 53)
// DEBUG: Operating on The
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on time
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on was
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['emerged', 'first.', 'The', 'time', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on morning.
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on The
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on manoeuvre
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on would
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning.', 'The', 'manoeuvre']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on start
// DEBUG: 52
// DEBUG: (47, 77)
// DEBUG: Operating on at
// DEBUG: 67
// DEBUG: (62, 77)
// DEBUG: Operating on 7:12.
// DEBUG: 103
// DEBUG: (98, 77)
// DEBUG: Operating on She
// DEBUG: 125
// DEBUG: (120, 77)
// DEBUG: Operating on looked
// DEBUG: 168
// DEBUG: (163, 77)
// DEBUG: Operating on apprehensively
// DEBUG: ['would', 'start', 'at', '7:12.', 'She', 'looked']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (20, 89)
// DEBUG: Operating on at
// DEBUG: 40
// DEBUG: (35, 89)
// DEBUG: Operating on the
// DEBUG: 62
// DEBUG: (57, 89)
// DEBUG: Operating on giant
// DEBUG: 98
// DEBUG: (93, 89)
// DEBUG: Operating on clock
// DEBUG: 134
// DEBUG: (129, 89)
// DEBUG: Operating on at
// DEBUG: 149
// DEBUG: (144, 89)
// DEBUG: Operating on the
// DEBUG: 171
// DEBUG: (166, 89)
// DEBUG: Operating on railway
// DEBUG: ['apprehensively', 'at', 'the', 'giant', 'clock', 'at', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on station.
// DEBUG: 75
// DEBUG: ['7:10']
// DEBUG: drawing cursor (129, 53)
// DEBUG: ['- The Fourth Passenger']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "There were many others waiting", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "to execute the same operation, so", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "she would have to move fast, elbow", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "her way to the front so that she", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "emerged first. The time was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING in the morning. The manoeuvre", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "would start at 7:12. She looked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "apprehensively at the giant clock at the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(129, 53, "7:10", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- The Fourth Passenger", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:11 for 0 quotations:
    case 431:
      Serial.println(F("No quotes for 07:11"));
      return;

    // Codegen for 07:12 for 1 quotations:
    case 432:
      Serial.println(F("Only one option for 07:12:"));
    Serial.println(F("07:12 - He taught me that if I had to meet someone for an appointment, I must refuse to follow the 'stupid human habit' of arbitrarily choosing a time based on fifteen-minute intervals. 'Never meet people at 7:45 or 6:30, Jasper, but pick times like 7:12 and 8:03!' - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on taught
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on me
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on that
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on if
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on I
// DEBUG: 135
// DEBUG: (130, 5)
// DEBUG: Operating on had
// DEBUG: 157
// DEBUG: (152, 5)
// DEBUG: Operating on to
// DEBUG: 172
// DEBUG: (167, 5)
// DEBUG: Operating on meet
// DEBUG: 201
// DEBUG: (196, 5)
// DEBUG: Operating on someone
// DEBUG: ['He', 'taught', 'me', 'that', 'if', 'I', 'had', 'to', 'meet']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on for
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on an
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on appointment,
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on I
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on must
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on refuse
// DEBUG: ['someone', 'for', 'an', 'appointment,', 'I', 'must']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on follow
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on 'stupid
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on human
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on habit'
// DEBUG: ['refuse', 'to', 'follow', 'the', "'stupid", 'human']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on arbitrarily
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on choosing
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on a
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on time
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on based
// DEBUG: ["habit'", 'of', 'arbitrarily', 'choosing', 'a', 'time']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on fifteen-minute
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on intervals.
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on 'Never
// DEBUG: ['based', 'on', 'fifteen-minute', 'intervals.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on meet
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on people
// DEBUG: 89
// DEBUG: (84, 65)
// DEBUG: Operating on at
// DEBUG: 104
// DEBUG: (99, 65)
// DEBUG: Operating on 7:45
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on or
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on 6:30,
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on Jasper,
// DEBUG: ["'Never", 'meet', 'people', 'at', '7:45', 'or', '6:30,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on but
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on pick
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on times
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on like
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Jasper,', 'but', 'pick', 'times', 'like']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 89)
// DEBUG: Operating on 8:03!'
// DEBUG: 86
// DEBUG: ['7:12']
// DEBUG: drawing cursor (129, 77)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "He taught me that if I had to meet", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "someone for an appointment, I must", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "refuse to follow the 'stupid human", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "habit' of arbitrarily choosing a time", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "based on fifteen-minute intervals.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "'Never meet people at 7:45 or 6:30,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Jasper, but pick times like", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(129, 77, "7:12", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:13 for 1 quotations:
    case 433:
      Serial.println(F("Only one option for 07:13:"));
    Serial.println(F("07:13 - It was all the more surprising and indeed alarming a little later, said Austerlitz, when I looked out of the corridor window of my carriage just before the train left at seven-thirteen, to find it dawning upon me with perfect certainty that I had seen the pattern of glass and steel roof above the platforms before. - WG Sebald, Austerlitz"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on all
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on the
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on more
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on surprising
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on and
// DEBUG: ['It', 'was', 'all', 'the', 'more', 'surprising']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on indeed
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on alarming
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on a
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on little
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on later,
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on said
// DEBUG: ['and', 'indeed', 'alarming', 'a', 'little', 'later,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on Austerlitz,
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on when
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on I
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on looked
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on out
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on of
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on the
// DEBUG: ['said', 'Austerlitz,', 'when', 'I', 'looked', 'out', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on corridor
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on window
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on of
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on my
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on carriage
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on just
// DEBUG: ['the', 'corridor', 'window', 'of', 'my', 'carriage']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on before
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on the
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on train
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on left
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on at
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['just', 'before', 'the', 'train', 'left', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on to
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on find
// DEBUG: ['TIMESTRING,', 'to']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 77)
// DEBUG: Operating on dawning
// DEBUG: 80
// DEBUG: (75, 77)
// DEBUG: Operating on upon
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on me
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on with
// DEBUG: 153
// DEBUG: (148, 77)
// DEBUG: Operating on perfect
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on certainty
// DEBUG: ['find', 'it', 'dawning', 'upon', 'me', 'with', 'perfect']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on that
// DEBUG: 49
// DEBUG: (44, 89)
// DEBUG: Operating on I
// DEBUG: 57
// DEBUG: (52, 89)
// DEBUG: Operating on had
// DEBUG: 79
// DEBUG: (74, 89)
// DEBUG: Operating on seen
// DEBUG: 108
// DEBUG: (103, 89)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 89)
// DEBUG: Operating on pattern
// DEBUG: 180
// DEBUG: (175, 89)
// DEBUG: Operating on of
// DEBUG: 195
// DEBUG: (190, 89)
// DEBUG: Operating on glass
// DEBUG: ['certainty', 'that', 'I', 'had', 'seen', 'the', 'pattern', 'of']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 101)
// DEBUG: Operating on steel
// DEBUG: 74
// DEBUG: (69, 101)
// DEBUG: Operating on roof
// DEBUG: 103
// DEBUG: (98, 101)
// DEBUG: Operating on above
// DEBUG: 139
// DEBUG: (134, 101)
// DEBUG: Operating on the
// DEBUG: 161
// DEBUG: (156, 101)
// DEBUG: Operating on platforms
// DEBUG: ['glass', 'and', 'steel', 'roof', 'above', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (15, 113)
// DEBUG: Operating on before.
// DEBUG: 70
// DEBUG: ['seven-thirteen']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- WG Sebald, Austerlitz']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "It was all the more surprising", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "and indeed alarming a little later,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "said Austerlitz, when I looked out of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the corridor window of my carriage", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "just before the train left at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING, to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "find it dawning upon me with perfect", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "certainty that I had seen the pattern of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "glass and steel roof above the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "seven-thirteen", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- WG Sebald, Austerlitz", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:14 for 1 quotations:
    case 434:
      Serial.println(F("Only one option for 07:14:"));
    Serial.println(F("07:14 - At 7.14 Harry knew he was alive. He knew that because the pain could be felt in every nerve fibre. - Jo Nesbo, The Redeemer"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on Harry
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on knew
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on he
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on was
// DEBUG: ['At', 'TIMESTRING', 'Harry', 'knew', 'he']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on alive.
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on He
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on knew
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on that
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on because
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on the
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on pain
// DEBUG: ['was', 'alive.', 'He', 'knew', 'that', 'because', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on could
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on be
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on felt
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on in
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on every
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on nerve
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on fibre.
// DEBUG: ['pain', 'could', 'be', 'felt', 'in', 'every', 'nerve']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['7.14']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Jo Nesbo, The Redeemer']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING Harry knew he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "was alive. He knew that because the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "pain could be felt in every nerve", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "7.14", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Jo Nesbo, The Redeemer", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:15 for 3 quotations:
    case 435:
      option = random(0, 3);
      Serial.print(F("3 options for 07:15. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:15 - At 7:15 A.M., January 25th, we started flying northwestward under McTighe's pilotage with ten men, seven dogs, a sledge, a fuel and food supply, and other items including the plane's wireless outfit. - H.P. Lovecraft, At the Mountains of Madness "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on January
// DEBUG: ['At', 'TIMESTRING,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on 25th,
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on we
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on started
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on flying
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on northwestward
// DEBUG: ['January', '25th,', 'we', 'started', 'flying']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (19, 29)
// DEBUG: Operating on under
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on McTighe's
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on pilotage
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on with
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on ten
// DEBUG: ['northwestward', 'under', "McTighe's", 'pilotage', 'with']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on men,
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on seven
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on dogs,
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on a
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on sledge,
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on a
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on fuel
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on and
// DEBUG: ['ten', 'men,', 'seven', 'dogs,', 'a', 'sledge,', 'a', 'fuel']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on food
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on supply,
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on and
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on other
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on items
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on including
// DEBUG: ['and', 'food', 'supply,', 'and', 'other', 'items']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on the
// DEBUG: 42
// DEBUG: (37, 65)
// DEBUG: Operating on plane's
// DEBUG: 92
// DEBUG: (87, 65)
// DEBUG: Operating on wireless
// DEBUG: 149
// DEBUG: (144, 65)
// DEBUG: Operating on outfit.
// DEBUG: 199
// DEBUG: ['7:15 A.M.']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- At the Mountains of Madness']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "January 25th, we started flying", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "northwestward under McTighe's pilotage with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "ten men, seven dogs, a sledge, a fuel", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "and food supply, and other items", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "7:15 A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- At the Mountains of Madness", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:15 - Gough again knocked on Mr and Mrs Kent's bedroom door. This time it was opened - Mary Kent had got out of bed and put on her dressing gown, having just checked her husband's watch: it was 7.15. A confused conversation ensued, in which each woman seemed to assume Saville was with the other. - Kate Summerscale, The Suspicions of Mr Whicher "));
// DEBUG: (5, 5)
// DEBUG: Operating on Gough
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on again
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on knocked
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on on
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on Mr
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on and
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on Mrs
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on Kent's
// DEBUG: ['Gough', 'again', 'knocked', 'on', 'Mr', 'and', 'Mrs']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on bedroom
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on door.
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on This
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on time
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on it
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on was
// DEBUG: 198
// DEBUG: (193, 17)
// DEBUG: Operating on opened
// DEBUG: ["Kent's", 'bedroom', 'door.', 'This', 'time', 'it', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on -
// DEBUG: 25
// DEBUG: (20, 29)
// DEBUG: Operating on Mary
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on Kent
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on had
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on got
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on out
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on of
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on bed
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on and
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on put
// DEBUG: ['opened', '-', 'Mary', 'Kent', 'had', 'got', 'out', 'of', 'bed', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on on
// DEBUG: 29
// DEBUG: (24, 41)
// DEBUG: Operating on her
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on dressing
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on gown,
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on having
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on just
// DEBUG: ['put', 'on', 'her', 'dressing', 'gown,', 'having']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on checked
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on her
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on husband's
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on watch:
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on it
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on was
// DEBUG: ['just', 'checked', 'her', "husband's", 'watch:', 'it']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 121
// DEBUG: (116, 65)
// DEBUG: Operating on A
// DEBUG: 129
// DEBUG: (124, 65)
// DEBUG: Operating on confused
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on conversation
// DEBUG: ['was', 'TIMESTRING.', 'A', 'confused']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (18, 77)
// DEBUG: Operating on ensued,
// DEBUG: 73
// DEBUG: (68, 77)
// DEBUG: Operating on in
// DEBUG: 88
// DEBUG: (83, 77)
// DEBUG: Operating on which
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on each
// DEBUG: 153
// DEBUG: (148, 77)
// DEBUG: Operating on woman
// DEBUG: 189
// DEBUG: (184, 77)
// DEBUG: Operating on seemed
// DEBUG: ['conversation', 'ensued,', 'in', 'which', 'each', 'woman']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 89)
// DEBUG: Operating on assume
// DEBUG: 75
// DEBUG: (70, 89)
// DEBUG: Operating on Saville
// DEBUG: 125
// DEBUG: (120, 89)
// DEBUG: Operating on was
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on with
// DEBUG: 176
// DEBUG: (171, 89)
// DEBUG: Operating on the
// DEBUG: 198
// DEBUG: (193, 89)
// DEBUG: Operating on other.
// DEBUG: ['seemed', 'to', 'assume', 'Saville', 'was', 'with', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['7.15']
// DEBUG: drawing cursor (9, 65)
// DEBUG: ['- Kate Summerscale']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "Gough again knocked on Mr and Mrs", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Kent's bedroom door. This time it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "opened - Mary Kent had got out of bed and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "put on her dressing gown, having", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "just checked her husband's watch: it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "was TIMESTRING. A confused", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "conversation ensued, in which each woman", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "seemed to assume Saville was with the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(9, 65, "7.15", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- Kate Summerscale", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("07:15 - It was early in April in the year ’83 that I woke one morning to find Sherlock Holmes standing, fully dressed, by the side of my bed. He was a late riser, as a rule, and as the clock on the mantelpiece showed me that it was only a quarter-past seven, I blinked up at him in some surprise, and perhaps just a little resentment, for I was myself regular in my habits. - Arthur Conan Doyle, The Adventure of the Speckled Band "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on early
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on in
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on April
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on in
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on the
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on year
// DEBUG: 200
// DEBUG: (195, 5)
// DEBUG: Operating on ’83
// DEBUG: ['It', 'was', 'early', 'in', 'April', 'in', 'the', 'year']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on that
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on I
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on woke
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on one
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on morning
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on to
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on find
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on Sherlock
// DEBUG: ['’83', 'that', 'I', 'woke', 'one', 'morning', 'to', 'find']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on Holmes
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on standing,
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on fully
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on dressed,
// DEBUG: ['Sherlock', 'Holmes', 'standing,', 'fully']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on by
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on the
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on side
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on of
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on my
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on bed.
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on He
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on was
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on a
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on late
// DEBUG: ['dressed,', 'by', 'the', 'side', 'of', 'my', 'bed.', 'He', 'was', 'a']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on riser,
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on as
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on a
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on rule,
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on and
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on as
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on the
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on clock
// DEBUG: ['late', 'riser,', 'as', 'a', 'rule,', 'and', 'as', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on mantelpiece
// DEBUG: 131
// DEBUG: (126, 65)
// DEBUG: Operating on showed
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on me
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on that
// DEBUG: ['clock', 'on', 'the', 'mantelpiece', 'showed', 'me']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 77)
// DEBUG: Operating on was
// DEBUG: 52
// DEBUG: (47, 77)
// DEBUG: Operating on only
// DEBUG: 81
// DEBUG: (76, 77)
// DEBUG: Operating on a
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['that', 'it', 'was', 'only', 'a']
// DEBUG: drawing cursor (5, 77)
// DEBUG: []
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on I
// DEBUG: 30
// DEBUG: (25, 101)
// DEBUG: Operating on blinked
// DEBUG: 80
// DEBUG: (75, 101)
// DEBUG: Operating on up
// DEBUG: 95
// DEBUG: (90, 101)
// DEBUG: Operating on at
// DEBUG: 110
// DEBUG: (105, 101)
// DEBUG: Operating on him
// DEBUG: 132
// DEBUG: (127, 101)
// DEBUG: Operating on in
// DEBUG: 147
// DEBUG: (142, 101)
// DEBUG: Operating on some
// DEBUG: 176
// DEBUG: (171, 101)
// DEBUG: Operating on surprise,
// DEBUG: ['TIMESTRING,', 'I', 'blinked', 'up', 'at', 'him', 'in', 'some']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (15, 113)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 113)
// DEBUG: Operating on perhaps
// DEBUG: 92
// DEBUG: (87, 113)
// DEBUG: Operating on just
// DEBUG: 121
// DEBUG: (116, 113)
// DEBUG: Operating on a
// DEBUG: 129
// DEBUG: (124, 113)
// DEBUG: Operating on little
// DEBUG: 172
// DEBUG: (167, 113)
// DEBUG: Operating on resentment,
// DEBUG: ['surprise,', 'and', 'perhaps', 'just', 'a', 'little']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (17, 125)
// DEBUG: Operating on for
// DEBUG: 44
// DEBUG: (39, 125)
// DEBUG: Operating on I
// DEBUG: 52
// DEBUG: (47, 125)
// DEBUG: Operating on was
// DEBUG: 74
// DEBUG: (69, 125)
// DEBUG: Operating on myself
// DEBUG: 117
// DEBUG: (112, 125)
// DEBUG: Operating on regular
// DEBUG: 167
// DEBUG: (162, 125)
// DEBUG: Operating on in
// DEBUG: 182
// DEBUG: (177, 125)
// DEBUG: Operating on my
// DEBUG: 197
// DEBUG: (192, 125)
// DEBUG: Operating on habits.
// DEBUG: ['resentment,', 'for', 'I', 'was', 'myself', 'regular', 'in', 'my']
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['quarter-past seven']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- Arthur Conan Doyle']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "It was early in April in the year", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "’83 that I woke one morning to find", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Sherlock Holmes standing, fully", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "dressed, by the side of my bed. He was a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "late riser, as a rule, and as the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "clock on the mantelpiece showed me", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "that it was only a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "TIMESTRING, I blinked up at him in some", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "surprise, and perhaps just a little", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "resentment, for I was myself regular in my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "quarter-past seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Arthur Conan Doyle", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:16 for 0 quotations:
    case 436:
      Serial.println(F("No quotes for 07:16"));
      return;

    // Codegen for 07:17 for 1 quotations:
    case 437:
      Serial.println(F("Only one option for 07:17:"));
    Serial.println(F("07:17 - As of 7.17am local time on 30 June 1908, Padzhitnoff had been working for nearly a year as a contract employee of the Okhrana, receiving five hundred rubles a month, a sum which hovered at the exorbitant end of spy-budget outlays for those years. - Thomas Pynchon, Against the Day"));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on of
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on local
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on time
// DEBUG: ['As', 'of', 'TIMESTRING', 'local']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on on
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on 30
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on June
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on 1908,
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on Padzhitnoff
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on had
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on been
// DEBUG: ['time', 'on', '30', 'June', '1908,', 'Padzhitnoff', 'had']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on working
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on for
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on nearly
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on a
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on year
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on as
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on a
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on contract
// DEBUG: ['been', 'working', 'for', 'nearly', 'a', 'year', 'as', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on employee
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on of
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on the
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on Okhrana,
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on receiving
// DEBUG: ['contract', 'employee', 'of', 'the', 'Okhrana,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on five
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on hundred
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on rubles
// DEBUG: 142
// DEBUG: (137, 53)
// DEBUG: Operating on a
// DEBUG: 150
// DEBUG: (145, 53)
// DEBUG: Operating on month,
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on a
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on sum
// DEBUG: ['receiving', 'five', 'hundred', 'rubles', 'a', 'month,', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on which
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on hovered
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on at
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on the
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on exorbitant
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on end
// DEBUG: ['sum', 'which', 'hovered', 'at', 'the', 'exorbitant']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on of
// DEBUG: 29
// DEBUG: (24, 77)
// DEBUG: Operating on spy-budget
// DEBUG: 100
// DEBUG: (95, 77)
// DEBUG: Operating on outlays
// DEBUG: 150
// DEBUG: (145, 77)
// DEBUG: Operating on for
// DEBUG: 172
// DEBUG: (167, 77)
// DEBUG: Operating on those
// DEBUG: 208
// DEBUG: (203, 77)
// DEBUG: Operating on years.
// DEBUG: ['end', 'of', 'spy-budget', 'outlays', 'for', 'those']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['7.17am']
// DEBUG: drawing cursor (35, 5)
// DEBUG: ['- Against the Day']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "As of TIMESTRING local", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "time on 30 June 1908, Padzhitnoff had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "been working for nearly a year as a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "contract employee of the Okhrana,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "receiving five hundred rubles a month, a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "sum which hovered at the exorbitant", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "end of spy-budget outlays for those", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(35, 5, "7.17am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Against the Day", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:18 for 0 quotations:
    case 438:
      Serial.println(F("No quotes for 07:18"));
      return;

    // Codegen for 07:19 for 1 quotations:
    case 439:
      Serial.println(F("Only one option for 07:19:"));
    Serial.println(F("07:19 - I opened the sunroof and turned up the CD player volume to combat fatigue, and at 7.19am on Saturday, with the caffeine still running all around my brain, Jackson Browne and I pulled into Moree. - Graeme Simsion, The Rosie Project"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on opened
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on sunroof
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on and
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on turned
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on up
// DEBUG: ['I', 'opened', 'the', 'sunroof', 'and', 'turned']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on CD
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on player
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on volume
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on to
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on combat
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on fatigue,
// DEBUG: ['up', 'the', 'CD', 'player', 'volume', 'to', 'combat']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on and
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on at
// DEBUG: 56
// DEBUG: (51, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on on
// DEBUG: 185
// DEBUG: (180, 29)
// DEBUG: Operating on Saturday,
// DEBUG: ['fatigue,', 'and', 'at', 'TIMESTRING', 'on']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on with
// DEBUG: 49
// DEBUG: (44, 41)
// DEBUG: Operating on the
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on caffeine
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on still
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on running
// DEBUG: ['Saturday,', 'with', 'the', 'caffeine', 'still']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on all
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on around
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on my
// DEBUG: 98
// DEBUG: (93, 53)
// DEBUG: Operating on brain,
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on Jackson
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on Browne
// DEBUG: ['running', 'all', 'around', 'my', 'brain,', 'Jackson']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 65)
// DEBUG: Operating on I
// DEBUG: 47
// DEBUG: (42, 65)
// DEBUG: Operating on pulled
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on into
// DEBUG: 119
// DEBUG: (114, 65)
// DEBUG: Operating on Moree.
// DEBUG: 162
// DEBUG: ['7.19am']
// DEBUG: drawing cursor (51, 29)
// DEBUG: ['- The Rosie Project']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "I opened the sunroof and turned", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "up the CD player volume to combat", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "fatigue, and at TIMESTRING on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Saturday, with the caffeine still", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "running all around my brain, Jackson", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(51, 29, "7.19am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- The Rosie Project", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:20 for 2 quotations:
    case 440:
      option = random(0, 2);
      Serial.print(F("2 options for 07:20. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:20 - And this was my timetable when I lived at home with Father and I thought that Mother was dead from a heart attack (this was the timetable for a Monday and also it is an approximation). 7.20 a.m. Wake up - Mark Haddon, The Curious Incident of the Dog in the Night-time "));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on this
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on was
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on my
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on timetable
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on when
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on I
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on lived
// DEBUG: ['And', 'this', 'was', 'my', 'timetable', 'when', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on home
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on with
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on Father
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on and
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on I
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on thought
// DEBUG: ['lived', 'at', 'home', 'with', 'Father', 'and', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on that
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on Mother
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on was
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on dead
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on from
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on a
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on heart
// DEBUG: ['thought', 'that', 'Mother', 'was', 'dead', 'from', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on attack
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on (this
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on was
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on the
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on timetable
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on for
// DEBUG: ['heart', 'attack', '(this', 'was', 'the', 'timetable']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on a
// DEBUG: 22
// DEBUG: (17, 53)
// DEBUG: Operating on Monday
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on and
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on also
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on it
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on is
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on an
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on approximation).
// DEBUG: ['for', 'a', 'Monday', 'and', 'also', 'it', 'is', 'an']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (21, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on Wake
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on up
// DEBUG: 205
// DEBUG: ['7.20 a.m.']
// DEBUG: drawing cursor (21, 65)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "And this was my timetable when I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "lived at home with Father and I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "thought that Mother was dead from a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "heart attack (this was the timetable", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "for a Monday and also it is an", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(21, 65, "7.20 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:20 - He who had been a boy very credulous of life was no longer greatly interested in the possible and improbable adventures of each new day. He escaped from reality till the alarm-clock rang, at seven-twenty. - Sinclair Lewis, Babbitt"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on who
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on had
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on been
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on a
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on boy
// DEBUG: 128
// DEBUG: (123, 5)
// DEBUG: Operating on very
// DEBUG: 157
// DEBUG: (152, 5)
// DEBUG: Operating on credulous
// DEBUG: ['He', 'who', 'had', 'been', 'a', 'boy', 'very']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on of
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on life
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on was
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on no
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on longer
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on greatly
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on interested
// DEBUG: ['credulous', 'of', 'life', 'was', 'no', 'longer', 'greatly']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on possible
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on and
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on improbable
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on adventures
// DEBUG: ['interested', 'in', 'the', 'possible', 'and', 'improbable']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on of
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on each
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on new
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on day.
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on He
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on escaped
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on from
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on reality
// DEBUG: ['adventures', 'of', 'each', 'new', 'day.', 'He', 'escaped', 'from']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on till
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on alarm-clock
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on rang,
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on at
// DEBUG: 198
// DEBUG: (193, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['reality', 'till', 'the', 'alarm-clock', 'rang,', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: 172
// DEBUG: ['seven-twenty']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- Sinclair Lewis, Babbitt']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "He who had been a boy very", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "credulous of life was no longer greatly", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "interested in the possible and improbable", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "adventures of each new day. He escaped from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "reality till the alarm-clock rang, at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "seven-twenty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Sinclair Lewis, Babbitt", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:21 for 0 quotations:
    case 441:
      Serial.println(F("No quotes for 07:21"));
      return;

    // Codegen for 07:22 for 0 quotations:
    case 442:
      Serial.println(F("No quotes for 07:22"));
      return;

    // Codegen for 07:23 for 0 quotations:
    case 443:
      Serial.println(F("No quotes for 07:23"));
      return;

    // Codegen for 07:24 for 0 quotations:
    case 444:
      Serial.println(F("No quotes for 07:24"));
      return;

    // Codegen for 07:25 for 1 quotations:
    case 445:
      Serial.println(F("Only one option for 07:25:"));
    Serial.println(F("07:25 - 7.25 a.m. clean teeth and wash face - Mark Haddon, The Curious Incident Of The Dog In The Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on clean
// DEBUG: 181
// DEBUG: (176, 5)
// DEBUG: Operating on teeth
// DEBUG: ['TIMESTRING', 'clean']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on wash
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on face
// DEBUG: 96
// DEBUG: ['7.25 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING clean", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "7.25 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:26 for 0 quotations:
    case 446:
      Serial.println(F("No quotes for 07:26"));
      return;

    // Codegen for 07:27 for 1 quotations:
    case 447:
      Serial.println(F("Only one option for 07:27:"));
    Serial.println(F("07:27 - His appointment with the doctor was for 8.45. It was 7.27. - Henning Mankell, The Return of the Dancing Master"));
// DEBUG: (5, 5)
// DEBUG: Operating on His
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on appointment
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on with
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on the
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on doctor
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on was
// DEBUG: ['His', 'appointment', 'with', 'the', 'doctor']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on for
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on 8.45.
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on It
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on was
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['was', 'for', '8.45.', 'It', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['7.27']
// DEBUG: drawing cursor (104, 17)
// DEBUG: ['- Henning Mankell']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "His appointment with the doctor", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "was for 8.45. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(104, 17, "7.27", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Henning Mankell", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:28 for 0 quotations:
    case 448:
      Serial.println(F("No quotes for 07:28"));
      return;

    // Codegen for 07:29 for 1 quotations:
    case 449:
      Serial.println(F("Only one option for 07:29:"));
    Serial.println(F("07:29 - At 7.29 in the morning of 1 July, the cinematographer finds himself filming silence itself. - Elizabeth Speller, At Break of Day"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on in
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on the
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on morning
// DEBUG: ['At', 'TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on 1
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on July,
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on the
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on cinematographer
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on finds
// DEBUG: ['morning', 'of', '1', 'July,', 'the', 'cinematographer']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on himself
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on filming
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on silence
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on itself.
// DEBUG: ['finds', 'himself', 'filming', 'silence']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['7.29']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- At Break of Day']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "morning of 1 July, the cinematographer", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "finds himself filming silence", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "7.29", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- At Break of Day", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:30 for 2 quotations:
    case 450:
      option = random(0, 2);
      Serial.print(F("2 options for 07:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:30 - At half-past seven the next morning he rang the bell of 21 Blenheim Avenue. - William Trevor, After Rain"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 202
// DEBUG: (197, 5)
// DEBUG: Operating on the
// DEBUG: ['At', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on next
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on morning
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on he
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on rang
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on the
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on bell
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on of
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on 21
// DEBUG: ['the', 'next', 'morning', 'he', 'rang', 'the', 'bell', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on Blenheim
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on Avenue.
// DEBUG: 120
// DEBUG: ['half-past seven']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- William Trevor, After Rain']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the next morning he rang the bell of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "half-past seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- William Trevor, After Rain", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:30 - Precisely at half past seven the station-master came into the traffic office. He weighed almost sixteen stone, but women always said that he was incredibly light on his feet when he danced. - Bohumil Hrabal, Closely Observed Trains "));
// DEBUG: (5, 5)
// DEBUG: Operating on Precisely
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on at
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Precisely', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on the
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on station-master
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on came
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on into
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'the', 'station-master', 'came', 'into']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on traffic
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on office.
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on He
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on weighed
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on almost
// DEBUG: ['the', 'traffic', 'office.', 'He', 'weighed']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on sixteen
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on stone,
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on but
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on women
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on always
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on said
// DEBUG: ['almost', 'sixteen', 'stone,', 'but', 'women', 'always']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on that
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on he
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on was
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on incredibly
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on light
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on on
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on his
// DEBUG: ['said', 'that', 'he', 'was', 'incredibly', 'light', 'on']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on feet
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on when
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on he
// DEBUG: 87
// DEBUG: (82, 65)
// DEBUG: Operating on danced.
// DEBUG: 137
// DEBUG: ['half past seven']
// DEBUG: drawing cursor (84, 5)
// DEBUG: ['- Closely Observed Trains']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "Precisely at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING the station-master came into", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the traffic office. He weighed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "almost sixteen stone, but women always", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "said that he was incredibly light on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(84, 5, "half past seven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Closely Observed Trains", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:31 for 0 quotations:
    case 451:
      Serial.println(F("No quotes for 07:31"));
      return;

    // Codegen for 07:32 for 1 quotations:
    case 452:
      Serial.println(F("Only one option for 07:32:"));
    Serial.println(F("07:32 - At 7:32, he suffered a fatal stroke. - Stephen King, IT"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on he
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on suffered
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on a
// DEBUG: ['At', 'TIMESTRING,', 'he', 'suffered']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (7, 17)
// DEBUG: Operating on fatal
// DEBUG: 48
// DEBUG: (43, 17)
// DEBUG: Operating on stroke.
// DEBUG: 98
// DEBUG: ['7:32']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Stephen King, IT']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING, he suffered", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "7:32", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- Stephen King, IT", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:33 for 0 quotations:
    case 453:
      Serial.println(F("No quotes for 07:33"));
      return;

    // Codegen for 07:34 for 1 quotations:
    case 454:
      Serial.println(F("Only one option for 07:34:"));
    Serial.println(F("07:34 - 7:34. Monday morning, Blackeberg. The burglar alarm at the ICA grocery store on Arvid Morne's way is set off. - John Ajvide Lindqvist, Let The Right One In"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on Monday
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on morning,
// DEBUG: ['TIMESTRING', 'Monday']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on Blackeberg.
// DEBUG: 97
// DEBUG: (92, 17)
// DEBUG: Operating on The
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on burglar
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on alarm
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on at
// DEBUG: ['morning,', 'Blackeberg.', 'The', 'burglar', 'alarm']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on ICA
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on grocery
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on store
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on on
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on Arvid
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on Morne's
// DEBUG: ['at', 'the', 'ICA', 'grocery', 'store', 'on', 'Arvid']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on way
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on is
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on set
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on off.
// DEBUG: 106
// DEBUG: ['7:34.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Let The Right One In']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING Monday", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "morning, Blackeberg. The burglar alarm", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "at the ICA grocery store on Arvid", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "7:34.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Let The Right One In", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:35 for 2 quotations:
    case 455:
      option = random(0, 2);
      Serial.print(F("2 options for 07:35. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:35 - At 7:35am Ishigami left his apartment as he did every weekday morning. - Higashino, Keigo, The Devotion of Duspect X"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on Ishigami
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on left
// DEBUG: ['At', 'TIMESTRING', 'Ishigami']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on his
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on apartment
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on as
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on he
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on did
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on every
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on weekday
// DEBUG: ['left', 'his', 'apartment', 'as', 'he', 'did', 'every']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on morning.
// DEBUG: 75
// DEBUG: ['7:35am']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Devotion of Duspect X']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING Ishigami", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "left his apartment as he did every", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "7:35am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- The Devotion of Duspect X", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:35 - I looked at my watch. Seven thirty-five. - Kathy Reichs, Bare Bones "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on looked
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on at
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on my
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on watch.
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['I', 'looked', 'at', 'my', 'watch.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 207
// DEBUG: ['Seven thirty-five']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Kathy Reichs, Bare Bones ']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "I looked at my watch.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Seven thirty-five", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Kathy Reichs, Bare Bones ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:36 for 1 quotations:
    case 456:
      Serial.println(F("Only one option for 07:36:"));
    Serial.println(F("07:36 - 7:36, sunrise. The hospital blinds were much better, darker than her own. - John Ajvide Lindqvist, Let The Right One In"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on sunrise.
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on The
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on hospital
// DEBUG: ['TIMESTRING,', 'sunrise.', 'The']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on blinds
// DEBUG: 62
// DEBUG: (57, 17)
// DEBUG: Operating on were
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on much
// DEBUG: 120
// DEBUG: (115, 17)
// DEBUG: Operating on better,
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on darker
// DEBUG: ['hospital', 'blinds', 'were', 'much', 'better,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on than
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on her
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on own.
// DEBUG: 97
// DEBUG: ['7:36']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Let The Right One In']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING, sunrise. The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "hospital blinds were much better,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "7:36", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Let The Right One In", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:37 for 0 quotations:
    case 457:
      Serial.println(F("No quotes for 07:37"));
      return;

    // Codegen for 07:38 for 0 quotations:
    case 458:
      Serial.println(F("No quotes for 07:38"));
      return;

    // Codegen for 07:39 for 1 quotations:
    case 459:
      Serial.println(F("Only one option for 07:39:"));
    Serial.println(F("07:39 - Now, at the station, do you recall speaking to Mr Joseph Markew?' 'Yes, indeed. I was standing on the platform waiting for my usual train - the 7.39 - when he accosted me.' - Julian Barnes, Arthur & George"));
// DEBUG: (5, 5)
// DEBUG: Operating on Now,
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on at
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on the
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on station,
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on do
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on you
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on recall
// DEBUG: ['Now,', 'at', 'the', 'station,', 'do', 'you']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on speaking
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on to
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on Mr
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on Joseph
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on Markew?'
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on 'Yes,
// DEBUG: ['recall', 'speaking', 'to', 'Mr', 'Joseph', "Markew?'"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on indeed.
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on I
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on was
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on standing
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on on
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on the
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on platform
// DEBUG: ["'Yes,", 'indeed.', 'I', 'was', 'standing', 'on', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on waiting
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on for
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on my
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on usual
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on train
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on -
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on the
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['platform', 'waiting', 'for', 'my', 'usual', 'train', '-', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on -
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on when
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on he
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on accosted
// DEBUG: ['TIMESTRING', '-', 'when', 'he']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on me.'
// DEBUG: 48
// DEBUG: ['7.39']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- Arthur & George']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "Now, at the station, do you", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "recall speaking to Mr Joseph Markew?'", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "'Yes, indeed. I was standing on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "platform waiting for my usual train - the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING - when he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "7.39", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Arthur & George", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:40 for 1 quotations:
    case 460:
      Serial.println(F("Only one option for 07:40:"));
    Serial.println(F("07:40 - 7.40 a.m. Have breakfast. - Mark Haddon, The Curious Incident Of The Dog In The Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on Have
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on breakfast.
// DEBUG: ['TIMESTRING', 'Have']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['7.40 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING Have", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "7.40 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:41 for 0 quotations:
    case 461:
      Serial.println(F("No quotes for 07:41"));
      return;

    // Codegen for 07:42 for 1 quotations:
    case 462:
      Serial.println(F("Only one option for 07:42:"));
    Serial.println(F("07:42 - Seven forty-two am., Mr Gasparian: I curse you. I curse your arms so they will wither and die and fall off your body... - Ilona Andrews, Magic Bleeds"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 187
// DEBUG: (182, 5)
// DEBUG: Operating on am.,
// DEBUG: ['TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on Mr
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on Gasparian:
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on I
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on curse
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on you.
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on I
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on curse
// DEBUG: ['am.,', 'Mr', 'Gasparian:', 'I', 'curse', 'you.', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on your
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on arms
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on so
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on they
// DEBUG: 118
// DEBUG: (113, 29)
// DEBUG: Operating on will
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on wither
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on and
// DEBUG: ['curse', 'your', 'arms', 'so', 'they', 'will', 'wither']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on die
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on and
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on fall
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on off
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on your
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on body...
// DEBUG: 188
// DEBUG: ['Seven forty-two']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Ilona Andrews, Magic Bleeds']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "am., Mr Gasparian: I curse you. I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "curse your arms so they will wither", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "Seven forty-two", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Ilona Andrews, Magic Bleeds", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:43 for 0 quotations:
    case 463:
      Serial.println(F("No quotes for 07:43"));
      return;

    // Codegen for 07:44 for 2 quotations:
    case 464:
      option = random(0, 2);
      Serial.print(F("2 options for 07:44. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:44 - And there I was, complaining that all this was just inconvenient, Anna castigates herself. The Goth was obviously right. What does it matter, really, if I'm a bit late for work? She voices her thoughts: \"It's not exactly how you'd choose to go, is it? You'd rather die flying a kite with your grandchildren, or at a great party or something. Not on the seven forty-four.\" - Sarah Rayner, One moment, one morning "));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on there
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on I
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on was,
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on complaining
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on that
// DEBUG: ['And', 'there', 'I', 'was,', 'complaining']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on all
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on this
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on was
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on just
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on inconvenient,
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on Anna
// DEBUG: ['that', 'all', 'this', 'was', 'just', 'inconvenient,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on castigates
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on herself.
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on The
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on Goth
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on was
// DEBUG: ['Anna', 'castigates', 'herself.', 'The', 'Goth']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on obviously
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on right.
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on What
// DEBUG: 150
// DEBUG: (145, 41)
// DEBUG: Operating on does
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on it
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on matter,
// DEBUG: ['was', 'obviously', 'right.', 'What', 'does', 'it']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on really,
// DEBUG: 68
// DEBUG: (63, 53)
// DEBUG: Operating on if
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on I'm
// DEBUG: 105
// DEBUG: (100, 53)
// DEBUG: Operating on a
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on bit
// DEBUG: 135
// DEBUG: (130, 53)
// DEBUG: Operating on late
// DEBUG: 164
// DEBUG: (159, 53)
// DEBUG: Operating on for
// DEBUG: 186
// DEBUG: (181, 53)
// DEBUG: Operating on work?
// DEBUG: ['matter,', 'really,', 'if', "I'm", 'a', 'bit', 'late', 'for']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on She
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on voices
// DEBUG: 81
// DEBUG: (76, 65)
// DEBUG: Operating on her
// DEBUG: 103
// DEBUG: (98, 65)
// DEBUG: Operating on thoughts:
// DEBUG: 167
// DEBUG: (162, 65)
// DEBUG: Operating on \"It's
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on not
// DEBUG: ['work?', 'She', 'voices', 'her', 'thoughts:', '\\"It\'s']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on exactly
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on how
// DEBUG: 86
// DEBUG: (81, 77)
// DEBUG: Operating on you'd
// DEBUG: 122
// DEBUG: (117, 77)
// DEBUG: Operating on choose
// DEBUG: 165
// DEBUG: (160, 77)
// DEBUG: Operating on to
// DEBUG: 180
// DEBUG: (175, 77)
// DEBUG: Operating on go,
// DEBUG: 202
// DEBUG: (197, 77)
// DEBUG: Operating on is
// DEBUG: ['not', 'exactly', 'how', "you'd", 'choose', 'to', 'go,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on it?
// DEBUG: 35
// DEBUG: (30, 89)
// DEBUG: Operating on You'd
// DEBUG: 71
// DEBUG: (66, 89)
// DEBUG: Operating on rather
// DEBUG: 114
// DEBUG: (109, 89)
// DEBUG: Operating on die
// DEBUG: 136
// DEBUG: (131, 89)
// DEBUG: Operating on flying
// DEBUG: 179
// DEBUG: (174, 89)
// DEBUG: Operating on a
// DEBUG: 187
// DEBUG: (182, 89)
// DEBUG: Operating on kite
// DEBUG: ['is', 'it?', "You'd", 'rather', 'die', 'flying', 'a']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on with
// DEBUG: 44
// DEBUG: (39, 101)
// DEBUG: Operating on your
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on grandchildren,
// DEBUG: 172
// DEBUG: (167, 101)
// DEBUG: Operating on or
// DEBUG: 187
// DEBUG: (182, 101)
// DEBUG: Operating on at
// DEBUG: 202
// DEBUG: (197, 101)
// DEBUG: Operating on a
// DEBUG: 210
// DEBUG: (205, 101)
// DEBUG: Operating on great
// DEBUG: ['kite', 'with', 'your', 'grandchildren,', 'or', 'at', 'a']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on party
// DEBUG: 52
// DEBUG: (47, 113)
// DEBUG: Operating on or
// DEBUG: 67
// DEBUG: (62, 113)
// DEBUG: Operating on something.
// DEBUG: 138
// DEBUG: (133, 113)
// DEBUG: Operating on Not
// DEBUG: 160
// DEBUG: (155, 113)
// DEBUG: Operating on on
// DEBUG: 175
// DEBUG: (170, 113)
// DEBUG: Operating on the
// DEBUG: 197
// DEBUG: (192, 113)
// DEBUG: Operating on TIMESTRING.\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['great', 'party', 'or', 'something.', 'Not', 'on', 'the']
// DEBUG: drawing cursor (5, 113)
// DEBUG: []
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['seven forty-four']
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['- One moment, one morning']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "And there I was, complaining", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "that all this was just inconvenient,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Anna castigates herself. The Goth", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "was obviously right. What does it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "matter, really, if I'm a bit late for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "work? She voices her thoughts: \"It's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "not exactly how you'd choose to go,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "is it? You'd rather die flying a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "kite with your grandchildren, or at a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "great party or something. Not on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "seven forty-four", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- One moment, one morning", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:44 - The Goth was obviously right. What does it matter, really, if I'm a bit late for work? She voices her thoughts: \"It's not exactly how you'd choose to go, is it? You'd rather die flying a kite with your grandchildren, or at a great party or something. Not on the seven forty-four.\" - Sarah Rayner, One Moment, One Morning"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Goth
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on was
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on obviously
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on right.
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on What
// DEBUG: ['The', 'Goth', 'was', 'obviously', 'right.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on does
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on it
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on matter,
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on really,
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on if
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on I'm
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on a
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on bit
// DEBUG: ['What', 'does', 'it', 'matter,', 'really,', 'if', "I'm", 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on late
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on for
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on work?
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on She
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on voices
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on her
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on thoughts:
// DEBUG: ['bit', 'late', 'for', 'work?', 'She', 'voices', 'her']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on \"It's
// DEBUG: 63
// DEBUG: (58, 41)
// DEBUG: Operating on not
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on exactly
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on how
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on you'd
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on choose
// DEBUG: ['thoughts:', '\\"It\'s', 'not', 'exactly', 'how', "you'd"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on go,
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on is
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on it?
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on You'd
// DEBUG: 127
// DEBUG: (122, 53)
// DEBUG: Operating on rather
// DEBUG: 170
// DEBUG: (165, 53)
// DEBUG: Operating on die
// DEBUG: 192
// DEBUG: (187, 53)
// DEBUG: Operating on flying
// DEBUG: ['choose', 'to', 'go,', 'is', 'it?', "You'd", 'rather', 'die']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on a
// DEBUG: 25
// DEBUG: (20, 65)
// DEBUG: Operating on kite
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on with
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on your
// DEBUG: 112
// DEBUG: (107, 65)
// DEBUG: Operating on grandchildren,
// DEBUG: 211
// DEBUG: (206, 65)
// DEBUG: Operating on or
// DEBUG: ['flying', 'a', 'kite', 'with', 'your', 'grandchildren,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on at
// DEBUG: 28
// DEBUG: (23, 77)
// DEBUG: Operating on a
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on great
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on party
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on or
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on something.
// DEBUG: 194
// DEBUG: (189, 77)
// DEBUG: Operating on Not
// DEBUG: ['or', 'at', 'a', 'great', 'party', 'or', 'something.']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on on
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on the
// DEBUG: 51
// DEBUG: (46, 89)
// DEBUG: Operating on TIMESTRING.\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['Not', 'on', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['seven forty-four']
// DEBUG: drawing cursor (46, 89)
// DEBUG: ['- One Moment, One Morning']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "The Goth was obviously right.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "What does it matter, really, if I'm a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "bit late for work? She voices her", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "thoughts: \"It's not exactly how you'd", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "choose to go, is it? You'd rather die", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "flying a kite with your grandchildren,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "or at a great party or something.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "Not on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(46, 89, "seven forty-four", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- One Moment, One Morning", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:45 for 2 quotations:
    case 465:
      option = random(0, 2);
      Serial.print(F("2 options for 07:45. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:45 - Mr Green left for work at a quarter to eight, as he did every morning. He walked down his front steps carrying his empty-looking leatherette briefcase with the noisy silver clasps, opened his car door, and ducked his head to climb into the driver's seat. - Suzanne Berne, A Crime in The Neighborhood"));
// DEBUG: (5, 5)
// DEBUG: Operating on Mr
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on Green
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on left
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on for
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on work
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on at
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on a
// DEBUG: 164
// DEBUG: (159, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Mr', 'Green', 'left', 'for', 'work', 'at', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on as
// DEBUG: ['TIMESTRING,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on he
// DEBUG: 28
// DEBUG: (23, 29)
// DEBUG: Operating on did
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on every
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on morning.
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on He
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on walked
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on down
// DEBUG: ['as', 'he', 'did', 'every', 'morning.', 'He', 'walked']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on his
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on front
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on steps
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on carrying
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on his
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on empty-looking
// DEBUG: ['down', 'his', 'front', 'steps', 'carrying', 'his']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (19, 53)
// DEBUG: Operating on leatherette
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on briefcase
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on with
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on the
// DEBUG: ['empty-looking', 'leatherette', 'briefcase', 'with']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on noisy
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on silver
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on clasps,
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on opened
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on his
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on car
// DEBUG: ['the', 'noisy', 'silver', 'clasps,', 'opened', 'his']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on door,
// DEBUG: 50
// DEBUG: (45, 77)
// DEBUG: Operating on and
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on ducked
// DEBUG: 115
// DEBUG: (110, 77)
// DEBUG: Operating on his
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on head
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on to
// DEBUG: 181
// DEBUG: (176, 77)
// DEBUG: Operating on climb
// DEBUG: ['car', 'door,', 'and', 'ducked', 'his', 'head', 'to']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on into
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on the
// DEBUG: 67
// DEBUG: (62, 89)
// DEBUG: Operating on driver's
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on seat.
// DEBUG: 160
// DEBUG: ['quarter to eight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- A Crime in The Neighborhood']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Mr Green left for work at a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "as he did every morning. He walked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "down his front steps carrying his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "empty-looking leatherette briefcase with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "the noisy silver clasps, opened his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "car door, and ducked his head to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "quarter to eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- A Crime in The Neighborhood", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:45 - Mr Green left for work at a quarter to eight, as he did every morning. He walked down his front steps carrying his empty-looking leatherette briefcase with the noisy silver clasps, opened his car door, and ducked his head to climb into the driver's seat. - Suzanne Berne, A crime in the neighborhood "));
// DEBUG: (5, 5)
// DEBUG: Operating on Mr
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on Green
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on left
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on for
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on work
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on at
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on a
// DEBUG: 164
// DEBUG: (159, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Mr', 'Green', 'left', 'for', 'work', 'at', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on as
// DEBUG: ['TIMESTRING,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on he
// DEBUG: 28
// DEBUG: (23, 29)
// DEBUG: Operating on did
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on every
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on morning.
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on He
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on walked
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on down
// DEBUG: ['as', 'he', 'did', 'every', 'morning.', 'He', 'walked']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on his
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on front
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on steps
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on carrying
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on his
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on empty-looking
// DEBUG: ['down', 'his', 'front', 'steps', 'carrying', 'his']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (19, 53)
// DEBUG: Operating on leatherette
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on briefcase
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on with
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on the
// DEBUG: ['empty-looking', 'leatherette', 'briefcase', 'with']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on noisy
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on silver
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on clasps,
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on opened
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on his
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on car
// DEBUG: ['the', 'noisy', 'silver', 'clasps,', 'opened', 'his']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on door,
// DEBUG: 50
// DEBUG: (45, 77)
// DEBUG: Operating on and
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on ducked
// DEBUG: 115
// DEBUG: (110, 77)
// DEBUG: Operating on his
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on head
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on to
// DEBUG: 181
// DEBUG: (176, 77)
// DEBUG: Operating on climb
// DEBUG: ['car', 'door,', 'and', 'ducked', 'his', 'head', 'to']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on into
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on the
// DEBUG: 67
// DEBUG: (62, 89)
// DEBUG: Operating on driver's
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on seat.
// DEBUG: 160
// DEBUG: ['quarter to eight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- A crime in the neighborhood']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Mr Green left for work at a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "as he did every morning. He walked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "down his front steps carrying his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "empty-looking leatherette briefcase with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "the noisy silver clasps, opened his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "car door, and ducked his head to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "quarter to eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- A crime in the neighborhood", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:46 for 1 quotations:
    case 466:
      Serial.println(F("Only one option for 07:46:"));
    Serial.println(F("07:46 - He awoke with a start. The clock on his bedside table said 7.46 a.m. He cursed, jumped out of bed and dressed. He stuffed his toothbrush and toothpaste in his jacket pocket, and parked outside the station just before 8 a.m. In reception, Ebba beckoned to him. - Henning Mankell, The Dogs of Riga"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on awoke
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on with
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on a
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on start.
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on The
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on clock
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on on
// DEBUG: ['He', 'awoke', 'with', 'a', 'start.', 'The', 'clock']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on his
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on bedside
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on table
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on said
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['on', 'his', 'bedside', 'table', 'said']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on He
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on cursed,
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on jumped
// DEBUG: ['TIMESTRING', 'He', 'cursed,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on out
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on of
// DEBUG: 54
// DEBUG: (49, 41)
// DEBUG: Operating on bed
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on and
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on dressed.
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on He
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on stuffed
// DEBUG: ['jumped', 'out', 'of', 'bed', 'and', 'dressed.', 'He']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on his
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on toothbrush
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on and
// DEBUG: 133
// DEBUG: (128, 53)
// DEBUG: Operating on toothpaste
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on in
// DEBUG: ['stuffed', 'his', 'toothbrush', 'and', 'toothpaste']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on his
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on jacket
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on pocket,
// DEBUG: 128
// DEBUG: (123, 65)
// DEBUG: Operating on and
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on parked
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on outside
// DEBUG: ['in', 'his', 'jacket', 'pocket,', 'and', 'parked']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on station
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on just
// DEBUG: 119
// DEBUG: (114, 77)
// DEBUG: Operating on before
// DEBUG: 162
// DEBUG: (157, 77)
// DEBUG: Operating on 8
// DEBUG: 170
// DEBUG: (165, 77)
// DEBUG: Operating on a.m.
// DEBUG: 199
// DEBUG: (194, 77)
// DEBUG: Operating on In
// DEBUG: ['outside', 'the', 'station', 'just', 'before', '8', 'a.m.']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on reception,
// DEBUG: 84
// DEBUG: (79, 89)
// DEBUG: Operating on Ebba
// DEBUG: 113
// DEBUG: (108, 89)
// DEBUG: Operating on beckoned
// DEBUG: 170
// DEBUG: (165, 89)
// DEBUG: Operating on to
// DEBUG: 185
// DEBUG: (180, 89)
// DEBUG: Operating on him.
// DEBUG: ['In', 'reception,', 'Ebba', 'beckoned', 'to']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['7.46 a.m.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- The Dogs of Riga']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "He awoke with a start. The clock", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "on his bedside table said", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING He cursed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "jumped out of bed and dressed. He", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "stuffed his toothbrush and toothpaste", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "in his jacket pocket, and parked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "outside the station just before 8 a.m.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "In reception, Ebba beckoned to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "7.46 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- The Dogs of Riga", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:47 for 0 quotations:
    case 467:
      Serial.println(F("No quotes for 07:47"));
      return;

    // Codegen for 07:48 for 0 quotations:
    case 468:
      Serial.println(F("No quotes for 07:48"));
      return;

    // Codegen for 07:49 for 0 quotations:
    case 469:
      Serial.println(F("No quotes for 07:49"));
      return;

    // Codegen for 07:50 for 1 quotations:
    case 470:
      Serial.println(F("Only one option for 07:50:"));
    Serial.println(F("07:50 - At about ten minutes to eight, Jim had squared the part of the work he had been doing - the window - so he decided not to start on the door or the skirting until after breakfast. - Robert Tressell, The Ragged Trousered Philanthropists"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on about
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['At', 'about']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on Jim
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on had
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on squared
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on the
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on part
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on of
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on the
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on work
// DEBUG: ['TIMESTRING,', 'Jim', 'had', 'squared', 'the', 'part', 'of', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on he
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on had
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on been
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on doing
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on -
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on window
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on -
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on so
// DEBUG: ['work', 'he', 'had', 'been', 'doing', '-', 'the', 'window', '-']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on he
// DEBUG: 28
// DEBUG: (23, 41)
// DEBUG: Operating on decided
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on not
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on to
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on start
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on on
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on door
// DEBUG: ['so', 'he', 'decided', 'not', 'to', 'start', 'on', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on or
// DEBUG: 30
// DEBUG: (25, 53)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on skirting
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on until
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on after
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on breakfast.
// DEBUG: ['door', 'or', 'the', 'skirting', 'until', 'after']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['ten minutes to eight']
// DEBUG: drawing cursor (56, 5)
// DEBUG: ['- Robert Tressell']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "At about", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING, Jim had squared the part of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "work he had been doing - the window -", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "so he decided not to start on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "door or the skirting until after", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(56, 5, "ten minutes to eight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Robert Tressell", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:51 for 1 quotations:
    case 471:
      Serial.println(F("Only one option for 07:51:"));
    Serial.println(F("07:51 - Vimes fished out the Gooseberry as a red-hot cabbage smacked into the road behind him. \"Good morning!\" he said brightly to the surprised imp. \"What is the time, please?\" \"Er...nine minutes to eight, Insert Name Here,\" said the imp. - Terry Pratchett, Thud! "));
// DEBUG: (5, 5)
// DEBUG: Operating on Vimes
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on fished
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on out
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on the
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on Gooseberry
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on as
// DEBUG: ['Vimes', 'fished', 'out', 'the', 'Gooseberry']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 17)
// DEBUG: Operating on red-hot
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on cabbage
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on smacked
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on into
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on the
// DEBUG: ['as', 'a', 'red-hot', 'cabbage', 'smacked', 'into']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on road
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on behind
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on him.
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on \"Good
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on morning!\"
// DEBUG: ['the', 'road', 'behind', 'him.', '\\"Good']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on he
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on said
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on brightly
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on to
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on the
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on surprised
// DEBUG: ['morning!\\"', 'he', 'said', 'brightly', 'to', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on imp.
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on \"What
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on is
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on the
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on time,
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on please?\"
// DEBUG: ['surprised', 'imp.', '\\"What', 'is', 'the', 'time,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on \"Er...TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['please?\\"']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (24, 77)
// DEBUG: Operating on Insert
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on Name
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on Here,\"
// DEBUG: 151
// DEBUG: (146, 77)
// DEBUG: Operating on said
// DEBUG: 180
// DEBUG: (175, 77)
// DEBUG: Operating on the
// DEBUG: 202
// DEBUG: (197, 77)
// DEBUG: Operating on imp.
// DEBUG: ['\\"Er...TIMESTRING,', 'Insert', 'Name', 'Here,\\"', 'said', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['nine minutes to eight']
// DEBUG: drawing cursor (15, 65)
// DEBUG: ['- Terry Pratchett, Thud! ']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "Vimes fished out the Gooseberry", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "as a red-hot cabbage smacked into", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the road behind him. \"Good", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "morning!\" he said brightly to the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "surprised imp. \"What is the time,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "please?\"", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "\"Er...TIMESTRING, Insert Name Here,\" said the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(15, 65, "nine minutes to eight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- Terry Pratchett, Thud! ", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:52 for 0 quotations:
    case 472:
      Serial.println(F("No quotes for 07:52"));
      return;

    // Codegen for 07:53 for 1 quotations:
    case 473:
      Serial.println(F("Only one option for 07:53:"));
    Serial.println(F("07:53 - What time is it? \"Seven to eight. Won't be long now ...\" - Robert Goddard, Never go back"));
// DEBUG: (5, 5)
// DEBUG: Operating on What
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on time
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on is
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on it?
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on \"TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['What', 'time', 'is', 'it?']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (19, 17)
// DEBUG: Operating on Won't
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on be
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on long
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on now
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on ...\"
// DEBUG: 162
// DEBUG: ['Seven to eight']
// DEBUG: drawing cursor (100, 5)
// DEBUG: ['- Never go back']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "What time is it?", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(100, 5, "Seven to eight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Never go back", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:54 for 0 quotations:
    case 474:
      Serial.println(F("No quotes for 07:54"));
      return;

    // Codegen for 07:55 for 1 quotations:
    case 475:
      Serial.println(F("Only one option for 07:55:"));
    Serial.println(F("07:55 - at 7.55 this morning the circus ran away to join me. - Roger McGough, Tightrope, from Selected Poems 1967-1987"));
// DEBUG: (5, 5)
// DEBUG: Operating on at
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on this
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on morning
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on the
// DEBUG: ['at', 'TIMESTRING', 'this', 'morning']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on circus
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on ran
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on away
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on to
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on join
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on me.
// DEBUG: 174
// DEBUG: ['7.55']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Roger McGough']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "at TIMESTRING this morning", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "7.55", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Roger McGough", &Font12, WHITE, BLACK);
      return;

    // Codegen for 07:56 for 2 quotations:
    case 476:
      option = random(0, 2);
      Serial.print(F("2 options for 07:56. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("07:56 - I sit by the window, crunching toast, sipping coffee, and leafing through the paper in a leisurely way. At last, after devouring three slices, two cups of coffee, and all the Saturday sections, I stretch my arms in a big yawn and glance at the clock. I don't believe it. It's only seven fifty-six. - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on sit
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on by
// DEBUG: 55
// DEBUG: (50, 5)
// DEBUG: Operating on the
// DEBUG: 77
// DEBUG: (72, 5)
// DEBUG: Operating on window,
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on crunching
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on toast,
// DEBUG: ['I', 'sit', 'by', 'the', 'window,', 'crunching']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on sipping
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on coffee,
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on and
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on leafing
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on through
// DEBUG: ['toast,', 'sipping', 'coffee,', 'and', 'leafing']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on paper
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on in
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on a
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on leisurely
// DEBUG: 163
// DEBUG: (158, 29)
// DEBUG: Operating on way.
// DEBUG: 192
// DEBUG: (187, 29)
// DEBUG: Operating on At
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on last,
// DEBUG: ['through', 'the', 'paper', 'in', 'a', 'leisurely', 'way.', 'At']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on after
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on devouring
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on three
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on slices,
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on two
// DEBUG: ['last,', 'after', 'devouring', 'three', 'slices,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on cups
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on of
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on coffee,
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on and
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on all
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on Saturday
// DEBUG: ['two', 'cups', 'of', 'coffee,', 'and', 'all', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on sections,
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on I
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on stretch
// DEBUG: 141
// DEBUG: (136, 65)
// DEBUG: Operating on my
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on arms
// DEBUG: 185
// DEBUG: (180, 65)
// DEBUG: Operating on in
// DEBUG: 200
// DEBUG: (195, 65)
// DEBUG: Operating on a
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on big
// DEBUG: ['Saturday', 'sections,', 'I', 'stretch', 'my', 'arms', 'in', 'a']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on yawn
// DEBUG: 43
// DEBUG: (38, 77)
// DEBUG: Operating on and
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on glance
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on at
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on the
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on clock.
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on I
// DEBUG: 196
// DEBUG: (191, 77)
// DEBUG: Operating on don't
// DEBUG: ['big', 'yawn', 'and', 'glance', 'at', 'the', 'clock.', 'I']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on believe
// DEBUG: 66
// DEBUG: (61, 89)
// DEBUG: Operating on it.
// DEBUG: 88
// DEBUG: (83, 89)
// DEBUG: Operating on It's
// DEBUG: 117
// DEBUG: (112, 89)
// DEBUG: Operating on only
// DEBUG: 146
// DEBUG: (141, 89)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ["don't", 'believe', 'it.', "It's", 'only']
// DEBUG: drawing cursor (5, 89)
// DEBUG: 193
// DEBUG: ['seven fifty-six']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "I sit by the window, crunching", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "toast, sipping coffee, and leafing", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "through the paper in a leisurely way. At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "last, after devouring three slices,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "two cups of coffee, and all the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "Saturday sections, I stretch my arms in a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "big yawn and glance at the clock. I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "don't believe it. It's only", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "seven fifty-six", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("07:56 - The Castle Gate - only the Castle Gate - and it was four minutes to eight. - Thomas Mann, Buddenbrooks"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Castle
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on Gate
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on -
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on only
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on the
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on Castle
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on Gate
// DEBUG: ['The', 'Castle', 'Gate', '-', 'only', 'the', 'Castle']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on -
// DEBUG: 23
// DEBUG: (18, 17)
// DEBUG: Operating on and
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on it
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on was
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Gate', '-', 'and', 'it', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['four minutes to eight']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Thomas Mann, Buddenbrooks']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "The Castle Gate - only the Castle", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Gate - and it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "four minutes to eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Thomas Mann, Buddenbrooks", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 07:57 for 0 quotations:
    case 477:
      Serial.println(F("No quotes for 07:57"));
      return;

    // Codegen for 07:58 for 0 quotations:
    case 478:
      Serial.println(F("No quotes for 07:58"));
      return;

    // Codegen for 07:59 for 1 quotations:
    case 479:
      Serial.println(F("Only one option for 07:59:"));
    Serial.println(F("07:59 - I'd spent fifty two days in 1958, but here it was 7.59 in the morning. - Stephen King, 11/22/63"));
// DEBUG: (5, 5)
// DEBUG: Operating on I'd
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on spent
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on fifty
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on two
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on days
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on in
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on 1958,
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on but
// DEBUG: ["I'd", 'spent', 'fifty', 'two', 'days', 'in', '1958,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on here
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on it
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on was
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on in
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on the
// DEBUG: ['but', 'here', 'it', 'was', 'TIMESTRING', 'in']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on morning.
// DEBUG: 71
// DEBUG: ['7.59']
// DEBUG: drawing cursor (75, 17)
// DEBUG: ['- Stephen King, 11/22/63']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "I'd spent fifty two days in 1958,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "but here it was TIMESTRING in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(75, 17, "7.59", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Stephen King, 11/22/63", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:00 for 18 quotations:
    case 480:
      option = random(0, 18);
      Serial.print(F("18 options for 08:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:00 - I'm not crying, Maria said when Carter called from the desert at 8 a.m. \"I'm perfectly alright\". \"You don't sound perfectly alright\" - Joan Didion, Play it as is Lays "));
// DEBUG: (5, 5)
// DEBUG: Operating on I'm
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on not
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on crying,
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on Maria
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on said
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on when
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on Carter
// DEBUG: ["I'm", 'not', 'crying,', 'Maria', 'said', 'when']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on called
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on from
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on the
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on desert
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on at
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Carter', 'called', 'from', 'the', 'desert', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on \"I'm
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on perfectly
// DEBUG: ['TIMESTRING', '\\"I\'m']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on alright\".
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on \"You
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on don't
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on sound
// DEBUG: 199
// DEBUG: (194, 41)
// DEBUG: Operating on perfectly
// DEBUG: ['perfectly', 'alright\\".', '\\"You', "don't", 'sound']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on alright\"
// DEBUG: 84
// DEBUG: ['8 a.m.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Play it as is Lays']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "I'm not crying, Maria said when", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Carter called from the desert at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING \"I'm", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "perfectly alright\". \"You don't sound", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "8 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Play it as is Lays", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:00 - 8.00 a.m. Put school clothes on - Mark Haddon, The Curious Incident of the Dog in the Night-time "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on Put
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on school
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on clothes
// DEBUG: ['TIMESTRING', 'Put', 'school']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on on
// DEBUG: 33
// DEBUG: ['8.00 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING Put school", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "8.00 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("08:00 - At 8 o'clock on Thursday morning Arthur didn't feel very good. - Douglas Adams, Hitch-Hikers Guide to the Galaxy "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on on
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on Thursday
// DEBUG: ['At', 'TIMESTRING', 'on']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on morning
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on Arthur
// DEBUG: 112
// DEBUG: (107, 17)
// DEBUG: Operating on didn't
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on feel
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on very
// DEBUG: ['Thursday', 'morning', 'Arthur', "didn't", 'feel']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on good.
// DEBUG: 51
// DEBUG: ["8 o'clock"]
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Douglas Adams']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Thursday morning Arthur didn't feel", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "8 o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Douglas Adams", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("08:00 - At eight o'clock on Thursday morning Arthur didn't feel very good. He woke up blearily, got up, wandered blearily round his room, opened a window, saw a bulldozer, found his slippers and stomped off to the bathroom to wash. - Douglas Adams, Hitch-hikers guide to the galaxy "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on on
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on Thursday
// DEBUG: ['At', 'TIMESTRING', 'on']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on morning
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on Arthur
// DEBUG: 112
// DEBUG: (107, 17)
// DEBUG: Operating on didn't
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on feel
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on very
// DEBUG: ['Thursday', 'morning', 'Arthur', "didn't", 'feel']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on good.
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on He
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on woke
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on up
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on blearily,
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on got
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on up,
// DEBUG: ['very', 'good.', 'He', 'woke', 'up', 'blearily,', 'got']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on wandered
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on blearily
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on round
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on his
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on room,
// DEBUG: ['up,', 'wandered', 'blearily', 'round', 'his']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on opened
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on a
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on window,
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on saw
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on a
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on bulldozer,
// DEBUG: ['room,', 'opened', 'a', 'window,', 'saw', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on found
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on his
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on slippers
// DEBUG: 136
// DEBUG: (131, 65)
// DEBUG: Operating on and
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on stomped
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on off
// DEBUG: ['bulldozer,', 'found', 'his', 'slippers', 'and', 'stomped']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on to
// DEBUG: 29
// DEBUG: (24, 77)
// DEBUG: Operating on the
// DEBUG: 51
// DEBUG: (46, 77)
// DEBUG: Operating on bathroom
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on to
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on wash.
// DEBUG: 159
// DEBUG: ["eight o'clock"]
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Douglas Adams']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Thursday morning Arthur didn't feel", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "very good. He woke up blearily, got", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "up, wandered blearily round his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "room, opened a window, saw a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "bulldozer, found his slippers and stomped", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "eight o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Douglas Adams", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("08:00 - At eight o’clock, a shaft of daylight came to wake us. The thousand facets of the lava on the rock face picked it up as it passed, scattering like a shower of sparks. - Jules Verne, Journey to the Centre of the Earth "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 201
// DEBUG: (196, 5)
// DEBUG: Operating on a
// DEBUG: 209
// DEBUG: (204, 5)
// DEBUG: Operating on shaft
// DEBUG: ['TIMESTRING,', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on daylight
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on came
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on to
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on wake
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on us.
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on The
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on thousand
// DEBUG: ['shaft', 'of', 'daylight', 'came', 'to', 'wake', 'us.', 'The']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on facets
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on of
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on the
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on lava
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on on
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on the
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on rock
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on face
// DEBUG: ['thousand', 'facets', 'of', 'the', 'lava', 'on', 'the', 'rock']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on picked
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on it
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on up
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on as
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on it
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on passed,
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on scattering
// DEBUG: ['face', 'picked', 'it', 'up', 'as', 'it', 'passed,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on like
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on a
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on shower
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on of
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on sparks.
// DEBUG: 166
// DEBUG: ['At eight o’clock']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Jules Verne']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING, a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "shaft of daylight came to wake us. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "thousand facets of the lava on the rock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "face picked it up as it passed,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "At eight o’clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Jules Verne", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("08:00 - But for now it was still eight o'clock, and as I walked along the avenue under that brilliant blue sky, I was happy, my friends, as happy as any man who had ever lived. - Paul Auster, Brooklyn Follies"));
// DEBUG: (5, 5)
// DEBUG: Operating on But
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on for
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on now
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on it
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on was
// DEBUG: 113
// DEBUG: (108, 5)
// DEBUG: Operating on still
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['But', 'for', 'now', 'it', 'was', 'still']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on and
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on as
// DEBUG: ['TIMESTRING,', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on I
// DEBUG: 21
// DEBUG: (16, 29)
// DEBUG: Operating on walked
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on along
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on the
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on avenue
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on under
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on that
// DEBUG: ['as', 'I', 'walked', 'along', 'the', 'avenue', 'under']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on brilliant
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on blue
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on sky,
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on I
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on was
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on happy,
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on my
// DEBUG: ['that', 'brilliant', 'blue', 'sky,', 'I', 'was', 'happy,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on friends,
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on as
// DEBUG: 85
// DEBUG: (80, 53)
// DEBUG: Operating on happy
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on as
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on any
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on man
// DEBUG: 180
// DEBUG: (175, 53)
// DEBUG: Operating on who
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on had
// DEBUG: ['my', 'friends,', 'as', 'happy', 'as', 'any', 'man', 'who']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on ever
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on lived.
// DEBUG: 86
// DEBUG: ["eight o'clock"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Brooklyn Follies']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "But for now it was still", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "as I walked along the avenue under", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "that brilliant blue sky, I was happy,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "my friends, as happy as any man who", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "eight o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- Brooklyn Follies", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("08:00 - By eight o'clock Stillman would come out, always in his long brown overcoat, carrying a large, old-fashioned carpet bag. For two weeks this routine did not vary. The old man would wander through the streets of the neighbourhood, advancing slowly, sometimes by the merest of increments, pausing, moving on again, pausing once more, as though each step had to be weighed and measured before it could take its place among the sum total of steps. - Paul Auster, City of Glass "));
// DEBUG: (5, 5)
// DEBUG: Operating on By
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on Stillman
// DEBUG: ['By', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on would
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on come
// DEBUG: 84
// DEBUG: (79, 17)
// DEBUG: Operating on out,
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on always
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on in
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on his
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on long
// DEBUG: ['Stillman', 'would', 'come', 'out,', 'always', 'in', 'his']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on brown
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on overcoat,
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on carrying
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on a
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on large,
// DEBUG: ['long', 'brown', 'overcoat,', 'carrying', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on old-fashioned
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on carpet
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on bag.
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on For
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on two
// DEBUG: ['large,', 'old-fashioned', 'carpet', 'bag.', 'For']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on weeks
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on this
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on routine
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on did
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on not
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on vary.
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on The
// DEBUG: ['two', 'weeks', 'this', 'routine', 'did', 'not', 'vary.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on old
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on man
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on would
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on wander
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on through
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on the
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on streets
// DEBUG: ['The', 'old', 'man', 'would', 'wander', 'through', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 77)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on neighbourhood,
// DEBUG: 154
// DEBUG: (149, 77)
// DEBUG: Operating on advancing
// DEBUG: ['streets', 'of', 'the', 'neighbourhood,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on slowly,
// DEBUG: 70
// DEBUG: (65, 89)
// DEBUG: Operating on sometimes
// DEBUG: 134
// DEBUG: (129, 89)
// DEBUG: Operating on by
// DEBUG: 149
// DEBUG: (144, 89)
// DEBUG: Operating on the
// DEBUG: 171
// DEBUG: (166, 89)
// DEBUG: Operating on merest
// DEBUG: ['advancing', 'slowly,', 'sometimes', 'by', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 101)
// DEBUG: Operating on increments,
// DEBUG: 110
// DEBUG: (105, 101)
// DEBUG: Operating on pausing,
// DEBUG: 167
// DEBUG: (162, 101)
// DEBUG: Operating on moving
// DEBUG: 210
// DEBUG: (205, 101)
// DEBUG: Operating on on
// DEBUG: ['merest', 'of', 'increments,', 'pausing,', 'moving']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (8, 113)
// DEBUG: Operating on again,
// DEBUG: 56
// DEBUG: (51, 113)
// DEBUG: Operating on pausing
// DEBUG: 106
// DEBUG: (101, 113)
// DEBUG: Operating on once
// DEBUG: 135
// DEBUG: (130, 113)
// DEBUG: Operating on more,
// DEBUG: 171
// DEBUG: (166, 113)
// DEBUG: Operating on as
// DEBUG: 186
// DEBUG: (181, 113)
// DEBUG: Operating on though
// DEBUG: ['on', 'again,', 'pausing', 'once', 'more,', 'as']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (12, 125)
// DEBUG: Operating on each
// DEBUG: 46
// DEBUG: (41, 125)
// DEBUG: Operating on step
// DEBUG: 75
// DEBUG: (70, 125)
// DEBUG: Operating on had
// DEBUG: 97
// DEBUG: (92, 125)
// DEBUG: Operating on to
// DEBUG: 112
// DEBUG: (107, 125)
// DEBUG: Operating on be
// DEBUG: 127
// DEBUG: (122, 125)
// DEBUG: Operating on weighed
// DEBUG: 177
// DEBUG: (172, 125)
// DEBUG: Operating on and
// DEBUG: 199
// DEBUG: (194, 125)
// DEBUG: Operating on measured
// DEBUG: ['though', 'each', 'step', 'had', 'to', 'be', 'weighed', 'and']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (14, 137)
// DEBUG: Operating on before
// DEBUG: 62
// DEBUG: (57, 137)
// DEBUG: Operating on it
// DEBUG: 77
// DEBUG: (72, 137)
// DEBUG: Operating on could
// DEBUG: 113
// DEBUG: (108, 137)
// DEBUG: Operating on take
// DEBUG: 142
// DEBUG: (137, 137)
// DEBUG: Operating on its
// DEBUG: 164
// DEBUG: (159, 137)
// DEBUG: Operating on place
// DEBUG: 200
// DEBUG: (195, 137)
// DEBUG: Operating on among
// DEBUG: ['measured', 'before', 'it', 'could', 'take', 'its', 'place']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (11, 149)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 149)
// DEBUG: Operating on sum
// DEBUG: 60
// DEBUG: (55, 149)
// DEBUG: Operating on total
// DEBUG: 96
// DEBUG: (91, 149)
// DEBUG: Operating on of
// DEBUG: 111
// DEBUG: (106, 149)
// DEBUG: Operating on steps.
// DEBUG: 154
// DEBUG: ["eight o'clock"]
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Paul Auster, City of Glass ']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "By TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Stillman would come out, always in his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "long brown overcoat, carrying a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "large, old-fashioned carpet bag. For", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "two weeks this routine did not vary.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "The old man would wander through the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "streets of the neighbourhood,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "advancing slowly, sometimes by the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "merest of increments, pausing, moving", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "on again, pausing once more, as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "though each step had to be weighed and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "measured before it could take its place", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "eight o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Paul Auster, City of Glass ", &Font12, WHITE, BLACK);
          return;
        case 7:
          Serial.println(F("08:00 - He was woken by reception at eight the following morning to be told that everyone was waiting for him downstairs, the wrapper of a Mars bar was still folded in his fist. - Ian McEwan, Solar"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on woken
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on by
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on reception
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['He', 'was', 'woken', 'by', 'reception']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on the
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on following
// DEBUG: ['TIMESTRING', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on morning
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on to
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on be
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on told
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on that
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on everyone
// DEBUG: ['following', 'morning', 'to', 'be', 'told', 'that']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on was
// DEBUG: 41
// DEBUG: (36, 41)
// DEBUG: Operating on waiting
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on for
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on him
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on downstairs,
// DEBUG: ['everyone', 'was', 'waiting', 'for', 'him']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on wrapper
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on of
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on a
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on Mars
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on bar
// DEBUG: 168
// DEBUG: (163, 53)
// DEBUG: Operating on was
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on still
// DEBUG: ['downstairs,', 'the', 'wrapper', 'of', 'a', 'Mars', 'bar', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on folded
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on in
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on his
// DEBUG: 96
// DEBUG: (91, 65)
// DEBUG: Operating on fist.
// DEBUG: 132
// DEBUG: ['at eight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Ian McEwan, Solar']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "He was woken by reception", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "following morning to be told that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "everyone was waiting for him", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "downstairs, the wrapper of a Mars bar was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "at eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Ian McEwan, Solar", &Font12, WHITE, BLACK);
          return;
        case 8:
          Serial.println(F("08:00 - I hear noise at the ward door, off up the hall out of my sight. That ward door starts opening at eight and opens and closes a thousand times a day, kashash, click. - Ken Kesey, One Flew Over the Cuckoo's Nest "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on hear
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on noise
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on at
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on the
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on ward
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on door,
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on off
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on up
// DEBUG: ['I', 'hear', 'noise', 'at', 'the', 'ward', 'door,', 'off']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on hall
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on out
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on of
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on my
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on sight.
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on That
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on ward
// DEBUG: ['up', 'the', 'hall', 'out', 'of', 'my', 'sight.', 'That']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on door
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on starts
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on opening
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['ward', 'door', 'starts', 'opening']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on opens
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on and
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on closes
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on a
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on thousand
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on times
// DEBUG: ['TIMESTRING', 'and', 'opens', 'and', 'closes', 'a', 'thousand']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on a
// DEBUG: 24
// DEBUG: (19, 53)
// DEBUG: Operating on day,
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on kashash,
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on click.
// DEBUG: 153
// DEBUG: ['at eight']
// DEBUG: drawing cursor (132, 29)
// DEBUG: ['- Ken Kesey']
// DEBUG: drawing cursor (130, 192)
          paint.Paint_DrawString_EN(5, 5, "I hear noise at the ward door, off", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "up the hall out of my sight. That", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "ward door starts opening", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING and opens and closes a thousand", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(132, 29, "at eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(130, 192, "- Ken Kesey", &Font12, WHITE, BLACK);
          return;
        case 9:
          Serial.println(F("08:00 - It was dated from Rosings, at eight o'clock in the morning, and was as follows: - \"Be not alarmed, madam, on receiving this letter, by the apprehension of its containing any repetition of those sentiments or renewal of those offerings which were last night so disgusting to you. - Jane Austen, Pride and Prejudice "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on dated
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on from
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on Rosings,
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on at
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'dated', 'from', 'Rosings,', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on in
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on the
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on morning,
// DEBUG: ['TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on and
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on was
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on as
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on follows:
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on -
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on \"Be
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on not
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on alarmed,
// DEBUG: ['morning,', 'and', 'was', 'as', 'follows:', '-', '\\"Be', 'not']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on madam,
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on on
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on receiving
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on this
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on letter,
// DEBUG: ['alarmed,', 'madam,', 'on', 'receiving', 'this']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on by
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on apprehension
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on of
// DEBUG: 155
// DEBUG: (150, 53)
// DEBUG: Operating on its
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on containing
// DEBUG: ['letter,', 'by', 'the', 'apprehension', 'of', 'its']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on any
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on repetition
// DEBUG: 114
// DEBUG: (109, 65)
// DEBUG: Operating on of
// DEBUG: 129
// DEBUG: (124, 65)
// DEBUG: Operating on those
// DEBUG: 165
// DEBUG: (160, 65)
// DEBUG: Operating on sentiments
// DEBUG: ['containing', 'any', 'repetition', 'of', 'those']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on or
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on renewal
// DEBUG: 86
// DEBUG: (81, 77)
// DEBUG: Operating on of
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on those
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on offerings
// DEBUG: 201
// DEBUG: (196, 77)
// DEBUG: Operating on which
// DEBUG: ['sentiments', 'or', 'renewal', 'of', 'those', 'offerings']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on were
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on last
// DEBUG: 74
// DEBUG: (69, 89)
// DEBUG: Operating on night
// DEBUG: 110
// DEBUG: (105, 89)
// DEBUG: Operating on so
// DEBUG: 125
// DEBUG: (120, 89)
// DEBUG: Operating on disgusting
// DEBUG: 196
// DEBUG: (191, 89)
// DEBUG: Operating on to
// DEBUG: 211
// DEBUG: (206, 89)
// DEBUG: Operating on you.
// DEBUG: ['which', 'were', 'last', 'night', 'so', 'disgusting', 'to']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ["eight o'clock"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Pride and Prejudice']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "It was dated from Rosings, at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "morning, and was as follows: - \"Be not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "alarmed, madam, on receiving this", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "letter, by the apprehension of its", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "containing any repetition of those", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "sentiments or renewal of those offerings", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "which were last night so disgusting to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "eight o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Pride and Prejudice", &Font12, WHITE, BLACK);
          return;
        case 10:
          Serial.println(F("08:00 - Mr. Pumblechook and I breakfasted at eight o'clock in the parlour behind the shop, while the shopman took his mug of tea and hunch of bread-and-butter on a sack of peas in the front premises. - Charles Dickens, Great Expectations "));
// DEBUG: (5, 5)
// DEBUG: Operating on Mr.
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Pumblechook
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on and
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on I
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on breakfasted
// DEBUG: ['Mr.', 'Pumblechook', 'and', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on at
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on in
// DEBUG: ['breakfasted', 'at', 'TIMESTRING']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on parlour
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on behind
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on the
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on shop,
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on while
// DEBUG: ['in', 'the', 'parlour', 'behind', 'the', 'shop,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on shopman
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on took
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on his
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on mug
// DEBUG: 161
// DEBUG: (156, 41)
// DEBUG: Operating on of
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on tea
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on and
// DEBUG: ['while', 'the', 'shopman', 'took', 'his', 'mug', 'of', 'tea']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on hunch
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on of
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on bread-and-butter
// DEBUG: 178
// DEBUG: (173, 53)
// DEBUG: Operating on on
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on a
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on sack
// DEBUG: ['and', 'hunch', 'of', 'bread-and-butter', 'on', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on of
// DEBUG: 30
// DEBUG: (25, 65)
// DEBUG: Operating on peas
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on in
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on the
// DEBUG: 96
// DEBUG: (91, 65)
// DEBUG: Operating on front
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on premises.
// DEBUG: 196
// DEBUG: ["eight o'clock"]
// DEBUG: drawing cursor (32, 17)
// DEBUG: ['- Great Expectations']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "Mr. Pumblechook and I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "breakfasted at TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "in the parlour behind the shop,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "while the shopman took his mug of tea", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "and hunch of bread-and-butter on a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(32, 17, "eight o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Great Expectations", &Font12, WHITE, BLACK);
          return;
        case 11:
          Serial.println(F("08:00 - Mrs. Rochester! She did not exist: she would not be born till to-morrow, some time after eight o'clock a.m.; and I would wait to be assured she had come into the world alive, before I assigned to her all that property. - Charlotte Brontë, Jane Eyre "));
// DEBUG: (5, 5)
// DEBUG: Operating on Mrs.
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on Rochester!
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on She
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on did
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on not
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on exist:
// DEBUG: ['Mrs.', 'Rochester!', 'She', 'did', 'not']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on she
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on would
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on not
// DEBUG: 97
// DEBUG: (92, 17)
// DEBUG: Operating on be
// DEBUG: 112
// DEBUG: (107, 17)
// DEBUG: Operating on born
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on till
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on to-morrow,
// DEBUG: ['exist:', 'she', 'would', 'not', 'be', 'born', 'till']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on some
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on time
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on after
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: ['to-morrow,', 'some', 'time', 'after']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on I
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on would
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on wait
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on to
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on be
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on assured
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on she
// DEBUG: ['TIMESTRING;', 'and', 'I', 'would', 'wait', 'to', 'be', 'assured']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on had
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on come
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on into
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on the
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on world
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on alive,
// DEBUG: 195
// DEBUG: (190, 65)
// DEBUG: Operating on before
// DEBUG: ['she', 'had', 'come', 'into', 'the', 'world', 'alive,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 77)
// DEBUG: Operating on assigned
// DEBUG: 82
// DEBUG: (77, 77)
// DEBUG: Operating on to
// DEBUG: 97
// DEBUG: (92, 77)
// DEBUG: Operating on her
// DEBUG: 119
// DEBUG: (114, 77)
// DEBUG: Operating on all
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on that
// DEBUG: 170
// DEBUG: (165, 77)
// DEBUG: Operating on property.
// DEBUG: ['before', 'I', 'assigned', 'to', 'her', 'all', 'that']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ["eight o'clock a.m."]
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Jane Eyre']
// DEBUG: drawing cursor (130, 192)
          paint.Paint_DrawString_EN(5, 5, "Mrs. Rochester! She did not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "exist: she would not be born till", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "to-morrow, some time after", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "TIMESTRING; and I would wait to be assured", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "she had come into the world alive,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "before I assigned to her all that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "eight o'clock a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(130, 192, "- Jane Eyre", &Font12, WHITE, BLACK);
          return;
        case 12:
          Serial.println(F("08:00 - So here I'll watch the night and wait To see the morning shine, When he will hear the stroke of eight And not the stroke of nine; - A E Housman, A shropshire Lad "));
// DEBUG: (5, 5)
// DEBUG: Operating on So
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on here
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on I'll
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on watch
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on the
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on night
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on and
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on wait
// DEBUG: ['So', 'here', "I'll", 'watch', 'the', 'night', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on To
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on see
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on the
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on morning
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on shine,
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on When
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on he
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on will
// DEBUG: ['wait', 'To', 'see', 'the', 'morning', 'shine,', 'When', 'he']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on hear
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on the
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on stroke
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on of
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on TIMESTRINGAnd
// DEBUG: Wrorking on the timestring
// DEBUG: ['will', 'hear', 'the', 'stroke', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (19, 41)
// DEBUG: Operating on not
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on stroke
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on of
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on nine;
// DEBUG: 162
// DEBUG: ['eight ']
// DEBUG: drawing cursor (119, 29)
// DEBUG: ['- A shropshire Lad']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "So here I'll watch the night and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "wait To see the morning shine, When he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "will hear the stroke of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(119, 29, "eight ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- A shropshire Lad", &Font12, WHITE, BLACK);
          return;
        case 13:
          Serial.println(F("08:00 - Someone must have been telling lies about Joseph K. for without having done anything wrong he was arrested one fine morning. His landlady's cook, who always brought him breakfast at eight o'clock, failed to appear on this occasion. - Franz Kafka, The Trial "));
// DEBUG: (5, 5)
// DEBUG: Operating on Someone
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on must
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on have
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on been
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on telling
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on lies
// DEBUG: ['Someone', 'must', 'have', 'been', 'telling']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on about
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on Joseph
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on K.
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on for
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on without
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on having
// DEBUG: ['lies', 'about', 'Joseph', 'K.', 'for', 'without']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on done
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on anything
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on wrong
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on he
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on was
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on arrested
// DEBUG: ['having', 'done', 'anything', 'wrong', 'he', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on one
// DEBUG: 41
// DEBUG: (36, 41)
// DEBUG: Operating on fine
// DEBUG: 70
// DEBUG: (65, 41)
// DEBUG: Operating on morning.
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on His
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on landlady's
// DEBUG: ['arrested', 'one', 'fine', 'morning.', 'His']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on cook,
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on who
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on always
// DEBUG: 122
// DEBUG: (117, 53)
// DEBUG: Operating on brought
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on him
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on breakfast
// DEBUG: ["landlady's", 'cook,', 'who', 'always', 'brought', 'him']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on at
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on failed
// DEBUG: ['breakfast', 'at', 'TIMESTRING,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 77)
// DEBUG: Operating on appear
// DEBUG: 75
// DEBUG: (70, 77)
// DEBUG: Operating on on
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on this
// DEBUG: 119
// DEBUG: (114, 77)
// DEBUG: Operating on occasion.
// DEBUG: 183
// DEBUG: ["eight o'clock"]
// DEBUG: drawing cursor (30, 65)
// DEBUG: ['- Franz Kafka, The Trial ']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "Someone must have been telling", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "lies about Joseph K. for without", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "having done anything wrong he was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "arrested one fine morning. His", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "landlady's cook, who always brought him", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "breakfast at TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(30, 65, "eight o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Franz Kafka, The Trial ", &Font12, WHITE, BLACK);
          return;
        case 14:
          Serial.println(F("08:00 - The next morning I woke up at oh eight oh oh hours, my brothers, and as I still felt shagged and fagged and fashed and bashed and as my glazzies were stuck together real horrorshow with sleepglue, I thought I would not go to school . - Anthony Burgess, A Clockwork Orange "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on next
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on morning
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on I
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on woke
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on up
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on at
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'next', 'morning', 'I', 'woke', 'up', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on my
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on brothers,
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on and
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on as
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on I
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on still
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on felt
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on shagged
// DEBUG: ['TIMESTRING,', 'my', 'brothers,', 'and', 'as', 'I', 'still', 'felt']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on fagged
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on and
// DEBUG: 105
// DEBUG: (100, 41)
// DEBUG: Operating on fashed
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on and
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on bashed
// DEBUG: ['shagged', 'and', 'fagged', 'and', 'fashed', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on as
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on my
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on glazzies
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on were
// DEBUG: 155
// DEBUG: (150, 53)
// DEBUG: Operating on stuck
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on together
// DEBUG: ['bashed', 'and', 'as', 'my', 'glazzies', 'were', 'stuck']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on real
// DEBUG: 48
// DEBUG: (43, 65)
// DEBUG: Operating on horrorshow
// DEBUG: 119
// DEBUG: (114, 65)
// DEBUG: Operating on with
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on sleepglue,
// DEBUG: ['together', 'real', 'horrorshow', 'with']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on I
// DEBUG: 29
// DEBUG: (24, 77)
// DEBUG: Operating on thought
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on I
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on would
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on not
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on go
// DEBUG: 160
// DEBUG: (155, 77)
// DEBUG: Operating on to
// DEBUG: 175
// DEBUG: (170, 77)
// DEBUG: Operating on school
// DEBUG: ['sleepglue,', 'I', 'thought', 'I', 'would', 'not', 'go', 'to']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on .
// DEBUG: 25
// DEBUG: ['oh eight oh oh hours']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- A Clockwork Orange']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "The next morning I woke up at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, my brothers, and as I still felt", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "shagged and fagged and fashed and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "bashed and as my glazzies were stuck", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "together real horrorshow with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "sleepglue, I thought I would not go to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "oh eight oh oh hours", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- A Clockwork Orange", &Font12, WHITE, BLACK);
          return;
        case 15:
          Serial.println(F("08:00 - Three days after the quarrel, Prince Stepan Arkadyevitch Oblonsky--Stiva, as he was called in the fashionable world-- woke up at his usual hour, that is, at eight o'clock in the morning, not in his wife's bedroom, but on the leather-covered sofa in his study. - Leo Tolstoy, Anna Karenina "));
// DEBUG: (5, 5)
// DEBUG: Operating on Three
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on days
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on after
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on the
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on quarrel,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on Prince
// DEBUG: ['Three', 'days', 'after', 'the', 'quarrel,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on Stepan
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on Arkadyevitch
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on Oblonsky--Stiva,
// DEBUG: ['Prince', 'Stepan', 'Arkadyevitch']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (22, 29)
// DEBUG: Operating on as
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on he
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on was
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on called
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on in
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on the
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on fashionable
// DEBUG: ['Oblonsky--Stiva,', 'as', 'he', 'was', 'called', 'in', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on world--
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on woke
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on up
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on at
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on his
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on usual
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on hour,
// DEBUG: ['fashionable', 'world--', 'woke', 'up', 'at', 'his', 'usual']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on is,
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on at
// DEBUG: 82
// DEBUG: (77, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['hour,', 'that', 'is,', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on morning,
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on not
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on in
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on his
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on wife's
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning,', 'not', 'in', 'his']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on bedroom,
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on but
// DEBUG: 96
// DEBUG: (91, 77)
// DEBUG: Operating on on
// DEBUG: 111
// DEBUG: (106, 77)
// DEBUG: Operating on the
// DEBUG: 133
// DEBUG: (128, 77)
// DEBUG: Operating on leather-covered
// DEBUG: ["wife's", 'bedroom,', 'but', 'on', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (21, 89)
// DEBUG: Operating on sofa
// DEBUG: 55
// DEBUG: (50, 89)
// DEBUG: Operating on in
// DEBUG: 70
// DEBUG: (65, 89)
// DEBUG: Operating on his
// DEBUG: 92
// DEBUG: (87, 89)
// DEBUG: Operating on study.
// DEBUG: 135
// DEBUG: ["eight o'clock"]
// DEBUG: drawing cursor (77, 53)
// DEBUG: ['- Leo Tolstoy, Anna Karenina ']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Three days after the quarrel,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Prince Stepan Arkadyevitch", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Oblonsky--Stiva, as he was called in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "fashionable world-- woke up at his usual", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "hour, that is, at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING in the morning, not in his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "wife's bedroom, but on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(77, 53, "eight o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Leo Tolstoy, Anna Karenina ", &Font12, WHITE, BLACK);
          return;
        case 16:
          Serial.println(F("08:00 - Through the curtained windows of the furnished apartment which Mrs. Horace Hignett had rented for her stay in New York rays of golden sunlight peeped in like the foremost spies of some advancing army. It was a fine summer morning. The hands of the Dutch clock in the hall pointed to thirteen minutes past nine; those of the ormolu clock in the sitting-room to eleven minutes past ten; those of the carriage clock on the bookshelf to fourteen minutes to six. In other words, it was exactly eight; and Mrs. Hignett acknowledged the fact by moving her head on the pillow, opening her eyes, and sitting up in bed. She always woke at eight precisely. - P.G. Wodehouse, Three Men and a Maid "));
// DEBUG: (5, 5)
// DEBUG: Operating on Through
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on the
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on curtained
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on windows
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on of
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on the
// DEBUG: ['Through', 'the', 'curtained', 'windows', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on furnished
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on apartment
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on which
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on Mrs.
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on Horace
// DEBUG: ['the', 'furnished', 'apartment', 'which', 'Mrs.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on Hignett
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on had
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on rented
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on for
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on her
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on stay
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on in
// DEBUG: ['Horace', 'Hignett', 'had', 'rented', 'for', 'her', 'stay']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on New
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on York
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on rays
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on of
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on golden
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on sunlight
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on peeped
// DEBUG: ['in', 'New', 'York', 'rays', 'of', 'golden', 'sunlight']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on like
// DEBUG: 61
// DEBUG: (56, 53)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on foremost
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on spies
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on of
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on some
// DEBUG: ['peeped', 'in', 'like', 'the', 'foremost', 'spies', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on advancing
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on army.
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on It
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on was
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on a
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on fine
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on summer
// DEBUG: ['some', 'advancing', 'army.', 'It', 'was', 'a', 'fine']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on morning.
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on The
// DEBUG: 96
// DEBUG: (91, 77)
// DEBUG: Operating on hands
// DEBUG: 132
// DEBUG: (127, 77)
// DEBUG: Operating on of
// DEBUG: 147
// DEBUG: (142, 77)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 77)
// DEBUG: Operating on Dutch
// DEBUG: 205
// DEBUG: (200, 77)
// DEBUG: Operating on clock
// DEBUG: ['summer', 'morning.', 'The', 'hands', 'of', 'the', 'Dutch']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 89)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 89)
// DEBUG: Operating on hall
// DEBUG: 82
// DEBUG: (77, 89)
// DEBUG: Operating on pointed
// DEBUG: 132
// DEBUG: (127, 89)
// DEBUG: Operating on to
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on thirteen
// DEBUG: 204
// DEBUG: (199, 89)
// DEBUG: Operating on minutes
// DEBUG: ['clock', 'in', 'the', 'hall', 'pointed', 'to', 'thirteen']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on past
// DEBUG: 47
// DEBUG: (42, 101)
// DEBUG: Operating on nine;
// DEBUG: 83
// DEBUG: (78, 101)
// DEBUG: Operating on those
// DEBUG: 119
// DEBUG: (114, 101)
// DEBUG: Operating on of
// DEBUG: 134
// DEBUG: (129, 101)
// DEBUG: Operating on the
// DEBUG: 156
// DEBUG: (151, 101)
// DEBUG: Operating on ormolu
// DEBUG: 199
// DEBUG: (194, 101)
// DEBUG: Operating on clock
// DEBUG: ['minutes', 'past', 'nine;', 'those', 'of', 'the', 'ormolu']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 113)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 113)
// DEBUG: Operating on sitting-room
// DEBUG: 138
// DEBUG: (133, 113)
// DEBUG: Operating on to
// DEBUG: 153
// DEBUG: (148, 113)
// DEBUG: Operating on eleven
// DEBUG: 196
// DEBUG: (191, 113)
// DEBUG: Operating on minutes
// DEBUG: ['clock', 'in', 'the', 'sitting-room', 'to', 'eleven']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (13, 125)
// DEBUG: Operating on past
// DEBUG: 47
// DEBUG: (42, 125)
// DEBUG: Operating on ten;
// DEBUG: 76
// DEBUG: (71, 125)
// DEBUG: Operating on those
// DEBUG: 112
// DEBUG: (107, 125)
// DEBUG: Operating on of
// DEBUG: 127
// DEBUG: (122, 125)
// DEBUG: Operating on the
// DEBUG: 149
// DEBUG: (144, 125)
// DEBUG: Operating on carriage
// DEBUG: 206
// DEBUG: (201, 125)
// DEBUG: Operating on clock
// DEBUG: ['minutes', 'past', 'ten;', 'those', 'of', 'the', 'carriage']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (11, 137)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 137)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 137)
// DEBUG: Operating on bookshelf
// DEBUG: 117
// DEBUG: (112, 137)
// DEBUG: Operating on to
// DEBUG: 132
// DEBUG: (127, 137)
// DEBUG: Operating on fourteen
// DEBUG: 189
// DEBUG: (184, 137)
// DEBUG: Operating on minutes
// DEBUG: ['clock', 'on', 'the', 'bookshelf', 'to', 'fourteen']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (13, 149)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 149)
// DEBUG: Operating on six.
// DEBUG: 62
// DEBUG: (57, 149)
// DEBUG: Operating on In
// DEBUG: 77
// DEBUG: (72, 149)
// DEBUG: Operating on other
// DEBUG: 113
// DEBUG: (108, 149)
// DEBUG: Operating on words,
// DEBUG: 156
// DEBUG: (151, 149)
// DEBUG: Operating on it
// DEBUG: 171
// DEBUG: (166, 149)
// DEBUG: Operating on was
// DEBUG: 193
// DEBUG: (188, 149)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: ['minutes', 'to', 'six.', 'In', 'other', 'words,', 'it', 'was']
// DEBUG: drawing cursor (5, 149)
// DEBUG: 179
// DEBUG: (174, 161)
// DEBUG: Operating on and
// DEBUG: 201
// DEBUG: (196, 161)
// DEBUG: Operating on Mrs.
// DEBUG: ['TIMESTRING;', 'and']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (10, 173)
// DEBUG: Operating on Hignett
// DEBUG: 65
// DEBUG: (60, 173)
// DEBUG: Operating on acknowledged
// DEBUG: 150
// DEBUG: (145, 173)
// DEBUG: Operating on the
// DEBUG: 172
// DEBUG: (167, 173)
// DEBUG: Operating on fact
// DEBUG: 201
// DEBUG: (196, 173)
// DEBUG: Operating on by
// DEBUG: ['Mrs.', 'Hignett', 'acknowledged', 'the', 'fact']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (8, 185)
// DEBUG: Operating on moving
// DEBUG: 56
// DEBUG: (51, 185)
// DEBUG: Operating on her
// DEBUG: 78
// DEBUG: (73, 185)
// DEBUG: Operating on head
// DEBUG: 107
// DEBUG: (102, 185)
// DEBUG: Operating on on
// DEBUG: 122
// DEBUG: (117, 185)
// DEBUG: Operating on the
// DEBUG: 144
// DEBUG: (139, 185)
// DEBUG: Operating on pillow,
// DEBUG: 194
// DEBUG: (189, 185)
// DEBUG: Operating on opening
// DEBUG: ['by', 'moving', 'her', 'head', 'on', 'the', 'pillow,']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (13, 197)
// DEBUG: Operating on her
// DEBUG: 40
// DEBUG: (35, 197)
// DEBUG: Operating on eyes,
// DEBUG: 76
// DEBUG: (71, 197)
// DEBUG: Operating on and
// DEBUG: 98
// DEBUG: (93, 197)
// DEBUG: Operating on sitting
// DEBUG: 148
// DEBUG: (143, 197)
// DEBUG: Operating on up
// DEBUG: 163
// DEBUG: (158, 197)
// DEBUG: Operating on in
// DEBUG: 178
// DEBUG: (173, 197)
// DEBUG: Operating on bed.
// DEBUG: 207
// DEBUG: (202, 197)
// DEBUG: Operating on She
// DEBUG: ['opening', 'her', 'eyes,', 'and', 'sitting', 'up', 'in', 'bed.']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (9, 209)
// DEBUG: Operating on always
// DEBUG: 57
// DEBUG: (52, 209)
// DEBUG: Operating on woke
// DEBUG: 86
// DEBUG: (81, 209)
// DEBUG: Operating on at
// DEBUG: 101
// DEBUG: (96, 209)
// DEBUG: Operating on eight
// DEBUG: 137
// DEBUG: (132, 209)
// DEBUG: Operating on precisely.
// DEBUG: 208
// DEBUG: ['exactly eight']
// DEBUG: drawing cursor (5, 161)
// DEBUG: ['- Three Men and a Maid']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "Through the curtained windows of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the furnished apartment which Mrs.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Horace Hignett had rented for her stay", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "in New York rays of golden sunlight", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "peeped in like the foremost spies of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "some advancing army. It was a fine", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "summer morning. The hands of the Dutch", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "clock in the hall pointed to thirteen", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "minutes past nine; those of the ormolu", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "clock in the sitting-room to eleven", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "minutes past ten; those of the carriage", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "clock on the bookshelf to fourteen", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "minutes to six. In other words, it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "TIMESTRING; and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "Mrs. Hignett acknowledged the fact", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "by moving her head on the pillow,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 197, "opening her eyes, and sitting up in bed.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "exactly eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Three Men and a Maid", &Font12, WHITE, BLACK);
          return;
        case 17:
          Serial.println(F("08:00 - Too late. He must go on wanting what he had wanted yesterday. He dressed and rode down to the ground floor at eight for breakfast. - Thomas Mann, Death in Venice"));
// DEBUG: (5, 5)
// DEBUG: Operating on Too
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on late.
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on He
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on must
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on go
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on on
// DEBUG: 142
// DEBUG: (137, 5)
// DEBUG: Operating on wanting
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on what
// DEBUG: ['Too', 'late.', 'He', 'must', 'go', 'on', 'wanting']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on he
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on had
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on wanted
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on yesterday.
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on He
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on dressed
// DEBUG: ['what', 'he', 'had', 'wanted', 'yesterday.', 'He']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on rode
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on down
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on to
// DEBUG: 113
// DEBUG: (108, 29)
// DEBUG: Operating on the
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on ground
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on floor
// DEBUG: ['dressed', 'and', 'rode', 'down', 'to', 'the', 'ground']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on for
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on breakfast.
// DEBUG: ['floor', 'TIMESTRING', 'for']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['at eight']
// DEBUG: drawing cursor (11, 41)
// DEBUG: ['- Death in Venice']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "Too late. He must go on wanting", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "what he had wanted yesterday. He", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "dressed and rode down to the ground", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "floor TIMESTRING for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(11, 41, "at eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Death in Venice", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:01 for 1 quotations:
    case 481:
      Serial.println(F("Only one option for 08:01:"));
    Serial.println(F("08:01 - Eight-one, tick-tock, eight-one o'clock, off to school, off to work, run, run, eight-one! - Ray Bradbury, There Will Come Soft Rains"));
// DEBUG: (5, 5)
// DEBUG: Operating on Eight-one,
// DEBUG: 81
// DEBUG: (76, 5)
// DEBUG: Operating on tick-tock,
// DEBUG: 152
// DEBUG: (147, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Eight-one,', 'tick-tock,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on o'clock,
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on off
// DEBUG: ['TIMESTRING', "o'clock,"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on to
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on school,
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on off
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on to
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on work,
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on run,
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on run,
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on TIMESTRING!
// DEBUG: Wrorking on the timestring
// DEBUG: ['off', 'to', 'school,', 'off', 'to', 'work,', 'run,', 'run,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 151
// DEBUG: ['eight-one']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- There Will Come Soft Rains']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "Eight-one, tick-tock,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING o'clock,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "off to school, off to work, run, run,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "eight-one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- There Will Come Soft Rains", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:02 for 1 quotations:
    case 482:
      Serial.println(F("Only one option for 08:02:"));
    Serial.println(F("08:02 - ... bingeley ... Eight oh two eh em, Death of Corporal Littlebottombottom ... Eight oh three eh em ... Death of Sergeant Detritus ... Eight oh threethreethree eh em and seven seconds seconds ... Death of Constable Visit ... Eight oh three eh em and nineninenine seconds ... Death of death of death of ... - Terry Pratchett, Jingo"));
// DEBUG: (5, 5)
// DEBUG: Operating on ...
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on bingeley
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on ...
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['...', 'bingeley', '...']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on eh
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on em,
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on Death
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on of
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on Corporal
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on Littlebottombottom
// DEBUG: ['TIMESTRING', 'eh', 'em,', 'Death', 'of', 'Corporal']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (24, 29)
// DEBUG: Operating on ...
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on Eight
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on oh
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on three
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on eh
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on em
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on ...
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on Death
// DEBUG: ['Littlebottombottom', '...', 'Eight', 'oh', 'three', 'eh', 'em', '...']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 41)
// DEBUG: Operating on Sergeant
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on Detritus
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on ...
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on Eight
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on oh
// DEBUG: ['Death', 'of', 'Sergeant', 'Detritus', '...', 'Eight']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on threethreethree
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on eh
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on em
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on and
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on seven
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on seconds
// DEBUG: ['oh', 'threethreethree', 'eh', 'em', 'and', 'seven']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on seconds
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on ...
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on Death
// DEBUG: 126
// DEBUG: (121, 65)
// DEBUG: Operating on of
// DEBUG: 141
// DEBUG: (136, 65)
// DEBUG: Operating on Constable
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on Visit
// DEBUG: ['seconds', 'seconds', '...', 'Death', 'of', 'Constable']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on ...
// DEBUG: 38
// DEBUG: (33, 77)
// DEBUG: Operating on Eight
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on oh
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on three
// DEBUG: 125
// DEBUG: (120, 77)
// DEBUG: Operating on eh
// DEBUG: 140
// DEBUG: (135, 77)
// DEBUG: Operating on em
// DEBUG: 155
// DEBUG: (150, 77)
// DEBUG: Operating on and
// DEBUG: 177
// DEBUG: (172, 77)
// DEBUG: Operating on nineninenine
// DEBUG: ['Visit', '...', 'Eight', 'oh', 'three', 'eh', 'em', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (18, 89)
// DEBUG: Operating on seconds
// DEBUG: 73
// DEBUG: (68, 89)
// DEBUG: Operating on ...
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on Death
// DEBUG: 131
// DEBUG: (126, 89)
// DEBUG: Operating on of
// DEBUG: 146
// DEBUG: (141, 89)
// DEBUG: Operating on death
// DEBUG: 182
// DEBUG: (177, 89)
// DEBUG: Operating on of
// DEBUG: 197
// DEBUG: (192, 89)
// DEBUG: Operating on death
// DEBUG: ['nineninenine', 'seconds', '...', 'Death', 'of', 'death', 'of']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 101)
// DEBUG: Operating on ...
// DEBUG: 53
// DEBUG: ['Eight oh two']
// DEBUG: drawing cursor (106, 5)
// DEBUG: ['- Terry Pratchett, Jingo']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "... bingeley ...", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING eh em, Death of Corporal", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Littlebottombottom ... Eight oh three eh em ...", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Death of Sergeant Detritus ... Eight", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "oh threethreethree eh em and seven", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "seconds seconds ... Death of Constable", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Visit ... Eight oh three eh em and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "nineninenine seconds ... Death of death of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(106, 5, "Eight oh two", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Terry Pratchett, Jingo", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:03 for 2 quotations:
    case 483:
      option = random(0, 2);
      Serial.print(F("2 options for 08:03. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:03 - ... bingeley ... Eight oh two eh em, Death of Corporal Littlebottombottom ... Eight oh three eh em ... Death of Sergeant Detritus ... Eight oh threethreethree eh em and seven seconds seconds ... Death of Constable Visit ... Eight oh three eh em and nineninenine seconds ... Death of death of death of ... - Terry Pratchett, Jingo"));
// DEBUG: (5, 5)
// DEBUG: Operating on ...
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on bingeley
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on ...
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on Eight
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on oh
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on two
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on eh
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on em,
// DEBUG: ['...', 'bingeley', '...', 'Eight', 'oh', 'two', 'eh']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on Death
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on of
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on Corporal
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on Littlebottombottom
// DEBUG: ['em,', 'Death', 'of', 'Corporal']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (24, 29)
// DEBUG: Operating on ...
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Littlebottombottom', '...']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on eh
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on em
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on ...
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on Death
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on of
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on Sergeant
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on Detritus
// DEBUG: ['TIMESTRING', 'eh', 'em', '...', 'Death', 'of', 'Sergeant']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on ...
// DEBUG: 41
// DEBUG: (36, 53)
// DEBUG: Operating on TIMESTRINGthreethree
// DEBUG: Wrorking on the timestring
// DEBUG: ['Detritus', '...']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (26, 65)
// DEBUG: Operating on eh
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on em
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on and
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on seven
// DEBUG: 119
// DEBUG: (114, 65)
// DEBUG: Operating on seconds
// DEBUG: 169
// DEBUG: (164, 65)
// DEBUG: Operating on seconds
// DEBUG: ['TIMESTRINGthreethree', 'eh', 'em', 'and', 'seven', 'seconds']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on ...
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on Death
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on of
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on Constable
// DEBUG: 155
// DEBUG: (150, 77)
// DEBUG: Operating on Visit
// DEBUG: 191
// DEBUG: (186, 77)
// DEBUG: Operating on ...
// DEBUG: ['seconds', '...', 'Death', 'of', 'Constable', 'Visit']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 184
// DEBUG: (179, 89)
// DEBUG: Operating on eh
// DEBUG: 199
// DEBUG: (194, 89)
// DEBUG: Operating on em
// DEBUG: ['...', 'TIMESTRING', 'eh']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on and
// DEBUG: 35
// DEBUG: (30, 101)
// DEBUG: Operating on nineninenine
// DEBUG: 120
// DEBUG: (115, 101)
// DEBUG: Operating on seconds
// DEBUG: 170
// DEBUG: (165, 101)
// DEBUG: Operating on ...
// DEBUG: 192
// DEBUG: (187, 101)
// DEBUG: Operating on Death
// DEBUG: ['em', 'and', 'nineninenine', 'seconds', '...']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 113)
// DEBUG: Operating on death
// DEBUG: 67
// DEBUG: (62, 113)
// DEBUG: Operating on of
// DEBUG: 82
// DEBUG: (77, 113)
// DEBUG: Operating on death
// DEBUG: 118
// DEBUG: (113, 113)
// DEBUG: Operating on of
// DEBUG: 133
// DEBUG: (128, 113)
// DEBUG: Operating on ...
// DEBUG: 155
// DEBUG: ['Eight oh three']
// DEBUG: drawing cursor (9, 89)
// DEBUG: ['- Terry Pratchett, Jingo']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "... bingeley ... Eight oh two eh", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "em, Death of Corporal", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Littlebottombottom ...", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING eh em ... Death of Sergeant", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Detritus ...", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRINGthreethree eh em and seven seconds", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "seconds ... Death of Constable Visit", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "... TIMESTRING eh", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "em and nineninenine seconds ...", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(9, 89, "Eight oh three", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Terry Pratchett, Jingo", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:03 - He taught me that if I had to meet someone for an appointment, I must refuse to follow the 'stupid human habit' of arbitrarily choosing a time based on fifteen-minute intervals. 'Never meet people at 7:45 or 6:30, Jasper, but pick times like 7:12 and 8:03!' - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on taught
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on me
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on that
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on if
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on I
// DEBUG: 135
// DEBUG: (130, 5)
// DEBUG: Operating on had
// DEBUG: 157
// DEBUG: (152, 5)
// DEBUG: Operating on to
// DEBUG: 172
// DEBUG: (167, 5)
// DEBUG: Operating on meet
// DEBUG: 201
// DEBUG: (196, 5)
// DEBUG: Operating on someone
// DEBUG: ['He', 'taught', 'me', 'that', 'if', 'I', 'had', 'to', 'meet']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on for
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on an
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on appointment,
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on I
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on must
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on refuse
// DEBUG: ['someone', 'for', 'an', 'appointment,', 'I', 'must']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on follow
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on 'stupid
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on human
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on habit'
// DEBUG: ['refuse', 'to', 'follow', 'the', "'stupid", 'human']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on arbitrarily
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on choosing
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on a
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on time
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on based
// DEBUG: ["habit'", 'of', 'arbitrarily', 'choosing', 'a', 'time']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on fifteen-minute
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on intervals.
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on 'Never
// DEBUG: ['based', 'on', 'fifteen-minute', 'intervals.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on meet
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on people
// DEBUG: 89
// DEBUG: (84, 65)
// DEBUG: Operating on at
// DEBUG: 104
// DEBUG: (99, 65)
// DEBUG: Operating on 7:45
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on or
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on 6:30,
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on Jasper,
// DEBUG: ["'Never", 'meet', 'people', 'at', '7:45', 'or', '6:30,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on but
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on pick
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on times
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on like
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on 7:12
// DEBUG: 163
// DEBUG: (158, 77)
// DEBUG: Operating on and
// DEBUG: 185
// DEBUG: (180, 77)
// DEBUG: Operating on TIMESTRING!'
// DEBUG: Wrorking on the timestring
// DEBUG: ['Jasper,', 'but', 'pick', 'times', 'like', '7:12', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: 123
// DEBUG: ['8:03']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "He taught me that if I had to meet", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "someone for an appointment, I must", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "refuse to follow the 'stupid human", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "habit' of arbitrarily choosing a time", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "based on fifteen-minute intervals.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "'Never meet people at 7:45 or 6:30,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "Jasper, but pick times like 7:12 and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "8:03", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:04 for 1 quotations:
    case 484:
      Serial.println(F("Only one option for 08:04:"));
    Serial.println(F("08:04 - ... every clerk had his particular schedule of hours, which coincided with a single pair of tram runs coming from the city: A had to come in at 8, B at 8:04, C at 8:08 and so on, and the same for quitting times, in such a manner that never would two colleagues have the opportunity to travel in the same tramcar. - Primo Levi, The Periodic Table"));
// DEBUG: (5, 5)
// DEBUG: Operating on ...
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on every
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on clerk
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on had
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on his
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on particular
// DEBUG: ['...', 'every', 'clerk', 'had', 'his']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on schedule
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on of
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on hours,
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on which
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on coincided
// DEBUG: ['particular', 'schedule', 'of', 'hours,', 'which']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on with
// DEBUG: 49
// DEBUG: (44, 29)
// DEBUG: Operating on a
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on single
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on pair
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on of
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on tram
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on runs
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on coming
// DEBUG: ['coincided', 'with', 'a', 'single', 'pair', 'of', 'tram', 'runs']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on from
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on city:
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on A
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on had
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on to
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on come
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on in
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on at
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on 8,
// DEBUG: ['coming', 'from', 'the', 'city:', 'A', 'had', 'to', 'come', 'in', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on B
// DEBUG: 21
// DEBUG: (16, 53)
// DEBUG: Operating on at
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on C
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on at
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on 8:08
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on and
// DEBUG: ['8,', 'B', 'at', 'TIMESTRING,', 'C', 'at', '8:08']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on so
// DEBUG: 29
// DEBUG: (24, 65)
// DEBUG: Operating on on,
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on and
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on the
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on same
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on for
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on quitting
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on times,
// DEBUG: ['and', 'so', 'on,', 'and', 'the', 'same', 'for', 'quitting']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 77)
// DEBUG: Operating on such
// DEBUG: 61
// DEBUG: (56, 77)
// DEBUG: Operating on a
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on manner
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on that
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on never
// DEBUG: 177
// DEBUG: (172, 77)
// DEBUG: Operating on would
// DEBUG: ['times,', 'in', 'such', 'a', 'manner', 'that', 'never']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on two
// DEBUG: 38
// DEBUG: (33, 89)
// DEBUG: Operating on colleagues
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on have
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on the
// DEBUG: 160
// DEBUG: (155, 89)
// DEBUG: Operating on opportunity
// DEBUG: ['would', 'two', 'colleagues', 'have', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on to
// DEBUG: 37
// DEBUG: (32, 101)
// DEBUG: Operating on travel
// DEBUG: 80
// DEBUG: (75, 101)
// DEBUG: Operating on in
// DEBUG: 95
// DEBUG: (90, 101)
// DEBUG: Operating on the
// DEBUG: 117
// DEBUG: (112, 101)
// DEBUG: Operating on same
// DEBUG: 146
// DEBUG: (141, 101)
// DEBUG: Operating on tramcar.
// DEBUG: 203
// DEBUG: ['8:04']
// DEBUG: drawing cursor (31, 53)
// DEBUG: ['- The Periodic Table']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "... every clerk had his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "particular schedule of hours, which", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "coincided with a single pair of tram runs", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "coming from the city: A had to come in at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "8, B at TIMESTRING, C at 8:08", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "and so on, and the same for quitting", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "times, in such a manner that never", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "would two colleagues have the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(31, 53, "8:04", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- The Periodic Table", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:05 for 1 quotations:
    case 485:
      Serial.println(F("Only one option for 08:05:"));
    Serial.println(F("08:05 - 8.05 a.m. Pack school bag - Mark Haddon, The Curious Incident Of The Dog In The Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on Pack
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on school
// DEBUG: ['TIMESTRING', 'Pack']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on bag
// DEBUG: 39
// DEBUG: ['8.05 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING Pack", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "8.05 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:06 for 0 quotations:
    case 486:
      Serial.println(F("No quotes for 08:06"));
      return;

    // Codegen for 08:07 for 0 quotations:
    case 487:
      Serial.println(F("No quotes for 08:07"));
      return;

    // Codegen for 08:08 for 1 quotations:
    case 488:
      Serial.println(F("Only one option for 08:08:"));
    Serial.println(F("08:08 - ... every clerk had his particular schedule of hours, which coincided with a single pair of tram runs coming from the city: A had to come in at 8, B at 8:04, C at 8:08 and so on, and the same for quitting times, in such a manner that never would two colleagues have the opportunity to travel in the same tramcar. - Primo Levi, The Periodic Table"));
// DEBUG: (5, 5)
// DEBUG: Operating on ...
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on every
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on clerk
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on had
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on his
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on particular
// DEBUG: ['...', 'every', 'clerk', 'had', 'his']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on schedule
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on of
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on hours,
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on which
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on coincided
// DEBUG: ['particular', 'schedule', 'of', 'hours,', 'which']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on with
// DEBUG: 49
// DEBUG: (44, 29)
// DEBUG: Operating on a
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on single
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on pair
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on of
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on tram
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on runs
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on coming
// DEBUG: ['coincided', 'with', 'a', 'single', 'pair', 'of', 'tram', 'runs']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on from
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on city:
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on A
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on had
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on to
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on come
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on in
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on at
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on 8,
// DEBUG: ['coming', 'from', 'the', 'city:', 'A', 'had', 'to', 'come', 'in', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on B
// DEBUG: 21
// DEBUG: (16, 53)
// DEBUG: Operating on at
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on 8:04,
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on C
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on at
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on and
// DEBUG: ['8,', 'B', 'at', '8:04,', 'C', 'at', 'TIMESTRING']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on so
// DEBUG: 29
// DEBUG: (24, 65)
// DEBUG: Operating on on,
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on and
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on the
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on same
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on for
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on quitting
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on times,
// DEBUG: ['and', 'so', 'on,', 'and', 'the', 'same', 'for', 'quitting']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 77)
// DEBUG: Operating on such
// DEBUG: 61
// DEBUG: (56, 77)
// DEBUG: Operating on a
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on manner
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on that
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on never
// DEBUG: 177
// DEBUG: (172, 77)
// DEBUG: Operating on would
// DEBUG: ['times,', 'in', 'such', 'a', 'manner', 'that', 'never']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on two
// DEBUG: 38
// DEBUG: (33, 89)
// DEBUG: Operating on colleagues
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on have
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on the
// DEBUG: 160
// DEBUG: (155, 89)
// DEBUG: Operating on opportunity
// DEBUG: ['would', 'two', 'colleagues', 'have', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on to
// DEBUG: 37
// DEBUG: (32, 101)
// DEBUG: Operating on travel
// DEBUG: 80
// DEBUG: (75, 101)
// DEBUG: Operating on in
// DEBUG: 95
// DEBUG: (90, 101)
// DEBUG: Operating on the
// DEBUG: 117
// DEBUG: (112, 101)
// DEBUG: Operating on same
// DEBUG: 146
// DEBUG: (141, 101)
// DEBUG: Operating on tramcar.
// DEBUG: 203
// DEBUG: ['8:08']
// DEBUG: drawing cursor (90, 53)
// DEBUG: ['- The Periodic Table']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "... every clerk had his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "particular schedule of hours, which", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "coincided with a single pair of tram runs", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "coming from the city: A had to come in at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "8, B at 8:04, C at TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "and so on, and the same for quitting", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "times, in such a manner that never", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "would two colleagues have the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(90, 53, "8:08", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- The Periodic Table", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:09 for 1 quotations:
    case 489:
      Serial.println(F("Only one option for 08:09:"));
    Serial.println(F("08:09 - He followed the squeals down a hallway. A wall clock read 8:09 - 10:09 Dallas time. - James Ellroy, American Tabloid"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on followed
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on squeals
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on down
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on a
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on hallway.
// DEBUG: ['He', 'followed', 'the', 'squeals', 'down', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on A
// DEBUG: 27
// DEBUG: (22, 17)
// DEBUG: Operating on wall
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on clock
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on read
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['hallway.', 'A', 'wall', 'clock', 'read']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on -
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on 10:09
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on Dallas
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on time.
// DEBUG: 144
// DEBUG: ['8:09']
// DEBUG: drawing cursor (116, 17)
// DEBUG: ['- American Tabloid']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "He followed the squeals down a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "hallway. A wall clock read", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(116, 17, "8:09", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- American Tabloid", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:10 for 3 quotations:
    case 490:
      option = random(0, 3);
      Serial.print(F("3 options for 08:10. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:10 - 8.10 a.m. Read book or watch video - Mark Haddon, The Curious Incident of the Dog in the Night-time "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on Read
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on book
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on or
// DEBUG: ['TIMESTRING', 'Read', 'book']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on watch
// DEBUG: 49
// DEBUG: (44, 17)
// DEBUG: Operating on video
// DEBUG: 85
// DEBUG: ['8.10 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING Read book", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "8.10 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:10 - Amory rushed into the house and the rest followed with a limp mass that they laid on the sofa in the shoddy little front parlor. Sloane, with his shoulder punctured, was on another lounge. He was half delirious, and kept calling something about a chemistry lecture at 8:10. - F. Scott Fitzgerald, This Side of Paradise"));
// DEBUG: (5, 5)
// DEBUG: Operating on Amory
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on rushed
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on into
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on house
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on and
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on the
// DEBUG: ['Amory', 'rushed', 'into', 'the', 'house', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on rest
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on followed
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on with
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on a
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on limp
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on mass
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on that
// DEBUG: ['the', 'rest', 'followed', 'with', 'a', 'limp', 'mass']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on they
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on laid
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on on
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on sofa
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on in
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on the
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on shoddy
// DEBUG: ['that', 'they', 'laid', 'on', 'the', 'sofa', 'in', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on little
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on front
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on parlor.
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on Sloane,
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on with
// DEBUG: ['shoddy', 'little', 'front', 'parlor.', 'Sloane,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on his
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on shoulder
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on punctured,
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on was
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on on
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on another
// DEBUG: ['with', 'his', 'shoulder', 'punctured,', 'was', 'on']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on lounge.
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on He
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on was
// DEBUG: 105
// DEBUG: (100, 65)
// DEBUG: Operating on half
// DEBUG: 134
// DEBUG: (129, 65)
// DEBUG: Operating on delirious,
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on and
// DEBUG: ['another', 'lounge.', 'He', 'was', 'half', 'delirious,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on kept
// DEBUG: 43
// DEBUG: (38, 77)
// DEBUG: Operating on calling
// DEBUG: 93
// DEBUG: (88, 77)
// DEBUG: Operating on something
// DEBUG: 157
// DEBUG: (152, 77)
// DEBUG: Operating on about
// DEBUG: 193
// DEBUG: (188, 77)
// DEBUG: Operating on a
// DEBUG: 201
// DEBUG: (196, 77)
// DEBUG: Operating on chemistry
// DEBUG: ['and', 'kept', 'calling', 'something', 'about', 'a']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on lecture
// DEBUG: 70
// DEBUG: (65, 89)
// DEBUG: Operating on at
// DEBUG: 85
// DEBUG: (80, 89)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 192
// DEBUG: ['8:10']
// DEBUG: drawing cursor (80, 89)
// DEBUG: ['- This Side of Paradise']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "Amory rushed into the house and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the rest followed with a limp mass", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "that they laid on the sofa in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "shoddy little front parlor. Sloane,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "with his shoulder punctured, was on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "another lounge. He was half delirious,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "and kept calling something about a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(80, 89, "8:10", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- This Side of Paradise", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("08:10 - Cell count down to 400,000. Woke 8:10. To sleep 7:15. (Appear to have lost my watch without realising it, had to drive into town to buy another.) - JG Ballard, The Voices of Time "));
// DEBUG: (5, 5)
// DEBUG: Operating on Cell
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on count
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on down
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on to
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on 400,000.
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on Woke
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Cell', 'count', 'down', 'to', '400,000.', 'Woke']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on To
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on sleep
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on 7:15.
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on (Appear
// DEBUG: ['TIMESTRING.', 'To', 'sleep', '7:15.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on have
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on lost
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on my
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on watch
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on without
// DEBUG: 192
// DEBUG: (187, 29)
// DEBUG: Operating on realising
// DEBUG: ['(Appear', 'to', 'have', 'lost', 'my', 'watch', 'without']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on it,
// DEBUG: 42
// DEBUG: (37, 41)
// DEBUG: Operating on had
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on to
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on drive
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on into
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on town
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on to
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on buy
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on another.)
// DEBUG: ['realising', 'it,', 'had', 'to', 'drive', 'into', 'town', 'to', 'buy']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['8:10']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Voices of Time']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "Cell count down to 400,000. Woke", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING. To sleep 7:15.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "(Appear to have lost my watch without", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "realising it, had to drive into town to buy", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "8:10", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Voices of Time", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:11 for 1 quotations:
    case 491:
      Serial.println(F("Only one option for 08:11:"));
    Serial.println(F("08:11 - 'Care for a turn on the engine?' he called to the doxies, and pointed up at the footplate. They laughed but voted not to, climbing up with their bathtub into one of the rattlers instead. They both had very fetching hats, with one flower apiece, but the prettiness of their faces made you think it was more. For some reason they both wore white rosettes pinned to their dresses. I looked again at the clock: eight-eleven. - Andrew Martin, The Blackpool Highflyer "));
// DEBUG: (5, 5)
// DEBUG: Operating on 'Care
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on for
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on a
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on turn
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on on
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on the
// DEBUG: 142
// DEBUG: (137, 5)
// DEBUG: Operating on engine?'
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on he
// DEBUG: ["'Care", 'for', 'a', 'turn', 'on', 'the', "engine?'"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on called
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on to
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on the
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on doxies,
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on and
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on pointed
// DEBUG: ['he', 'called', 'to', 'the', 'doxies,', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on up
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on at
// DEBUG: 48
// DEBUG: (43, 29)
// DEBUG: Operating on the
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on footplate.
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on They
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on laughed
// DEBUG: ['pointed', 'up', 'at', 'the', 'footplate.', 'They']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on but
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on voted
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on not
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on to,
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on climbing
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on up
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on with
// DEBUG: ['laughed', 'but', 'voted', 'not', 'to,', 'climbing', 'up']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on their
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on bathtub
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on into
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on one
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on of
// DEBUG: 167
// DEBUG: (162, 53)
// DEBUG: Operating on the
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on rattlers
// DEBUG: ['with', 'their', 'bathtub', 'into', 'one', 'of', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on instead.
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on They
// DEBUG: 105
// DEBUG: (100, 65)
// DEBUG: Operating on both
// DEBUG: 134
// DEBUG: (129, 65)
// DEBUG: Operating on had
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on very
// DEBUG: 185
// DEBUG: (180, 65)
// DEBUG: Operating on fetching
// DEBUG: ['rattlers', 'instead.', 'They', 'both', 'had', 'very']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on hats,
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on with
// DEBUG: 84
// DEBUG: (79, 77)
// DEBUG: Operating on one
// DEBUG: 106
// DEBUG: (101, 77)
// DEBUG: Operating on flower
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on apiece,
// DEBUG: 199
// DEBUG: (194, 77)
// DEBUG: Operating on but
// DEBUG: ['fetching', 'hats,', 'with', 'one', 'flower', 'apiece,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 89)
// DEBUG: Operating on prettiness
// DEBUG: 107
// DEBUG: (102, 89)
// DEBUG: Operating on of
// DEBUG: 122
// DEBUG: (117, 89)
// DEBUG: Operating on their
// DEBUG: 158
// DEBUG: (153, 89)
// DEBUG: Operating on faces
// DEBUG: 194
// DEBUG: (189, 89)
// DEBUG: Operating on made
// DEBUG: ['but', 'the', 'prettiness', 'of', 'their', 'faces']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on you
// DEBUG: 37
// DEBUG: (32, 101)
// DEBUG: Operating on think
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on it
// DEBUG: 88
// DEBUG: (83, 101)
// DEBUG: Operating on was
// DEBUG: 110
// DEBUG: (105, 101)
// DEBUG: Operating on more.
// DEBUG: 146
// DEBUG: (141, 101)
// DEBUG: Operating on For
// DEBUG: 168
// DEBUG: (163, 101)
// DEBUG: Operating on some
// DEBUG: 197
// DEBUG: (192, 101)
// DEBUG: Operating on reason
// DEBUG: ['made', 'you', 'think', 'it', 'was', 'more.', 'For', 'some']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on they
// DEBUG: 46
// DEBUG: (41, 113)
// DEBUG: Operating on both
// DEBUG: 75
// DEBUG: (70, 113)
// DEBUG: Operating on wore
// DEBUG: 104
// DEBUG: (99, 113)
// DEBUG: Operating on white
// DEBUG: 140
// DEBUG: (135, 113)
// DEBUG: Operating on rosettes
// DEBUG: 197
// DEBUG: (192, 113)
// DEBUG: Operating on pinned
// DEBUG: ['reason', 'they', 'both', 'wore', 'white', 'rosettes']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (12, 125)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 125)
// DEBUG: Operating on their
// DEBUG: 68
// DEBUG: (63, 125)
// DEBUG: Operating on dresses.
// DEBUG: 125
// DEBUG: (120, 125)
// DEBUG: Operating on I
// DEBUG: 133
// DEBUG: (128, 125)
// DEBUG: Operating on looked
// DEBUG: 176
// DEBUG: (171, 125)
// DEBUG: Operating on again
// DEBUG: ['pinned', 'to', 'their', 'dresses.', 'I', 'looked']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (11, 137)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 137)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 137)
// DEBUG: Operating on clock:
// DEBUG: 96
// DEBUG: (91, 137)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['again', 'at', 'the', 'clock:']
// DEBUG: drawing cursor (5, 137)
// DEBUG: ['eight-eleven']
// DEBUG: drawing cursor (91, 137)
// DEBUG: ['- The Blackpool Highflyer']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "'Care for a turn on the engine?'", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "he called to the doxies, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "pointed up at the footplate. They", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "laughed but voted not to, climbing up", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "with their bathtub into one of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "rattlers instead. They both had very", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "fetching hats, with one flower apiece,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "but the prettiness of their faces", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "made you think it was more. For some", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "reason they both wore white rosettes", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "pinned to their dresses. I looked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "again at the clock:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(91, 137, "eight-eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- The Blackpool Highflyer", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:12 for 1 quotations:
    case 492:
      Serial.println(F("Only one option for 08:12:"));
    Serial.println(F("08:12 - At 8:12 a.m., just before the moment of pff, all the business of the cellars was being transacted - garbage transferred from small cans into large ones; early wide-awake grandmas, rocky with insomnia, dumped wash into the big tubs; boys in swimming trunks rolled baby carriages out into the cool morning. - Grace Paley, In Time Which Made A Monkey Of Us All"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on just
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on before
// DEBUG: ['At', 'TIMESTRING,', 'just']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on moment
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on of
// DEBUG: 97
// DEBUG: (92, 17)
// DEBUG: Operating on pff,
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on all
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on business
// DEBUG: ['before', 'the', 'moment', 'of', 'pff,', 'all', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on of
// DEBUG: 34
// DEBUG: (29, 29)
// DEBUG: Operating on the
// DEBUG: 56
// DEBUG: (51, 29)
// DEBUG: Operating on cellars
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on was
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on being
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on transacted
// DEBUG: ['business', 'of', 'the', 'cellars', 'was', 'being']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on -
// DEBUG: 29
// DEBUG: (24, 41)
// DEBUG: Operating on garbage
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on transferred
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on from
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on small
// DEBUG: ['transacted', '-', 'garbage', 'transferred', 'from']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on cans
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on into
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on large
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on ones;
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on early
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on wide-awake
// DEBUG: ['small', 'cans', 'into', 'large', 'ones;', 'early']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on grandmas,
// DEBUG: 85
// DEBUG: (80, 65)
// DEBUG: Operating on rocky
// DEBUG: 121
// DEBUG: (116, 65)
// DEBUG: Operating on with
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on insomnia,
// DEBUG: ['wide-awake', 'grandmas,', 'rocky', 'with']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on dumped
// DEBUG: 63
// DEBUG: (58, 77)
// DEBUG: Operating on wash
// DEBUG: 92
// DEBUG: (87, 77)
// DEBUG: Operating on into
// DEBUG: 121
// DEBUG: (116, 77)
// DEBUG: Operating on the
// DEBUG: 143
// DEBUG: (138, 77)
// DEBUG: Operating on big
// DEBUG: 165
// DEBUG: (160, 77)
// DEBUG: Operating on tubs;
// DEBUG: 201
// DEBUG: (196, 77)
// DEBUG: Operating on boys
// DEBUG: ['insomnia,', 'dumped', 'wash', 'into', 'the', 'big', 'tubs;']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on in
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on swimming
// DEBUG: 87
// DEBUG: (82, 89)
// DEBUG: Operating on trunks
// DEBUG: 130
// DEBUG: (125, 89)
// DEBUG: Operating on rolled
// DEBUG: 173
// DEBUG: (168, 89)
// DEBUG: Operating on baby
// DEBUG: 202
// DEBUG: (197, 89)
// DEBUG: Operating on carriages
// DEBUG: ['boys', 'in', 'swimming', 'trunks', 'rolled', 'baby']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (15, 101)
// DEBUG: Operating on out
// DEBUG: 42
// DEBUG: (37, 101)
// DEBUG: Operating on into
// DEBUG: 71
// DEBUG: (66, 101)
// DEBUG: Operating on the
// DEBUG: 93
// DEBUG: (88, 101)
// DEBUG: Operating on cool
// DEBUG: 122
// DEBUG: (117, 101)
// DEBUG: Operating on morning.
// DEBUG: 179
// DEBUG: ['8:12 a.m.']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Grace Paley']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING, just", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "before the moment of pff, all the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "business of the cellars was being", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "transacted - garbage transferred from", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "small cans into large ones; early", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "wide-awake grandmas, rocky with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "insomnia, dumped wash into the big tubs;", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "boys in swimming trunks rolled baby", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "8:12 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Grace Paley", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:13 for 1 quotations:
    case 493:
      Serial.println(F("Only one option for 08:13:"));
    Serial.println(F("08:13 - At 8:13 a.m. the alarm clock in the laboratory gave the ringing word. Eddie touched a button in the substructure of an ordinary glass coffeepot, from whose spout two tubes proceeded into the wall. - Grace Paley, In Time Which Made A Monkey Of Us All"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on the
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on alarm
// DEBUG: ['At', 'TIMESTRING', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on clock
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on in
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on the
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on laboratory
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on gave
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on the
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on ringing
// DEBUG: ['alarm', 'clock', 'in', 'the', 'laboratory', 'gave', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on word.
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on Eddie
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on touched
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on a
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on button
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on in
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on the
// DEBUG: ['ringing', 'word.', 'Eddie', 'touched', 'a', 'button', 'in']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on substructure
// DEBUG: 99
// DEBUG: (94, 41)
// DEBUG: Operating on of
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on an
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on ordinary
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on glass
// DEBUG: ['the', 'substructure', 'of', 'an', 'ordinary']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on coffeepot,
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on from
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on whose
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on spout
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on two
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on tubes
// DEBUG: ['glass', 'coffeepot,', 'from', 'whose', 'spout', 'two']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on proceeded
// DEBUG: 80
// DEBUG: (75, 65)
// DEBUG: Operating on into
// DEBUG: 109
// DEBUG: (104, 65)
// DEBUG: Operating on the
// DEBUG: 131
// DEBUG: (126, 65)
// DEBUG: Operating on wall.
// DEBUG: 167
// DEBUG: ['8:13 a.m.']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Grace Paley']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "alarm clock in the laboratory gave the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "ringing word. Eddie touched a button in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the substructure of an ordinary", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "glass coffeepot, from whose spout two", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "8:13 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Grace Paley", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:14 for 0 quotations:
    case 494:
      Serial.println(F("No quotes for 08:14"));
      return;

    // Codegen for 08:15 for 2 quotations:
    case 495:
      option = random(0, 2);
      Serial.print(F("2 options for 08:15. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:15 - It was in the winter when this happened, very near the shortest day, and a week of fog into the bargain, so the fact that it was still very dark when George woke in the morning was no guide to him as to the time. He reached up, and hauled down his watch. It was a quarter-past eight. - Jerome K Jerome, Three Men in a Boat "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on in
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on the
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on winter
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on when
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on this
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on happened,
// DEBUG: ['It', 'was', 'in', 'the', 'winter', 'when', 'this']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on very
// DEBUG: 49
// DEBUG: (44, 17)
// DEBUG: Operating on near
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on the
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on shortest
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on day,
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on and
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on a
// DEBUG: ['happened,', 'very', 'near', 'the', 'shortest', 'day,', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (7, 29)
// DEBUG: Operating on week
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on of
// DEBUG: 56
// DEBUG: (51, 29)
// DEBUG: Operating on fog
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on into
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on the
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on bargain,
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on so
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on the
// DEBUG: ['a', 'week', 'of', 'fog', 'into', 'the', 'bargain,', 'so']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on fact
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on that
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on it
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on was
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on still
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on very
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on dark
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on when
// DEBUG: ['the', 'fact', 'that', 'it', 'was', 'still', 'very', 'dark']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on George
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on woke
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on in
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on the
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on morning
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on was
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on no
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on guide
// DEBUG: ['when', 'George', 'woke', 'in', 'the', 'morning', 'was', 'no']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on him
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on as
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on to
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 65)
// DEBUG: Operating on time.
// DEBUG: 141
// DEBUG: (136, 65)
// DEBUG: Operating on He
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on reached
// DEBUG: 206
// DEBUG: (201, 65)
// DEBUG: Operating on up,
// DEBUG: ['guide', 'to', 'him', 'as', 'to', 'the', 'time.', 'He', 'reached']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on and
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on hauled
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on down
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on his
// DEBUG: 130
// DEBUG: (125, 77)
// DEBUG: Operating on watch.
// DEBUG: 173
// DEBUG: (168, 77)
// DEBUG: Operating on It
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on was
// DEBUG: 210
// DEBUG: (205, 77)
// DEBUG: Operating on a
// DEBUG: ['up,', 'and', 'hauled', 'down', 'his', 'watch.', 'It', 'was']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (7, 89)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['a']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['quarter-past eight']
// DEBUG: drawing cursor (7, 89)
// DEBUG: ['- Three Men in a Boat']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "It was in the winter when this", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "happened, very near the shortest day, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "a week of fog into the bargain, so", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the fact that it was still very dark", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "when George woke in the morning was no", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "guide to him as to the time. He reached", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "up, and hauled down his watch. It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(7, 89, "quarter-past eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Three Men in a Boat", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:15 - You scrutinized your wrist: \"It's eight fifteen. (And here time forked.) I'll turn it on.\" The screen In its blank broth evolved a lifelike blur, And music welled. - , Pale Fire"));
// DEBUG: (5, 5)
// DEBUG: Operating on You
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on scrutinized
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on your
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on wrist:
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on \"It's
// DEBUG: ['You', 'scrutinized', 'your', 'wrist:']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on (And
// DEBUG: ['\\"It\'s', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on here
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on time
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on forked.)
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on I'll
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on turn
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on it
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on on.\"
// DEBUG: ['(And', 'here', 'time', 'forked.)', "I'll", 'turn', 'it']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on The
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on screen
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on In
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on its
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on blank
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on broth
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on evolved
// DEBUG: ['on.\\"', 'The', 'screen', 'In', 'its', 'blank', 'broth']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on a
// DEBUG: 26
// DEBUG: (21, 53)
// DEBUG: Operating on lifelike
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on blur,
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on And
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on music
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on welled.
// DEBUG: ['evolved', 'a', 'lifelike', 'blur,', 'And', 'music']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['eight fifteen']
// DEBUG: drawing cursor (12, 17)
// DEBUG: ['- Pale Fire']
// DEBUG: drawing cursor (130, 192)
          paint.Paint_DrawString_EN(5, 5, "You scrutinized your wrist:", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "\"It's TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "(And here time forked.) I'll turn it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "on.\" The screen In its blank broth", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "evolved a lifelike blur, And music", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(12, 17, "eight fifteen", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(130, 192, "- Pale Fire", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:16 for 1 quotations:
    case 496:
      Serial.println(F("Only one option for 08:16:"));
    Serial.println(F("08:16 - I walk through the fruit trees toward a huge, square, brown patch of earth with vegetation growing in serried rows. These must be the vegetables. I prod one of them cautiously with my foot. It could be a cabbage or a lettuce. Or the leaves of something growing underground, maybe. To be honest, it could be an alien. I have no idea. I sit down on a mossy wooden bench and look at a nearby bush covered in white flowers. Mm. Pretty. Now what? What do people do in their gardens? I feel I should have something to read. Or someone to call. My fingers are itching to move. I look at my watch. Still only eight sixteen. Oh God. - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on walk
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on through
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on the
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on fruit
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on trees
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on toward
// DEBUG: ['I', 'walk', 'through', 'the', 'fruit', 'trees']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on a
// DEBUG: 25
// DEBUG: (20, 17)
// DEBUG: Operating on huge,
// DEBUG: 61
// DEBUG: (56, 17)
// DEBUG: Operating on square,
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on brown
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on patch
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on of
// DEBUG: 198
// DEBUG: (193, 17)
// DEBUG: Operating on earth
// DEBUG: ['toward', 'a', 'huge,', 'square,', 'brown', 'patch', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on with
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on vegetation
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on growing
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on in
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on serried
// DEBUG: ['earth', 'with', 'vegetation', 'growing', 'in']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on rows.
// DEBUG: 54
// DEBUG: (49, 41)
// DEBUG: Operating on These
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on must
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on be
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on the
// DEBUG: 156
// DEBUG: (151, 41)
// DEBUG: Operating on vegetables.
// DEBUG: ['serried', 'rows.', 'These', 'must', 'be', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on I
// DEBUG: 30
// DEBUG: (25, 53)
// DEBUG: Operating on prod
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on one
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on of
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on them
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on cautiously
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on with
// DEBUG: ['vegetables.', 'I', 'prod', 'one', 'of', 'them', 'cautiously']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on my
// DEBUG: 30
// DEBUG: (25, 65)
// DEBUG: Operating on foot.
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on It
// DEBUG: 81
// DEBUG: (76, 65)
// DEBUG: Operating on could
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on be
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on a
// DEBUG: 140
// DEBUG: (135, 65)
// DEBUG: Operating on cabbage
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on or
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on a
// DEBUG: ['with', 'my', 'foot.', 'It', 'could', 'be', 'a', 'cabbage', 'or']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (7, 77)
// DEBUG: Operating on lettuce.
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on Or
// DEBUG: 84
// DEBUG: (79, 77)
// DEBUG: Operating on the
// DEBUG: 106
// DEBUG: (101, 77)
// DEBUG: Operating on leaves
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on of
// DEBUG: 164
// DEBUG: (159, 77)
// DEBUG: Operating on something
// DEBUG: ['a', 'lettuce.', 'Or', 'the', 'leaves', 'of']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on growing
// DEBUG: 70
// DEBUG: (65, 89)
// DEBUG: Operating on underground,
// DEBUG: 155
// DEBUG: (150, 89)
// DEBUG: Operating on maybe.
// DEBUG: 198
// DEBUG: (193, 89)
// DEBUG: Operating on To
// DEBUG: ['something', 'growing', 'underground,', 'maybe.']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on be
// DEBUG: 28
// DEBUG: (23, 101)
// DEBUG: Operating on honest,
// DEBUG: 78
// DEBUG: (73, 101)
// DEBUG: Operating on it
// DEBUG: 93
// DEBUG: (88, 101)
// DEBUG: Operating on could
// DEBUG: 129
// DEBUG: (124, 101)
// DEBUG: Operating on be
// DEBUG: 144
// DEBUG: (139, 101)
// DEBUG: Operating on an
// DEBUG: 159
// DEBUG: (154, 101)
// DEBUG: Operating on alien.
// DEBUG: 202
// DEBUG: (197, 101)
// DEBUG: Operating on I
// DEBUG: 210
// DEBUG: (205, 101)
// DEBUG: Operating on have
// DEBUG: ['To', 'be', 'honest,', 'it', 'could', 'be', 'an', 'alien.', 'I']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on no
// DEBUG: 30
// DEBUG: (25, 113)
// DEBUG: Operating on idea.
// DEBUG: 66
// DEBUG: (61, 113)
// DEBUG: Operating on I
// DEBUG: 74
// DEBUG: (69, 113)
// DEBUG: Operating on sit
// DEBUG: 96
// DEBUG: (91, 113)
// DEBUG: Operating on down
// DEBUG: 125
// DEBUG: (120, 113)
// DEBUG: Operating on on
// DEBUG: 140
// DEBUG: (135, 113)
// DEBUG: Operating on a
// DEBUG: 148
// DEBUG: (143, 113)
// DEBUG: Operating on mossy
// DEBUG: 184
// DEBUG: (179, 113)
// DEBUG: Operating on wooden
// DEBUG: ['have', 'no', 'idea.', 'I', 'sit', 'down', 'on', 'a', 'mossy']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (12, 125)
// DEBUG: Operating on bench
// DEBUG: 53
// DEBUG: (48, 125)
// DEBUG: Operating on and
// DEBUG: 75
// DEBUG: (70, 125)
// DEBUG: Operating on look
// DEBUG: 104
// DEBUG: (99, 125)
// DEBUG: Operating on at
// DEBUG: 119
// DEBUG: (114, 125)
// DEBUG: Operating on a
// DEBUG: 127
// DEBUG: (122, 125)
// DEBUG: Operating on nearby
// DEBUG: 170
// DEBUG: (165, 125)
// DEBUG: Operating on bush
// DEBUG: 199
// DEBUG: (194, 125)
// DEBUG: Operating on covered
// DEBUG: ['wooden', 'bench', 'and', 'look', 'at', 'a', 'nearby', 'bush']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (13, 137)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 137)
// DEBUG: Operating on white
// DEBUG: 69
// DEBUG: (64, 137)
// DEBUG: Operating on flowers.
// DEBUG: 126
// DEBUG: (121, 137)
// DEBUG: Operating on Mm.
// DEBUG: 148
// DEBUG: (143, 137)
// DEBUG: Operating on Pretty.
// DEBUG: 198
// DEBUG: (193, 137)
// DEBUG: Operating on Now
// DEBUG: ['covered', 'in', 'white', 'flowers.', 'Mm.', 'Pretty.']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on what?
// DEBUG: 50
// DEBUG: (45, 149)
// DEBUG: Operating on What
// DEBUG: 79
// DEBUG: (74, 149)
// DEBUG: Operating on do
// DEBUG: 94
// DEBUG: (89, 149)
// DEBUG: Operating on people
// DEBUG: 137
// DEBUG: (132, 149)
// DEBUG: Operating on do
// DEBUG: 152
// DEBUG: (147, 149)
// DEBUG: Operating on in
// DEBUG: 167
// DEBUG: (162, 149)
// DEBUG: Operating on their
// DEBUG: 203
// DEBUG: (198, 149)
// DEBUG: Operating on gardens?
// DEBUG: ['Now', 'what?', 'What', 'do', 'people', 'do', 'in', 'their']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (14, 161)
// DEBUG: Operating on I
// DEBUG: 27
// DEBUG: (22, 161)
// DEBUG: Operating on feel
// DEBUG: 56
// DEBUG: (51, 161)
// DEBUG: Operating on I
// DEBUG: 64
// DEBUG: (59, 161)
// DEBUG: Operating on should
// DEBUG: 107
// DEBUG: (102, 161)
// DEBUG: Operating on have
// DEBUG: 136
// DEBUG: (131, 161)
// DEBUG: Operating on something
// DEBUG: 200
// DEBUG: (195, 161)
// DEBUG: Operating on to
// DEBUG: ['gardens?', 'I', 'feel', 'I', 'should', 'have', 'something']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (8, 173)
// DEBUG: Operating on read.
// DEBUG: 49
// DEBUG: (44, 173)
// DEBUG: Operating on Or
// DEBUG: 64
// DEBUG: (59, 173)
// DEBUG: Operating on someone
// DEBUG: 114
// DEBUG: (109, 173)
// DEBUG: Operating on to
// DEBUG: 129
// DEBUG: (124, 173)
// DEBUG: Operating on call.
// DEBUG: 165
// DEBUG: (160, 173)
// DEBUG: Operating on My
// DEBUG: 180
// DEBUG: (175, 173)
// DEBUG: Operating on fingers
// DEBUG: ['to', 'read.', 'Or', 'someone', 'to', 'call.', 'My']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (13, 185)
// DEBUG: Operating on are
// DEBUG: 40
// DEBUG: (35, 185)
// DEBUG: Operating on itching
// DEBUG: 90
// DEBUG: (85, 185)
// DEBUG: Operating on to
// DEBUG: 105
// DEBUG: (100, 185)
// DEBUG: Operating on move.
// DEBUG: 141
// DEBUG: (136, 185)
// DEBUG: Operating on I
// DEBUG: 149
// DEBUG: (144, 185)
// DEBUG: Operating on look
// DEBUG: 178
// DEBUG: (173, 185)
// DEBUG: Operating on at
// DEBUG: 193
// DEBUG: (188, 185)
// DEBUG: Operating on my
// DEBUG: 208
// DEBUG: (203, 185)
// DEBUG: Operating on watch.
// DEBUG: ['fingers', 'are', 'itching', 'to', 'move.', 'I', 'look', 'at', 'my']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (12, 197)
// DEBUG: Operating on Still
// DEBUG: 53
// DEBUG: (48, 197)
// DEBUG: Operating on only
// DEBUG: 82
// DEBUG: (77, 197)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['watch.', 'Still', 'only']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (17, 209)
// DEBUG: Operating on Oh
// DEBUG: 37
// DEBUG: (32, 209)
// DEBUG: Operating on God.
// DEBUG: 66
// DEBUG: ['eight sixteen']
// DEBUG: drawing cursor (77, 197)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "I walk through the fruit trees", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "toward a huge, square, brown patch of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "earth with vegetation growing in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "serried rows. These must be the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "vegetables. I prod one of them cautiously", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "with my foot. It could be a cabbage or", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "a lettuce. Or the leaves of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "something growing underground, maybe.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "To be honest, it could be an alien. I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "have no idea. I sit down on a mossy", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "wooden bench and look at a nearby bush", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "covered in white flowers. Mm. Pretty.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 149, "Now what? What do people do in their", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 161, "gardens? I feel I should have something", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 173, "to read. Or someone to call. My", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 185, "fingers are itching to move. I look at my", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 197, "watch. Still only", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(77, 197, "eight sixteen", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:17 for 2 quotations:
    case 497:
      option = random(0, 2);
      Serial.print(F("2 options for 08:17. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:17 - He consulted his instruments, and recorded: \"Monday, July 1. Chronometer, 8.17 a.m.; barometer, 297 in.; thermometer, 6° (43° F.). Direction, E.S.E.\" - Jules Verne, A Journey to the Centre of the Earth"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on consulted
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on his
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on instruments,
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on and
// DEBUG: ['He', 'consulted', 'his', 'instruments,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on recorded:
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on \"Monday,
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on July
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on 1.
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on Chronometer,
// DEBUG: ['and', 'recorded:', '\\"Monday,', 'July', '1.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (18, 29)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on barometer,
// DEBUG: ['Chronometer,', 'TIMESTRING;']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on 297
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on in.;
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on thermometer,
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on 6°
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on (43°
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on F.).
// DEBUG: ['barometer,', '297', 'in.;', 'thermometer,', '6°', '(43°']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on Direction,
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on E.S.E.\"
// DEBUG: 143
// DEBUG: ['8.17 a.m.']
// DEBUG: drawing cursor (18, 29)
// DEBUG: ['- Jules Verne']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "He consulted his instruments,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "and recorded: \"Monday, July 1.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Chronometer, TIMESTRING;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "barometer, 297 in.; thermometer, 6° (43°", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(18, 29, "8.17 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Jules Verne", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:17 - Come on, I can't give up yet. I'll just sit here for a bit and enjoy the peace. I lean back and watch a little speckled bird pecking the ground nearby for a while. Then I look at my watch again: eight seventeen. I can't do this. - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on Come
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on on,
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on I
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on can't
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on give
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on up
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on yet.
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on I'll
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on just
// DEBUG: ['Come', 'on,', 'I', "can't", 'give', 'up', 'yet.', "I'll"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on sit
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on here
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on for
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on a
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on bit
// DEBUG: 118
// DEBUG: (113, 17)
// DEBUG: Operating on and
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on enjoy
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on the
// DEBUG: 198
// DEBUG: (193, 17)
// DEBUG: Operating on peace.
// DEBUG: ['just', 'sit', 'here', 'for', 'a', 'bit', 'and', 'enjoy', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 29)
// DEBUG: Operating on lean
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on back
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on and
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on watch
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on a
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on little
// DEBUG: 192
// DEBUG: (187, 29)
// DEBUG: Operating on speckled
// DEBUG: ['peace.', 'I', 'lean', 'back', 'and', 'watch', 'a', 'little']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on bird
// DEBUG: 48
// DEBUG: (43, 41)
// DEBUG: Operating on pecking
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on the
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on ground
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on nearby
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on for
// DEBUG: ['speckled', 'bird', 'pecking', 'the', 'ground', 'nearby']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on a
// DEBUG: 22
// DEBUG: (17, 53)
// DEBUG: Operating on while.
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on Then
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on I
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on look
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on at
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on my
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on watch
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on again:
// DEBUG: ['for', 'a', 'while.', 'Then', 'I', 'look', 'at', 'my', 'watch']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on I
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on can't
// DEBUG: ['again:', 'TIMESTRING.', 'I']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on do
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on this.
// DEBUG: 67
// DEBUG: ['eight seventeen']
// DEBUG: drawing cursor (12, 65)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "Come on, I can't give up yet. I'll", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "just sit here for a bit and enjoy the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "peace. I lean back and watch a little", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "speckled bird pecking the ground nearby", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "for a while. Then I look at my watch", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "again: TIMESTRING. I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(12, 65, "eight seventeen", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:18 for 0 quotations:
    case 498:
      Serial.println(F("No quotes for 08:18"));
      return;

    // Codegen for 08:19 for 1 quotations:
    case 499:
      Serial.println(F("Only one option for 08:19:"));
    Serial.println(F("08:19 - I had arranged to meet the Occupational Health Officer at 10:30. I took the train from Watford Junction at 8.19 and arrived at London Euston seven minutes late, at 8.49. - Jonathan Coe, The Terrible Privacy of Maxwell Sim"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on had
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on arranged
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on to
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on meet
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on the
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on Occupational
// DEBUG: ['I', 'had', 'arranged', 'to', 'meet', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (18, 17)
// DEBUG: Operating on Health
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on Officer
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on at
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on 10:30.
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on I
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on took
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on the
// DEBUG: ['Occupational', 'Health', 'Officer', 'at', '10:30.', 'I', 'took']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on train
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on from
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on Watford
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on Junction
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on at
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'train', 'from', 'Watford', 'Junction', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on and
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on arrived
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on at
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on London
// DEBUG: ['TIMESTRING', 'and', 'arrived', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on Euston
// DEBUG: 60
// DEBUG: (55, 53)
// DEBUG: Operating on seven
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on minutes
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on late,
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on at
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on 8.49.
// DEBUG: ['London', 'Euston', 'seven', 'minutes', 'late,', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['8.19']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Jonathan Coe']
// DEBUG: drawing cursor (109, 192)
    paint.Paint_DrawString_EN(5, 5, "I had arranged to meet the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Occupational Health Officer at 10:30. I took", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the train from Watford Junction at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING and arrived at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "London Euston seven minutes late, at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "8.19", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(109, 192, "- Jonathan Coe", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:20 for 1 quotations:
    case 500:
      Serial.println(F("Only one option for 08:20:"));
    Serial.println(F("08:20 - When the typewriters happen to pause (8:20 and other mythical hours), and there are no flights of American bombers in the sky, and the motor traffic's not too heavy in Oxford Street, you can hear winter birds cheeping outside, busy at the feeders the girls have put up. - Thomas Pynchon, Gravity's Rainbow"));
// DEBUG: (5, 5)
// DEBUG: Operating on When
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on typewriters
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on happen
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on to
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on pause
// DEBUG: ['When', 'the', 'typewriters', 'happen', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on (TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on and
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on other
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on mythical
// DEBUG: ['pause', '(TIMESTRING', 'and', 'other']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on hours),
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on and
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on there
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on are
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on no
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on flights
// DEBUG: ['mythical', 'hours),', 'and', 'there', 'are', 'no']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on American
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on bombers
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on in
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on the
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on sky,
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on and
// DEBUG: ['flights', 'of', 'American', 'bombers', 'in', 'the', 'sky,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on motor
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on traffic's
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on not
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on too
// DEBUG: 180
// DEBUG: (175, 53)
// DEBUG: Operating on heavy
// DEBUG: ['and', 'the', 'motor', "traffic's", 'not', 'too']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on Oxford
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on Street,
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on you
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on can
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on hear
// DEBUG: 197
// DEBUG: (192, 65)
// DEBUG: Operating on winter
// DEBUG: ['heavy', 'in', 'Oxford', 'Street,', 'you', 'can', 'hear']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on birds
// DEBUG: 53
// DEBUG: (48, 77)
// DEBUG: Operating on cheeping
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on outside,
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on busy
// DEBUG: 196
// DEBUG: (191, 77)
// DEBUG: Operating on at
// DEBUG: 211
// DEBUG: (206, 77)
// DEBUG: Operating on the
// DEBUG: ['winter', 'birds', 'cheeping', 'outside,', 'busy', 'at']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on feeders
// DEBUG: 64
// DEBUG: (59, 89)
// DEBUG: Operating on the
// DEBUG: 86
// DEBUG: (81, 89)
// DEBUG: Operating on girls
// DEBUG: 122
// DEBUG: (117, 89)
// DEBUG: Operating on have
// DEBUG: 151
// DEBUG: (146, 89)
// DEBUG: Operating on put
// DEBUG: 173
// DEBUG: (168, 89)
// DEBUG: Operating on up.
// DEBUG: 195
// DEBUG: ['8:20']
// DEBUG: drawing cursor (11, 17)
// DEBUG: ["- Gravity's Rainbow"]
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "When the typewriters happen to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "pause (TIMESTRING and other", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "mythical hours), and there are no", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "flights of American bombers in the sky,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "and the motor traffic's not too", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "heavy in Oxford Street, you can hear", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "winter birds cheeping outside, busy at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(11, 17, "8:20", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Gravity's Rainbow", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:21 for 0 quotations:
    case 501:
      Serial.println(F("No quotes for 08:21"));
      return;

    // Codegen for 08:22 for 0 quotations:
    case 502:
      Serial.println(F("No quotes for 08:22"));
      return;

    // Codegen for 08:23 for 2 quotations:
    case 503:
      option = random(0, 2);
      Serial.print(F("2 options for 08:23. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:23 - And then Wedderburn looked at his watch. \"Twenty-three minutes past eight. I am going up by the quarter to twelve train, so that there is plenty of time. - HG Wells, The Flowering of The Strange Orchid"));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on then
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on Wedderburn
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on looked
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on at
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on his
// DEBUG: ['And', 'then', 'Wedderburn', 'looked', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on watch.
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on \"TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['his', 'watch.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (19, 41)
// DEBUG: Operating on I
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on am
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on going
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on up
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on by
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on the
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on quarter
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on to
// DEBUG: 200
// DEBUG: (195, 41)
// DEBUG: Operating on twelve
// DEBUG: ['\\"TIMESTRING.', 'I', 'am', 'going', 'up', 'by', 'the', 'quarter', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on train,
// DEBUG: 60
// DEBUG: (55, 53)
// DEBUG: Operating on so
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on that
// DEBUG: 104
// DEBUG: (99, 53)
// DEBUG: Operating on there
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on is
// DEBUG: 155
// DEBUG: (150, 53)
// DEBUG: Operating on plenty
// DEBUG: 198
// DEBUG: (193, 53)
// DEBUG: Operating on of
// DEBUG: ['twelve', 'train,', 'so', 'that', 'there', 'is', 'plenty']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on time.
// DEBUG: 49
// DEBUG: ['Twenty-three minutes past eight']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- HG Wells']
// DEBUG: drawing cursor (137, 192)
          paint.Paint_DrawString_EN(5, 5, "And then Wedderburn looked at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "his watch.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "\"TIMESTRING. I am going up by the quarter to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "twelve train, so that there is plenty", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Twenty-three minutes past eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(137, 192, "- HG Wells", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:23 - At 8:23 there seemed every chance of a lasting alliance starting between Florin and Guilder. At 8:24 the two nations were very close to war. - William Goldman, The Princess Bride"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on there
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on seemed
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on every
// DEBUG: ['At', 'TIMESTRING', 'there', 'seemed']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on chance
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on of
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on a
// DEBUG: 82
// DEBUG: (77, 17)
// DEBUG: Operating on lasting
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on alliance
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on starting
// DEBUG: ['every', 'chance', 'of', 'a', 'lasting', 'alliance']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on between
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on Florin
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on and
// DEBUG: 134
// DEBUG: (129, 29)
// DEBUG: Operating on Guilder.
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on At
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on 8:24
// DEBUG: ['starting', 'between', 'Florin', 'and', 'Guilder.', 'At']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on two
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on nations
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on were
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on very
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on close
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on to
// DEBUG: ['8:24', 'the', 'two', 'nations', 'were', 'very', 'close']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on war.
// DEBUG: 42
// DEBUG: ['8:23']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Princess Bride']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING there seemed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "every chance of a lasting alliance", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "starting between Florin and Guilder. At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "8:24 the two nations were very close", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "8:23", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Princess Bride", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:24 for 1 quotations:
    case 504:
      Serial.println(F("Only one option for 08:24:"));
    Serial.println(F("08:24 - At 8:23 there seemed every chance of a lasting alliance starting between Florin and Guilder. At 8:24 the two nations were very close to war. - William Goldman, The Princess Bride"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on 8:23
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on there
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on seemed
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on every
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on chance
// DEBUG: ['At', '8:23', 'there', 'seemed', 'every']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on a
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on lasting
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on alliance
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on starting
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on between
// DEBUG: ['chance', 'of', 'a', 'lasting', 'alliance', 'starting']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on Florin
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on and
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on Guilder.
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on At
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['between', 'Florin', 'and', 'Guilder.', 'At']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on the
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on two
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on nations
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on were
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on very
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on close
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on to
// DEBUG: ['TIMESTRING', 'the', 'two', 'nations', 'were', 'very', 'close']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on war.
// DEBUG: 42
// DEBUG: ['8:24']
// DEBUG: drawing cursor (150, 29)
// DEBUG: ['- The Princess Bride']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "At 8:23 there seemed every", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "chance of a lasting alliance starting", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "between Florin and Guilder. At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING the two nations were very close", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(150, 29, "8:24", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- The Princess Bride", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:25 for 0 quotations:
    case 505:
      Serial.println(F("No quotes for 08:25"));
      return;

    // Codegen for 08:26 for 1 quotations:
    case 506:
      Serial.println(F("Only one option for 08:26:"));
    Serial.println(F("08:26 - It exploded much later than intended, probably a good twelve hours later, at twenty-six minutes past eight on Monday morning. Several defunct wristwatches, the property of victims, confirmed the time. As with its predecessors over the last few months, there had been no warning. - John Le Carre, The Little Drummer Girl"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on exploded
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on much
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on later
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on than
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on intended,
// DEBUG: ['It', 'exploded', 'much', 'later', 'than']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on probably
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on a
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on good
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on twelve
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on hours
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on later,
// DEBUG: ['intended,', 'probably', 'a', 'good', 'twelve', 'hours']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['later,', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on on
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on Monday
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on morning.
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on Several
// DEBUG: 186
// DEBUG: (181, 53)
// DEBUG: Operating on defunct
// DEBUG: ['TIMESTRING', 'on', 'Monday', 'morning.', 'Several']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on wristwatches,
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on the
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on property
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on of
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on victims,
// DEBUG: ['defunct', 'wristwatches,', 'the', 'property', 'of']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on confirmed
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on time.
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on As
// DEBUG: 156
// DEBUG: (151, 77)
// DEBUG: Operating on with
// DEBUG: 185
// DEBUG: (180, 77)
// DEBUG: Operating on its
// DEBUG: 207
// DEBUG: (202, 77)
// DEBUG: Operating on predecessors
// DEBUG: ['victims,', 'confirmed', 'the', 'time.', 'As', 'with', 'its']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (18, 89)
// DEBUG: Operating on over
// DEBUG: 52
// DEBUG: (47, 89)
// DEBUG: Operating on the
// DEBUG: 74
// DEBUG: (69, 89)
// DEBUG: Operating on last
// DEBUG: 103
// DEBUG: (98, 89)
// DEBUG: Operating on few
// DEBUG: 125
// DEBUG: (120, 89)
// DEBUG: Operating on months,
// DEBUG: 175
// DEBUG: (170, 89)
// DEBUG: Operating on there
// DEBUG: 211
// DEBUG: (206, 89)
// DEBUG: Operating on had
// DEBUG: ['predecessors', 'over', 'the', 'last', 'few', 'months,', 'there']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on been
// DEBUG: 43
// DEBUG: (38, 101)
// DEBUG: Operating on no
// DEBUG: 58
// DEBUG: (53, 101)
// DEBUG: Operating on warning.
// DEBUG: 115
// DEBUG: ['twenty-six minutes past eight']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- The Little Drummer Girl']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "It exploded much later than", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "intended, probably a good twelve hours", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "later, at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING on Monday morning. Several", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "defunct wristwatches, the property of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "victims, confirmed the time. As with its", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "predecessors over the last few months, there", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "twenty-six minutes past eight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- The Little Drummer Girl", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:27 for 1 quotations:
    case 507:
      Serial.println(F("Only one option for 08:27:"));
    Serial.println(F("08:27 - The lecture was to be given tomorrow, and it was now almost eight-thirty. - John Kennedy Toole, A Confederacy of Dunces"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on lecture
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on was
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on to
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on be
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on given
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on tomorrow,
// DEBUG: ['The', 'lecture', 'was', 'to', 'be', 'given']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on it
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on was
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on now
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['tomorrow,', 'and', 'it', 'was', 'now']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['almost eight-thirty']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- A Confederacy of Dunces']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "The lecture was to be given", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "tomorrow, and it was now", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "almost eight-thirty", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Confederacy of Dunces", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:28 for 1 quotations:
    case 508:
      Serial.println(F("Only one option for 08:28:"));
    Serial.println(F("08:28 - And at 8.28 on the following morning, with a novel chilliness about the upper lip, and a vast excess of strength and spirits, I was sitting in a third-class carriage, bound for Germany, and dressed as a young sea-man, in a pea-jacket, peaked cap, and comforter. - Erskine Childers, The Riddle of the Sands"));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on at
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on on
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on the
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on following
// DEBUG: ['And', 'at', 'TIMESTRING', 'on', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on morning,
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on with
// DEBUG: 106
// DEBUG: (101, 17)
// DEBUG: Operating on a
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on novel
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on chilliness
// DEBUG: ['following', 'morning,', 'with', 'a', 'novel']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on about
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on the
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on upper
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on lip,
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on and
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on a
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on vast
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on excess
// DEBUG: ['chilliness', 'about', 'the', 'upper', 'lip,', 'and', 'a', 'vast']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on strength
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on and
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on spirits,
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on I
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on was
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on sitting
// DEBUG: ['excess', 'of', 'strength', 'and', 'spirits,', 'I', 'was']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on a
// DEBUG: 41
// DEBUG: (36, 53)
// DEBUG: Operating on third-class
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on carriage,
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on bound
// DEBUG: ['sitting', 'in', 'a', 'third-class', 'carriage,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on for
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on Germany,
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on and
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on dressed
// DEBUG: 167
// DEBUG: (162, 65)
// DEBUG: Operating on as
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on a
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on young
// DEBUG: ['bound', 'for', 'Germany,', 'and', 'dressed', 'as', 'a']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on sea-man,
// DEBUG: 73
// DEBUG: (68, 77)
// DEBUG: Operating on in
// DEBUG: 88
// DEBUG: (83, 77)
// DEBUG: Operating on a
// DEBUG: 96
// DEBUG: (91, 77)
// DEBUG: Operating on pea-jacket,
// DEBUG: 174
// DEBUG: (169, 77)
// DEBUG: Operating on peaked
// DEBUG: ['young', 'sea-man,', 'in', 'a', 'pea-jacket,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on cap,
// DEBUG: 46
// DEBUG: (41, 89)
// DEBUG: Operating on and
// DEBUG: 68
// DEBUG: (63, 89)
// DEBUG: Operating on comforter.
// DEBUG: 139
// DEBUG: ['8.28']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- The Riddle of the Sands']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "And at TIMESTRING on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "following morning, with a novel", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "chilliness about the upper lip, and a vast", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "excess of strength and spirits, I was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "sitting in a third-class carriage,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "bound for Germany, and dressed as a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "young sea-man, in a pea-jacket,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "8.28", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- The Riddle of the Sands", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:29 for 1 quotations:
    case 509:
      Serial.println(F("Only one option for 08:29:"));
    Serial.println(F("08:29 - At 8.29 I punched the front doorbell in Elgin Crescent. It was opened by a small oriental woman in a white apron. She showed me into a large, empty sitting room with an open fire and a couple of huge oil paintings. - Sebastian Faulks, Engleby"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on I
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on punched
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on the
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on front
// DEBUG: ['At', 'TIMESTRING', 'I', 'punched', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on doorbell
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on in
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on Elgin
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on Crescent.
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on It
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on was
// DEBUG: ['front', 'doorbell', 'in', 'Elgin', 'Crescent.', 'It']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on opened
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on by
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on a
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on small
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on oriental
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on woman
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on in
// DEBUG: ['was', 'opened', 'by', 'a', 'small', 'oriental', 'woman']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 41)
// DEBUG: Operating on white
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on apron.
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on She
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on showed
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on me
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on into
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on a
// DEBUG: ['in', 'a', 'white', 'apron.', 'She', 'showed', 'me', 'into']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (7, 53)
// DEBUG: Operating on large,
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on empty
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on sitting
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on room
// DEBUG: 170
// DEBUG: (165, 53)
// DEBUG: Operating on with
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on an
// DEBUG: ['a', 'large,', 'empty', 'sitting', 'room', 'with']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on open
// DEBUG: 42
// DEBUG: (37, 65)
// DEBUG: Operating on fire
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on and
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on a
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on couple
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on of
// DEBUG: 159
// DEBUG: (154, 65)
// DEBUG: Operating on huge
// DEBUG: 188
// DEBUG: (183, 65)
// DEBUG: Operating on oil
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on paintings.
// DEBUG: ['an', 'open', 'fire', 'and', 'a', 'couple', 'of', 'huge', 'oil']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['8.29']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Sebastian Faulks, Engleby']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING I punched the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "front doorbell in Elgin Crescent. It", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "was opened by a small oriental woman", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "in a white apron. She showed me into", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "a large, empty sitting room with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "an open fire and a couple of huge oil", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "8.29", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- Sebastian Faulks, Engleby", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:30 for 5 quotations:
    case 510:
      option = random(0, 5);
      Serial.print(F("5 options for 08:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:30 - At half past eight, Mr. Dursley picked up his briefcase, pecked Mrs. Dursley on the cheek, and tried to kiss Dudley good-bye but missed, because Dudley was now having a tantrum and throwing his cereal at the walls. - JK Rowling, Harry Potter and the Philosopher's Stone "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 209
// DEBUG: (204, 5)
// DEBUG: Operating on Mr.
// DEBUG: ['At', 'TIMESTRING,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on Dursley
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on picked
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on up
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on his
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on briefcase,
// DEBUG: ['Mr.', 'Dursley', 'picked', 'up', 'his']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on pecked
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on Mrs.
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on Dursley
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on on
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on the
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on cheek,
// DEBUG: ['briefcase,', 'pecked', 'Mrs.', 'Dursley', 'on', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on tried
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on to
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on kiss
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on Dudley
// DEBUG: 162
// DEBUG: (157, 41)
// DEBUG: Operating on good-bye
// DEBUG: ['cheek,', 'and', 'tried', 'to', 'kiss', 'Dudley']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on but
// DEBUG: 41
// DEBUG: (36, 53)
// DEBUG: Operating on missed,
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on because
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on Dudley
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on was
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on now
// DEBUG: ['good-bye', 'but', 'missed,', 'because', 'Dudley', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on having
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on a
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on tantrum
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on and
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on throwing
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on his
// DEBUG: ['now', 'having', 'a', 'tantrum', 'and', 'throwing']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on cereal
// DEBUG: 57
// DEBUG: (52, 77)
// DEBUG: Operating on at
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 77)
// DEBUG: Operating on walls.
// DEBUG: 137
// DEBUG: ['half past eight']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- JK Rowling']
// DEBUG: drawing cursor (123, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Mr. Dursley picked up his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "briefcase, pecked Mrs. Dursley on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "cheek, and tried to kiss Dudley", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "good-bye but missed, because Dudley was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "now having a tantrum and throwing", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "half past eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(123, 192, "- JK Rowling", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:30 - It is around 8:30. Sunshine comes through the windows at right. As the curtain rises, the family has just finished breakfast. - Eugene O'Neill, Long Day's Journey Into Night "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on is
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on around
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on Sunshine
// DEBUG: ['It', 'is', 'around', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on comes
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on through
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on the
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on windows
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on at
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on right.
// DEBUG: ['Sunshine', 'comes', 'through', 'the', 'windows', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on As
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on curtain
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on rises,
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on family
// DEBUG: ['right.', 'As', 'the', 'curtain', 'rises,', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on has
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on just
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on finished
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on breakfast.
// DEBUG: 196
// DEBUG: ['8:30']
// DEBUG: drawing cursor (78, 5)
// DEBUG: ["- Eugene O'Neill"]
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "It is around TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Sunshine comes through the windows at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "right. As the curtain rises, the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(78, 5, "8:30", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- Eugene O'Neill", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("08:30 - On July 25th, 8:30 a.m. the bitch Novaya dies whelping. At 10 o'clock she is lowered into her cool grave, at 7:30 that same evening we see our first floes and greet them wishing they were the last. - Christoph Ransmayr, The Terrors of Ice and Darkness "));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on July
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on 25th,
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['On', 'July', '25th,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on the
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on bitch
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on Novaya
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on dies
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on whelping.
// DEBUG: ['TIMESTRING', 'the', 'bitch', 'Novaya', 'dies']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on At
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on 10
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on o'clock
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on she
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on is
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on lowered
// DEBUG: 187
// DEBUG: (182, 29)
// DEBUG: Operating on into
// DEBUG: ['whelping.', 'At', '10', "o'clock", 'she', 'is', 'lowered']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on her
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on cool
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on grave,
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on at
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on 7:30
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on that
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on same
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on evening
// DEBUG: ['into', 'her', 'cool', 'grave,', 'at', '7:30', 'that', 'same']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on we
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on see
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on our
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on first
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on floes
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on and
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on greet
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on them
// DEBUG: ['evening', 'we', 'see', 'our', 'first', 'floes', 'and', 'greet']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on wishing
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on they
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on were
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on the
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on last.
// DEBUG: 181
// DEBUG: ['8:30 a.m.']
// DEBUG: drawing cursor (85, 5)
// DEBUG: ['- Christoph Ransmayr']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "On July 25th,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING the bitch Novaya dies", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "whelping. At 10 o'clock she is lowered", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "into her cool grave, at 7:30 that same", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "evening we see our first floes and greet", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(85, 5, "8:30 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Christoph Ransmayr", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("08:30 - The lecture was to be given tomorrow, and it was now almost eight-thirty. - John Kennedy Toole, A Confederacy of Dunces"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on lecture
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on was
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on to
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on be
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on given
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on tomorrow,
// DEBUG: ['The', 'lecture', 'was', 'to', 'be', 'given']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on it
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on was
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on now
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on almost
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['tomorrow,', 'and', 'it', 'was', 'now', 'almost']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 172
// DEBUG: ['eight-thirty']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- A Confederacy of Dunces']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "The lecture was to be given", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "tomorrow, and it was now almost", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "eight-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Confederacy of Dunces", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("08:30 - When he woke, at eight-thirty, he was alone in the bedroom. He put on his dressing gown and put in his hearing aid and went into the living room. - David Lodge, Deaf Sentence "));
// DEBUG: (5, 5)
// DEBUG: Operating on When
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on he
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on woke,
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on at
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['When', 'he', 'woke,', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on he
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on was
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on alone
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on in
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on the
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on bedroom.
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on He
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on put
// DEBUG: ['TIMESTRING,', 'he', 'was', 'alone', 'in', 'the', 'bedroom.', 'He']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on on
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on his
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on dressing
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on gown
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on and
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on put
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on in
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on his
// DEBUG: ['put', 'on', 'his', 'dressing', 'gown', 'and', 'put', 'in']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on hearing
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on aid
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on and
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on went
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on into
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on living
// DEBUG: ['his', 'hearing', 'aid', 'and', 'went', 'into', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on room.
// DEBUG: 53
// DEBUG: ['eight-thirty']
// DEBUG: drawing cursor (100, 5)
// DEBUG: ['- David Lodge, Deaf Sentence ']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "When he woke, at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, he was alone in the bedroom. He", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "put on his dressing gown and put in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "his hearing aid and went into the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(100, 5, "eight-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- David Lodge, Deaf Sentence ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:31 for 0 quotations:
    case 511:
      Serial.println(F("No quotes for 08:31"));
      return;

    // Codegen for 08:32 for 2 quotations:
    case 512:
      option = random(0, 2);
      Serial.print(F("2 options for 08:32. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:32 - 'Does anybody know the time a little more exactly is what I'm wondering, Don, since Day doesn't.' Gately checks his cheap digital, head still hung over the sofa's arm. 'I got 0832:14, 15, 16, Randy.' ''ks a lot, D.G. man.' - David Foster Wallace, Infinite Jest "));
// DEBUG: (5, 5)
// DEBUG: Operating on 'Does
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on anybody
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on know
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on time
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on a
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on little
// DEBUG: ["'Does", 'anybody', 'know', 'the', 'time', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on more
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on exactly
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on is
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on what
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on I'm
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on wondering,
// DEBUG: ['little', 'more', 'exactly', 'is', 'what', "I'm"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on Don,
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on since
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on Day
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on doesn't.'
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on Gately
// DEBUG: ['wondering,', 'Don,', 'since', 'Day', "doesn't.'"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on checks
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on his
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on cheap
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on digital,
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on head
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on still
// DEBUG: ['Gately', 'checks', 'his', 'cheap', 'digital,', 'head']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on hung
// DEBUG: 45
// DEBUG: (40, 53)
// DEBUG: Operating on over
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on the
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on sofa's
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on arm.
// DEBUG: 168
// DEBUG: (163, 53)
// DEBUG: Operating on 'I
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on got
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on 0TIMESTRING:14,
// DEBUG: Wrorking on the timestring
// DEBUG: ['still', 'hung', 'over', 'the', "sofa's", 'arm.', "'I", 'got']
// DEBUG: drawing cursor (5, 53)
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on 15,
// DEBUG: 159
// DEBUG: (154, 65)
// DEBUG: Operating on 16,
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on Randy.'
// DEBUG: ['0TIMESTRING:14,', '15,', '16,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on ''ks
// DEBUG: 47
// DEBUG: (42, 77)
// DEBUG: Operating on a
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on lot,
// DEBUG: 84
// DEBUG: (79, 77)
// DEBUG: Operating on D.G.
// DEBUG: 113
// DEBUG: (108, 77)
// DEBUG: Operating on man.'
// DEBUG: 149
// DEBUG: ['832']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- Infinite Jest']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "'Does anybody know the time a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "little more exactly is what I'm", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "wondering, Don, since Day doesn't.'", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Gately checks his cheap digital, head", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "still hung over the sofa's arm. 'I got", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "0TIMESTRING:14, 15, 16,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "832", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Infinite Jest", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:32 - 8.32 a.m. Catch bus to school - Mark Haddon, The Curious Incident Of The Dog In The Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on Catch
// DEBUG: 181
// DEBUG: (176, 5)
// DEBUG: Operating on bus
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on to
// DEBUG: ['TIMESTRING', 'Catch', 'bus']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on school
// DEBUG: 56
// DEBUG: ['8.32 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING Catch bus", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "8.32 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:33 for 0 quotations:
    case 513:
      Serial.println(F("No quotes for 08:33"));
      return;

    // Codegen for 08:34 for 0 quotations:
    case 514:
      Serial.println(F("No quotes for 08:34"));
      return;

    // Codegen for 08:35 for 2 quotations:
    case 515:
      option = random(0, 2);
      Serial.print(F("2 options for 08:35. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:35 - It was thirty-five minutes past eight by the big clock of the central building when Mathieu crossed the yard towards the office which he occupied as chief designer. For eight years he had been employed at the works where, after a brilliant and special course of study, he had made his beginning as assistant draughtsman when but nineteen years old, receiving at that time a salary of one hundred francs a month. - Emile Zola, Fruitfulness "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on by
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on big
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on clock
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on of
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on the
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on central
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on building
// DEBUG: ['TIMESTRING', 'by', 'the', 'big', 'clock', 'of', 'the', 'central']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on when
// DEBUG: 48
// DEBUG: (43, 41)
// DEBUG: Operating on Mathieu
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on crossed
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on yard
// DEBUG: 199
// DEBUG: (194, 41)
// DEBUG: Operating on towards
// DEBUG: ['building', 'when', 'Mathieu', 'crossed', 'the', 'yard']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on office
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on which
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on he
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on occupied
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on as
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on chief
// DEBUG: ['towards', 'the', 'office', 'which', 'he', 'occupied', 'as']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on designer.
// DEBUG: 80
// DEBUG: (75, 65)
// DEBUG: Operating on For
// DEBUG: 102
// DEBUG: (97, 65)
// DEBUG: Operating on eight
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on years
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on he
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on had
// DEBUG: 211
// DEBUG: (206, 65)
// DEBUG: Operating on been
// DEBUG: ['chief', 'designer.', 'For', 'eight', 'years', 'he', 'had']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on employed
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on at
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on works
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on where,
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on after
// DEBUG: ['been', 'employed', 'at', 'the', 'works', 'where,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on a
// DEBUG: 24
// DEBUG: (19, 89)
// DEBUG: Operating on brilliant
// DEBUG: 88
// DEBUG: (83, 89)
// DEBUG: Operating on and
// DEBUG: 110
// DEBUG: (105, 89)
// DEBUG: Operating on special
// DEBUG: 160
// DEBUG: (155, 89)
// DEBUG: Operating on course
// DEBUG: 203
// DEBUG: (198, 89)
// DEBUG: Operating on of
// DEBUG: ['after', 'a', 'brilliant', 'and', 'special', 'course']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on study,
// DEBUG: 56
// DEBUG: (51, 101)
// DEBUG: Operating on he
// DEBUG: 71
// DEBUG: (66, 101)
// DEBUG: Operating on had
// DEBUG: 93
// DEBUG: (88, 101)
// DEBUG: Operating on made
// DEBUG: 122
// DEBUG: (117, 101)
// DEBUG: Operating on his
// DEBUG: 144
// DEBUG: (139, 101)
// DEBUG: Operating on beginning
// DEBUG: 208
// DEBUG: (203, 101)
// DEBUG: Operating on as
// DEBUG: ['of', 'study,', 'he', 'had', 'made', 'his', 'beginning']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (8, 113)
// DEBUG: Operating on assistant
// DEBUG: 77
// DEBUG: (72, 113)
// DEBUG: Operating on draughtsman
// DEBUG: 155
// DEBUG: (150, 113)
// DEBUG: Operating on when
// DEBUG: 184
// DEBUG: (179, 113)
// DEBUG: Operating on but
// DEBUG: 206
// DEBUG: (201, 113)
// DEBUG: Operating on nineteen
// DEBUG: ['as', 'assistant', 'draughtsman', 'when', 'but']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on years
// DEBUG: 55
// DEBUG: (50, 125)
// DEBUG: Operating on old,
// DEBUG: 84
// DEBUG: (79, 125)
// DEBUG: Operating on receiving
// DEBUG: 148
// DEBUG: (143, 125)
// DEBUG: Operating on at
// DEBUG: 163
// DEBUG: (158, 125)
// DEBUG: Operating on that
// DEBUG: 192
// DEBUG: (187, 125)
// DEBUG: Operating on time
// DEBUG: ['nineteen', 'years', 'old,', 'receiving', 'at', 'that']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (10, 137)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 137)
// DEBUG: Operating on salary
// DEBUG: 66
// DEBUG: (61, 137)
// DEBUG: Operating on of
// DEBUG: 81
// DEBUG: (76, 137)
// DEBUG: Operating on one
// DEBUG: 103
// DEBUG: (98, 137)
// DEBUG: Operating on hundred
// DEBUG: 153
// DEBUG: (148, 137)
// DEBUG: Operating on francs
// DEBUG: 196
// DEBUG: (191, 137)
// DEBUG: Operating on a
// DEBUG: 204
// DEBUG: (199, 137)
// DEBUG: Operating on month.
// DEBUG: ['time', 'a', 'salary', 'of', 'one', 'hundred', 'francs', 'a']
// DEBUG: drawing cursor (5, 137)
// DEBUG: ['thirty-five minutes past eight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Emile Zola, Fruitfulness ']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING by the big clock of the central", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "building when Mathieu crossed the yard", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "towards the office which he occupied as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "chief designer. For eight years he had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "been employed at the works where,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "after a brilliant and special course", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "of study, he had made his beginning", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "as assistant draughtsman when but", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "nineteen years old, receiving at that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "time a salary of one hundred francs a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "thirty-five minutes past eight", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Emile Zola, Fruitfulness ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:35 - Old gummy granny (thrusts a dagger towards Stephen's hand) Remove him, acushla. At 8.35 a.m. you will be in heaven and Ireland will be free (she prays) O good God take him! - James Joyce, Ulysses"));
// DEBUG: (5, 5)
// DEBUG: Operating on Old
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on gummy
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on granny
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on (thrusts
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on a
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on dagger
// DEBUG: ['Old', 'gummy', 'granny', '(thrusts', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on towards
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on Stephen's
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on hand)
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on Remove
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on him,
// DEBUG: ['dagger', 'towards', "Stephen's", 'hand)', 'Remove']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on acushla.
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on At
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['him,', 'acushla.', 'At']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on you
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on will
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on be
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on in
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on heaven
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on and
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on Ireland
// DEBUG: ['TIMESTRING', 'you', 'will', 'be', 'in', 'heaven', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on will
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on be
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on free
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on (she
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on prays)
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on O
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on good
// DEBUG: 200
// DEBUG: (195, 53)
// DEBUG: Operating on God
// DEBUG: ['Ireland', 'will', 'be', 'free', '(she', 'prays)', 'O', 'good']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on take
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on him!
// DEBUG: 72
// DEBUG: ['8.35 a.m.']
// DEBUG: drawing cursor (82, 29)
// DEBUG: ['- James Joyce, Ulysses']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "Old gummy granny (thrusts a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "dagger towards Stephen's hand) Remove", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "him, acushla. At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING you will be in heaven and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Ireland will be free (she prays) O good", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(82, 29, "8.35 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- James Joyce, Ulysses", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:36 for 0 quotations:
    case 516:
      Serial.println(F("No quotes for 08:36"));
      return;

    // Codegen for 08:37 for 1 quotations:
    case 517:
      Serial.println(F("Only one option for 08:37:"));
    Serial.println(F("08:37 - Eight thirty-seven am., Patrice Lane, Biohazard: The dog's clean. The Good Samaritan was a woman with an accent of some sort. Why haven't you called me? - Ilona Andrews, Magic Bleeds"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 208
// DEBUG: (203, 5)
// DEBUG: Operating on am.,
// DEBUG: ['TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on Patrice
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on Lane,
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on Biohazard:
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on The
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on dog's
// DEBUG: ['am.,', 'Patrice', 'Lane,', 'Biohazard:', 'The']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on clean.
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on The
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on Good
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on Samaritan
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on was
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on a
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on woman
// DEBUG: ["dog's", 'clean.', 'The', 'Good', 'Samaritan', 'was', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on with
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on an
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on accent
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on of
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on some
// DEBUG: 147
// DEBUG: (142, 41)
// DEBUG: Operating on sort.
// DEBUG: 183
// DEBUG: (178, 41)
// DEBUG: Operating on Why
// DEBUG: 205
// DEBUG: (200, 41)
// DEBUG: Operating on haven't
// DEBUG: ['woman', 'with', 'an', 'accent', 'of', 'some', 'sort.', 'Why']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on you
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on called
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on me?
// DEBUG: 105
// DEBUG: ['Eight thirty-seven']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Ilona Andrews, Magic Bleeds']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "am., Patrice Lane, Biohazard: The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "dog's clean. The Good Samaritan was a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "woman with an accent of some sort. Why", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "Eight thirty-seven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Ilona Andrews, Magic Bleeds", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:38 for 0 quotations:
    case 518:
      Serial.println(F("No quotes for 08:38"));
      return;

    // Codegen for 08:39 for 1 quotations:
    case 519:
      Serial.println(F("Only one option for 08:39:"));
    Serial.println(F("08:39 - Doug McGuire noticed the early hour, 8:39 A.M. on the one wall clock that gave Daylight Savings Time for the East Coast. - Winn Schwartau, Terminal Compromise"));
// DEBUG: (5, 5)
// DEBUG: Operating on Doug
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on McGuire
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on noticed
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on the
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on early
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on hour,
// DEBUG: ['Doug', 'McGuire', 'noticed', 'the', 'early']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on on
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on one
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on wall
// DEBUG: ['hour,', 'TIMESTRING', 'on', 'the', 'one']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on clock
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on that
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on gave
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on Daylight
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on Savings
// DEBUG: ['wall', 'clock', 'that', 'gave', 'Daylight']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on Time
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on for
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on the
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on East
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on Coast.
// DEBUG: 163
// DEBUG: ['8:39 A.M.']
// DEBUG: drawing cursor (11, 17)
// DEBUG: ['- Terminal Compromise']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "Doug McGuire noticed the early", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "hour, TIMESTRING on the one", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "wall clock that gave Daylight", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(11, 17, "8:39 A.M.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- Terminal Compromise", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:40 for 2 quotations:
    case 520:
      option = random(0, 2);
      Serial.print(F("2 options for 08:40. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:40 - At this moment the clock indicated 8.40. 'Five minutes more,' said Andrew Stuart. The five friends looked at each other. One may surmise that their heart-beats were slightly accelereted, for, even for bold gamblers, the stake was a large one.' - Jules Verne, Around the world in eighty days "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on this
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on moment
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on the
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on clock
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on indicated
// DEBUG: ['At', 'this', 'moment', 'the', 'clock']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on 'Five
// DEBUG: 163
// DEBUG: (158, 17)
// DEBUG: Operating on minutes
// DEBUG: ['indicated', 'TIMESTRING.', "'Five"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on more,'
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on said
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on Andrew
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on Stuart.
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on The
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on five
// DEBUG: ['minutes', "more,'", 'said', 'Andrew', 'Stuart.', 'The']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on friends
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on looked
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on at
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on each
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on other.
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on One
// DEBUG: ['five', 'friends', 'looked', 'at', 'each', 'other.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on may
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on surmise
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on that
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on their
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on heart-beats
// DEBUG: ['One', 'may', 'surmise', 'that', 'their']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on were
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on slightly
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on accelereted,
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on for,
// DEBUG: ['heart-beats', 'were', 'slightly', 'accelereted,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on even
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on for
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on bold
// DEBUG: 95
// DEBUG: (90, 77)
// DEBUG: Operating on gamblers,
// DEBUG: 159
// DEBUG: (154, 77)
// DEBUG: Operating on the
// DEBUG: 181
// DEBUG: (176, 77)
// DEBUG: Operating on stake
// DEBUG: ['for,', 'even', 'for', 'bold', 'gamblers,', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on was
// DEBUG: 38
// DEBUG: (33, 89)
// DEBUG: Operating on a
// DEBUG: 46
// DEBUG: (41, 89)
// DEBUG: Operating on large
// DEBUG: 82
// DEBUG: (77, 89)
// DEBUG: Operating on one.'
// DEBUG: 118
// DEBUG: ['8.40']
// DEBUG: drawing cursor (15, 17)
// DEBUG: ['- Jules Verne']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "At this moment the clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "indicated TIMESTRING. 'Five", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "minutes more,' said Andrew Stuart. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "five friends looked at each other.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "One may surmise that their", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "heart-beats were slightly accelereted,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "for, even for bold gamblers, the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(15, 17, "8.40", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Jules Verne", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:40 - It was when I stood before her, avoiding her eyes, that I took note of the surrounding objects in detail, and saw that her watch had stopped at twenty minutes to nine, and that a clock in the room had stopped at twenty minutes to nine. - Charles Dickens, Great Expectations"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on when
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on I
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on stood
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on before
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on her,
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on avoiding
// DEBUG: ['It', 'was', 'when', 'I', 'stood', 'before', 'her,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on her
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on eyes,
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on that
// DEBUG: 106
// DEBUG: (101, 17)
// DEBUG: Operating on I
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on took
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on note
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on of
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on the
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on surrounding
// DEBUG: ['avoiding', 'her', 'eyes,', 'that', 'I', 'took', 'note', 'of', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on objects
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on in
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on detail,
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on and
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on saw
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on that
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on her
// DEBUG: ['surrounding', 'objects', 'in', 'detail,', 'and', 'saw', 'that']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on watch
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on had
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on stopped
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on at
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['her', 'watch', 'had', 'stopped', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on that
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on a
// DEBUG: 81
// DEBUG: (76, 65)
// DEBUG: Operating on clock
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on in
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on the
// DEBUG: 154
// DEBUG: (149, 65)
// DEBUG: Operating on room
// DEBUG: 183
// DEBUG: (178, 65)
// DEBUG: Operating on had
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on stopped
// DEBUG: ['TIMESTRING,', 'and', 'that', 'a', 'clock', 'in', 'the', 'room', 'had']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 77)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['stopped', 'at']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['twenty minutes to nine']
// DEBUG: drawing cursor (28, 77)
// DEBUG: ['- Great Expectations']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "It was when I stood before her,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "avoiding her eyes, that I took note of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "surrounding objects in detail, and saw that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "her watch had stopped at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING, and that a clock in the room had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "stopped at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(28, 77, "twenty minutes to nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Great Expectations", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:41 for 1 quotations:
    case 521:
      Serial.println(F("Only one option for 08:41:"));
    Serial.println(F("08:41 - By forty-one minutes past eight we are five hundred yards from the water’s edge, and between our road and the foot of the mountain we descry the piled-up remains of a ruined tower. - Félicien de Saulcy, Narrative of a Journey round the Dead Sea and in the Bible lands in 1850 and 1851"));
// DEBUG: (5, 5)
// DEBUG: Operating on By
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['By']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on we
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on are
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on five
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on hundred
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on yards
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on from
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'we', 'are', 'five', 'hundred', 'yards', 'from']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on water’s
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on edge,
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on and
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on between
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on our
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on road
// DEBUG: ['the', 'water’s', 'edge,', 'and', 'between', 'our']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on the
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on foot
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on of
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on the
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on mountain
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on we
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on descry
// DEBUG: ['road', 'and', 'the', 'foot', 'of', 'the', 'mountain', 'we']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 65)
// DEBUG: Operating on piled-up
// DEBUG: 96
// DEBUG: (91, 65)
// DEBUG: Operating on remains
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on of
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on a
// DEBUG: 169
// DEBUG: (164, 65)
// DEBUG: Operating on ruined
// DEBUG: ['descry', 'the', 'piled-up', 'remains', 'of', 'a']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on tower.
// DEBUG: 60
// DEBUG: ['forty-one minutes past eight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Félicien de Saulcy']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "By", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING we are five hundred yards from", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the water’s edge, and between our", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "road and the foot of the mountain we", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "descry the piled-up remains of a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "forty-one minutes past eight", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Félicien de Saulcy", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:42 for 0 quotations:
    case 522:
      Serial.println(F("No quotes for 08:42"));
      return;

    // Codegen for 08:43 for 2 quotations:
    case 523:
      option = random(0, 2);
      Serial.print(F("2 options for 08:43. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:43 - You understand this tape recorder is on? \"Uh huh\" \"And it's Wednesday, May 15, at eight forty-three in the mornin'.\" \"If you say so\" - John Grisham, A Time to Kill "));
// DEBUG: (5, 5)
// DEBUG: Operating on You
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on understand
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on this
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on tape
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on recorder
// DEBUG: ['You', 'understand', 'this', 'tape']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on is
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on on?
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on \"Uh
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on huh\"
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on \"And
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on it's
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on Wednesday,
// DEBUG: ['recorder', 'is', 'on?', '\\"Uh', 'huh\\"', '\\"And', "it's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on May
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on 15,
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on at
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Wednesday,', 'May', '15,', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on mornin'.\"
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on \"If
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on you
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on say
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on so\"
// DEBUG: ['TIMESTRING', 'in', 'the', 'mornin\'.\\"', '\\"If', 'you', 'say']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['eight forty-three']
// DEBUG: drawing cursor (75, 29)
// DEBUG: ['- A Time to Kill']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "You understand this tape", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "recorder is on? \"Uh huh\" \"And it's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Wednesday, May 15, at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING in the mornin'.\" \"If you say", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(75, 29, "eight forty-three", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- A Time to Kill", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:43 - 8.43 a.m. Go past tropical fish shop - Mark Haddon, The Curious Incident Of The Dog In The Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on Go
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on past
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on tropical
// DEBUG: ['TIMESTRING', 'Go', 'past']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on fish
// DEBUG: 48
// DEBUG: (43, 17)
// DEBUG: Operating on shop
// DEBUG: 77
// DEBUG: ['8.43 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING Go past", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "8.43 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:44 for 1 quotations:
    case 524:
      Serial.println(F("Only one option for 08:44:"));
    Serial.println(F("08:44 - Several soldiers - some with their uniforms unbuttoned - were looking over a motorcycle, arguing about it. The sergeant looked at his watch; it was eight forty-four. They had to wait until nine. Hladik, feeling more insignificant than ill-fortuned, sat down on a pile of firewood. - Jorge Luis Borges, The Secret Miracle"));
// DEBUG: (5, 5)
// DEBUG: Operating on Several
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on soldiers
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on -
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on some
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on with
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on their
// DEBUG: ['Several', 'soldiers', '-', 'some', 'with']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on uniforms
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on unbuttoned
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on -
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on were
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on looking
// DEBUG: ['their', 'uniforms', 'unbuttoned', '-', 'were']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on over
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on a
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on motorcycle,
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on arguing
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on about
// DEBUG: ['looking', 'over', 'a', 'motorcycle,', 'arguing']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on it.
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on The
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on sergeant
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on looked
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on at
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on his
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on watch;
// DEBUG: ['about', 'it.', 'The', 'sergeant', 'looked', 'at', 'his']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on it
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on was
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['watch;', 'it', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on They
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on had
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on to
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on wait
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on until
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on nine.
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on Hladik,
// DEBUG: ['TIMESTRING.', 'They', 'had', 'to', 'wait', 'until', 'nine.']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on feeling
// DEBUG: 68
// DEBUG: (63, 77)
// DEBUG: Operating on more
// DEBUG: 97
// DEBUG: (92, 77)
// DEBUG: Operating on insignificant
// DEBUG: 189
// DEBUG: (184, 77)
// DEBUG: Operating on than
// DEBUG: ['Hladik,', 'feeling', 'more', 'insignificant']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on ill-fortuned,
// DEBUG: 107
// DEBUG: (102, 89)
// DEBUG: Operating on sat
// DEBUG: 129
// DEBUG: (124, 89)
// DEBUG: Operating on down
// DEBUG: 158
// DEBUG: (153, 89)
// DEBUG: Operating on on
// DEBUG: 173
// DEBUG: (168, 89)
// DEBUG: Operating on a
// DEBUG: 181
// DEBUG: (176, 89)
// DEBUG: Operating on pile
// DEBUG: 210
// DEBUG: (205, 89)
// DEBUG: Operating on of
// DEBUG: ['than', 'ill-fortuned,', 'sat', 'down', 'on', 'a', 'pile']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on firewood.
// DEBUG: 77
// DEBUG: ['eight forty-four']
// DEBUG: drawing cursor (49, 53)
// DEBUG: ['- The Secret Miracle']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "Several soldiers - some with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "their uniforms unbuttoned - were", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "looking over a motorcycle, arguing", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "about it. The sergeant looked at his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "watch; it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING. They had to wait until nine.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Hladik, feeling more insignificant", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "than ill-fortuned, sat down on a pile", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(49, 53, "eight forty-four", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- The Secret Miracle", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:45 for 1 quotations:
    case 525:
      Serial.println(F("Only one option for 08:45:"));
    Serial.println(F("08:45 - He paid the waitress and left the café. It was 8:45. The sun pressed against the inside of a thin layer of cloud. He unbuttoned his jacket as he hurried down Queensway. His mind, unleashed, sprang forwards. - Rupert Thomson, Dreams of leaving"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on paid
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on the
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on waitress
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on and
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on left
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on the
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on café.
// DEBUG: ['He', 'paid', 'the', 'waitress', 'and', 'left', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on It
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on was
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on The
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on sun
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on pressed
// DEBUG: ['café.', 'It', 'was', 'TIMESTRING.', 'The', 'sun']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on against
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on inside
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on of
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on a
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on thin
// DEBUG: 185
// DEBUG: (180, 29)
// DEBUG: Operating on layer
// DEBUG: ['pressed', 'against', 'the', 'inside', 'of', 'a', 'thin']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 41)
// DEBUG: Operating on cloud.
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on He
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on unbuttoned
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on his
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on jacket
// DEBUG: ['layer', 'of', 'cloud.', 'He', 'unbuttoned', 'his']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on as
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on he
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on hurried
// DEBUG: 97
// DEBUG: (92, 53)
// DEBUG: Operating on down
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on Queensway.
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on His
// DEBUG: ['jacket', 'as', 'he', 'hurried', 'down', 'Queensway.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on mind,
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on unleashed,
// DEBUG: 121
// DEBUG: (116, 65)
// DEBUG: Operating on sprang
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on forwards.
// DEBUG: ['His', 'mind,', 'unleashed,', 'sprang']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['8:45']
// DEBUG: drawing cursor (48, 17)
// DEBUG: ['- Dreams of leaving']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "He paid the waitress and left the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "café. It was TIMESTRING. The sun", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "pressed against the inside of a thin", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "layer of cloud. He unbuttoned his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "jacket as he hurried down Queensway.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "His mind, unleashed, sprang", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(48, 17, "8:45", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Dreams of leaving", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:46 for 0 quotations:
    case 526:
      Serial.println(F("No quotes for 08:46"));
      return;

    // Codegen for 08:47 for 2 quotations:
    case 527:
      option = random(0, 2);
      Serial.print(F("2 options for 08:47. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:47 - Just on my way to the cottage. It's, er, ..8.47. Bit misty on the roads..... - Douglas Adams, Dirk Gently's Holistic Detective Agency "));
// DEBUG: (5, 5)
// DEBUG: Operating on Just
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on on
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on my
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on way
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on to
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on the
// DEBUG: 128
// DEBUG: (123, 5)
// DEBUG: Operating on cottage.
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on It's,
// DEBUG: ['Just', 'on', 'my', 'way', 'to', 'the', 'cottage.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on er,
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on ..TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on Bit
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on misty
// DEBUG: ["It's,", 'er,', '..TIMESTRING.', 'Bit']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 29)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on roads.....
// DEBUG: 124
// DEBUG: ['8.47']
// DEBUG: drawing cursor (33, 17)
// DEBUG: ['- Douglas Adams']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Just on my way to the cottage.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "It's, er, ..TIMESTRING. Bit", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(33, 17, "8.47", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Douglas Adams", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:47 - 8.47. Bit misty on the roads - Douglas Adams, Dirk Gently's Holistic Detective Agency"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on Bit
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on misty
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on on
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING.', 'Bit', 'misty', 'on']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on roads
// DEBUG: 50
// DEBUG: ['8.47']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Douglas Adams']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING. Bit misty on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "8.47", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Douglas Adams", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:48 for 0 quotations:
    case 528:
      Serial.println(F("No quotes for 08:48"));
      return;

    // Codegen for 08:49 for 1 quotations:
    case 529:
      Serial.println(F("Only one option for 08:49:"));
    Serial.println(F("08:49 - I had arranged to meet the Occupational Health Officer at 10:30. I took the train from Watford Junction at 8.19 and arrived at London Euston seven minutes late, at 8.49. - Jonathan Coe, The Terrible Privacy of Maxwell Sim"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on had
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on arranged
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on to
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on meet
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on the
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on Occupational
// DEBUG: ['I', 'had', 'arranged', 'to', 'meet', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (18, 17)
// DEBUG: Operating on Health
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on Officer
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on at
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on 10:30.
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on I
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on took
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on the
// DEBUG: ['Occupational', 'Health', 'Officer', 'at', '10:30.', 'I', 'took']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on train
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on from
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on Watford
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on Junction
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on at
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on 8.19
// DEBUG: ['the', 'train', 'from', 'Watford', 'Junction', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on arrived
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on at
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on London
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on Euston
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on seven
// DEBUG: ['8.19', 'and', 'arrived', 'at', 'London', 'Euston']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on minutes
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on late,
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on at
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['seven', 'minutes', 'late,', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['8.49']
// DEBUG: drawing cursor (112, 53)
// DEBUG: ['- Jonathan Coe']
// DEBUG: drawing cursor (109, 192)
    paint.Paint_DrawString_EN(5, 5, "I had arranged to meet the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Occupational Health Officer at 10:30. I took", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the train from Watford Junction at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "8.19 and arrived at London Euston", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "seven minutes late, at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(112, 53, "8.49", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(109, 192, "- Jonathan Coe", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:50 for 3 quotations:
    case 530:
      option = random(0, 3);
      Serial.print(F("3 options for 08:50. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:50 - At ten to nine the clerks began to arrive.When they had hung up their coats and hates they came to the fireplace and stood warming themselves. If there was no fire, they stood there all the same - V.S. Pritchett, The Chestnut Tree"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on the
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on clerks
// DEBUG: ['At', 'TIMESTRING', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on began
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on to
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on arrive.When
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on they
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on had
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on hung
// DEBUG: ['clerks', 'began', 'to', 'arrive.When', 'they', 'had']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on up
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on their
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on coats
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on and
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on hates
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on they
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on came
// DEBUG: ['hung', 'up', 'their', 'coats', 'and', 'hates', 'they']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on fireplace
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on and
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on stood
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on warming
// DEBUG: ['came', 'to', 'the', 'fireplace', 'and', 'stood']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on themselves.
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on If
// DEBUG: 111
// DEBUG: (106, 53)
// DEBUG: Operating on there
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on was
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on no
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on fire,
// DEBUG: ['warming', 'themselves.', 'If', 'there', 'was', 'no']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on they
// DEBUG: 45
// DEBUG: (40, 65)
// DEBUG: Operating on stood
// DEBUG: 81
// DEBUG: (76, 65)
// DEBUG: Operating on there
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on all
// DEBUG: 139
// DEBUG: (134, 65)
// DEBUG: Operating on the
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on same
// DEBUG: 190
// DEBUG: ['ten to nine']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Chestnut Tree']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "clerks began to arrive.When they had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "hung up their coats and hates they", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "came to the fireplace and stood", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "warming themselves. If there was no", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "ten to nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- The Chestnut Tree", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:50 - It was 8:50 in the morning and Bernie and I were alone on an Astoria side street, not far from a sandwich shop that sold a sopressatta sub called \"The Bypass\". I used to eat that sandwich weekly, wash it down with espresso soda, smoke a cigarette, go for a jog. Now I was too near the joke to order the sandwich, and my son's preschool in the throes of doctrinal schism. - Sam Lipsyte, The Ask "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on in
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on the
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on morning
// DEBUG: ['It', 'was', 'TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on Bernie
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on and
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on I
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on were
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on alone
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on on
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on an
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on Astoria
// DEBUG: ['morning', 'and', 'Bernie', 'and', 'I', 'were', 'alone', 'on', 'an']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on side
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on street,
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on not
// DEBUG: 119
// DEBUG: (114, 29)
// DEBUG: Operating on far
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on from
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on a
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on sandwich
// DEBUG: ['Astoria', 'side', 'street,', 'not', 'far', 'from', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on shop
// DEBUG: 48
// DEBUG: (43, 41)
// DEBUG: Operating on that
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on sold
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on a
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on sopressatta
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on sub
// DEBUG: ['sandwich', 'shop', 'that', 'sold', 'a', 'sopressatta']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on called
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on \"The
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on Bypass\".
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on I
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on used
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on to
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on eat
// DEBUG: ['sub', 'called', '\\"The', 'Bypass\\".', 'I', 'used', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on that
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on sandwich
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on weekly,
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on wash
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on it
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on down
// DEBUG: ['eat', 'that', 'sandwich', 'weekly,', 'wash', 'it']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on with
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on espresso
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on soda,
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on smoke
// DEBUG: 173
// DEBUG: (168, 77)
// DEBUG: Operating on a
// DEBUG: 181
// DEBUG: (176, 77)
// DEBUG: Operating on cigarette,
// DEBUG: ['down', 'with', 'espresso', 'soda,', 'smoke', 'a']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on go
// DEBUG: 36
// DEBUG: (31, 89)
// DEBUG: Operating on for
// DEBUG: 58
// DEBUG: (53, 89)
// DEBUG: Operating on a
// DEBUG: 66
// DEBUG: (61, 89)
// DEBUG: Operating on jog.
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on Now
// DEBUG: 117
// DEBUG: (112, 89)
// DEBUG: Operating on I
// DEBUG: 125
// DEBUG: (120, 89)
// DEBUG: Operating on was
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on too
// DEBUG: 169
// DEBUG: (164, 89)
// DEBUG: Operating on near
// DEBUG: 198
// DEBUG: (193, 89)
// DEBUG: Operating on the
// DEBUG: ['cigarette,', 'go', 'for', 'a', 'jog.', 'Now', 'I', 'was', 'too', 'near']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on joke
// DEBUG: 43
// DEBUG: (38, 101)
// DEBUG: Operating on to
// DEBUG: 58
// DEBUG: (53, 101)
// DEBUG: Operating on order
// DEBUG: 94
// DEBUG: (89, 101)
// DEBUG: Operating on the
// DEBUG: 116
// DEBUG: (111, 101)
// DEBUG: Operating on sandwich,
// DEBUG: 180
// DEBUG: (175, 101)
// DEBUG: Operating on and
// DEBUG: 202
// DEBUG: (197, 101)
// DEBUG: Operating on my
// DEBUG: ['the', 'joke', 'to', 'order', 'the', 'sandwich,', 'and']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (8, 113)
// DEBUG: Operating on son's
// DEBUG: 49
// DEBUG: (44, 113)
// DEBUG: Operating on preschool
// DEBUG: 113
// DEBUG: (108, 113)
// DEBUG: Operating on in
// DEBUG: 128
// DEBUG: (123, 113)
// DEBUG: Operating on the
// DEBUG: 150
// DEBUG: (145, 113)
// DEBUG: Operating on throes
// DEBUG: 193
// DEBUG: (188, 113)
// DEBUG: Operating on of
// DEBUG: 208
// DEBUG: (203, 113)
// DEBUG: Operating on doctrinal
// DEBUG: ['my', "son's", 'preschool', 'in', 'the', 'throes', 'of']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (15, 125)
// DEBUG: Operating on schism.
// DEBUG: 70
// DEBUG: ['8:50']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Sam Lipsyte, The Ask ']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "morning and Bernie and I were alone on an", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Astoria side street, not far from a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "sandwich shop that sold a sopressatta", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "sub called \"The Bypass\". I used to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "eat that sandwich weekly, wash it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "down with espresso soda, smoke a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "cigarette, go for a jog. Now I was too near", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "the joke to order the sandwich, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "my son's preschool in the throes of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 5, "8:50", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- Sam Lipsyte, The Ask ", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("08:50 - Punctually at ten minutes to nine, a quarter hour after early mass, the boy stood in his Sunday uniform outside his father's door. - Joseph Roth, The Radetzky March"));
// DEBUG: (5, 5)
// DEBUG: Operating on Punctually
// DEBUG: 81
// DEBUG: (76, 5)
// DEBUG: Operating on at
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Punctually', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on a
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on quarter
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on hour
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on after
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on early
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on mass,
// DEBUG: ['TIMESTRING,', 'a', 'quarter', 'hour', 'after', 'early']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on boy
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on stood
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on in
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on his
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on Sunday
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on uniform
// DEBUG: ['mass,', 'the', 'boy', 'stood', 'in', 'his', 'Sunday']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on outside
// DEBUG: 68
// DEBUG: (63, 53)
// DEBUG: Operating on his
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on father's
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on door.
// DEBUG: 183
// DEBUG: ['ten minutes to nine']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Radetzky March']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "Punctually at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, a quarter hour after early", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "mass, the boy stood in his Sunday", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "ten minutes to nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Radetzky March", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:51 for 1 quotations:
    case 531:
      Serial.println(F("Only one option for 08:51:"));
    Serial.println(F("08:51 - 8.51 a.m. Arrive at school - Mark Haddon, The Curious Incident of the Dog in the Night-time "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on Arrive
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on at
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on school
// DEBUG: ['TIMESTRING', 'Arrive', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['8.51 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING Arrive at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "8.51 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:52 for 1 quotations:
    case 532:
      Serial.println(F("Only one option for 08:52:"));
    Serial.println(F("08:52 - Message one. Tuesday, 8.52am. Is anybody there? Hello? - Jonathan Safran Foer, Extremely Loud and Incredibly Close"));
// DEBUG: (5, 5)
// DEBUG: Operating on Message
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on one.
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on Tuesday,
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Message', 'one.', 'Tuesday,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on Is
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on anybody
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on there?
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on Hello?
// DEBUG: 172
// DEBUG: ['8.52am.']
// DEBUG: drawing cursor (141, 5)
// DEBUG: ['- Jonathan Safran Foer']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "Message one. Tuesday,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(141, 5, "8.52am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Jonathan Safran Foer", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:53 for 0 quotations:
    case 533:
      Serial.println(F("No quotes for 08:53"));
      return;

    // Codegen for 08:54 for 1 quotations:
    case 534:
      Serial.println(F("Only one option for 08:54:"));
    Serial.println(F("08:54 - It was Mrs. Poppets that woke me up next morning. She said: “Do you know that it’s nearly nine o’clock, sir?” “Nine o’ what?” I cried, starting up. “Nine o’clock,” she replied, through the keyhole. “I thought you was a- oversleeping yourselves.” - Jerome K Jerome, Three Men in a Boat "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on Mrs.
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on Poppets
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on that
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on woke
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on me
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on up
// DEBUG: ['It', 'was', 'Mrs.', 'Poppets', 'that', 'woke', 'me']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on next
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on morning.
// DEBUG: 99
// DEBUG: (94, 17)
// DEBUG: Operating on She
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on said:
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on “Do
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on you
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on know
// DEBUG: ['up', 'next', 'morning.', 'She', 'said:', '“Do', 'you']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on that
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on it’s
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['know', 'that', 'it’s']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on sir?”
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on “Nine
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on o’
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on what?”
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on I
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on cried,
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on starting
// DEBUG: ['TIMESTRING,', 'sir?”', '“Nine', 'o’', 'what?”', 'I', 'cried,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on up.
// DEBUG: 41
// DEBUG: (36, 53)
// DEBUG: Operating on “Nine
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on o’clock,”
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on she
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on replied,
// DEBUG: ['starting', 'up.', '“Nine', 'o’clock,”', 'she']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on through
// DEBUG: 69
// DEBUG: (64, 65)
// DEBUG: Operating on the
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on keyhole.
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on “I
// DEBUG: 163
// DEBUG: (158, 65)
// DEBUG: Operating on thought
// DEBUG: ['replied,', 'through', 'the', 'keyhole.', '“I']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on you
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on was
// DEBUG: 62
// DEBUG: (57, 77)
// DEBUG: Operating on a-
// DEBUG: 77
// DEBUG: (72, 77)
// DEBUG: Operating on oversleeping
// DEBUG: 162
// DEBUG: (157, 77)
// DEBUG: Operating on yourselves.”
// DEBUG: ['thought', 'you', 'was', 'a-', 'oversleeping']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['nearly nine o’clock']
// DEBUG: drawing cursor (68, 29)
// DEBUG: ['- Three Men in a Boat']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "It was Mrs. Poppets that woke me", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "up next morning. She said: “Do you", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "know that it’s", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING, sir?” “Nine o’ what?” I cried,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "starting up. “Nine o’clock,” she", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "replied, through the keyhole. “I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "thought you was a- oversleeping", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(68, 29, "nearly nine o’clock", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- Three Men in a Boat", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:55 for 2 quotations:
    case 535:
      option = random(0, 2);
      Serial.print(F("2 options for 08:55. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("08:55 - At five minutes to nine, Jacques, in his gray butler's livery, came down the stairs and said, \"Young master, your Herr Papá is coming.\" - Joseph Roth, The Radetzky March"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on Jacques,
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on in
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on his
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on gray
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on butler's
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on livery,
// DEBUG: ['TIMESTRING,', 'Jacques,', 'in', 'his', 'gray', "butler's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on came
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on down
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on the
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on stairs
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on and
// DEBUG: 163
// DEBUG: (158, 29)
// DEBUG: Operating on said,
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on \"Young
// DEBUG: ['livery,', 'came', 'down', 'the', 'stairs', 'and', 'said,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on master,
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on your
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on Herr
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on Papá
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on is
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on coming.\"
// DEBUG: ['\\"Young', 'master,', 'your', 'Herr', 'Papá', 'is']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['five minutes to nine']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Radetzky March']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, Jacques, in his gray butler's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "livery, came down the stairs and said,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "\"Young master, your Herr Papá is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "five minutes to nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Radetzky March", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("08:55 - George pulled out his watch and looked at it: it was five minutes to nine! - Jerome K Jerome, Three Men in a Boat "));
// DEBUG: (5, 5)
// DEBUG: Operating on George
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on pulled
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on out
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on his
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on watch
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on and
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on looked
// DEBUG: ['George', 'pulled', 'out', 'his', 'watch', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on it:
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on it
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on was
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on TIMESTRING!
// DEBUG: Wrorking on the timestring
// DEBUG: ['looked', 'at', 'it:', 'it', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['five minutes to nine']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Three Men in a Boat']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "George pulled out his watch and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "looked at it: it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "five minutes to nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Three Men in a Boat", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 08:56 for 1 quotations:
    case 536:
      Serial.println(F("Only one option for 08:56:"));
    Serial.println(F("08:56 - It was nearly nine o'clock and the sun was fiercer every minute.' - George Orwell, Burmese Days"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on the
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on sun
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on was
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on fiercer
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on every
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on minute.'
// DEBUG: ['TIMESTRING', 'and', 'the', 'sun', 'was', 'fiercer', 'every']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ["nearly nine o'clock"]
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- George Orwell, Burmese Days']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING and the sun was fiercer every", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "nearly nine o'clock", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- George Orwell, Burmese Days", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:57 for 1 quotations:
    case 537:
      Serial.println(F("Only one option for 08:57:"));
    Serial.println(F("08:57 - You'll have to hurry. Many a long year before that, in one of the bygone centuries, a worthy citizen of Wrychester, Martin by name, had left a sum of money to the Dean and Chapter of the Cathedral on condition that as long as ever the Cathedral stood, they should cause to be rung a bell from its smaller bell-tower for three minutes before nine o'clock every morning, all the year round. - JS Fletcher, The Paradise Mystery"));
// DEBUG: (5, 5)
// DEBUG: Operating on You'll
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on have
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on to
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on hurry.
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on Many
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on a
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on long
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on year
// DEBUG: ["You'll", 'have', 'to', 'hurry.', 'Many', 'a', 'long']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on before
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on that,
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on in
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on one
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on of
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on the
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on bygone
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on centuries,
// DEBUG: ['year', 'before', 'that,', 'in', 'one', 'of', 'the', 'bygone']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on a
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on worthy
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on citizen
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on of
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on Wrychester,
// DEBUG: ['centuries,', 'a', 'worthy', 'citizen', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on Martin
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on by
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on name,
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on had
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on left
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on a
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on sum
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on of
// DEBUG: ['Wrychester,', 'Martin', 'by', 'name,', 'had', 'left', 'a', 'sum']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on money
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on to
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on the
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on Dean
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on and
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on Chapter
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on of
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on the
// DEBUG: ['of', 'money', 'to', 'the', 'Dean', 'and', 'Chapter', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on Cathedral
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on on
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on condition
// DEBUG: 157
// DEBUG: (152, 65)
// DEBUG: Operating on that
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on as
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on long
// DEBUG: ['the', 'Cathedral', 'on', 'condition', 'that', 'as']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on as
// DEBUG: 30
// DEBUG: (25, 77)
// DEBUG: Operating on ever
// DEBUG: 59
// DEBUG: (54, 77)
// DEBUG: Operating on the
// DEBUG: 81
// DEBUG: (76, 77)
// DEBUG: Operating on Cathedral
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on stood,
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on they
// DEBUG: ['long', 'as', 'ever', 'the', 'Cathedral', 'stood,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on should
// DEBUG: 58
// DEBUG: (53, 89)
// DEBUG: Operating on cause
// DEBUG: 94
// DEBUG: (89, 89)
// DEBUG: Operating on to
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on be
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on rung
// DEBUG: 153
// DEBUG: (148, 89)
// DEBUG: Operating on a
// DEBUG: 161
// DEBUG: (156, 89)
// DEBUG: Operating on bell
// DEBUG: 190
// DEBUG: (185, 89)
// DEBUG: Operating on from
// DEBUG: ['they', 'should', 'cause', 'to', 'be', 'rung', 'a', 'bell']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on its
// DEBUG: 37
// DEBUG: (32, 101)
// DEBUG: Operating on smaller
// DEBUG: 87
// DEBUG: (82, 101)
// DEBUG: Operating on bell-tower
// DEBUG: 158
// DEBUG: (153, 101)
// DEBUG: Operating on for
// DEBUG: 180
// DEBUG: (175, 101)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['from', 'its', 'smaller', 'bell-tower', 'for']
// DEBUG: drawing cursor (5, 101)
// DEBUG: []
// DEBUG: drawing cursor (5, 113)
// DEBUG: (16, 125)
// DEBUG: Operating on o'clock
// DEBUG: 71
// DEBUG: (66, 125)
// DEBUG: Operating on every
// DEBUG: 107
// DEBUG: (102, 125)
// DEBUG: Operating on morning,
// DEBUG: 164
// DEBUG: (159, 125)
// DEBUG: Operating on all
// DEBUG: 186
// DEBUG: (181, 125)
// DEBUG: Operating on the
// DEBUG: 208
// DEBUG: (203, 125)
// DEBUG: Operating on year
// DEBUG: ['TIMESTRING', "o'clock", 'every', 'morning,', 'all', 'the']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (10, 137)
// DEBUG: Operating on round.
// DEBUG: 58
// DEBUG: ['three minutes before nine']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ['- The Paradise Mystery']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "You'll have to hurry. Many a long", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "year before that, in one of the bygone", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "centuries, a worthy citizen of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Wrychester, Martin by name, had left a sum", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "of money to the Dean and Chapter of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "the Cathedral on condition that as", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "long as ever the Cathedral stood,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "they should cause to be rung a bell", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "from its smaller bell-tower for", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "TIMESTRING o'clock every morning, all the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "three minutes before nine", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- The Paradise Mystery", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:58 for 1 quotations:
    case 538:
      Serial.println(F("Only one option for 08:58:"));
    Serial.println(F("08:58 - It was two minutes of nine now - two minutes before the bombs were set to explode - and three or four people were gathered in front of the bank waiting for it to open. - Jim Thompson, The Getaway"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on now
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on -
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on two
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on minutes
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on before
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on bombs
// DEBUG: ['TIMESTRING', 'now', '-', 'two', 'minutes', 'before', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on were
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on set
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on to
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on explode
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on -
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on and
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on three
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on or
// DEBUG: ['bombs', 'were', 'set', 'to', 'explode', '-', 'and', 'three']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on four
// DEBUG: 42
// DEBUG: (37, 41)
// DEBUG: Operating on people
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on were
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on gathered
// DEBUG: 171
// DEBUG: (166, 41)
// DEBUG: Operating on in
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on front
// DEBUG: ['or', 'four', 'people', 'were', 'gathered', 'in']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on bank
// DEBUG: 82
// DEBUG: (77, 53)
// DEBUG: Operating on waiting
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on for
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on it
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on to
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on open.
// DEBUG: ['front', 'of', 'the', 'bank', 'waiting', 'for', 'it', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['two minutes of nine']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Jim Thompson, The Getaway']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING now - two minutes before the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "bombs were set to explode - and three", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "or four people were gathered in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "front of the bank waiting for it to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "two minutes of nine", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- Jim Thompson, The Getaway", &Font12, WHITE, BLACK);
      return;

    // Codegen for 08:59 for 1 quotations:
    case 539:
      Serial.println(F("Only one option for 08:59:"));
    Serial.println(F("08:59 - She had been lying in bed reading about Sophie and Alberto's conversation on Marx and had fallen asleep. The reading lamp by the bed had been on all night. The green glowing digits on her desk alarm clock showed 8:59. - Jostein Gaarder, Sophie's World"));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on had
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on been
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on lying
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on in
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on bed
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on reading
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on about
// DEBUG: ['She', 'had', 'been', 'lying', 'in', 'bed', 'reading']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on Sophie
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on and
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on Alberto's
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on conversation
// DEBUG: ['about', 'Sophie', 'and', "Alberto's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (18, 29)
// DEBUG: Operating on on
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on Marx
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on and
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on had
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on fallen
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on asleep.
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on The
// DEBUG: ['conversation', 'on', 'Marx', 'and', 'had', 'fallen', 'asleep.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on reading
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on lamp
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on by
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on bed
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on had
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on been
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on on
// DEBUG: ['The', 'reading', 'lamp', 'by', 'the', 'bed', 'had', 'been']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on all
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on night.
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on The
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on green
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on glowing
// DEBUG: 186
// DEBUG: (181, 53)
// DEBUG: Operating on digits
// DEBUG: ['on', 'all', 'night.', 'The', 'green', 'glowing']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on on
// DEBUG: 32
// DEBUG: (27, 65)
// DEBUG: Operating on her
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on desk
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on alarm
// DEBUG: 119
// DEBUG: (114, 65)
// DEBUG: Operating on clock
// DEBUG: 155
// DEBUG: (150, 65)
// DEBUG: Operating on showed
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['digits', 'on', 'her', 'desk', 'alarm', 'clock', 'showed']
// DEBUG: drawing cursor (5, 65)
// DEBUG: 116
// DEBUG: ['8:59']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ["- Sophie's World"]
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "She had been lying in bed reading", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "about Sophie and Alberto's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "conversation on Marx and had fallen asleep.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "The reading lamp by the bed had been", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "on all night. The green glowing", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "digits on her desk alarm clock showed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "8:59", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Sophie's World", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:00 for 16 quotations:
    case 540:
      option = random(0, 16);
      Serial.print(F("16 options for 09:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:00 - 'I could never get all the way down there before nine o'clock.' - John Kennedy Toole, A Confederacy of Dunces "));
// DEBUG: (5, 5)
// DEBUG: Operating on 'I
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on could
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on never
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on get
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on all
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on the
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on way
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on down
// DEBUG: ["'I", 'could', 'never', 'get', 'all', 'the', 'way']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on there
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on before
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on TIMESTRING.'
// DEBUG: Wrorking on the timestring
// DEBUG: ['down', 'there', 'before']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ["nine o'clock"]
// DEBUG: drawing cursor (89, 17)
// DEBUG: ['- A Confederacy of Dunces']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "'I could never get all the way", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "down there before", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(89, 17, "nine o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Confederacy of Dunces", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:00 - 'Look. Ignatius. I'm beat. I've been on the road since nine o'clock yesterday morning.' - John Kennedy Toole, A Confederacy of Dunces "));
// DEBUG: (5, 5)
// DEBUG: Operating on 'Look.
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on Ignatius.
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on I'm
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on beat.
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on I've
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on been
// DEBUG: ["'Look.", 'Ignatius.', "I'm", 'beat.', "I've"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on on
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on road
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on since
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['been', 'on', 'the', 'road', 'since']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on yesterday
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on morning.'
// DEBUG: 149
// DEBUG: ["nine o'clock"]
// DEBUG: drawing cursor (112, 17)
// DEBUG: ['- A Confederacy of Dunces']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "'Look. Ignatius. I'm beat. I've", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "been on the road since", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(112, 17, "nine o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Confederacy of Dunces", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("09:00 - On the third morning after their arrival, just as all the clocks in the city were striking nine individually, and somewhere about nine hundred and ninety-nine collectively, Sam was taking the air in George Yard, when a queer sort of fresh painted vehicle drove up, out of which there jumped with great agility, throwing the reins to a stout man who sat beside him, a queer sort of gentleman, who seemed made for the vehicle, and the vehicle for him. - Charles Dickens, The Pickwick Papers "));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on third
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on morning
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on after
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on their
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on arrival,
// DEBUG: ['On', 'the', 'third', 'morning', 'after', 'their']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on just
// DEBUG: 48
// DEBUG: (43, 17)
// DEBUG: Operating on as
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on all
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on the
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on clocks
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on in
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on the
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on city
// DEBUG: ['arrival,', 'just', 'as', 'all', 'the', 'clocks', 'in', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on were
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on striking
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on TIMESTRINGindividually,
// DEBUG: Wrorking on the timestring
// DEBUG: ['city', 'were', 'striking']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (29, 41)
// DEBUG: Operating on and
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on somewhere
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on about
// DEBUG: 156
// DEBUG: (151, 41)
// DEBUG: Operating on TIMESTRINGhundred
// DEBUG: Wrorking on the timestring
// DEBUG: ['TIMESTRINGindividually,', 'and', 'somewhere', 'about']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (23, 53)
// DEBUG: Operating on and
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on ninety-TIMESTRINGcollectively,
// DEBUG: Wrorking on the timestring
// DEBUG: ['TIMESTRINGhundred', 'and']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (36, 65)
// DEBUG: Operating on Sam
// DEBUG: 63
// DEBUG: (58, 65)
// DEBUG: Operating on was
// DEBUG: 85
// DEBUG: (80, 65)
// DEBUG: Operating on taking
// DEBUG: 128
// DEBUG: (123, 65)
// DEBUG: Operating on the
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on air
// DEBUG: 172
// DEBUG: (167, 65)
// DEBUG: Operating on in
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on George
// DEBUG: ['ninety-TIMESTRINGcollectively,', 'Sam', 'was', 'taking', 'the', 'air', 'in']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on Yard,
// DEBUG: 53
// DEBUG: (48, 77)
// DEBUG: Operating on when
// DEBUG: 82
// DEBUG: (77, 77)
// DEBUG: Operating on a
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on queer
// DEBUG: 126
// DEBUG: (121, 77)
// DEBUG: Operating on sort
// DEBUG: 155
// DEBUG: (150, 77)
// DEBUG: Operating on of
// DEBUG: 170
// DEBUG: (165, 77)
// DEBUG: Operating on fresh
// DEBUG: 206
// DEBUG: (201, 77)
// DEBUG: Operating on painted
// DEBUG: ['George', 'Yard,', 'when', 'a', 'queer', 'sort', 'of', 'fresh']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on vehicle
// DEBUG: 68
// DEBUG: (63, 89)
// DEBUG: Operating on drove
// DEBUG: 104
// DEBUG: (99, 89)
// DEBUG: Operating on up,
// DEBUG: 126
// DEBUG: (121, 89)
// DEBUG: Operating on out
// DEBUG: 148
// DEBUG: (143, 89)
// DEBUG: Operating on of
// DEBUG: 163
// DEBUG: (158, 89)
// DEBUG: Operating on which
// DEBUG: 199
// DEBUG: (194, 89)
// DEBUG: Operating on there
// DEBUG: ['painted', 'vehicle', 'drove', 'up,', 'out', 'of', 'which']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on jumped
// DEBUG: 59
// DEBUG: (54, 101)
// DEBUG: Operating on with
// DEBUG: 88
// DEBUG: (83, 101)
// DEBUG: Operating on great
// DEBUG: 124
// DEBUG: (119, 101)
// DEBUG: Operating on agility,
// DEBUG: 181
// DEBUG: (176, 101)
// DEBUG: Operating on throwing
// DEBUG: ['there', 'jumped', 'with', 'great', 'agility,']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (14, 113)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 113)
// DEBUG: Operating on reins
// DEBUG: 77
// DEBUG: (72, 113)
// DEBUG: Operating on to
// DEBUG: 92
// DEBUG: (87, 113)
// DEBUG: Operating on a
// DEBUG: 100
// DEBUG: (95, 113)
// DEBUG: Operating on stout
// DEBUG: 136
// DEBUG: (131, 113)
// DEBUG: Operating on man
// DEBUG: 158
// DEBUG: (153, 113)
// DEBUG: Operating on who
// DEBUG: 180
// DEBUG: (175, 113)
// DEBUG: Operating on sat
// DEBUG: 202
// DEBUG: (197, 113)
// DEBUG: Operating on beside
// DEBUG: ['throwing', 'the', 'reins', 'to', 'a', 'stout', 'man', 'who', 'sat']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (12, 125)
// DEBUG: Operating on him,
// DEBUG: 46
// DEBUG: (41, 125)
// DEBUG: Operating on a
// DEBUG: 54
// DEBUG: (49, 125)
// DEBUG: Operating on queer
// DEBUG: 90
// DEBUG: (85, 125)
// DEBUG: Operating on sort
// DEBUG: 119
// DEBUG: (114, 125)
// DEBUG: Operating on of
// DEBUG: 134
// DEBUG: (129, 125)
// DEBUG: Operating on gentleman,
// DEBUG: 205
// DEBUG: (200, 125)
// DEBUG: Operating on who
// DEBUG: ['beside', 'him,', 'a', 'queer', 'sort', 'of', 'gentleman,']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (9, 137)
// DEBUG: Operating on seemed
// DEBUG: 57
// DEBUG: (52, 137)
// DEBUG: Operating on made
// DEBUG: 86
// DEBUG: (81, 137)
// DEBUG: Operating on for
// DEBUG: 108
// DEBUG: (103, 137)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 137)
// DEBUG: Operating on vehicle,
// DEBUG: 187
// DEBUG: (182, 137)
// DEBUG: Operating on and
// DEBUG: 209
// DEBUG: (204, 137)
// DEBUG: Operating on the
// DEBUG: ['who', 'seemed', 'made', 'for', 'the', 'vehicle,', 'and']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on vehicle
// DEBUG: 64
// DEBUG: (59, 149)
// DEBUG: Operating on for
// DEBUG: 86
// DEBUG: (81, 149)
// DEBUG: Operating on him.
// DEBUG: 115
// DEBUG: ['nine ']
// DEBUG: drawing cursor (45, 53)
// DEBUG: ['- The Pickwick Papers']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "On the third morning after their", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "arrival, just as all the clocks in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "city were striking", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRINGindividually, and somewhere about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "TIMESTRINGhundred and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "ninety-TIMESTRINGcollectively, Sam was taking the air in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "George Yard, when a queer sort of fresh", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "painted vehicle drove up, out of which", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "there jumped with great agility,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "throwing the reins to a stout man who sat", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "beside him, a queer sort of gentleman,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "who seemed made for the vehicle, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(45, 53, "nine ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- The Pickwick Papers", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("09:00 - 14 June 9:00 am woke up - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on 14
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on June
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on woke
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on up
// DEBUG: ['14', 'June', 'TIMESTRING', 'woke']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['9:00 am']
// DEBUG: drawing cursor (49, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "14 June TIMESTRING woke", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(49, 5, "9:00 am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("09:00 - 9.00 a.m. School assembly - Mark Haddon, The Curious Incident of the Dog in the Night-time "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on School
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on assembly
// DEBUG: ['TIMESTRING', 'School']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['9.00 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING School", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "9.00 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("09:00 - A fly buzzed, the wall clock began to strike. After the nine golden strokes faded, the district captain began. \"How is Herr Colonel Marek?\" \"Thank you, Papá, he's fine.\" \"Still weak in geometry?\" \"Thank you, Papá, a little better.\" \"Read any books?\" \"Yessir, Papá.\" - Joseph Roth, The Radetzky March "));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on fly
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on buzzed,
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on the
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on wall
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on clock
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on began
// DEBUG: ['A', 'fly', 'buzzed,', 'the', 'wall', 'clock']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on strike.
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on After
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on the
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on TIMESTRINGgolden
// DEBUG: Wrorking on the timestring
// DEBUG: ['began', 'to', 'strike.', 'After', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (22, 29)
// DEBUG: Operating on strokes
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on faded,
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on the
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on district
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on captain
// DEBUG: ['TIMESTRINGgolden', 'strokes', 'faded,', 'the', 'district']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on began.
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on \"How
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on is
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on Herr
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on Colonel
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on Marek?\"
// DEBUG: ['captain', 'began.', '\\"How', 'is', 'Herr', 'Colonel']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on \"Thank
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on you,
// DEBUG: 98
// DEBUG: (93, 53)
// DEBUG: Operating on Papá,
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on he's
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on fine.\"
// DEBUG: ['Marek?\\"', '\\"Thank', 'you,', 'Papá,', "he's"]
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on \"Still
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on weak
// DEBUG: 97
// DEBUG: (92, 65)
// DEBUG: Operating on in
// DEBUG: 112
// DEBUG: (107, 65)
// DEBUG: Operating on geometry?\"
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on \"Thank
// DEBUG: ['fine.\\"', '\\"Still', 'weak', 'in', 'geometry?\\"']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on you,
// DEBUG: 47
// DEBUG: (42, 77)
// DEBUG: Operating on Papá,
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on a
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on little
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on better.\"
// DEBUG: 198
// DEBUG: (193, 77)
// DEBUG: Operating on \"Read
// DEBUG: ['\\"Thank', 'you,', 'Papá,', 'a', 'little', 'better.\\"']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on any
// DEBUG: 39
// DEBUG: (34, 89)
// DEBUG: Operating on books?\"
// DEBUG: 96
// DEBUG: (91, 89)
// DEBUG: Operating on \"Yessir,
// DEBUG: 160
// DEBUG: (155, 89)
// DEBUG: Operating on Papá.\"
// DEBUG: 210
// DEBUG: ['nine ']
// DEBUG: drawing cursor (134, 17)
// DEBUG: ['- The Radetzky March']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "A fly buzzed, the wall clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "began to strike. After the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRINGgolden strokes faded, the district", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "captain began. \"How is Herr Colonel", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Marek?\" \"Thank you, Papá, he's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "fine.\" \"Still weak in geometry?\"", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "\"Thank you, Papá, a little better.\"", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(134, 17, "nine ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Radetzky March", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("09:00 - As nine o' clock was left behind, the preposterousness of the delay overwhelmed me, and I went in a kind of temper to the owner and said that I thought he should sign on another cook and weigh spars and be off. - John Hershey, A Single Pebble "));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on was
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on left
// DEBUG: ['As', 'TIMESTRING', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on behind,
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on preposterousness
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on of
// DEBUG: ['left', 'behind,', 'the', 'preposterousness']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on delay
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on overwhelmed
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on me,
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on and
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on I
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on went
// DEBUG: ['of', 'the', 'delay', 'overwhelmed', 'me,', 'and', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on in
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on a
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on kind
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on of
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on temper
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on to
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on the
// DEBUG: 162
// DEBUG: (157, 41)
// DEBUG: Operating on owner
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on and
// DEBUG: ['went', 'in', 'a', 'kind', 'of', 'temper', 'to', 'the', 'owner']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on said
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on that
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on I
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on thought
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on he
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on should
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on sign
// DEBUG: ['and', 'said', 'that', 'I', 'thought', 'he', 'should']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on on
// DEBUG: 30
// DEBUG: (25, 65)
// DEBUG: Operating on another
// DEBUG: 80
// DEBUG: (75, 65)
// DEBUG: Operating on cook
// DEBUG: 109
// DEBUG: (104, 65)
// DEBUG: Operating on and
// DEBUG: 131
// DEBUG: (126, 65)
// DEBUG: Operating on weigh
// DEBUG: 167
// DEBUG: (162, 65)
// DEBUG: Operating on spars
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on and
// DEBUG: ['sign', 'on', 'another', 'cook', 'and', 'weigh', 'spars']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on be
// DEBUG: 29
// DEBUG: (24, 77)
// DEBUG: Operating on off.
// DEBUG: 58
// DEBUG: ["nine o' clock"]
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- A Single Pebble']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "As TIMESTRING was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "left behind, the preposterousness", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "of the delay overwhelmed me, and I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "went in a kind of temper to the owner", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "and said that I thought he should", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "sign on another cook and weigh spars", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "nine o' clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- A Single Pebble", &Font12, WHITE, BLACK);
          return;
        case 7:
          Serial.println(F("09:00 - At nine o'clock, one morning late in July, Gatsby's gorgeous car lurched up the rocky drive to my door and gave out a burst of melody from its three-noted horn - F. Scott Fitzgerald, The Great Gatsby "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on one
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on morning
// DEBUG: ['At', 'TIMESTRING,', 'one']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on late
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on in
// DEBUG: 62
// DEBUG: (57, 17)
// DEBUG: Operating on July,
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on Gatsby's
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on gorgeous
// DEBUG: ['morning', 'late', 'in', 'July,', "Gatsby's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on car
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on lurched
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on up
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on the
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on rocky
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on drive
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on to
// DEBUG: ['gorgeous', 'car', 'lurched', 'up', 'the', 'rocky', 'drive']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on my
// DEBUG: 28
// DEBUG: (23, 41)
// DEBUG: Operating on door
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on and
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on gave
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on out
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on a
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on burst
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on of
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on melody
// DEBUG: ['to', 'my', 'door', 'and', 'gave', 'out', 'a', 'burst', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on from
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on its
// DEBUG: 68
// DEBUG: (63, 53)
// DEBUG: Operating on three-noted
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on horn
// DEBUG: 175
// DEBUG: ["nine o'clock"]
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Great Gatsby']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING, one", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "morning late in July, Gatsby's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "gorgeous car lurched up the rocky drive", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "to my door and gave out a burst of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "nine o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Great Gatsby", &Font12, WHITE, BLACK);
          return;
        case 8:
          Serial.println(F("09:00 - He was at breakfast at nine, and for the twentieth time consulted his \"Bradshaw,\" to see at what earliest hour Dr. Grantly could arrive from Barchester. - Anthony Trollope, The Warden "));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on at
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on breakfast
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['He', 'was', 'at', 'breakfast']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on for
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on the
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on twentieth
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on time
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on consulted
// DEBUG: ['TIMESTRING,', 'and', 'for', 'the', 'twentieth', 'time']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on his
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on \"Bradshaw,\"
// DEBUG: 134
// DEBUG: (129, 29)
// DEBUG: Operating on to
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on see
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on at
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on what
// DEBUG: ['consulted', 'his', '\\"Bradshaw,\\"', 'to', 'see', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on earliest
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on hour
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on Dr.
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on Grantly
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on could
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on arrive
// DEBUG: ['what', 'earliest', 'hour', 'Dr.', 'Grantly', 'could']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on from
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on Barchester.
// DEBUG: 124
// DEBUG: ['at nine']
// DEBUG: drawing cursor (121, 5)
// DEBUG: ['- The Warden']
// DEBUG: drawing cursor (123, 192)
          paint.Paint_DrawString_EN(5, 5, "He was at breakfast", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, and for the twentieth time", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "consulted his \"Bradshaw,\" to see at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "what earliest hour Dr. Grantly could", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(121, 5, "at nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(123, 192, "- The Warden", &Font12, WHITE, BLACK);
          return;
        case 9:
          Serial.println(F("09:00 - He won't stand beating. Now, if you only kept on good terms with him, he'd do almost anything you liked with the clock. For instance, suppose it were nine o'clock in the morning, just time to begin lessons: you'd only have to whisper a hint to Time, and round goes the clock in a twinkling! Half-past one, time for dinner! - Lewis Carroll, Alice's Adventures in Wonderland "));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on won't
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on stand
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on beating.
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on Now,
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on if
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on you
// DEBUG: ['He', "won't", 'stand', 'beating.', 'Now,', 'if']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on only
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on kept
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on on
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on good
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on terms
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on with
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on him,
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on he'd
// DEBUG: ['you', 'only', 'kept', 'on', 'good', 'terms', 'with', 'him,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on do
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on almost
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on anything
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on you
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on liked
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on with
// DEBUG: ["he'd", 'do', 'almost', 'anything', 'you', 'liked']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on clock.
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on For
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on instance,
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on suppose
// DEBUG: ['with', 'the', 'clock.', 'For', 'instance,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on it
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on were
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['suppose', 'it', 'were']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on morning,
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on just
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on time
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on to
// DEBUG: 188
// DEBUG: (183, 65)
// DEBUG: Operating on begin
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning,', 'just', 'time', 'to']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on lessons:
// DEBUG: 73
// DEBUG: (68, 77)
// DEBUG: Operating on you'd
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on only
// DEBUG: 138
// DEBUG: (133, 77)
// DEBUG: Operating on have
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on to
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on whisper
// DEBUG: ['begin', 'lessons:', "you'd", 'only', 'have', 'to']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on a
// DEBUG: 26
// DEBUG: (21, 89)
// DEBUG: Operating on hint
// DEBUG: 55
// DEBUG: (50, 89)
// DEBUG: Operating on to
// DEBUG: 70
// DEBUG: (65, 89)
// DEBUG: Operating on Time,
// DEBUG: 106
// DEBUG: (101, 89)
// DEBUG: Operating on and
// DEBUG: 128
// DEBUG: (123, 89)
// DEBUG: Operating on round
// DEBUG: 164
// DEBUG: (159, 89)
// DEBUG: Operating on goes
// DEBUG: 193
// DEBUG: (188, 89)
// DEBUG: Operating on the
// DEBUG: ['whisper', 'a', 'hint', 'to', 'Time,', 'and', 'round', 'goes']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on clock
// DEBUG: 50
// DEBUG: (45, 101)
// DEBUG: Operating on in
// DEBUG: 65
// DEBUG: (60, 101)
// DEBUG: Operating on a
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on twinkling!
// DEBUG: 144
// DEBUG: (139, 101)
// DEBUG: Operating on Half-past
// DEBUG: 208
// DEBUG: (203, 101)
// DEBUG: Operating on one,
// DEBUG: ['the', 'clock', 'in', 'a', 'twinkling!', 'Half-past']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on time
// DEBUG: 44
// DEBUG: (39, 113)
// DEBUG: Operating on for
// DEBUG: 66
// DEBUG: (61, 113)
// DEBUG: Operating on dinner!
// DEBUG: 116
// DEBUG: ["nine o'clock"]
// DEBUG: drawing cursor (57, 53)
// DEBUG: ['- Lewis Carroll']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "He won't stand beating. Now, if", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "you only kept on good terms with him,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "he'd do almost anything you liked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "with the clock. For instance,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "suppose it were", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING in the morning, just time to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "begin lessons: you'd only have to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "whisper a hint to Time, and round goes", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "the clock in a twinkling! Half-past", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(57, 53, "nine o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Lewis Carroll", &Font12, WHITE, BLACK);
          return;
        case 10:
          Serial.println(F("09:00 - It was around nine o'clock that I crossed the border into Cornwall. This was at least three hours before the rain began and the clouds were still all of a brilliant white. In fact, many of the sights that greeted me this morning were among the most charming I have so far encountered. It was unfortunate, then, that I could not for much of the time give to them the attention they warranted; for one may as well declare it, one was in a condition of some preoccupation with the thought that - barring some unseen complication - one would be meeting Miss Kenton again before the day's end. - Kazuo Ishiguro, The Remains of the Day "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on around
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'around']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on that
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on I
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on crossed
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on border
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on into
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on Cornwall.
// DEBUG: ['TIMESTRING', 'that', 'I', 'crossed', 'the', 'border', 'into']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on This
// DEBUG: 49
// DEBUG: (44, 29)
// DEBUG: Operating on was
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on at
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on least
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on three
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on hours
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on before
// DEBUG: ['Cornwall.', 'This', 'was', 'at', 'least', 'three', 'hours']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on rain
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on began
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on and
// DEBUG: 126
// DEBUG: (121, 41)
// DEBUG: Operating on the
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on clouds
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on were
// DEBUG: ['before', 'the', 'rain', 'began', 'and', 'the', 'clouds']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on still
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on all
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on of
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on a
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on brilliant
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on white.
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on In
// DEBUG: ['were', 'still', 'all', 'of', 'a', 'brilliant', 'white.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on fact,
// DEBUG: 49
// DEBUG: (44, 65)
// DEBUG: Operating on many
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on of
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on the
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on sights
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on that
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on greeted
// DEBUG: ['In', 'fact,', 'many', 'of', 'the', 'sights', 'that']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on me
// DEBUG: 33
// DEBUG: (28, 77)
// DEBUG: Operating on this
// DEBUG: 62
// DEBUG: (57, 77)
// DEBUG: Operating on morning
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on were
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on among
// DEBUG: 177
// DEBUG: (172, 77)
// DEBUG: Operating on the
// DEBUG: 199
// DEBUG: (194, 77)
// DEBUG: Operating on most
// DEBUG: ['greeted', 'me', 'this', 'morning', 'were', 'among', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on charming
// DEBUG: 72
// DEBUG: (67, 89)
// DEBUG: Operating on I
// DEBUG: 80
// DEBUG: (75, 89)
// DEBUG: Operating on have
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on so
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on far
// DEBUG: 146
// DEBUG: (141, 89)
// DEBUG: Operating on encountered.
// DEBUG: ['most', 'charming', 'I', 'have', 'so', 'far']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (18, 101)
// DEBUG: Operating on It
// DEBUG: 38
// DEBUG: (33, 101)
// DEBUG: Operating on was
// DEBUG: 60
// DEBUG: (55, 101)
// DEBUG: Operating on unfortunate,
// DEBUG: 145
// DEBUG: (140, 101)
// DEBUG: Operating on then,
// DEBUG: 181
// DEBUG: (176, 101)
// DEBUG: Operating on that
// DEBUG: 210
// DEBUG: (205, 101)
// DEBUG: Operating on I
// DEBUG: ['encountered.', 'It', 'was', 'unfortunate,', 'then,', 'that']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (7, 113)
// DEBUG: Operating on could
// DEBUG: 48
// DEBUG: (43, 113)
// DEBUG: Operating on not
// DEBUG: 70
// DEBUG: (65, 113)
// DEBUG: Operating on for
// DEBUG: 92
// DEBUG: (87, 113)
// DEBUG: Operating on much
// DEBUG: 121
// DEBUG: (116, 113)
// DEBUG: Operating on of
// DEBUG: 136
// DEBUG: (131, 113)
// DEBUG: Operating on the
// DEBUG: 158
// DEBUG: (153, 113)
// DEBUG: Operating on time
// DEBUG: 187
// DEBUG: (182, 113)
// DEBUG: Operating on give
// DEBUG: ['I', 'could', 'not', 'for', 'much', 'of', 'the', 'time']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (10, 125)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 125)
// DEBUG: Operating on them
// DEBUG: 59
// DEBUG: (54, 125)
// DEBUG: Operating on the
// DEBUG: 81
// DEBUG: (76, 125)
// DEBUG: Operating on attention
// DEBUG: 145
// DEBUG: (140, 125)
// DEBUG: Operating on they
// DEBUG: 174
// DEBUG: (169, 125)
// DEBUG: Operating on warranted;
// DEBUG: ['give', 'to', 'them', 'the', 'attention', 'they']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (16, 137)
// DEBUG: Operating on for
// DEBUG: 43
// DEBUG: (38, 137)
// DEBUG: Operating on one
// DEBUG: 65
// DEBUG: (60, 137)
// DEBUG: Operating on may
// DEBUG: 87
// DEBUG: (82, 137)
// DEBUG: Operating on as
// DEBUG: 102
// DEBUG: (97, 137)
// DEBUG: Operating on well
// DEBUG: 131
// DEBUG: (126, 137)
// DEBUG: Operating on declare
// DEBUG: 181
// DEBUG: (176, 137)
// DEBUG: Operating on it,
// DEBUG: 203
// DEBUG: (198, 137)
// DEBUG: Operating on one
// DEBUG: ['warranted;', 'for', 'one', 'may', 'as', 'well', 'declare', 'it,']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on was
// DEBUG: 36
// DEBUG: (31, 149)
// DEBUG: Operating on in
// DEBUG: 51
// DEBUG: (46, 149)
// DEBUG: Operating on a
// DEBUG: 59
// DEBUG: (54, 149)
// DEBUG: Operating on condition
// DEBUG: 123
// DEBUG: (118, 149)
// DEBUG: Operating on of
// DEBUG: 138
// DEBUG: (133, 149)
// DEBUG: Operating on some
// DEBUG: 167
// DEBUG: (162, 149)
// DEBUG: Operating on preoccupation
// DEBUG: ['one', 'was', 'in', 'a', 'condition', 'of', 'some']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (19, 161)
// DEBUG: Operating on with
// DEBUG: 53
// DEBUG: (48, 161)
// DEBUG: Operating on the
// DEBUG: 75
// DEBUG: (70, 161)
// DEBUG: Operating on thought
// DEBUG: 125
// DEBUG: (120, 161)
// DEBUG: Operating on that
// DEBUG: 154
// DEBUG: (149, 161)
// DEBUG: Operating on -
// DEBUG: 162
// DEBUG: (157, 161)
// DEBUG: Operating on barring
// DEBUG: ['preoccupation', 'with', 'the', 'thought', 'that', '-']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (13, 173)
// DEBUG: Operating on some
// DEBUG: 47
// DEBUG: (42, 173)
// DEBUG: Operating on unseen
// DEBUG: 90
// DEBUG: (85, 173)
// DEBUG: Operating on complication
// DEBUG: 175
// DEBUG: (170, 173)
// DEBUG: Operating on -
// DEBUG: 183
// DEBUG: (178, 173)
// DEBUG: Operating on one
// DEBUG: 205
// DEBUG: (200, 173)
// DEBUG: Operating on would
// DEBUG: ['barring', 'some', 'unseen', 'complication', '-', 'one']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (11, 185)
// DEBUG: Operating on be
// DEBUG: 31
// DEBUG: (26, 185)
// DEBUG: Operating on meeting
// DEBUG: 81
// DEBUG: (76, 185)
// DEBUG: Operating on Miss
// DEBUG: 110
// DEBUG: (105, 185)
// DEBUG: Operating on Kenton
// DEBUG: 153
// DEBUG: (148, 185)
// DEBUG: Operating on again
// DEBUG: 189
// DEBUG: (184, 185)
// DEBUG: Operating on before
// DEBUG: ['would', 'be', 'meeting', 'Miss', 'Kenton', 'again']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (12, 197)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 197)
// DEBUG: Operating on day's
// DEBUG: 75
// DEBUG: (70, 197)
// DEBUG: Operating on end.
// DEBUG: 104
// DEBUG: ["nine o'clock"]
// DEBUG: drawing cursor (85, 5)
// DEBUG: ['- The Remains of the Day']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "It was around", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING that I crossed the border into", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Cornwall. This was at least three hours", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "before the rain began and the clouds", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "were still all of a brilliant white.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "In fact, many of the sights that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "greeted me this morning were among the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "most charming I have so far", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "encountered. It was unfortunate, then, that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "I could not for much of the time", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "give to them the attention they", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "warranted; for one may as well declare it,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "one was in a condition of some", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "preoccupation with the thought that -", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "barring some unseen complication - one", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "would be meeting Miss Kenton again", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(85, 5, "nine o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Remains of the Day", &Font12, WHITE, BLACK);
          return;
        case 11:
          Serial.println(F("09:00 - Opening his window, Aschenbach thought he could smell the foul stench of the lagoon. A sudden despondency came over him. He considered leaving then and there. Once, years before, after weeks of a beautiful spring, he had been visited by this sort of weather and it so affected his health he had been obliged to flee. Was not the same listless fever setting in? The pressure in the temples, the heavy eyelids? Changing hotels again would be a nuisance, but if the wind failed to shift he could not possibly remain here. To be on the safe side, he did not unpack everything. At nine he went to breakfast in the specially designated buffet between the lobby and the dining room. - Thomas Mann, Death in Venice "));
// DEBUG: (5, 5)
// DEBUG: Operating on Opening
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on his
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on window,
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on Aschenbach
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on thought
// DEBUG: ['Opening', 'his', 'window,', 'Aschenbach']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on he
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on could
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on smell
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on the
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on foul
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on stench
// DEBUG: 199
// DEBUG: (194, 17)
// DEBUG: Operating on of
// DEBUG: ['thought', 'he', 'could', 'smell', 'the', 'foul', 'stench']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on lagoon.
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on A
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on sudden
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on despondency
// DEBUG: ['of', 'the', 'lagoon.', 'A', 'sudden']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on came
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on over
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on him.
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on He
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on considered
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on leaving
// DEBUG: ['despondency', 'came', 'over', 'him.', 'He', 'considered']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on then
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on and
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on there.
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on Once,
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on years
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on before,
// DEBUG: ['leaving', 'then', 'and', 'there.', 'Once,', 'years']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on after
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on weeks
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on of
// DEBUG: 105
// DEBUG: (100, 65)
// DEBUG: Operating on a
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on beautiful
// DEBUG: 177
// DEBUG: (172, 65)
// DEBUG: Operating on spring,
// DEBUG: ['before,', 'after', 'weeks', 'of', 'a', 'beautiful']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on he
// DEBUG: 33
// DEBUG: (28, 77)
// DEBUG: Operating on had
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on been
// DEBUG: 84
// DEBUG: (79, 77)
// DEBUG: Operating on visited
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on by
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on this
// DEBUG: 178
// DEBUG: (173, 77)
// DEBUG: Operating on sort
// DEBUG: 207
// DEBUG: (202, 77)
// DEBUG: Operating on of
// DEBUG: ['spring,', 'he', 'had', 'been', 'visited', 'by', 'this', 'sort']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on weather
// DEBUG: 63
// DEBUG: (58, 89)
// DEBUG: Operating on and
// DEBUG: 85
// DEBUG: (80, 89)
// DEBUG: Operating on it
// DEBUG: 100
// DEBUG: (95, 89)
// DEBUG: Operating on so
// DEBUG: 115
// DEBUG: (110, 89)
// DEBUG: Operating on affected
// DEBUG: 172
// DEBUG: (167, 89)
// DEBUG: Operating on his
// DEBUG: 194
// DEBUG: (189, 89)
// DEBUG: Operating on health
// DEBUG: ['of', 'weather', 'and', 'it', 'so', 'affected', 'his']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on he
// DEBUG: 32
// DEBUG: (27, 101)
// DEBUG: Operating on had
// DEBUG: 54
// DEBUG: (49, 101)
// DEBUG: Operating on been
// DEBUG: 83
// DEBUG: (78, 101)
// DEBUG: Operating on obliged
// DEBUG: 133
// DEBUG: (128, 101)
// DEBUG: Operating on to
// DEBUG: 148
// DEBUG: (143, 101)
// DEBUG: Operating on flee.
// DEBUG: 184
// DEBUG: (179, 101)
// DEBUG: Operating on Was
// DEBUG: 206
// DEBUG: (201, 101)
// DEBUG: Operating on not
// DEBUG: ['health', 'he', 'had', 'been', 'obliged', 'to', 'flee.', 'Was']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 113)
// DEBUG: Operating on same
// DEBUG: 65
// DEBUG: (60, 113)
// DEBUG: Operating on listless
// DEBUG: 122
// DEBUG: (117, 113)
// DEBUG: Operating on fever
// DEBUG: 158
// DEBUG: (153, 113)
// DEBUG: Operating on setting
// DEBUG: 208
// DEBUG: (203, 113)
// DEBUG: Operating on in?
// DEBUG: ['not', 'the', 'same', 'listless', 'fever', 'setting']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (9, 125)
// DEBUG: Operating on The
// DEBUG: 36
// DEBUG: (31, 125)
// DEBUG: Operating on pressure
// DEBUG: 93
// DEBUG: (88, 125)
// DEBUG: Operating on in
// DEBUG: 108
// DEBUG: (103, 125)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 125)
// DEBUG: Operating on temples,
// DEBUG: 187
// DEBUG: (182, 125)
// DEBUG: Operating on the
// DEBUG: 209
// DEBUG: (204, 125)
// DEBUG: Operating on heavy
// DEBUG: ['in?', 'The', 'pressure', 'in', 'the', 'temples,', 'the']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (11, 137)
// DEBUG: Operating on eyelids?
// DEBUG: 73
// DEBUG: (68, 137)
// DEBUG: Operating on Changing
// DEBUG: 130
// DEBUG: (125, 137)
// DEBUG: Operating on hotels
// DEBUG: 173
// DEBUG: (168, 137)
// DEBUG: Operating on again
// DEBUG: 209
// DEBUG: (204, 137)
// DEBUG: Operating on would
// DEBUG: ['heavy', 'eyelids?', 'Changing', 'hotels', 'again']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (11, 149)
// DEBUG: Operating on be
// DEBUG: 31
// DEBUG: (26, 149)
// DEBUG: Operating on a
// DEBUG: 39
// DEBUG: (34, 149)
// DEBUG: Operating on nuisance,
// DEBUG: 103
// DEBUG: (98, 149)
// DEBUG: Operating on but
// DEBUG: 125
// DEBUG: (120, 149)
// DEBUG: Operating on if
// DEBUG: 140
// DEBUG: (135, 149)
// DEBUG: Operating on the
// DEBUG: 162
// DEBUG: (157, 149)
// DEBUG: Operating on wind
// DEBUG: 191
// DEBUG: (186, 149)
// DEBUG: Operating on failed
// DEBUG: ['would', 'be', 'a', 'nuisance,', 'but', 'if', 'the', 'wind']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (12, 161)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 161)
// DEBUG: Operating on shift
// DEBUG: 68
// DEBUG: (63, 161)
// DEBUG: Operating on he
// DEBUG: 83
// DEBUG: (78, 161)
// DEBUG: Operating on could
// DEBUG: 119
// DEBUG: (114, 161)
// DEBUG: Operating on not
// DEBUG: 141
// DEBUG: (136, 161)
// DEBUG: Operating on possibly
// DEBUG: 198
// DEBUG: (193, 161)
// DEBUG: Operating on remain
// DEBUG: ['failed', 'to', 'shift', 'he', 'could', 'not', 'possibly']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (12, 173)
// DEBUG: Operating on here.
// DEBUG: 53
// DEBUG: (48, 173)
// DEBUG: Operating on To
// DEBUG: 68
// DEBUG: (63, 173)
// DEBUG: Operating on be
// DEBUG: 83
// DEBUG: (78, 173)
// DEBUG: Operating on on
// DEBUG: 98
// DEBUG: (93, 173)
// DEBUG: Operating on the
// DEBUG: 120
// DEBUG: (115, 173)
// DEBUG: Operating on safe
// DEBUG: 149
// DEBUG: (144, 173)
// DEBUG: Operating on side,
// DEBUG: 185
// DEBUG: (180, 173)
// DEBUG: Operating on he
// DEBUG: 200
// DEBUG: (195, 173)
// DEBUG: Operating on did
// DEBUG: ['remain', 'here.', 'To', 'be', 'on', 'the', 'safe', 'side,', 'he']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (9, 185)
// DEBUG: Operating on not
// DEBUG: 36
// DEBUG: (31, 185)
// DEBUG: Operating on unpack
// DEBUG: 79
// DEBUG: (74, 185)
// DEBUG: Operating on everything.
// DEBUG: 157
// DEBUG: (152, 185)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['did', 'not', 'unpack', 'everything.']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (16, 197)
// DEBUG: Operating on he
// DEBUG: 36
// DEBUG: (31, 197)
// DEBUG: Operating on went
// DEBUG: 65
// DEBUG: (60, 197)
// DEBUG: Operating on to
// DEBUG: 80
// DEBUG: (75, 197)
// DEBUG: Operating on breakfast
// DEBUG: 144
// DEBUG: (139, 197)
// DEBUG: Operating on in
// DEBUG: 159
// DEBUG: (154, 197)
// DEBUG: Operating on the
// DEBUG: 181
// DEBUG: (176, 197)
// DEBUG: Operating on specially
// DEBUG: ['TIMESTRING', 'he', 'went', 'to', 'breakfast', 'in', 'the']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (15, 209)
// DEBUG: Operating on designated
// DEBUG: 91
// DEBUG: (86, 209)
// DEBUG: Operating on buffet
// DEBUG: 134
// DEBUG: (129, 209)
// DEBUG: Operating on between
// DEBUG: 184
// DEBUG: (179, 209)
// DEBUG: Operating on the
// DEBUG: 206
// DEBUG: (201, 209)
// DEBUG: Operating on lobby
// DEBUG: ['specially', 'designated', 'buffet', 'between', 'the']
// DEBUG: drawing cursor (5, 209)
// DEBUG: (11, 221)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 221)
// DEBUG: Operating on the
// DEBUG: 60
// DEBUG: (55, 221)
// DEBUG: Operating on dining
// DEBUG: 103
// DEBUG: (98, 221)
// DEBUG: Operating on room.
// DEBUG: 139
// DEBUG: ['At nine']
// DEBUG: drawing cursor (152, 185)
// DEBUG: ['- Death in Venice']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "Opening his window, Aschenbach", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "thought he could smell the foul stench", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "of the lagoon. A sudden", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "despondency came over him. He considered", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "leaving then and there. Once, years", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "before, after weeks of a beautiful", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "spring, he had been visited by this sort", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "of weather and it so affected his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "health he had been obliged to flee. Was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "not the same listless fever setting", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "in? The pressure in the temples, the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "heavy eyelids? Changing hotels again", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "would be a nuisance, but if the wind", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "failed to shift he could not possibly", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "remain here. To be on the safe side, he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "did not unpack everything.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 197, "TIMESTRING he went to breakfast in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 209, "specially designated buffet between the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(152, 185, "At nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Death in Venice", &Font12, WHITE, BLACK);
          return;
        case 12:
          Serial.println(F("09:00 - Sometimes what I wouldn't give to have us sitting in a bar again at 9.00am telling lies to one another, far from God. - Denis Johnson, Jesus' Son "));
// DEBUG: (5, 5)
// DEBUG: Operating on Sometimes
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on what
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on I
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on wouldn't
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on give
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on to
// DEBUG: ['Sometimes', 'what', 'I', "wouldn't", 'give']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on have
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on us
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on sitting
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on in
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on a
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on bar
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on again
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on at
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['to', 'have', 'us', 'sitting', 'in', 'a', 'bar', 'again', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on telling
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on lies
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on to
// DEBUG: ['TIMESTRING', 'telling', 'lies']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on one
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on another,
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on far
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on from
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on God.
// DEBUG: 172
// DEBUG: ['9.00am']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ["- Denis Johnson, Jesus' Son "]
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "Sometimes what I wouldn't give", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "to have us sitting in a bar again at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING telling lies", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "9.00am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Denis Johnson, Jesus' Son ", &Font12, WHITE, BLACK);
          return;
        case 13:
          Serial.println(F("09:00 - The clock struck nine when I did send the nurse; In half an hour she promised to return. Perchance she cannot meet him: that's not so. - Shakespeare, Romeo and Juliet "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on clock
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on struck
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on TIMESTRINGwhen
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'clock', 'struck']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (20, 17)
// DEBUG: Operating on I
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on did
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on send
// DEBUG: 84
// DEBUG: (79, 17)
// DEBUG: Operating on the
// DEBUG: 106
// DEBUG: (101, 17)
// DEBUG: Operating on nurse;
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on In
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on half
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on an
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on hour
// DEBUG: ['TIMESTRINGwhen', 'I', 'did', 'send', 'the', 'nurse;', 'In', 'half', 'an']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on she
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on promised
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on to
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on return.
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on Perchance
// DEBUG: ['hour', 'she', 'promised', 'to', 'return.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on she
// DEBUG: 42
// DEBUG: (37, 41)
// DEBUG: Operating on cannot
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on meet
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on him:
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on that's
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on not
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on so.
// DEBUG: ['Perchance', 'she', 'cannot', 'meet', 'him:', "that's", 'not']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['nine ']
// DEBUG: drawing cursor (106, 5)
// DEBUG: ['- Romeo and Juliet']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "The clock struck", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRINGwhen I did send the nurse; In half an", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "hour she promised to return.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Perchance she cannot meet him: that's not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(106, 5, "nine ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- Romeo and Juliet", &Font12, WHITE, BLACK);
          return;
        case 14:
          Serial.println(F("09:00 - To where Saint Mary Woolnoth kept the hours With a dead sound on the final stroke of nine. - T S Eliot, The Waste Land "));
// DEBUG: (5, 5)
// DEBUG: Operating on To
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on where
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on Saint
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on Mary
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on Woolnoth
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on kept
// DEBUG: ['To', 'where', 'Saint', 'Mary', 'Woolnoth']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on hours
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on With
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on a
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on dead
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on sound
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on on
// DEBUG: 190
// DEBUG: (185, 17)
// DEBUG: Operating on the
// DEBUG: ['kept', 'the', 'hours', 'With', 'a', 'dead', 'sound', 'on']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on final
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on stroke
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on of
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'final', 'stroke', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['nine']
// DEBUG: drawing cursor (103, 29)
// DEBUG: ['- T S Eliot, The Waste Land ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "To where Saint Mary Woolnoth", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "kept the hours With a dead sound on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the final stroke of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(103, 29, "nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- T S Eliot, The Waste Land ", &Font12, WHITE, BLACK);
          return;
        case 15:
          Serial.println(F("09:00 - Unreal City, Under the brown fog of a winter dawn, A crowd flowed over London Bridge, so many, I had not thought death had undone so many. Sighs, short and infrequent, were exhaled, And each man fixed his eyes before his feet. Flowed up the hill and down King William Street, To where Saint Mary Woolnoth kept the hours With a dead sound on the final stroke of nine. - T S Eliot, The Waste Land "));
// DEBUG: (5, 5)
// DEBUG: Operating on Unreal
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on City,
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on Under
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on brown
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on fog
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on of
// DEBUG: ['Unreal', 'City,', 'Under', 'the', 'brown', 'fog']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 17)
// DEBUG: Operating on winter
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on dawn,
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on A
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on crowd
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on flowed
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on over
// DEBUG: ['of', 'a', 'winter', 'dawn,', 'A', 'crowd', 'flowed']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on London
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on Bridge,
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on so
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on many,
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on I
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on had
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on not
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on thought
// DEBUG: ['over', 'London', 'Bridge,', 'so', 'many,', 'I', 'had', 'not']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on death
// DEBUG: 54
// DEBUG: (49, 41)
// DEBUG: Operating on had
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on undone
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on so
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on many.
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on Sighs,
// DEBUG: ['thought', 'death', 'had', 'undone', 'so', 'many.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on short
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on and
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on infrequent,
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on were
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on exhaled,
// DEBUG: ['Sighs,', 'short', 'and', 'infrequent,', 'were']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on And
// DEBUG: 41
// DEBUG: (36, 65)
// DEBUG: Operating on each
// DEBUG: 70
// DEBUG: (65, 65)
// DEBUG: Operating on man
// DEBUG: 92
// DEBUG: (87, 65)
// DEBUG: Operating on fixed
// DEBUG: 128
// DEBUG: (123, 65)
// DEBUG: Operating on his
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on eyes
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on before
// DEBUG: ['exhaled,', 'And', 'each', 'man', 'fixed', 'his', 'eyes']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on his
// DEBUG: 39
// DEBUG: (34, 77)
// DEBUG: Operating on feet.
// DEBUG: 75
// DEBUG: (70, 77)
// DEBUG: Operating on Flowed
// DEBUG: 118
// DEBUG: (113, 77)
// DEBUG: Operating on up
// DEBUG: 133
// DEBUG: (128, 77)
// DEBUG: Operating on the
// DEBUG: 155
// DEBUG: (150, 77)
// DEBUG: Operating on hill
// DEBUG: 184
// DEBUG: (179, 77)
// DEBUG: Operating on and
// DEBUG: 206
// DEBUG: (201, 77)
// DEBUG: Operating on down
// DEBUG: ['before', 'his', 'feet.', 'Flowed', 'up', 'the', 'hill', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on King
// DEBUG: 44
// DEBUG: (39, 89)
// DEBUG: Operating on William
// DEBUG: 94
// DEBUG: (89, 89)
// DEBUG: Operating on Street,
// DEBUG: 144
// DEBUG: (139, 89)
// DEBUG: Operating on To
// DEBUG: 159
// DEBUG: (154, 89)
// DEBUG: Operating on where
// DEBUG: 195
// DEBUG: (190, 89)
// DEBUG: Operating on Saint
// DEBUG: ['down', 'King', 'William', 'Street,', 'To', 'where']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on Mary
// DEBUG: 45
// DEBUG: (40, 101)
// DEBUG: Operating on Woolnoth
// DEBUG: 102
// DEBUG: (97, 101)
// DEBUG: Operating on kept
// DEBUG: 131
// DEBUG: (126, 101)
// DEBUG: Operating on the
// DEBUG: 153
// DEBUG: (148, 101)
// DEBUG: Operating on hours
// DEBUG: 189
// DEBUG: (184, 101)
// DEBUG: Operating on With
// DEBUG: ['Saint', 'Mary', 'Woolnoth', 'kept', 'the', 'hours']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 113)
// DEBUG: Operating on dead
// DEBUG: 52
// DEBUG: (47, 113)
// DEBUG: Operating on sound
// DEBUG: 88
// DEBUG: (83, 113)
// DEBUG: Operating on on
// DEBUG: 103
// DEBUG: (98, 113)
// DEBUG: Operating on the
// DEBUG: 125
// DEBUG: (120, 113)
// DEBUG: Operating on final
// DEBUG: 161
// DEBUG: (156, 113)
// DEBUG: Operating on stroke
// DEBUG: 204
// DEBUG: (199, 113)
// DEBUG: Operating on of
// DEBUG: ['With', 'a', 'dead', 'sound', 'on', 'the', 'final', 'stroke']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (8, 125)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 120
// DEBUG: ['nine']
// DEBUG: drawing cursor (8, 125)
// DEBUG: ['- T S Eliot, The Waste Land ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "Unreal City, Under the brown fog", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "of a winter dawn, A crowd flowed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "over London Bridge, so many, I had not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "thought death had undone so many.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Sighs, short and infrequent, were", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "exhaled, And each man fixed his eyes", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "before his feet. Flowed up the hill and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "down King William Street, To where", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "Saint Mary Woolnoth kept the hours", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "With a dead sound on the final stroke", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(8, 125, "nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- T S Eliot, The Waste Land ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:01 for 1 quotations:
    case 541:
      Serial.println(F("Only one option for 09:01:"));
    Serial.println(F("09:01 - 9:01am lay in bed, staring at ceiling. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on ceiling.
// DEBUG: 90
// DEBUG: ['9:01am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9:01am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:02 for 1 quotations:
    case 542:
      Serial.println(F("Only one option for 09:02:"));
    Serial.println(F("09:02 - 9:02am lay in bed, staring at ceiling. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on ceiling.
// DEBUG: 90
// DEBUG: ['9:02am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9:02am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:03 for 2 quotations:
    case 543:
      option = random(0, 2);
      Serial.print(F("2 options for 09:03. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:03 - 9:03am lay in bed, staring at ceiling. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on ceiling.
// DEBUG: 90
// DEBUG: ['9:03am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "9:03am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:03 - This isn't a very good start to the new school year. I stared at her. What was she talking about? Why was she looking at her watch? I wasn't late. Okay, the school bell had rung as I was crossing the playground, but you always get five minutes to get to your classroom. \"It's three minutes past nine,\" Miss Beckworth announced. \"You're late.\" - Jacqueline Wilson, The Lottie Project "));
// DEBUG: (5, 5)
// DEBUG: Operating on This
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on isn't
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on a
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on very
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on good
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on start
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on to
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on the
// DEBUG: ['This', "isn't", 'a', 'very', 'good', 'start', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on new
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on school
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on year.
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on I
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on stared
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on at
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on her.
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on What
// DEBUG: ['the', 'new', 'school', 'year.', 'I', 'stared', 'at', 'her.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on was
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on she
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on talking
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on about?
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on Why
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on was
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on she
// DEBUG: ['What', 'was', 'she', 'talking', 'about?', 'Why', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on looking
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on at
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on her
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on watch?
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on I
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on wasn't
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on late.
// DEBUG: ['she', 'looking', 'at', 'her', 'watch?', 'I', "wasn't"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on Okay,
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on the
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on school
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on bell
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on had
// DEBUG: 168
// DEBUG: (163, 53)
// DEBUG: Operating on rung
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on as
// DEBUG: ['late.', 'Okay,', 'the', 'school', 'bell', 'had', 'rung']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on I
// DEBUG: 21
// DEBUG: (16, 65)
// DEBUG: Operating on was
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on crossing
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on the
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on playground,
// DEBUG: 200
// DEBUG: (195, 65)
// DEBUG: Operating on but
// DEBUG: ['as', 'I', 'was', 'crossing', 'the', 'playground,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on you
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on always
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on get
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on five
// DEBUG: 130
// DEBUG: (125, 77)
// DEBUG: Operating on minutes
// DEBUG: 180
// DEBUG: (175, 77)
// DEBUG: Operating on to
// DEBUG: 195
// DEBUG: (190, 77)
// DEBUG: Operating on get
// DEBUG: ['but', 'you', 'always', 'get', 'five', 'minutes', 'to']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on to
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on your
// DEBUG: 58
// DEBUG: (53, 89)
// DEBUG: Operating on classroom.
// DEBUG: 129
// DEBUG: (124, 89)
// DEBUG: Operating on \"It's
// DEBUG: 172
// DEBUG: (167, 89)
// DEBUG: Operating on TIMESTRING,\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['get', 'to', 'your', 'classroom.', '\\"It\'s']
// DEBUG: drawing cursor (5, 89)
// DEBUG: []
// DEBUG: drawing cursor (5, 101)
// DEBUG: (19, 113)
// DEBUG: Operating on Miss
// DEBUG: 53
// DEBUG: (48, 113)
// DEBUG: Operating on Beckworth
// DEBUG: 117
// DEBUG: (112, 113)
// DEBUG: Operating on announced.
// DEBUG: 188
// DEBUG: (183, 113)
// DEBUG: Operating on \"You're
// DEBUG: ['TIMESTRING,\\"', 'Miss', 'Beckworth', 'announced.']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on late.\"
// DEBUG: 69
// DEBUG: ['three minutes past nine']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- The Lottie Project']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "This isn't a very good start to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the new school year. I stared at her.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "What was she talking about? Why was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "she looking at her watch? I wasn't", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "late. Okay, the school bell had rung", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "as I was crossing the playground,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "but you always get five minutes to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "get to your classroom. \"It's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "TIMESTRING,\" Miss Beckworth announced.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "three minutes past nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Lottie Project", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:04 for 2 quotations:
    case 544:
      option = random(0, 2);
      Serial.print(F("2 options for 09:04. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:04 - 9:04am lay in bed, staring at ceiling - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on ceiling
// DEBUG: 83
// DEBUG: ['9:04am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "9:04am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:04 - In the light of a narrow-beam lantern, Pierce checked his watch. It was 9.04. - Michael Crichton, The Great Train Robbery"));
// DEBUG: (5, 5)
// DEBUG: Operating on In
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on light
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on of
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on a
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on narrow-beam
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on lantern,
// DEBUG: ['In', 'the', 'light', 'of', 'a', 'narrow-beam']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on Pierce
// DEBUG: 62
// DEBUG: (57, 17)
// DEBUG: Operating on checked
// DEBUG: 112
// DEBUG: (107, 17)
// DEBUG: Operating on his
// DEBUG: 134
// DEBUG: (129, 17)
// DEBUG: Operating on watch.
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on It
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on was
// DEBUG: ['lantern,', 'Pierce', 'checked', 'his', 'watch.', 'It']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 121
// DEBUG: ['9.04']
// DEBUG: drawing cursor (9, 29)
// DEBUG: ['- The Great Train Robbery']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "In the light of a narrow-beam", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "lantern, Pierce checked his watch. It", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(9, 29, "9.04", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- The Great Train Robbery", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:05 for 4 quotations:
    case 545:
      option = random(0, 4);
      Serial.print(F("4 options for 09:05. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:05 - 9:05am lay in bed, staring at ceiling - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on ceiling
// DEBUG: 83
// DEBUG: ['9:05am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "9:05am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:05 - Kaldren pursues me like luminescent shadow. He has chalked up on the gateway '96,688,365,498,702'. Should confuse the mail man. Woke 9:05. To sleep 6:36. - JG Ballard, The Voices of Time "));
// DEBUG: (5, 5)
// DEBUG: Operating on Kaldren
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on pursues
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on me
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on like
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on luminescent
// DEBUG: ['Kaldren', 'pursues', 'me', 'like']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on shadow.
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on He
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on has
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on chalked
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on up
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on on
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on the
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on gateway
// DEBUG: ['luminescent', 'shadow.', 'He', 'has', 'chalked', 'up', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on '96,688,365,498,702'.
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on Should
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on confuse
// DEBUG: ['gateway', "'96,688,365,498,702'.", 'Should']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on mail
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on man.
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on Woke
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['confuse', 'the', 'mail', 'man.', 'Woke']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on To
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on sleep
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on 6:36.
// DEBUG: 109
// DEBUG: ['9:05']
// DEBUG: drawing cursor (122, 41)
// DEBUG: ['- The Voices of Time']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "Kaldren pursues me like", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "luminescent shadow. He has chalked up on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "gateway '96,688,365,498,702'. Should", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "confuse the mail man. Woke", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(122, 41, "9:05", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Voices of Time", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("09:05 - The tour of the office doesn't take that long. In fact, we're pretty much done by 9:05 a.m. … and even though it's just a room with a window and a pin board and two doors and two desks... I can't help feeling a buzz as I lead them around. It's mine. My space. My company. - Sophie Kinsella, Twenties Girl "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on tour
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on of
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on the
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on office
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on doesn't
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on take
// DEBUG: ['The', 'tour', 'of', 'the', 'office', "doesn't"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on that
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on long.
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on In
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on fact,
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on we're
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on pretty
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on much
// DEBUG: ['take', 'that', 'long.', 'In', 'fact,', "we're", 'pretty']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on done
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on by
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on …
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on and
// DEBUG: ['much', 'done', 'by', 'TIMESTRING', '…']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on even
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on though
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on it's
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on just
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on a
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on room
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on with
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on a
// DEBUG: ['and', 'even', 'though', "it's", 'just', 'a', 'room', 'with']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (7, 53)
// DEBUG: Operating on window
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on and
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on a
// DEBUG: 85
// DEBUG: (80, 53)
// DEBUG: Operating on pin
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on board
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on and
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on two
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on doors
// DEBUG: ['a', 'window', 'and', 'a', 'pin', 'board', 'and', 'two']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on two
// DEBUG: 60
// DEBUG: (55, 65)
// DEBUG: Operating on desks...
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on I
// DEBUG: 125
// DEBUG: (120, 65)
// DEBUG: Operating on can't
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on help
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on feeling
// DEBUG: ['doors', 'and', 'two', 'desks...', 'I', "can't", 'help']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on a
// DEBUG: 26
// DEBUG: (21, 77)
// DEBUG: Operating on buzz
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on as
// DEBUG: 70
// DEBUG: (65, 77)
// DEBUG: Operating on I
// DEBUG: 78
// DEBUG: (73, 77)
// DEBUG: Operating on lead
// DEBUG: 107
// DEBUG: (102, 77)
// DEBUG: Operating on them
// DEBUG: 136
// DEBUG: (131, 77)
// DEBUG: Operating on around.
// DEBUG: 186
// DEBUG: (181, 77)
// DEBUG: Operating on It's
// DEBUG: ['feeling', 'a', 'buzz', 'as', 'I', 'lead', 'them', 'around.']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on mine.
// DEBUG: 51
// DEBUG: (46, 89)
// DEBUG: Operating on My
// DEBUG: 66
// DEBUG: (61, 89)
// DEBUG: Operating on space.
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on My
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on company.
// DEBUG: 181
// DEBUG: ['9:05 a.m.']
// DEBUG: drawing cursor (54, 29)
// DEBUG: ['- Twenties Girl']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "The tour of the office doesn't", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "take that long. In fact, we're pretty", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "much done by TIMESTRING …", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "and even though it's just a room with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "a window and a pin board and two", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "doors and two desks... I can't help", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "feeling a buzz as I lead them around.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(54, 29, "9:05 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Twenties Girl", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("09:05 - The tour of the office doesn't take that long. In fact, we're pretty much done by 9:05 a.m. Ed looks at everything twice and says it's all great, and gives me a list of contacts who might be helpful, then has to leave for his own office. - Sophie Kinsella, Twenties Girl"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on tour
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on of
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on the
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on office
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on doesn't
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on take
// DEBUG: ['The', 'tour', 'of', 'the', 'office', "doesn't"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on that
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on long.
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on In
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on fact,
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on we're
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on pretty
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on much
// DEBUG: ['take', 'that', 'long.', 'In', 'fact,', "we're", 'pretty']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on done
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on by
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on Ed
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on looks
// DEBUG: ['much', 'done', 'by', 'TIMESTRING', 'Ed']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 41)
// DEBUG: Operating on everything
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on twice
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on and
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on says
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on it's
// DEBUG: ['looks', 'at', 'everything', 'twice', 'and', 'says']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on all
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on great,
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on and
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on gives
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on me
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on a
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on list
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on of
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on contacts
// DEBUG: ["it's", 'all', 'great,', 'and', 'gives', 'me', 'a', 'list', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on who
// DEBUG: 41
// DEBUG: (36, 65)
// DEBUG: Operating on might
// DEBUG: 77
// DEBUG: (72, 65)
// DEBUG: Operating on be
// DEBUG: 92
// DEBUG: (87, 65)
// DEBUG: Operating on helpful,
// DEBUG: 149
// DEBUG: (144, 65)
// DEBUG: Operating on then
// DEBUG: 178
// DEBUG: (173, 65)
// DEBUG: Operating on has
// DEBUG: 200
// DEBUG: (195, 65)
// DEBUG: Operating on to
// DEBUG: ['contacts', 'who', 'might', 'be', 'helpful,', 'then', 'has']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on leave
// DEBUG: 49
// DEBUG: (44, 77)
// DEBUG: Operating on for
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on his
// DEBUG: 93
// DEBUG: (88, 77)
// DEBUG: Operating on own
// DEBUG: 115
// DEBUG: (110, 77)
// DEBUG: Operating on office.
// DEBUG: 165
// DEBUG: ['9:05 a.m.']
// DEBUG: drawing cursor (54, 29)
// DEBUG: ['- Twenties Girl']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "The tour of the office doesn't", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "take that long. In fact, we're pretty", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "much done by TIMESTRING Ed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "looks at everything twice and says", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "it's all great, and gives me a list of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "contacts who might be helpful, then has", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(54, 29, "9:05 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Twenties Girl", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:06 for 1 quotations:
    case 546:
      Serial.println(F("Only one option for 09:06:"));
    Serial.println(F("09:06 - 9:06am lay in bed, staring at ceiling - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on ceiling
// DEBUG: 83
// DEBUG: ['9:06am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9:06am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:07 for 2 quotations:
    case 547:
      option = random(0, 2);
      Serial.print(F("2 options for 09:07. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:07 - 9:07am lay in bed, staring at ceiling - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on ceiling
// DEBUG: 83
// DEBUG: ['9:07am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "9:07am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:07 - It was a sparkling morning, 9:07 by the clock when Mrs. Flett stepped aboard the Imperial Limited at the Tyndall station, certain that her life was ruined, but managing, through an effort of will, to hold herself erect and to affect an air of preoccupation and liveliness. - Carol Shields, The Stone Diaries"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on a
// DEBUG: 55
// DEBUG: (50, 5)
// DEBUG: Operating on sparkling
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on morning,
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'a', 'sparkling', 'morning,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on by
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on clock
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on when
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on Mrs.
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on Flett
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on stepped
// DEBUG: ['TIMESTRING', 'by', 'the', 'clock', 'when', 'Mrs.', 'Flett']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on aboard
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on Imperial
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on Limited
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on at
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on the
// DEBUG: ['stepped', 'aboard', 'the', 'Imperial', 'Limited', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on Tyndall
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on station,
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on certain
// DEBUG: 171
// DEBUG: (166, 41)
// DEBUG: Operating on that
// DEBUG: 200
// DEBUG: (195, 41)
// DEBUG: Operating on her
// DEBUG: ['the', 'Tyndall', 'station,', 'certain', 'that']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on life
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on was
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on ruined,
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on but
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on managing,
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on through
// DEBUG: ['her', 'life', 'was', 'ruined,', 'but', 'managing,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on an
// DEBUG: 33
// DEBUG: (28, 65)
// DEBUG: Operating on effort
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on of
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on will,
// DEBUG: 127
// DEBUG: (122, 65)
// DEBUG: Operating on to
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on hold
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on herself
// DEBUG: ['through', 'an', 'effort', 'of', 'will,', 'to', 'hold']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on erect
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on and
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on to
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on affect
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on an
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on air
// DEBUG: 171
// DEBUG: (166, 77)
// DEBUG: Operating on of
// DEBUG: 186
// DEBUG: (181, 77)
// DEBUG: Operating on preoccupation
// DEBUG: ['herself', 'erect', 'and', 'to', 'affect', 'an', 'air', 'of']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (19, 89)
// DEBUG: Operating on and
// DEBUG: 46
// DEBUG: (41, 89)
// DEBUG: Operating on liveliness.
// DEBUG: 124
// DEBUG: ['9:07']
// DEBUG: drawing cursor (171, 5)
// DEBUG: ['- The Stone Diaries']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "It was a sparkling morning,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING by the clock when Mrs. Flett", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "stepped aboard the Imperial Limited at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the Tyndall station, certain that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "her life was ruined, but managing,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "through an effort of will, to hold", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "herself erect and to affect an air of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(171, 5, "9:07", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- The Stone Diaries", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:08 for 1 quotations:
    case 548:
      Serial.println(F("Only one option for 09:08:"));
    Serial.println(F("09:08 - 9.08am rolled over onto left side. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on rolled
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on over
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on onto
// DEBUG: ['TIMESTRING', 'rolled', 'over']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on left
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on side.
// DEBUG: 80
// DEBUG: ['9.08am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING rolled over", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.08am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:09 for 1 quotations:
    case 549:
      Serial.println(F("Only one option for 09:09:"));
    Serial.println(F("09:09 - 9.09am lay in bed, staring at wall. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on wall.
// DEBUG: 69
// DEBUG: ['9.09am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.09am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:10 for 1 quotations:
    case 550:
      Serial.println(F("Only one option for 09:10:"));
    Serial.println(F("09:10 - 9.10am lay in bed, staring at wall. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on wall.
// DEBUG: 69
// DEBUG: ['9.10am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.10am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:11 for 1 quotations:
    case 551:
      Serial.println(F("Only one option for 09:11:"));
    Serial.println(F("09:11 - 9:11am lay in bed, staring at wall - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on wall
// DEBUG: 62
// DEBUG: ['9:11am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9:11am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:12 for 1 quotations:
    case 552:
      Serial.println(F("Only one option for 09:12:"));
    Serial.println(F("09:12 - 9.12am lay in bed, staring at wall. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on wall.
// DEBUG: 69
// DEBUG: ['9.12am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.12am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:13 for 2 quotations:
    case 553:
      option = random(0, 2);
      Serial.print(F("2 options for 09:13. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:13 - 9:13am lay in bed, staring at wall - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on wall
// DEBUG: 62
// DEBUG: ['9:13am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "9:13am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:13 - She tucked the phone in the crook of her neck and thumbed hurriedly through her pink messages. Dr. Provetto, at 9:13 A.M. - Lisas Scottoline, Mistaken Identity"));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on tucked
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on phone
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on in
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on crook
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on of
// DEBUG: ['She', 'tucked', 'the', 'phone', 'in', 'the', 'crook']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on her
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on neck
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on and
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on thumbed
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on hurriedly
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on through
// DEBUG: ['of', 'her', 'neck', 'and', 'thumbed', 'hurriedly']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on her
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on pink
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on messages.
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on Dr.
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on Provetto,
// DEBUG: ['through', 'her', 'pink', 'messages.', 'Dr.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on at
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 170
// DEBUG: ['9:13 A.M.']
// DEBUG: drawing cursor (30, 41)
// DEBUG: ['- Mistaken Identity']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "She tucked the phone in the crook", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "of her neck and thumbed hurriedly", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "through her pink messages. Dr.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(30, 41, "9:13 A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Mistaken Identity", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:14 for 1 quotations:
    case 554:
      Serial.println(F("Only one option for 09:14:"));
    Serial.println(F("09:14 - 9.14am lay in bed, staring at wall. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on lay
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'lay', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on wall.
// DEBUG: 69
// DEBUG: ['9.14am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING lay in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.14am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:15 for 4 quotations:
    case 555:
      option = random(0, 4);
      Serial.print(F("4 options for 09:15. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:15 - Great! Jones commented. \"I've never seen it do that before. That's all right. Okay.\" Jones pulled a handful of pencils from his back pocket. \"Now, I got the contact first at 0915 or so, and the bearing was about two-six-nine.\" - Tom Clancy, The Hunt for Red October "));
// DEBUG: (5, 5)
// DEBUG: Operating on Great!
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on Jones
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on commented.
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on \"I've
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on never
// DEBUG: ['Great!', 'Jones', 'commented.', '\\"I\'ve']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on seen
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on it
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on do
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on that
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on before.
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on That's
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on all
// DEBUG: ['never', 'seen', 'it', 'do', 'that', 'before.', "That's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on right.
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on Okay.\"
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on Jones
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on pulled
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on a
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on handful
// DEBUG: ['all', 'right.', 'Okay.\\"', 'Jones', 'pulled', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on pencils
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on from
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on his
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on back
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on pocket.
// DEBUG: ['handful', 'of', 'pencils', 'from', 'his', 'back']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on \"Now,
// DEBUG: 61
// DEBUG: (56, 53)
// DEBUG: Operating on I
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on got
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on the
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on contact
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on first
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on at
// DEBUG: ['pocket.', '\\"Now,', 'I', 'got', 'the', 'contact', 'first']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on 0TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on or
// DEBUG: 128
// DEBUG: (123, 65)
// DEBUG: Operating on so,
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on and
// DEBUG: 172
// DEBUG: (167, 65)
// DEBUG: Operating on the
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on bearing
// DEBUG: ['at', '0TIMESTRING', 'or', 'so,', 'and', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on was
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on about
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on two-six-nine.\"
// DEBUG: 182
// DEBUG: ['915']
// DEBUG: drawing cursor (8, 65)
// DEBUG: ['- The Hunt for Red October']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "Great! Jones commented. \"I've", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "never seen it do that before. That's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "all right. Okay.\" Jones pulled a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "handful of pencils from his back", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "pocket. \"Now, I got the contact first", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "at 0TIMESTRING or so, and the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(8, 65, "915", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- The Hunt for Red October", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:15 - 9:15am doubled over pillow, sat up to see out window - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on doubled
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on over
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on pillow,
// DEBUG: ['TIMESTRING', 'doubled', 'over']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on sat
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on up
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on to
// DEBUG: 70
// DEBUG: (65, 17)
// DEBUG: Operating on see
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on out
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on window
// DEBUG: 157
// DEBUG: ['9:15am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING doubled over", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "9:15am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("09:15 - 9.15 a.m. First morning class - Mark Haddon, The Curious Incident of the Dog in the Night-time "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on First
// DEBUG: 181
// DEBUG: (176, 5)
// DEBUG: Operating on morning
// DEBUG: ['TIMESTRING', 'First']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on class
// DEBUG: 54
// DEBUG: ['9.15 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING First", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "9.15 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("09:15 - Miss Pettigrew pushed open the door of the employment agency and went in as the clock struck a quarter past nine. - Winifred Watson, Miss Pettigrew Lives For a Day"));
// DEBUG: (5, 5)
// DEBUG: Operating on Miss
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on Pettigrew
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on pushed
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on open
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on the
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on door
// DEBUG: ['Miss', 'Pettigrew', 'pushed', 'open', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on of
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on employment
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on agency
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on and
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on went
// DEBUG: ['door', 'of', 'the', 'employment', 'agency', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on in
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on as
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on the
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on clock
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on struck
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on a
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['went', 'in', 'as', 'the', 'clock', 'struck', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 207
// DEBUG: ['quarter past nine']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Winifred Watson']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "Miss Pettigrew pushed open the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "door of the employment agency and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "went in as the clock struck a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "quarter past nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Winifred Watson", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:16 for 1 quotations:
    case 556:
      Serial.println(F("Only one option for 09:16:"));
    Serial.println(F("09:16 - 9.16am sat in bed, staring out window. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on sat
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'sat', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on out
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on window.
// DEBUG: 90
// DEBUG: ['9.16am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING sat in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.16am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:17 for 1 quotations:
    case 557:
      Serial.println(F("Only one option for 09:17:"));
    Serial.println(F("09:17 - 9.17am sat in bed, staring out window. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on sat
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'sat', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on out
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on window.
// DEBUG: 90
// DEBUG: ['9.17am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING sat in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.17am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:18 for 1 quotations:
    case 558:
      Serial.println(F("Only one option for 09:18:"));
    Serial.println(F("09:18 - 9.18am sat in bed, staring out window. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on sat
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'sat', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on out
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on window.
// DEBUG: 90
// DEBUG: ['9.18am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING sat in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.18am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:19 for 1 quotations:
    case 559:
      Serial.println(F("Only one option for 09:19:"));
    Serial.println(F("09:19 - 9.19am sat in bed, staring out window. - Steve Toltz, A Fraction of the Whole"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on sat
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on in
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on bed,
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on staring
// DEBUG: ['TIMESTRING', 'sat', 'in', 'bed,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on out
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on window.
// DEBUG: 90
// DEBUG: ['9.19am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- A Fraction of the Whole']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING sat in bed,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.19am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- A Fraction of the Whole", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:20 for 3 quotations:
    case 560:
      option = random(0, 3);
      Serial.print(F("3 options for 09:20. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:20 - I'll compromise by saying that I left home at eight and spent an hour travelling to a nine o'clock appointment. Twenty minutes later is nine-twenty. - Susanna Kaysen, Girl, Interrupted "));
// DEBUG: (5, 5)
// DEBUG: Operating on I'll
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on compromise
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on by
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on saying
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on that
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on I
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on left
// DEBUG: ["I'll", 'compromise', 'by', 'saying', 'that', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on home
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on at
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on eight
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on and
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on spent
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on an
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on hour
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on travelling
// DEBUG: ['left', 'home', 'at', 'eight', 'and', 'spent', 'an', 'hour']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on to
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on a
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on nine
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on o'clock
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on appointment.
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on Twenty
// DEBUG: ['travelling', 'to', 'a', 'nine', "o'clock", 'appointment.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on minutes
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on later
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on is
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Twenty', 'minutes', 'later', 'is']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['nine-twenty']
// DEBUG: drawing cursor (113, 41)
// DEBUG: ['- Girl, Interrupted']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "I'll compromise by saying that I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "left home at eight and spent an hour", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "travelling to a nine o'clock appointment.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Twenty minutes later is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(113, 41, "nine-twenty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Girl, Interrupted", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:20 - At twenty minutes past nine, the Duke of Dunstable, who had dined off a tray in his room, was still there, waiting for his coffee and liqueur. - P.G. Wodehouse, Uncle Fred in the Springtime "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on Duke
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on of
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on Dunstable,
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on who
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on had
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on dined
// DEBUG: ['TIMESTRING,', 'the', 'Duke', 'of', 'Dunstable,', 'who', 'had']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on off
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on a
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on tray
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on in
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on his
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on room,
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on was
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on still
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on there,
// DEBUG: ['dined', 'off', 'a', 'tray', 'in', 'his', 'room,', 'was', 'still']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on waiting
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on for
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on his
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on coffee
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on and
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on liqueur.
// DEBUG: ['there,', 'waiting', 'for', 'his', 'coffee', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['twenty minutes past nine']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- P.G. Wodehouse']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, the Duke of Dunstable, who had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "dined off a tray in his room, was still", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "there, waiting for his coffee and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "twenty minutes past nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- P.G. Wodehouse", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("09:20 - The following morning at 9.20 Mr Cribbage straightened his greasy old tie, combed his Hitler moustache and arranged the few strands of his hair across his bald patch. - Louis de Bernieres, Red Dog "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on following
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on morning
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on at
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'following', 'morning', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on Mr
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on Cribbage
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on straightened
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on his
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on greasy
// DEBUG: ['TIMESTRING', 'Mr', 'Cribbage', 'straightened', 'his']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on old
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on tie,
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on combed
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on his
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on Hitler
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on moustache
// DEBUG: ['greasy', 'old', 'tie,', 'combed', 'his', 'Hitler']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 41)
// DEBUG: Operating on arranged
// DEBUG: 99
// DEBUG: (94, 41)
// DEBUG: Operating on the
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on few
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on strands
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on of
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on his
// DEBUG: ['moustache', 'and', 'arranged', 'the', 'few', 'strands', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on hair
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on across
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on his
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on bald
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on patch.
// DEBUG: 180
// DEBUG: ['9.20']
// DEBUG: drawing cursor (156, 5)
// DEBUG: ['- Red Dog']
// DEBUG: drawing cursor (144, 192)
          paint.Paint_DrawString_EN(5, 5, "The following morning at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING Mr Cribbage straightened his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "greasy old tie, combed his Hitler", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "moustache and arranged the few strands of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(156, 5, "9.20", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(144, 192, "- Red Dog", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:21 for 1 quotations:
    case 561:
      Serial.println(F("Only one option for 09:21:"));
    Serial.println(F("09:21 - It was nine twenty-one. With one minute to go, there was no sign of Herbert's mother. - Dan Rhodes, This is Life"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on With
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on one
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on minute
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on to
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on go,
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on there
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on was
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on no
// DEBUG: ['TIMESTRING.', 'With', 'one', 'minute', 'to', 'go,', 'there', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on sign
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on of
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on Herbert's
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on mother.
// DEBUG: 171
// DEBUG: ['nine twenty-one']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Dan Rhodes, This is Life']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. With one minute to go, there was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "nine twenty-one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Dan Rhodes, This is Life", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:22 for 1 quotations:
    case 562:
      Serial.println(F("Only one option for 09:22:"));
    Serial.println(F("09:22 - No more throwing stones at him, and I'll see you back here exactly one week from now. She looked at her watch. 'At nine twenty-two next Wednesday.' - Dan Rhodes, This is Life"));
// DEBUG: (5, 5)
// DEBUG: Operating on No
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on more
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on throwing
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on stones
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on at
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on him,
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on and
// DEBUG: ['No', 'more', 'throwing', 'stones', 'at', 'him,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on I'll
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on see
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on you
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on back
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on here
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on exactly
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on one
// DEBUG: ['and', "I'll", 'see', 'you', 'back', 'here', 'exactly']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on week
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on from
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on now.
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on She
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on looked
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on at
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on her
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on watch.
// DEBUG: ['one', 'week', 'from', 'now.', 'She', 'looked', 'at', 'her']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on 'At
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['watch.', "'At"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on next
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on Wednesday.'
// DEBUG: 128
// DEBUG: ['nine twenty-two']
// DEBUG: drawing cursor (34, 41)
// DEBUG: ['- Dan Rhodes, This is Life']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "No more throwing stones at him,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "and I'll see you back here exactly", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "one week from now. She looked at her", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "watch. 'At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(34, 41, "nine twenty-two", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Dan Rhodes, This is Life", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:23 for 1 quotations:
    case 563:
      Serial.println(F("Only one option for 09:23:"));
    Serial.println(F("09:23 - 9.23. What possessed me to buy this comb? - James Joyce, Ulysses"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on What
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on possessed
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on me
// DEBUG: ['TIMESTRING.', 'What', 'possessed']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on to
// DEBUG: 28
// DEBUG: (23, 17)
// DEBUG: Operating on buy
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on this
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on comb?
// DEBUG: 115
// DEBUG: ['9.23']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- James Joyce, Ulysses']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING. What possessed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.23", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- James Joyce, Ulysses", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:24 for 1 quotations:
    case 564:
      Serial.println(F("Only one option for 09:24:"));
    Serial.println(F("09:24 - 9.24 I'm swelled after that cabbage. A speck of dust on the patent leather of her boot. - James Joyce, Ulysses"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on I'm
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on swelled
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on after
// DEBUG: ['TIMESTRING', "I'm", 'swelled']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on cabbage.
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on A
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on speck
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on of
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on dust
// DEBUG: 190
// DEBUG: (185, 17)
// DEBUG: Operating on on
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on the
// DEBUG: ['after', 'that', 'cabbage.', 'A', 'speck', 'of', 'dust', 'on']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on patent
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on leather
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on of
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on her
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on boot.
// DEBUG: 180
// DEBUG: ['9.24']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- James Joyce, Ulysses']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING I'm swelled", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "after that cabbage. A speck of dust on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9.24", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- James Joyce, Ulysses", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:25 for 1 quotations:
    case 565:
      Serial.println(F("Only one option for 09:25:"));
    Serial.println(F("09:25 - A man I would cross the street to avoid at nine o'clock - by nine twenty-five I wanted to fuck him until he wept. My legs trembled with it. My voice floated out of my mouth when I opened it to speak. The glass wall of the meeting room was huge and suddenly too transparent. - Anne Enright, The Forgotten Waltz "));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on man
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on I
// DEBUG: 48
// DEBUG: (43, 5)
// DEBUG: Operating on would
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on cross
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on the
// DEBUG: 142
// DEBUG: (137, 5)
// DEBUG: Operating on street
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on to
// DEBUG: 200
// DEBUG: (195, 5)
// DEBUG: Operating on avoid
// DEBUG: ['A', 'man', 'I', 'would', 'cross', 'the', 'street', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on nine
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on o'clock
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on -
// DEBUG: 118
// DEBUG: (113, 17)
// DEBUG: Operating on by
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['avoid', 'at', 'nine', "o'clock", '-', 'by']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on I
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on wanted
// DEBUG: ['TIMESTRING', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on fuck
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on him
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on until
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on he
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on wept.
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on My
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on legs
// DEBUG: ['wanted', 'to', 'fuck', 'him', 'until', 'he', 'wept.', 'My']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on trembled
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on with
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on it.
// DEBUG: 123
// DEBUG: (118, 53)
// DEBUG: Operating on My
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on voice
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on floated
// DEBUG: ['legs', 'trembled', 'with', 'it.', 'My', 'voice']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on out
// DEBUG: 40
// DEBUG: (35, 65)
// DEBUG: Operating on of
// DEBUG: 55
// DEBUG: (50, 65)
// DEBUG: Operating on my
// DEBUG: 70
// DEBUG: (65, 65)
// DEBUG: Operating on mouth
// DEBUG: 106
// DEBUG: (101, 65)
// DEBUG: Operating on when
// DEBUG: 135
// DEBUG: (130, 65)
// DEBUG: Operating on I
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on opened
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on it
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on to
// DEBUG: ['floated', 'out', 'of', 'my', 'mouth', 'when', 'I', 'opened', 'it']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on speak.
// DEBUG: 56
// DEBUG: (51, 77)
// DEBUG: Operating on The
// DEBUG: 78
// DEBUG: (73, 77)
// DEBUG: Operating on glass
// DEBUG: 114
// DEBUG: (109, 77)
// DEBUG: Operating on wall
// DEBUG: 143
// DEBUG: (138, 77)
// DEBUG: Operating on of
// DEBUG: 158
// DEBUG: (153, 77)
// DEBUG: Operating on the
// DEBUG: 180
// DEBUG: (175, 77)
// DEBUG: Operating on meeting
// DEBUG: ['to', 'speak.', 'The', 'glass', 'wall', 'of', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on room
// DEBUG: 47
// DEBUG: (42, 89)
// DEBUG: Operating on was
// DEBUG: 69
// DEBUG: (64, 89)
// DEBUG: Operating on huge
// DEBUG: 98
// DEBUG: (93, 89)
// DEBUG: Operating on and
// DEBUG: 120
// DEBUG: (115, 89)
// DEBUG: Operating on suddenly
// DEBUG: 177
// DEBUG: (172, 89)
// DEBUG: Operating on too
// DEBUG: 199
// DEBUG: (194, 89)
// DEBUG: Operating on transparent.
// DEBUG: ['meeting', 'room', 'was', 'huge', 'and', 'suddenly', 'too']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['nine twenty-five']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- The Forgotten Waltz']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "A man I would cross the street to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "avoid at nine o'clock - by", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "wanted to fuck him until he wept. My", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "legs trembled with it. My voice", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "floated out of my mouth when I opened it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "to speak. The glass wall of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "meeting room was huge and suddenly too", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "nine twenty-five", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- The Forgotten Waltz", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:26 for 0 quotations:
    case 566:
      Serial.println(F("No quotes for 09:26"));
      return;

    // Codegen for 09:27 for 1 quotations:
    case 567:
      Serial.println(F("Only one option for 09:27:"));
    Serial.println(F("09:27 - From twenty minutes past nine until twenty-seven minutes past nine, from twenty-five minutes past eleven until twenty-eight minutes past eleven, from ten minutes to three until two minutes to three the heroes of the school met in a large familiarity whose Olympian laughter awed the fearful small boy that flitted uneasily past and chilled the slouching senior that rashly paused to examine the notices in assertion of an unearned right. - Compton Mackenzie, Sinister Street"));
// DEBUG: (5, 5)
// DEBUG: Operating on From
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on twenty
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on minutes
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on past
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on nine
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on until
// DEBUG: ['From', 'twenty', 'minutes', 'past', 'nine']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['until']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on from
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on twenty-five
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on minutes
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on past
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on eleven
// DEBUG: ['TIMESTRING,', 'from', 'twenty-five', 'minutes', 'past']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on until
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on twenty-eight
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on minutes
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on past
// DEBUG: ['eleven', 'until', 'twenty-eight', 'minutes']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on eleven,
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on from
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on ten
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on minutes
// DEBUG: 166
// DEBUG: (161, 65)
// DEBUG: Operating on to
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on three
// DEBUG: ['past', 'eleven,', 'from', 'ten', 'minutes', 'to']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on until
// DEBUG: 52
// DEBUG: (47, 77)
// DEBUG: Operating on two
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on minutes
// DEBUG: 124
// DEBUG: (119, 77)
// DEBUG: Operating on to
// DEBUG: 139
// DEBUG: (134, 77)
// DEBUG: Operating on three
// DEBUG: 175
// DEBUG: (170, 77)
// DEBUG: Operating on the
// DEBUG: 197
// DEBUG: (192, 77)
// DEBUG: Operating on heroes
// DEBUG: ['three', 'until', 'two', 'minutes', 'to', 'three', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 89)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 89)
// DEBUG: Operating on school
// DEBUG: 97
// DEBUG: (92, 89)
// DEBUG: Operating on met
// DEBUG: 119
// DEBUG: (114, 89)
// DEBUG: Operating on in
// DEBUG: 134
// DEBUG: (129, 89)
// DEBUG: Operating on a
// DEBUG: 142
// DEBUG: (137, 89)
// DEBUG: Operating on large
// DEBUG: 178
// DEBUG: (173, 89)
// DEBUG: Operating on familiarity
// DEBUG: ['heroes', 'of', 'the', 'school', 'met', 'in', 'a', 'large']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on whose
// DEBUG: 58
// DEBUG: (53, 101)
// DEBUG: Operating on Olympian
// DEBUG: 115
// DEBUG: (110, 101)
// DEBUG: Operating on laughter
// DEBUG: 172
// DEBUG: (167, 101)
// DEBUG: Operating on awed
// DEBUG: 201
// DEBUG: (196, 101)
// DEBUG: Operating on the
// DEBUG: ['familiarity', 'whose', 'Olympian', 'laughter', 'awed']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on fearful
// DEBUG: 64
// DEBUG: (59, 113)
// DEBUG: Operating on small
// DEBUG: 100
// DEBUG: (95, 113)
// DEBUG: Operating on boy
// DEBUG: 122
// DEBUG: (117, 113)
// DEBUG: Operating on that
// DEBUG: 151
// DEBUG: (146, 113)
// DEBUG: Operating on flitted
// DEBUG: 201
// DEBUG: (196, 113)
// DEBUG: Operating on uneasily
// DEBUG: ['the', 'fearful', 'small', 'boy', 'that', 'flitted']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on past
// DEBUG: 48
// DEBUG: (43, 125)
// DEBUG: Operating on and
// DEBUG: 70
// DEBUG: (65, 125)
// DEBUG: Operating on chilled
// DEBUG: 120
// DEBUG: (115, 125)
// DEBUG: Operating on the
// DEBUG: 142
// DEBUG: (137, 125)
// DEBUG: Operating on slouching
// DEBUG: 206
// DEBUG: (201, 125)
// DEBUG: Operating on senior
// DEBUG: ['uneasily', 'past', 'and', 'chilled', 'the', 'slouching']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (12, 137)
// DEBUG: Operating on that
// DEBUG: 46
// DEBUG: (41, 137)
// DEBUG: Operating on rashly
// DEBUG: 89
// DEBUG: (84, 137)
// DEBUG: Operating on paused
// DEBUG: 132
// DEBUG: (127, 137)
// DEBUG: Operating on to
// DEBUG: 147
// DEBUG: (142, 137)
// DEBUG: Operating on examine
// DEBUG: 197
// DEBUG: (192, 137)
// DEBUG: Operating on the
// DEBUG: ['senior', 'that', 'rashly', 'paused', 'to', 'examine']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on notices
// DEBUG: 64
// DEBUG: (59, 149)
// DEBUG: Operating on in
// DEBUG: 79
// DEBUG: (74, 149)
// DEBUG: Operating on assertion
// DEBUG: 143
// DEBUG: (138, 149)
// DEBUG: Operating on of
// DEBUG: 158
// DEBUG: (153, 149)
// DEBUG: Operating on an
// DEBUG: 173
// DEBUG: (168, 149)
// DEBUG: Operating on unearned
// DEBUG: ['the', 'notices', 'in', 'assertion', 'of', 'an']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (14, 161)
// DEBUG: Operating on right.
// DEBUG: 62
// DEBUG: ['twenty-seven minutes past nine']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Sinister Street']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "From twenty minutes past nine", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "until", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING, from twenty-five minutes past", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "eleven until twenty-eight minutes", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "past eleven, from ten minutes to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "three until two minutes to three the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "heroes of the school met in a large", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "familiarity whose Olympian laughter awed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "the fearful small boy that flitted", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "uneasily past and chilled the slouching", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "senior that rashly paused to examine", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 149, "the notices in assertion of an", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "twenty-seven minutes past nine", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Sinister Street", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:28 for 1 quotations:
    case 568:
      Serial.println(F("Only one option for 09:28:"));
    Serial.println(F("09:28 - This clock right? he asked the butler in the hall. \"Yes, sir.\" The clock showed twenty-eight minutes past nine. \"The clocks here have to be right, sir,\" the butler added with pride and a respectful humour, on the stairs. - Arnold Bennett, Lord Raingo"));
// DEBUG: (5, 5)
// DEBUG: Operating on This
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on clock
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on right?
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on he
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on asked
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on the
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on butler
// DEBUG: ['This', 'clock', 'right?', 'he', 'asked', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on hall.
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on \"Yes,
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on sir.\"
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on The
// DEBUG: 198
// DEBUG: (193, 17)
// DEBUG: Operating on clock
// DEBUG: ['butler', 'in', 'the', 'hall.', '\\"Yes,', 'sir.\\"', 'The']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on showed
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['clock', 'showed']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on \"The
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on clocks
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on here
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on have
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on to
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on be
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on right,
// DEBUG: ['TIMESTRING.', '\\"The', 'clocks', 'here', 'have', 'to', 'be']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on sir,\"
// DEBUG: 60
// DEBUG: (55, 65)
// DEBUG: Operating on the
// DEBUG: 82
// DEBUG: (77, 65)
// DEBUG: Operating on butler
// DEBUG: 125
// DEBUG: (120, 65)
// DEBUG: Operating on added
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on with
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on pride
// DEBUG: ['right,', 'sir,\\"', 'the', 'butler', 'added', 'with']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 77)
// DEBUG: Operating on a
// DEBUG: 46
// DEBUG: (41, 77)
// DEBUG: Operating on respectful
// DEBUG: 117
// DEBUG: (112, 77)
// DEBUG: Operating on humour,
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on on
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on the
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on stairs.
// DEBUG: ['pride', 'and', 'a', 'respectful', 'humour,', 'on', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['twenty-eight minutes past nine']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Arnold Bennett, Lord Raingo']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "This clock right? he asked the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "butler in the hall. \"Yes, sir.\" The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "clock showed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING. \"The clocks here have to be", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "right, sir,\" the butler added with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "pride and a respectful humour, on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "twenty-eight minutes past nine", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Arnold Bennett, Lord Raingo", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:29 for 0 quotations:
    case 569:
      Serial.println(F("No quotes for 09:29"));
      return;

    // Codegen for 09:30 for 4 quotations:
    case 570:
      option = random(0, 4);
      Serial.print(F("4 options for 09:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:30 - he looked at his watch; it was half-past nine - Ambrose Bierce, A watcher by the dead "));
// DEBUG: (5, 5)
// DEBUG: Operating on he
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on looked
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on at
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on his
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on watch;
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on it
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on was
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['he', 'looked', 'at', 'his', 'watch;', 'it', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 179
// DEBUG: ['half-past nine']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- A watcher by the dead']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "he looked at his watch; it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "half-past nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- A watcher by the dead", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:30 - It was nine-thirty. In another ten minutes she would turn off the heat; then it would take a while for the water to cool. In the meantime there was nothing to do but wait. “Have you thought it through April?” Never undertake to do a thing until you’ve –“ But she needed no more advice and no more instruction. She was calm and quiet now with knowing what she had always known, what neither her parents not Aunt Claire not Frank nor anyone else had ever had to teach her: that if you wanted to do something absolutely honest, something true, it always turned out to be a thing that had to be done alone. - Richard Yates, Revolutionary Road "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on In
// DEBUG: ['It', 'was', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on another
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on ten
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on minutes
// DEBUG: 135
// DEBUG: (130, 17)
// DEBUG: Operating on she
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on would
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on turn
// DEBUG: ['In', 'another', 'ten', 'minutes', 'she', 'would']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on off
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on the
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on heat;
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on then
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on it
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on would
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on take
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on a
// DEBUG: ['turn', 'off', 'the', 'heat;', 'then', 'it', 'would', 'take']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (7, 41)
// DEBUG: Operating on while
// DEBUG: 48
// DEBUG: (43, 41)
// DEBUG: Operating on for
// DEBUG: 70
// DEBUG: (65, 41)
// DEBUG: Operating on the
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on water
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on to
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on cool.
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on In
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on the
// DEBUG: ['a', 'while', 'for', 'the', 'water', 'to', 'cool.', 'In']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on meantime
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on there
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on was
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on nothing
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on to
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on do
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on but
// DEBUG: ['the', 'meantime', 'there', 'was', 'nothing', 'to', 'do']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on wait.
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on “Have
// DEBUG: 86
// DEBUG: (81, 65)
// DEBUG: Operating on you
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on thought
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on it
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on through
// DEBUG: ['but', 'wait.', '“Have', 'you', 'thought', 'it']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on April?”
// DEBUG: 68
// DEBUG: (63, 77)
// DEBUG: Operating on Never
// DEBUG: 104
// DEBUG: (99, 77)
// DEBUG: Operating on undertake
// DEBUG: 168
// DEBUG: (163, 77)
// DEBUG: Operating on to
// DEBUG: 183
// DEBUG: (178, 77)
// DEBUG: Operating on do
// DEBUG: 198
// DEBUG: (193, 77)
// DEBUG: Operating on a
// DEBUG: 206
// DEBUG: (201, 77)
// DEBUG: Operating on thing
// DEBUG: ['through', 'April?”', 'Never', 'undertake', 'to', 'do', 'a']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on until
// DEBUG: 52
// DEBUG: (47, 89)
// DEBUG: Operating on you’ve
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on –“
// DEBUG: 110
// DEBUG: (105, 89)
// DEBUG: Operating on But
// DEBUG: 132
// DEBUG: (127, 89)
// DEBUG: Operating on she
// DEBUG: 154
// DEBUG: (149, 89)
// DEBUG: Operating on needed
// DEBUG: 197
// DEBUG: (192, 89)
// DEBUG: Operating on no
// DEBUG: ['thing', 'until', 'you’ve', '–“', 'But', 'she', 'needed']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on more
// DEBUG: 42
// DEBUG: (37, 101)
// DEBUG: Operating on advice
// DEBUG: 85
// DEBUG: (80, 101)
// DEBUG: Operating on and
// DEBUG: 107
// DEBUG: (102, 101)
// DEBUG: Operating on no
// DEBUG: 122
// DEBUG: (117, 101)
// DEBUG: Operating on more
// DEBUG: 151
// DEBUG: (146, 101)
// DEBUG: Operating on instruction.
// DEBUG: ['no', 'more', 'advice', 'and', 'no', 'more']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (18, 113)
// DEBUG: Operating on She
// DEBUG: 45
// DEBUG: (40, 113)
// DEBUG: Operating on was
// DEBUG: 67
// DEBUG: (62, 113)
// DEBUG: Operating on calm
// DEBUG: 96
// DEBUG: (91, 113)
// DEBUG: Operating on and
// DEBUG: 118
// DEBUG: (113, 113)
// DEBUG: Operating on quiet
// DEBUG: 154
// DEBUG: (149, 113)
// DEBUG: Operating on now
// DEBUG: 176
// DEBUG: (171, 113)
// DEBUG: Operating on with
// DEBUG: 205
// DEBUG: (200, 113)
// DEBUG: Operating on knowing
// DEBUG: ['instruction.', 'She', 'was', 'calm', 'and', 'quiet', 'now', 'with']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (13, 125)
// DEBUG: Operating on what
// DEBUG: 47
// DEBUG: (42, 125)
// DEBUG: Operating on she
// DEBUG: 69
// DEBUG: (64, 125)
// DEBUG: Operating on had
// DEBUG: 91
// DEBUG: (86, 125)
// DEBUG: Operating on always
// DEBUG: 134
// DEBUG: (129, 125)
// DEBUG: Operating on known,
// DEBUG: 177
// DEBUG: (172, 125)
// DEBUG: Operating on what
// DEBUG: 206
// DEBUG: (201, 125)
// DEBUG: Operating on neither
// DEBUG: ['knowing', 'what', 'she', 'had', 'always', 'known,', 'what']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (13, 137)
// DEBUG: Operating on her
// DEBUG: 40
// DEBUG: (35, 137)
// DEBUG: Operating on parents
// DEBUG: 90
// DEBUG: (85, 137)
// DEBUG: Operating on not
// DEBUG: 112
// DEBUG: (107, 137)
// DEBUG: Operating on Aunt
// DEBUG: 141
// DEBUG: (136, 137)
// DEBUG: Operating on Claire
// DEBUG: 184
// DEBUG: (179, 137)
// DEBUG: Operating on not
// DEBUG: 206
// DEBUG: (201, 137)
// DEBUG: Operating on Frank
// DEBUG: ['neither', 'her', 'parents', 'not', 'Aunt', 'Claire', 'not']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (11, 149)
// DEBUG: Operating on nor
// DEBUG: 38
// DEBUG: (33, 149)
// DEBUG: Operating on anyone
// DEBUG: 81
// DEBUG: (76, 149)
// DEBUG: Operating on else
// DEBUG: 110
// DEBUG: (105, 149)
// DEBUG: Operating on had
// DEBUG: 132
// DEBUG: (127, 149)
// DEBUG: Operating on ever
// DEBUG: 161
// DEBUG: (156, 149)
// DEBUG: Operating on had
// DEBUG: 183
// DEBUG: (178, 149)
// DEBUG: Operating on to
// DEBUG: 198
// DEBUG: (193, 149)
// DEBUG: Operating on teach
// DEBUG: ['Frank', 'nor', 'anyone', 'else', 'had', 'ever', 'had', 'to']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (11, 161)
// DEBUG: Operating on her:
// DEBUG: 45
// DEBUG: (40, 161)
// DEBUG: Operating on that
// DEBUG: 74
// DEBUG: (69, 161)
// DEBUG: Operating on if
// DEBUG: 89
// DEBUG: (84, 161)
// DEBUG: Operating on you
// DEBUG: 111
// DEBUG: (106, 161)
// DEBUG: Operating on wanted
// DEBUG: 154
// DEBUG: (149, 161)
// DEBUG: Operating on to
// DEBUG: 169
// DEBUG: (164, 161)
// DEBUG: Operating on do
// DEBUG: 184
// DEBUG: (179, 161)
// DEBUG: Operating on something
// DEBUG: ['teach', 'her:', 'that', 'if', 'you', 'wanted', 'to', 'do']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (15, 173)
// DEBUG: Operating on absolutely
// DEBUG: 91
// DEBUG: (86, 173)
// DEBUG: Operating on honest,
// DEBUG: 141
// DEBUG: (136, 173)
// DEBUG: Operating on something
// DEBUG: 205
// DEBUG: (200, 173)
// DEBUG: Operating on true,
// DEBUG: ['something', 'absolutely', 'honest,', 'something']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (11, 185)
// DEBUG: Operating on it
// DEBUG: 31
// DEBUG: (26, 185)
// DEBUG: Operating on always
// DEBUG: 74
// DEBUG: (69, 185)
// DEBUG: Operating on turned
// DEBUG: 117
// DEBUG: (112, 185)
// DEBUG: Operating on out
// DEBUG: 139
// DEBUG: (134, 185)
// DEBUG: Operating on to
// DEBUG: 154
// DEBUG: (149, 185)
// DEBUG: Operating on be
// DEBUG: 169
// DEBUG: (164, 185)
// DEBUG: Operating on a
// DEBUG: 177
// DEBUG: (172, 185)
// DEBUG: Operating on thing
// DEBUG: ['true,', 'it', 'always', 'turned', 'out', 'to', 'be', 'a']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (11, 197)
// DEBUG: Operating on that
// DEBUG: 45
// DEBUG: (40, 197)
// DEBUG: Operating on had
// DEBUG: 67
// DEBUG: (62, 197)
// DEBUG: Operating on to
// DEBUG: 82
// DEBUG: (77, 197)
// DEBUG: Operating on be
// DEBUG: 97
// DEBUG: (92, 197)
// DEBUG: Operating on done
// DEBUG: 126
// DEBUG: (121, 197)
// DEBUG: Operating on alone.
// DEBUG: 169
// DEBUG: ['nine-thirty']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- Revolutionary Road']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "In another ten minutes she would", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "turn off the heat; then it would take", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "a while for the water to cool. In", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "the meantime there was nothing to do", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "but wait. “Have you thought it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "through April?” Never undertake to do a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "thing until you’ve –“ But she needed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "no more advice and no more", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "instruction. She was calm and quiet now with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "knowing what she had always known, what", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "neither her parents not Aunt Claire not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "Frank nor anyone else had ever had to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "teach her: that if you wanted to do", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "something absolutely honest, something", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "true, it always turned out to be a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 5, "nine-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Revolutionary Road", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("09:30 - The body came in at nine-thirty this morning. One of Holding's men went to the house and collected it. There was nothing particularly unusual about the death. The man had had a fear of hospitals and had died at home, being cared for more than adequately by his devoted wife. - Jackie Kay, Trumpet"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on body
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on came
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on in
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on at
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'body', 'came', 'in', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on this
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on morning.
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on One
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on of
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on Holding's
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on men
// DEBUG: ['TIMESTRING', 'this', 'morning.', 'One', 'of', "Holding's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on went
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on to
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on the
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on house
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on and
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on collected
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on it.
// DEBUG: ['men', 'went', 'to', 'the', 'house', 'and', 'collected']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on There
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on was
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on nothing
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on particularly
// DEBUG: 207
// DEBUG: (202, 41)
// DEBUG: Operating on unusual
// DEBUG: ['it.', 'There', 'was', 'nothing', 'particularly']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on about
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on the
// DEBUG: 76
// DEBUG: (71, 53)
// DEBUG: Operating on death.
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on The
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on man
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on had
// DEBUG: 185
// DEBUG: (180, 53)
// DEBUG: Operating on had
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on a
// DEBUG: ['unusual', 'about', 'the', 'death.', 'The', 'man', 'had', 'had']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (7, 65)
// DEBUG: Operating on fear
// DEBUG: 41
// DEBUG: (36, 65)
// DEBUG: Operating on of
// DEBUG: 56
// DEBUG: (51, 65)
// DEBUG: Operating on hospitals
// DEBUG: 120
// DEBUG: (115, 65)
// DEBUG: Operating on and
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on had
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on died
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on at
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on home,
// DEBUG: ['a', 'fear', 'of', 'hospitals', 'and', 'had', 'died', 'at']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on being
// DEBUG: 52
// DEBUG: (47, 77)
// DEBUG: Operating on cared
// DEBUG: 88
// DEBUG: (83, 77)
// DEBUG: Operating on for
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on more
// DEBUG: 139
// DEBUG: (134, 77)
// DEBUG: Operating on than
// DEBUG: 168
// DEBUG: (163, 77)
// DEBUG: Operating on adequately
// DEBUG: ['home,', 'being', 'cared', 'for', 'more', 'than']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on by
// DEBUG: 36
// DEBUG: (31, 89)
// DEBUG: Operating on his
// DEBUG: 58
// DEBUG: (53, 89)
// DEBUG: Operating on devoted
// DEBUG: 108
// DEBUG: (103, 89)
// DEBUG: Operating on wife.
// DEBUG: 144
// DEBUG: ['nine-thirty']
// DEBUG: drawing cursor (115, 5)
// DEBUG: ['- Jackie Kay, Trumpet']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "The body came in at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING this morning. One of Holding's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "men went to the house and collected", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "it. There was nothing particularly", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "unusual about the death. The man had had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "a fear of hospitals and had died at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "home, being cared for more than", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(115, 5, "nine-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Jackie Kay, Trumpet", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("09:30 - Up the welcomingly warm morning hill we trudge, side by each, bound finally for the Hall of Fame. It's 9.30, and time is in fact a-wastin'. - Richard Ford, Independence Day "));
// DEBUG: (5, 5)
// DEBUG: Operating on Up
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on welcomingly
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on warm
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on morning
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on hill
// DEBUG: ['Up', 'the', 'welcomingly', 'warm', 'morning']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on we
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on trudge,
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on side
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on by
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on each,
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on bound
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on finally
// DEBUG: ['hill', 'we', 'trudge,', 'side', 'by', 'each,', 'bound']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on for
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on the
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on Hall
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on of
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on Fame.
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on It's
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['finally', 'for', 'the', 'Hall', 'of', 'Fame.', "It's"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on time
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on is
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on in
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on fact
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on a-wastin'.
// DEBUG: 203
// DEBUG: ['9.30']
// DEBUG: drawing cursor (166, 29)
// DEBUG: ['- Independence Day']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "Up the welcomingly warm morning", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "hill we trudge, side by each, bound", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "finally for the Hall of Fame. It's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(166, 29, "9.30", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- Independence Day", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:31 for 0 quotations:
    case 571:
      Serial.println(F("No quotes for 09:31"));
      return;

    // Codegen for 09:32 for 2 quotations:
    case 572:
      option = random(0, 2);
      Serial.print(F("2 options for 09:32. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:32 - He said he couldn't say for certain of course, but that he rather thought he was. Anyhow, if he wasn't the 11.5 for Kingston, he said he was pretty confident he was the 9.32 for Virginia Water, or the 10 a.m. express for the Isle of Wight, or somewhere in that direction, and we should all know when we got there. - Jerome K Jerome, Three Men in a Boat"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on said
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on he
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on couldn't
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on say
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on for
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on certain
// DEBUG: ['He', 'said', 'he', "couldn't", 'say', 'for']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on course,
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on but
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on that
// DEBUG: 134
// DEBUG: (129, 17)
// DEBUG: Operating on he
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on rather
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on thought
// DEBUG: ['certain', 'of', 'course,', 'but', 'that', 'he', 'rather']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on he
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on was.
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on Anyhow,
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on if
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on he
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on wasn't
// DEBUG: 185
// DEBUG: (180, 29)
// DEBUG: Operating on the
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on 11.5
// DEBUG: ['thought', 'he', 'was.', 'Anyhow,', 'if', 'he', "wasn't", 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on for
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on Kingston,
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on he
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on said
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on he
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on was
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on pretty
// DEBUG: ['11.5', 'for', 'Kingston,', 'he', 'said', 'he', 'was']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on confident
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on he
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on was
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['pretty', 'confident', 'he', 'was', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on for
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on Virginia
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on Water,
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on or
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on the
// DEBUG: 180
// DEBUG: (175, 65)
// DEBUG: Operating on 10
// DEBUG: 195
// DEBUG: (190, 65)
// DEBUG: Operating on a.m.
// DEBUG: ['TIMESTRING', 'for', 'Virginia', 'Water,', 'or', 'the', '10']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on express
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on for
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on Isle
// DEBUG: 138
// DEBUG: (133, 77)
// DEBUG: Operating on of
// DEBUG: 153
// DEBUG: (148, 77)
// DEBUG: Operating on Wight,
// DEBUG: 196
// DEBUG: (191, 77)
// DEBUG: Operating on or
// DEBUG: 211
// DEBUG: (206, 77)
// DEBUG: Operating on somewhere
// DEBUG: ['a.m.', 'express', 'for', 'the', 'Isle', 'of', 'Wight,', 'or']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on in
// DEBUG: 35
// DEBUG: (30, 89)
// DEBUG: Operating on that
// DEBUG: 64
// DEBUG: (59, 89)
// DEBUG: Operating on direction,
// DEBUG: 135
// DEBUG: (130, 89)
// DEBUG: Operating on and
// DEBUG: 157
// DEBUG: (152, 89)
// DEBUG: Operating on we
// DEBUG: 172
// DEBUG: (167, 89)
// DEBUG: Operating on should
// DEBUG: ['somewhere', 'in', 'that', 'direction,', 'and', 'we']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on all
// DEBUG: 39
// DEBUG: (34, 101)
// DEBUG: Operating on know
// DEBUG: 68
// DEBUG: (63, 101)
// DEBUG: Operating on when
// DEBUG: 97
// DEBUG: (92, 101)
// DEBUG: Operating on we
// DEBUG: 112
// DEBUG: (107, 101)
// DEBUG: Operating on got
// DEBUG: 134
// DEBUG: (129, 101)
// DEBUG: Operating on there.
// DEBUG: 177
// DEBUG: ['9.32']
// DEBUG: drawing cursor (135, 53)
// DEBUG: ['- Three Men in a Boat']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "He said he couldn't say for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "certain of course, but that he rather", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "thought he was. Anyhow, if he wasn't the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "11.5 for Kingston, he said he was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "pretty confident he was the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING for Virginia Water, or the 10", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "a.m. express for the Isle of Wight, or", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "somewhere in that direction, and we", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(135, 53, "9.32", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Three Men in a Boat", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:32 - Sandy barely made the nine-thirty-two and found a seat in no-smoking. She'd been looking forward to this visit with Lisbeth. They hadn't seen each other in months, not since January, when Sandy had returned from Jamaica. And on that day Sandy was sporting a full-blown herpes virus on her lower lip. - Judy Blume, Wifey "));
// DEBUG: (5, 5)
// DEBUG: Operating on Sandy
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on barely
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on made
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Sandy', 'barely', 'made', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on and
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on found
// DEBUG: ['TIMESTRING', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on a
// DEBUG: 24
// DEBUG: (19, 29)
// DEBUG: Operating on seat
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on in
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on no-smoking.
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on She'd
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on been
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on looking
// DEBUG: ['found', 'a', 'seat', 'in', 'no-smoking.', "She'd", 'been']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on forward
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on to
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on this
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on visit
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on with
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on Lisbeth.
// DEBUG: ['looking', 'forward', 'to', 'this', 'visit', 'with']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on They
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on hadn't
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on seen
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on each
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on other
// DEBUG: 185
// DEBUG: (180, 53)
// DEBUG: Operating on in
// DEBUG: 200
// DEBUG: (195, 53)
// DEBUG: Operating on months,
// DEBUG: ['Lisbeth.', 'They', "hadn't", 'seen', 'each', 'other', 'in']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on not
// DEBUG: 40
// DEBUG: (35, 65)
// DEBUG: Operating on since
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on January,
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on when
// DEBUG: 162
// DEBUG: (157, 65)
// DEBUG: Operating on Sandy
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on had
// DEBUG: ['months,', 'not', 'since', 'January,', 'when', 'Sandy']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on returned
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on from
// DEBUG: 100
// DEBUG: (95, 77)
// DEBUG: Operating on Jamaica.
// DEBUG: 157
// DEBUG: (152, 77)
// DEBUG: Operating on And
// DEBUG: 179
// DEBUG: (174, 77)
// DEBUG: Operating on on
// DEBUG: 194
// DEBUG: (189, 77)
// DEBUG: Operating on that
// DEBUG: ['had', 'returned', 'from', 'Jamaica.', 'And', 'on']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on day
// DEBUG: 37
// DEBUG: (32, 89)
// DEBUG: Operating on Sandy
// DEBUG: 73
// DEBUG: (68, 89)
// DEBUG: Operating on was
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on sporting
// DEBUG: 152
// DEBUG: (147, 89)
// DEBUG: Operating on a
// DEBUG: 160
// DEBUG: (155, 89)
// DEBUG: Operating on full-blown
// DEBUG: ['that', 'day', 'Sandy', 'was', 'sporting', 'a']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (16, 101)
// DEBUG: Operating on herpes
// DEBUG: 64
// DEBUG: (59, 101)
// DEBUG: Operating on virus
// DEBUG: 100
// DEBUG: (95, 101)
// DEBUG: Operating on on
// DEBUG: 115
// DEBUG: (110, 101)
// DEBUG: Operating on her
// DEBUG: 137
// DEBUG: (132, 101)
// DEBUG: Operating on lower
// DEBUG: 173
// DEBUG: (168, 101)
// DEBUG: Operating on lip.
// DEBUG: 202
// DEBUG: ['nine-thirty-two']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Judy Blume, Wifey ']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "Sandy barely made the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "found a seat in no-smoking. She'd been", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "looking forward to this visit with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Lisbeth. They hadn't seen each other in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "months, not since January, when Sandy", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "had returned from Jamaica. And on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "that day Sandy was sporting a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "nine-thirty-two", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Judy Blume, Wifey ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:33 for 1 quotations:
    case 573:
      Serial.println(F("Only one option for 09:33:"));
    Serial.println(F("09:33 - Next, he remembered that the morrow of Christmas would be the twenty-seventh day of the moon, and that consequently high water would be at twenty-one minutes past three, the half-ebb at a quarter past seven, low water at thirty-three minutes past nine, and half flood at thirty-nine minutes past twelve. - Victor Hugo, The Toilers of the Sea"));
// DEBUG: (5, 5)
// DEBUG: Operating on Next,
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on he
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on remembered
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on that
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on the
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on morrow
// DEBUG: ['Next,', 'he', 'remembered', 'that', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on Christmas
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on would
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on be
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on twenty-seventh
// DEBUG: ['morrow', 'of', 'Christmas', 'would', 'be', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (20, 29)
// DEBUG: Operating on day
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on of
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on the
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on moon,
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on and
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on that
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on consequently
// DEBUG: ['twenty-seventh', 'day', 'of', 'the', 'moon,', 'and', 'that']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (18, 41)
// DEBUG: Operating on high
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on water
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on would
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on be
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on twenty-one
// DEBUG: ['consequently', 'high', 'water', 'would', 'be', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on minutes
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on past
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on three,
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on the
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on half-ebb
// DEBUG: ['twenty-one', 'minutes', 'past', 'three,', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on at
// DEBUG: 34
// DEBUG: (29, 65)
// DEBUG: Operating on a
// DEBUG: 42
// DEBUG: (37, 65)
// DEBUG: Operating on quarter
// DEBUG: 92
// DEBUG: (87, 65)
// DEBUG: Operating on past
// DEBUG: 121
// DEBUG: (116, 65)
// DEBUG: Operating on seven,
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on low
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on water
// DEBUG: ['half-ebb', 'at', 'a', 'quarter', 'past', 'seven,', 'low']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['water', 'at']
// DEBUG: drawing cursor (5, 77)
// DEBUG: []
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 101)
// DEBUG: Operating on half
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on flood
// DEBUG: 109
// DEBUG: (104, 101)
// DEBUG: Operating on at
// DEBUG: 124
// DEBUG: (119, 101)
// DEBUG: Operating on thirty-nine
// DEBUG: 202
// DEBUG: (197, 101)
// DEBUG: Operating on minutes
// DEBUG: ['TIMESTRING,', 'and', 'half', 'flood', 'at', 'thirty-nine']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (13, 113)
// DEBUG: Operating on past
// DEBUG: 47
// DEBUG: (42, 113)
// DEBUG: Operating on twelve.
// DEBUG: 97
// DEBUG: ['thirty-three minutes past nine']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- The Toilers of the Sea']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "Next, he remembered that the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "morrow of Christmas would be the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "twenty-seventh day of the moon, and that", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "consequently high water would be at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "twenty-one minutes past three, the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "half-ebb at a quarter past seven, low", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "water at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "TIMESTRING, and half flood at thirty-nine", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "thirty-three minutes past nine", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Toilers of the Sea", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:34 for 0 quotations:
    case 574:
      Serial.println(F("No quotes for 09:34"));
      return;

    // Codegen for 09:35 for 1 quotations:
    case 575:
      Serial.println(F("Only one option for 09:35:"));
    Serial.println(F("09:35 - Nine-thirty-five. He really must be gone. The bird is no longer feeding but sitting at the apex of a curl of razor wire. - Aminatta Forna, The Memory of Love"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 201
// DEBUG: (196, 5)
// DEBUG: Operating on He
// DEBUG: ['TIMESTRING.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on really
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on must
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on be
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on gone.
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on The
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on bird
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on is
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on no
// DEBUG: ['He', 'really', 'must', 'be', 'gone.', 'The', 'bird', 'is']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on longer
// DEBUG: 56
// DEBUG: (51, 29)
// DEBUG: Operating on feeding
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on but
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on sitting
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on at
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on the
// DEBUG: ['no', 'longer', 'feeding', 'but', 'sitting', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on apex
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on of
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on a
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on curl
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on of
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on razor
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on wire.
// DEBUG: 182
// DEBUG: ['Nine-thirty-five']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Memory of Love']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "He really must be gone. The bird is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "no longer feeding but sitting at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "Nine-thirty-five", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- The Memory of Love", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:36 for 2 quotations:
    case 576:
      option = random(0, 2);
      Serial.print(F("2 options for 09:36. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:36 - I grab a pen and the pad of paper by the phone and start scribbling a list for the day. I have an image of myself moving smoothly from task to task, brush in one hand, duster in the other, bringing order to everything. Like Mary Poppins. 9:30-9:36 Make Geigers' bed 9:36-9:42 Take laundry out of machine and put in dryer 9:42-10:00 Clean bathrooms I get to the end and read it over with a fresh surge of optimism. At this rate I should be done easily by lunchtime. 9:36 Fuck. I cannot make this bed. Why won't this sheet lie flat? 9:42 And why do they make mattresses so heavy? - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on grab
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on a
// DEBUG: 55
// DEBUG: (50, 5)
// DEBUG: Operating on pen
// DEBUG: 77
// DEBUG: (72, 5)
// DEBUG: Operating on and
// DEBUG: 99
// DEBUG: (94, 5)
// DEBUG: Operating on the
// DEBUG: 121
// DEBUG: (116, 5)
// DEBUG: Operating on pad
// DEBUG: 143
// DEBUG: (138, 5)
// DEBUG: Operating on of
// DEBUG: 158
// DEBUG: (153, 5)
// DEBUG: Operating on paper
// DEBUG: 194
// DEBUG: (189, 5)
// DEBUG: Operating on by
// DEBUG: 209
// DEBUG: (204, 5)
// DEBUG: Operating on the
// DEBUG: ['I', 'grab', 'a', 'pen', 'and', 'the', 'pad', 'of', 'paper', 'by']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on phone
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on and
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on start
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on scribbling
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on a
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on list
// DEBUG: ['the', 'phone', 'and', 'start', 'scribbling', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on for
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on the
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on day.
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on I
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on have
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on an
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on image
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on of
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on myself
// DEBUG: ['list', 'for', 'the', 'day.', 'I', 'have', 'an', 'image', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on moving
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on smoothly
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on from
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on task
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on to
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on task,
// DEBUG: ['myself', 'moving', 'smoothly', 'from', 'task', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on brush
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on in
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on one
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on hand,
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on duster
// DEBUG: 168
// DEBUG: (163, 53)
// DEBUG: Operating on in
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on the
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on other,
// DEBUG: ['task,', 'brush', 'in', 'one', 'hand,', 'duster', 'in', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on bringing
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on order
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on to
// DEBUG: 125
// DEBUG: (120, 65)
// DEBUG: Operating on everything.
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on Like
// DEBUG: ['other,', 'bringing', 'order', 'to', 'everything.']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on Mary
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on Poppins.
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on 9:30-TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Like', 'Mary', 'Poppins.']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (21, 89)
// DEBUG: Operating on Make
// DEBUG: 55
// DEBUG: (50, 89)
// DEBUG: Operating on Geigers'
// DEBUG: 112
// DEBUG: (107, 89)
// DEBUG: Operating on bed
// DEBUG: 134
// DEBUG: (129, 89)
// DEBUG: Operating on TIMESTRING-9:42
// DEBUG: Wrorking on the timestring
// DEBUG: ['9:30-TIMESTRING', 'Make', "Geigers'", 'bed']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (21, 101)
// DEBUG: Operating on Take
// DEBUG: 55
// DEBUG: (50, 101)
// DEBUG: Operating on laundry
// DEBUG: 105
// DEBUG: (100, 101)
// DEBUG: Operating on out
// DEBUG: 127
// DEBUG: (122, 101)
// DEBUG: Operating on of
// DEBUG: 142
// DEBUG: (137, 101)
// DEBUG: Operating on machine
// DEBUG: 192
// DEBUG: (187, 101)
// DEBUG: Operating on and
// DEBUG: ['TIMESTRING-9:42', 'Take', 'laundry', 'out', 'of', 'machine']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on put
// DEBUG: 36
// DEBUG: (31, 113)
// DEBUG: Operating on in
// DEBUG: 51
// DEBUG: (46, 113)
// DEBUG: Operating on dryer
// DEBUG: 87
// DEBUG: (82, 113)
// DEBUG: Operating on 9:42-10:00
// DEBUG: 158
// DEBUG: (153, 113)
// DEBUG: Operating on Clean
// DEBUG: 194
// DEBUG: (189, 113)
// DEBUG: Operating on bathrooms
// DEBUG: ['and', 'put', 'in', 'dryer', '9:42-10:00', 'Clean']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (15, 125)
// DEBUG: Operating on I
// DEBUG: 28
// DEBUG: (23, 125)
// DEBUG: Operating on get
// DEBUG: 50
// DEBUG: (45, 125)
// DEBUG: Operating on to
// DEBUG: 65
// DEBUG: (60, 125)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 125)
// DEBUG: Operating on end
// DEBUG: 109
// DEBUG: (104, 125)
// DEBUG: Operating on and
// DEBUG: 131
// DEBUG: (126, 125)
// DEBUG: Operating on read
// DEBUG: 160
// DEBUG: (155, 125)
// DEBUG: Operating on it
// DEBUG: 175
// DEBUG: (170, 125)
// DEBUG: Operating on over
// DEBUG: 204
// DEBUG: (199, 125)
// DEBUG: Operating on with
// DEBUG: ['bathrooms', 'I', 'get', 'to', 'the', 'end', 'and', 'read', 'it', 'over']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (10, 137)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 137)
// DEBUG: Operating on fresh
// DEBUG: 59
// DEBUG: (54, 137)
// DEBUG: Operating on surge
// DEBUG: 95
// DEBUG: (90, 137)
// DEBUG: Operating on of
// DEBUG: 110
// DEBUG: (105, 137)
// DEBUG: Operating on optimism.
// DEBUG: 174
// DEBUG: (169, 137)
// DEBUG: Operating on At
// DEBUG: 189
// DEBUG: (184, 137)
// DEBUG: Operating on this
// DEBUG: ['with', 'a', 'fresh', 'surge', 'of', 'optimism.', 'At']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (10, 149)
// DEBUG: Operating on rate
// DEBUG: 44
// DEBUG: (39, 149)
// DEBUG: Operating on I
// DEBUG: 52
// DEBUG: (47, 149)
// DEBUG: Operating on should
// DEBUG: 95
// DEBUG: (90, 149)
// DEBUG: Operating on be
// DEBUG: 110
// DEBUG: (105, 149)
// DEBUG: Operating on done
// DEBUG: 139
// DEBUG: (134, 149)
// DEBUG: Operating on easily
// DEBUG: 182
// DEBUG: (177, 149)
// DEBUG: Operating on by
// DEBUG: 197
// DEBUG: (192, 149)
// DEBUG: Operating on lunchtime.
// DEBUG: ['this', 'rate', 'I', 'should', 'be', 'done', 'easily', 'by']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (16, 161)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 121
// DEBUG: (116, 161)
// DEBUG: Operating on Fuck.
// DEBUG: 157
// DEBUG: (152, 161)
// DEBUG: Operating on I
// DEBUG: 165
// DEBUG: (160, 161)
// DEBUG: Operating on cannot
// DEBUG: 208
// DEBUG: (203, 161)
// DEBUG: Operating on make
// DEBUG: ['lunchtime.', 'TIMESTRING', 'Fuck.', 'I', 'cannot']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (10, 173)
// DEBUG: Operating on this
// DEBUG: 44
// DEBUG: (39, 173)
// DEBUG: Operating on bed.
// DEBUG: 73
// DEBUG: (68, 173)
// DEBUG: Operating on Why
// DEBUG: 95
// DEBUG: (90, 173)
// DEBUG: Operating on won't
// DEBUG: 131
// DEBUG: (126, 173)
// DEBUG: Operating on this
// DEBUG: 160
// DEBUG: (155, 173)
// DEBUG: Operating on sheet
// DEBUG: 196
// DEBUG: (191, 173)
// DEBUG: Operating on lie
// DEBUG: ['make', 'this', 'bed.', 'Why', "won't", 'this', 'sheet']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (9, 185)
// DEBUG: Operating on flat?
// DEBUG: 50
// DEBUG: (45, 185)
// DEBUG: Operating on 9:42
// DEBUG: 79
// DEBUG: (74, 185)
// DEBUG: Operating on And
// DEBUG: 101
// DEBUG: (96, 185)
// DEBUG: Operating on why
// DEBUG: 123
// DEBUG: (118, 185)
// DEBUG: Operating on do
// DEBUG: 138
// DEBUG: (133, 185)
// DEBUG: Operating on they
// DEBUG: 167
// DEBUG: (162, 185)
// DEBUG: Operating on make
// DEBUG: 196
// DEBUG: (191, 185)
// DEBUG: Operating on mattresses
// DEBUG: ['lie', 'flat?', '9:42', 'And', 'why', 'do', 'they', 'make']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (16, 197)
// DEBUG: Operating on so
// DEBUG: 36
// DEBUG: (31, 197)
// DEBUG: Operating on heavy?
// DEBUG: 79
// DEBUG: ['9:36']
// DEBUG: drawing cursor (16, 161)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "I grab a pen and the pad of paper by", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the phone and start scribbling a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "list for the day. I have an image of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "myself moving smoothly from task to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "task, brush in one hand, duster in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "other, bringing order to everything.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "Like Mary Poppins.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "9:30-TIMESTRING Make Geigers' bed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "TIMESTRING-9:42 Take laundry out of machine", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "and put in dryer 9:42-10:00 Clean", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "bathrooms I get to the end and read it over", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "with a fresh surge of optimism. At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "this rate I should be done easily by", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "lunchtime. TIMESTRING Fuck. I cannot", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "make this bed. Why won't this sheet", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "lie flat? 9:42 And why do they make", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(16, 161, "9:36", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:36 - Monday February 6th. '9.36am. Oh god, Oh god. Maybe he's fallen in love in New York and stayed there'. - Helen Fielding, Bridget Jones Diary"));
// DEBUG: (5, 5)
// DEBUG: Operating on Monday
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on February
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on 6th.
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on 'TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Monday', 'February', '6th.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on Oh
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on god,
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on Oh
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on god.
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on Maybe
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on he's
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on fallen
// DEBUG: ["'TIMESTRING", 'Oh', 'god,', 'Oh', 'god.', 'Maybe', "he's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on love
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on in
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on New
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on York
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on and
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on stayed
// DEBUG: 192
// DEBUG: (187, 29)
// DEBUG: Operating on there'.
// DEBUG: ['fallen', 'in', 'love', 'in', 'New', 'York', 'and', 'stayed']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['9.36am.']
// DEBUG: drawing cursor (134, 5)
// DEBUG: ['- Bridget Jones Diary']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "Monday February 6th.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "'TIMESTRING Oh god, Oh god. Maybe he's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "fallen in love in New York and stayed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(134, 5, "9.36am.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Bridget Jones Diary", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:37 for 1 quotations:
    case 577:
      Serial.println(F("Only one option for 09:37:"));
    Serial.println(F("09:37 - It comprised all that was required of the servant, from eight in the morning, exactly at which hour Phileas Fogg rose, till half-past eleven, when he left the house for the Reform Club - all the details of service, the tea and toast at twenty-three minutes past eight, the shaving-water at thirty-seven minutes past nine, and the toilet at twenty minutes before ten. - Jules Verne, Around the World in 80 days"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on comprised
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on all
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on that
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on was
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on required
// DEBUG: ['It', 'comprised', 'all', 'that', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on of
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on the
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on servant,
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on from
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on eight
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on in
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on the
// DEBUG: ['required', 'of', 'the', 'servant,', 'from', 'eight', 'in']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on morning,
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on exactly
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on at
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on which
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on hour
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on Phileas
// DEBUG: ['the', 'morning,', 'exactly', 'at', 'which', 'hour']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on Fogg
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on rose,
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on till
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on half-past
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on eleven,
// DEBUG: ['Phileas', 'Fogg', 'rose,', 'till', 'half-past']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on when
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on he
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on left
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on the
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on house
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on for
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on the
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on Reform
// DEBUG: ['eleven,', 'when', 'he', 'left', 'the', 'house', 'for', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on Club
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on -
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on all
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on the
// DEBUG: 98
// DEBUG: (93, 65)
// DEBUG: Operating on details
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on of
// DEBUG: 163
// DEBUG: (158, 65)
// DEBUG: Operating on service,
// DEBUG: ['Reform', 'Club', '-', 'all', 'the', 'details', 'of']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 77)
// DEBUG: Operating on tea
// DEBUG: 63
// DEBUG: (58, 77)
// DEBUG: Operating on and
// DEBUG: 85
// DEBUG: (80, 77)
// DEBUG: Operating on toast
// DEBUG: 121
// DEBUG: (116, 77)
// DEBUG: Operating on at
// DEBUG: 136
// DEBUG: (131, 77)
// DEBUG: Operating on twenty-three
// DEBUG: ['service,', 'the', 'tea', 'and', 'toast', 'at']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (18, 89)
// DEBUG: Operating on minutes
// DEBUG: 73
// DEBUG: (68, 89)
// DEBUG: Operating on past
// DEBUG: 102
// DEBUG: (97, 89)
// DEBUG: Operating on eight,
// DEBUG: 145
// DEBUG: (140, 89)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 89)
// DEBUG: Operating on shaving-water
// DEBUG: ['twenty-three', 'minutes', 'past', 'eight,', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (19, 101)
// DEBUG: Operating on at
// DEBUG: 39
// DEBUG: (34, 101)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['shaving-water', 'at']
// DEBUG: drawing cursor (5, 101)
// DEBUG: []
// DEBUG: drawing cursor (5, 113)
// DEBUG: (17, 125)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 125)
// DEBUG: Operating on the
// DEBUG: 66
// DEBUG: (61, 125)
// DEBUG: Operating on toilet
// DEBUG: 109
// DEBUG: (104, 125)
// DEBUG: Operating on at
// DEBUG: 124
// DEBUG: (119, 125)
// DEBUG: Operating on twenty
// DEBUG: 167
// DEBUG: (162, 125)
// DEBUG: Operating on minutes
// DEBUG: ['TIMESTRING,', 'and', 'the', 'toilet', 'at', 'twenty']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (13, 137)
// DEBUG: Operating on before
// DEBUG: 61
// DEBUG: (56, 137)
// DEBUG: Operating on ten.
// DEBUG: 90
// DEBUG: ['thirty-seven minutes past nine']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ['- Around the World in 80 days']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "It comprised all that was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "required of the servant, from eight in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the morning, exactly at which hour", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Phileas Fogg rose, till half-past", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "eleven, when he left the house for the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "Reform Club - all the details of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "service, the tea and toast at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "twenty-three minutes past eight, the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "shaving-water at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "TIMESTRING, and the toilet at twenty", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "thirty-seven minutes past nine", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Around the World in 80 days", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:38 for 0 quotations:
    case 578:
      Serial.println(F("No quotes for 09:38"));
      return;

    // Codegen for 09:39 for 0 quotations:
    case 579:
      Serial.println(F("No quotes for 09:39"));
      return;

    // Codegen for 09:40 for 2 quotations:
    case 580:
      option = random(0, 2);
      Serial.print(F("2 options for 09:40. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:40 - It comprised all that was required of the servant, from eight in the morning, exactly at which hour Phileas Fogg rose, till half-past eleven, when he left the house for the Reform Club—all the details of service, the tea and toast at twenty-three minutes past eight, the shaving-water at thirty-seven minutes past nine, and the toilet at twenty minutes before ten. - Jules Verne, Around the World in 80 days"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on comprised
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on all
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on that
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on was
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on required
// DEBUG: ['It', 'comprised', 'all', 'that', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on of
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on the
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on servant,
// DEBUG: 113
// DEBUG: (108, 17)
// DEBUG: Operating on from
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on eight
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on in
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on the
// DEBUG: ['required', 'of', 'the', 'servant,', 'from', 'eight', 'in']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on morning,
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on exactly
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on at
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on which
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on hour
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on Phileas
// DEBUG: ['the', 'morning,', 'exactly', 'at', 'which', 'hour']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on Fogg
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on rose,
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on till
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on half-past
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on eleven,
// DEBUG: ['Phileas', 'Fogg', 'rose,', 'till', 'half-past']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on when
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on he
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on left
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on the
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on house
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on for
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on the
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on Reform
// DEBUG: ['eleven,', 'when', 'he', 'left', 'the', 'house', 'for', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on Club—all
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on the
// DEBUG: 96
// DEBUG: (91, 65)
// DEBUG: Operating on details
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on of
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on service,
// DEBUG: ['Reform', 'Club—all', 'the', 'details', 'of']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 77)
// DEBUG: Operating on tea
// DEBUG: 63
// DEBUG: (58, 77)
// DEBUG: Operating on and
// DEBUG: 85
// DEBUG: (80, 77)
// DEBUG: Operating on toast
// DEBUG: 121
// DEBUG: (116, 77)
// DEBUG: Operating on at
// DEBUG: 136
// DEBUG: (131, 77)
// DEBUG: Operating on twenty-three
// DEBUG: ['service,', 'the', 'tea', 'and', 'toast', 'at']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (18, 89)
// DEBUG: Operating on minutes
// DEBUG: 73
// DEBUG: (68, 89)
// DEBUG: Operating on past
// DEBUG: 102
// DEBUG: (97, 89)
// DEBUG: Operating on eight,
// DEBUG: 145
// DEBUG: (140, 89)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 89)
// DEBUG: Operating on shaving-water
// DEBUG: ['twenty-three', 'minutes', 'past', 'eight,', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (19, 101)
// DEBUG: Operating on at
// DEBUG: 39
// DEBUG: (34, 101)
// DEBUG: Operating on thirty-seven
// DEBUG: 124
// DEBUG: (119, 101)
// DEBUG: Operating on minutes
// DEBUG: 174
// DEBUG: (169, 101)
// DEBUG: Operating on past
// DEBUG: 203
// DEBUG: (198, 101)
// DEBUG: Operating on nine,
// DEBUG: ['shaving-water', 'at', 'thirty-seven', 'minutes', 'past']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 113)
// DEBUG: Operating on the
// DEBUG: 60
// DEBUG: (55, 113)
// DEBUG: Operating on toilet
// DEBUG: 103
// DEBUG: (98, 113)
// DEBUG: Operating on at
// DEBUG: 118
// DEBUG: (113, 113)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['nine,', 'and', 'the', 'toilet', 'at']
// DEBUG: drawing cursor (5, 113)
// DEBUG: []
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['twenty minutes before ten']
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['- Around the World in 80 days']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "It comprised all that was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "required of the servant, from eight in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the morning, exactly at which hour", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Phileas Fogg rose, till half-past", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "eleven, when he left the house for the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "Reform Club—all the details of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "service, the tea and toast at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "twenty-three minutes past eight, the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "shaving-water at thirty-seven minutes past", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "nine, and the toilet at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "twenty minutes before ten", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Around the World in 80 days", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:40 - Must have the phone disconnected. Some contractor keeps calling me up about payment for 50 bags of cement he claims I collected ten days ago. Says he helped me load them onto a truck himself. I did drive Whitby's pick-up into town but only to get some lead screening. What does he think I'd do with all that cement? Just the sort of irritating thing you don't expect to hang over your final exit. (Moral: don't try too hard to forget Eniwetok.) Woke 9:40. To sleep 4:15. - JG Ballard, The Voices of Time "));
// DEBUG: (5, 5)
// DEBUG: Operating on Must
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on have
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on phone
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on disconnected.
// DEBUG: ['Must', 'have', 'the', 'phone']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (19, 17)
// DEBUG: Operating on Some
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on contractor
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on keeps
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on calling
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on me
// DEBUG: ['disconnected.', 'Some', 'contractor', 'keeps', 'calling']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on up
// DEBUG: 28
// DEBUG: (23, 29)
// DEBUG: Operating on about
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on payment
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on for
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on 50
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on bags
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on of
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on cement
// DEBUG: ['me', 'up', 'about', 'payment', 'for', '50', 'bags', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on he
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on claims
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on I
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on collected
// DEBUG: 147
// DEBUG: (142, 41)
// DEBUG: Operating on ten
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on days
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on ago.
// DEBUG: ['cement', 'he', 'claims', 'I', 'collected', 'ten', 'days']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on Says
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on he
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on helped
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on me
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on load
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on them
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on onto
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on a
// DEBUG: ['ago.', 'Says', 'he', 'helped', 'me', 'load', 'them', 'onto']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (7, 65)
// DEBUG: Operating on truck
// DEBUG: 48
// DEBUG: (43, 65)
// DEBUG: Operating on himself.
// DEBUG: 105
// DEBUG: (100, 65)
// DEBUG: Operating on I
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on did
// DEBUG: 135
// DEBUG: (130, 65)
// DEBUG: Operating on drive
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on Whitby's
// DEBUG: ['a', 'truck', 'himself.', 'I', 'did', 'drive']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on pick-up
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on into
// DEBUG: 98
// DEBUG: (93, 77)
// DEBUG: Operating on town
// DEBUG: 127
// DEBUG: (122, 77)
// DEBUG: Operating on but
// DEBUG: 149
// DEBUG: (144, 77)
// DEBUG: Operating on only
// DEBUG: 178
// DEBUG: (173, 77)
// DEBUG: Operating on to
// DEBUG: 193
// DEBUG: (188, 77)
// DEBUG: Operating on get
// DEBUG: ["Whitby's", 'pick-up', 'into', 'town', 'but', 'only', 'to']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on some
// DEBUG: 43
// DEBUG: (38, 89)
// DEBUG: Operating on lead
// DEBUG: 72
// DEBUG: (67, 89)
// DEBUG: Operating on screening.
// DEBUG: 143
// DEBUG: (138, 89)
// DEBUG: Operating on What
// DEBUG: 172
// DEBUG: (167, 89)
// DEBUG: Operating on does
// DEBUG: 201
// DEBUG: (196, 89)
// DEBUG: Operating on he
// DEBUG: ['get', 'some', 'lead', 'screening.', 'What', 'does']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on think
// DEBUG: 49
// DEBUG: (44, 101)
// DEBUG: Operating on I'd
// DEBUG: 71
// DEBUG: (66, 101)
// DEBUG: Operating on do
// DEBUG: 86
// DEBUG: (81, 101)
// DEBUG: Operating on with
// DEBUG: 115
// DEBUG: (110, 101)
// DEBUG: Operating on all
// DEBUG: 137
// DEBUG: (132, 101)
// DEBUG: Operating on that
// DEBUG: 166
// DEBUG: (161, 101)
// DEBUG: Operating on cement?
// DEBUG: ['he', 'think', "I'd", 'do', 'with', 'all', 'that']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (13, 113)
// DEBUG: Operating on Just
// DEBUG: 47
// DEBUG: (42, 113)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 113)
// DEBUG: Operating on sort
// DEBUG: 98
// DEBUG: (93, 113)
// DEBUG: Operating on of
// DEBUG: 113
// DEBUG: (108, 113)
// DEBUG: Operating on irritating
// DEBUG: 184
// DEBUG: (179, 113)
// DEBUG: Operating on thing
// DEBUG: ['cement?', 'Just', 'the', 'sort', 'of', 'irritating']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (11, 125)
// DEBUG: Operating on you
// DEBUG: 38
// DEBUG: (33, 125)
// DEBUG: Operating on don't
// DEBUG: 74
// DEBUG: (69, 125)
// DEBUG: Operating on expect
// DEBUG: 117
// DEBUG: (112, 125)
// DEBUG: Operating on to
// DEBUG: 132
// DEBUG: (127, 125)
// DEBUG: Operating on hang
// DEBUG: 161
// DEBUG: (156, 125)
// DEBUG: Operating on over
// DEBUG: 190
// DEBUG: (185, 125)
// DEBUG: Operating on your
// DEBUG: ['thing', 'you', "don't", 'expect', 'to', 'hang', 'over']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (10, 137)
// DEBUG: Operating on final
// DEBUG: 51
// DEBUG: (46, 137)
// DEBUG: Operating on exit.
// DEBUG: 87
// DEBUG: (82, 137)
// DEBUG: Operating on (Moral:
// DEBUG: 137
// DEBUG: (132, 137)
// DEBUG: Operating on don't
// DEBUG: 173
// DEBUG: (168, 137)
// DEBUG: Operating on try
// DEBUG: 195
// DEBUG: (190, 137)
// DEBUG: Operating on too
// DEBUG: ['your', 'final', 'exit.', '(Moral:', "don't", 'try']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on hard
// DEBUG: 43
// DEBUG: (38, 149)
// DEBUG: Operating on to
// DEBUG: 58
// DEBUG: (53, 149)
// DEBUG: Operating on forget
// DEBUG: 101
// DEBUG: (96, 149)
// DEBUG: Operating on Eniwetok.)
// DEBUG: 172
// DEBUG: (167, 149)
// DEBUG: Operating on Woke
// DEBUG: 201
// DEBUG: (196, 149)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['too', 'hard', 'to', 'forget', 'Eniwetok.)', 'Woke']
// DEBUG: drawing cursor (5, 149)
// DEBUG: 116
// DEBUG: (111, 161)
// DEBUG: Operating on To
// DEBUG: 131
// DEBUG: (126, 161)
// DEBUG: Operating on sleep
// DEBUG: 167
// DEBUG: (162, 161)
// DEBUG: Operating on 4:15.
// DEBUG: 203
// DEBUG: ['9:40']
// DEBUG: drawing cursor (5, 161)
// DEBUG: ['- The Voices of Time']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "Must have the phone", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "disconnected. Some contractor keeps calling", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "me up about payment for 50 bags of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "cement he claims I collected ten days", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "ago. Says he helped me load them onto", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "a truck himself. I did drive", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "Whitby's pick-up into town but only to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "get some lead screening. What does", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "he think I'd do with all that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "cement? Just the sort of irritating", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "thing you don't expect to hang over", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "your final exit. (Moral: don't try", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "too hard to forget Eniwetok.) Woke", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "9:40", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Voices of Time", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:41 for 0 quotations:
    case 581:
      Serial.println(F("No quotes for 09:41"));
      return;

    // Codegen for 09:42 for 1 quotations:
    case 582:
      Serial.println(F("Only one option for 09:42:"));
    Serial.println(F("09:42 - I grab a pen and the pad of paper by the phone and start scribbling a list for the day. I have an image of myself moving smoothly from task to task, brush in one hand, duster in the other, bringing order to everything. Like Mary Poppins. 9:30-9:36 Make Geigers' bed 9:36-9:42 Take laundry out of machine and put in dryer 9:42-10:00 Clean bathrooms I get to the end and read it over with a fresh surge of optimism. At this rate I should be done easily by lunchtime. 9:36 Fuck. I cannot make this bed. Why won't this sheet lie flat? 9:42 And why do they make mattresses so heavy? - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on grab
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on a
// DEBUG: 55
// DEBUG: (50, 5)
// DEBUG: Operating on pen
// DEBUG: 77
// DEBUG: (72, 5)
// DEBUG: Operating on and
// DEBUG: 99
// DEBUG: (94, 5)
// DEBUG: Operating on the
// DEBUG: 121
// DEBUG: (116, 5)
// DEBUG: Operating on pad
// DEBUG: 143
// DEBUG: (138, 5)
// DEBUG: Operating on of
// DEBUG: 158
// DEBUG: (153, 5)
// DEBUG: Operating on paper
// DEBUG: 194
// DEBUG: (189, 5)
// DEBUG: Operating on by
// DEBUG: 209
// DEBUG: (204, 5)
// DEBUG: Operating on the
// DEBUG: ['I', 'grab', 'a', 'pen', 'and', 'the', 'pad', 'of', 'paper', 'by']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on phone
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on and
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on start
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on scribbling
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on a
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on list
// DEBUG: ['the', 'phone', 'and', 'start', 'scribbling', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on for
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on the
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on day.
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on I
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on have
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on an
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on image
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on of
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on myself
// DEBUG: ['list', 'for', 'the', 'day.', 'I', 'have', 'an', 'image', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on moving
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on smoothly
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on from
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on task
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on to
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on task,
// DEBUG: ['myself', 'moving', 'smoothly', 'from', 'task', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on brush
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on in
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on one
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on hand,
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on duster
// DEBUG: 168
// DEBUG: (163, 53)
// DEBUG: Operating on in
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on the
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on other,
// DEBUG: ['task,', 'brush', 'in', 'one', 'hand,', 'duster', 'in', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on bringing
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on order
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on to
// DEBUG: 125
// DEBUG: (120, 65)
// DEBUG: Operating on everything.
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on Like
// DEBUG: ['other,', 'bringing', 'order', 'to', 'everything.']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on Mary
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on Poppins.
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on 9:30-9:36
// DEBUG: 165
// DEBUG: (160, 77)
// DEBUG: Operating on Make
// DEBUG: 194
// DEBUG: (189, 77)
// DEBUG: Operating on Geigers'
// DEBUG: ['Like', 'Mary', 'Poppins.', '9:30-9:36', 'Make']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (14, 89)
// DEBUG: Operating on bed
// DEBUG: 41
// DEBUG: (36, 89)
// DEBUG: Operating on 9:36-TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 176
// DEBUG: (171, 89)
// DEBUG: Operating on Take
// DEBUG: 205
// DEBUG: (200, 89)
// DEBUG: Operating on laundry
// DEBUG: ["Geigers'", 'bed', '9:36-TIMESTRING', 'Take']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on out
// DEBUG: 40
// DEBUG: (35, 101)
// DEBUG: Operating on of
// DEBUG: 55
// DEBUG: (50, 101)
// DEBUG: Operating on machine
// DEBUG: 105
// DEBUG: (100, 101)
// DEBUG: Operating on and
// DEBUG: 127
// DEBUG: (122, 101)
// DEBUG: Operating on put
// DEBUG: 149
// DEBUG: (144, 101)
// DEBUG: Operating on in
// DEBUG: 164
// DEBUG: (159, 101)
// DEBUG: Operating on dryer
// DEBUG: 200
// DEBUG: (195, 101)
// DEBUG: Operating on TIMESTRING-10:00
// DEBUG: Wrorking on the timestring
// DEBUG: ['laundry', 'out', 'of', 'machine', 'and', 'put', 'in', 'dryer']
// DEBUG: drawing cursor (5, 101)
// DEBUG: 151
// DEBUG: (146, 113)
// DEBUG: Operating on Clean
// DEBUG: 187
// DEBUG: (182, 113)
// DEBUG: Operating on bathrooms
// DEBUG: ['TIMESTRING-10:00', 'Clean']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (15, 125)
// DEBUG: Operating on I
// DEBUG: 28
// DEBUG: (23, 125)
// DEBUG: Operating on get
// DEBUG: 50
// DEBUG: (45, 125)
// DEBUG: Operating on to
// DEBUG: 65
// DEBUG: (60, 125)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 125)
// DEBUG: Operating on end
// DEBUG: 109
// DEBUG: (104, 125)
// DEBUG: Operating on and
// DEBUG: 131
// DEBUG: (126, 125)
// DEBUG: Operating on read
// DEBUG: 160
// DEBUG: (155, 125)
// DEBUG: Operating on it
// DEBUG: 175
// DEBUG: (170, 125)
// DEBUG: Operating on over
// DEBUG: 204
// DEBUG: (199, 125)
// DEBUG: Operating on with
// DEBUG: ['bathrooms', 'I', 'get', 'to', 'the', 'end', 'and', 'read', 'it', 'over']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (10, 137)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 137)
// DEBUG: Operating on fresh
// DEBUG: 59
// DEBUG: (54, 137)
// DEBUG: Operating on surge
// DEBUG: 95
// DEBUG: (90, 137)
// DEBUG: Operating on of
// DEBUG: 110
// DEBUG: (105, 137)
// DEBUG: Operating on optimism.
// DEBUG: 174
// DEBUG: (169, 137)
// DEBUG: Operating on At
// DEBUG: 189
// DEBUG: (184, 137)
// DEBUG: Operating on this
// DEBUG: ['with', 'a', 'fresh', 'surge', 'of', 'optimism.', 'At']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (10, 149)
// DEBUG: Operating on rate
// DEBUG: 44
// DEBUG: (39, 149)
// DEBUG: Operating on I
// DEBUG: 52
// DEBUG: (47, 149)
// DEBUG: Operating on should
// DEBUG: 95
// DEBUG: (90, 149)
// DEBUG: Operating on be
// DEBUG: 110
// DEBUG: (105, 149)
// DEBUG: Operating on done
// DEBUG: 139
// DEBUG: (134, 149)
// DEBUG: Operating on easily
// DEBUG: 182
// DEBUG: (177, 149)
// DEBUG: Operating on by
// DEBUG: 197
// DEBUG: (192, 149)
// DEBUG: Operating on lunchtime.
// DEBUG: ['this', 'rate', 'I', 'should', 'be', 'done', 'easily', 'by']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (16, 161)
// DEBUG: Operating on 9:36
// DEBUG: 50
// DEBUG: (45, 161)
// DEBUG: Operating on Fuck.
// DEBUG: 86
// DEBUG: (81, 161)
// DEBUG: Operating on I
// DEBUG: 94
// DEBUG: (89, 161)
// DEBUG: Operating on cannot
// DEBUG: 137
// DEBUG: (132, 161)
// DEBUG: Operating on make
// DEBUG: 166
// DEBUG: (161, 161)
// DEBUG: Operating on this
// DEBUG: 195
// DEBUG: (190, 161)
// DEBUG: Operating on bed.
// DEBUG: ['lunchtime.', '9:36', 'Fuck.', 'I', 'cannot', 'make', 'this']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (10, 173)
// DEBUG: Operating on Why
// DEBUG: 37
// DEBUG: (32, 173)
// DEBUG: Operating on won't
// DEBUG: 73
// DEBUG: (68, 173)
// DEBUG: Operating on this
// DEBUG: 102
// DEBUG: (97, 173)
// DEBUG: Operating on sheet
// DEBUG: 138
// DEBUG: (133, 173)
// DEBUG: Operating on lie
// DEBUG: 160
// DEBUG: (155, 173)
// DEBUG: Operating on flat?
// DEBUG: 196
// DEBUG: (191, 173)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['bed.', 'Why', "won't", 'this', 'sheet', 'lie', 'flat?']
// DEBUG: drawing cursor (5, 173)
// DEBUG: 109
// DEBUG: (104, 185)
// DEBUG: Operating on And
// DEBUG: 131
// DEBUG: (126, 185)
// DEBUG: Operating on why
// DEBUG: 153
// DEBUG: (148, 185)
// DEBUG: Operating on do
// DEBUG: 168
// DEBUG: (163, 185)
// DEBUG: Operating on they
// DEBUG: 197
// DEBUG: (192, 185)
// DEBUG: Operating on make
// DEBUG: ['TIMESTRING', 'And', 'why', 'do', 'they']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (10, 197)
// DEBUG: Operating on mattresses
// DEBUG: 86
// DEBUG: (81, 197)
// DEBUG: Operating on so
// DEBUG: 101
// DEBUG: (96, 197)
// DEBUG: Operating on heavy?
// DEBUG: 144
// DEBUG: ['9:42']
// DEBUG: drawing cursor (5, 185)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "I grab a pen and the pad of paper by", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "the phone and start scribbling a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "list for the day. I have an image of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "myself moving smoothly from task to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "task, brush in one hand, duster in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "other, bringing order to everything.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Like Mary Poppins. 9:30-9:36 Make", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "Geigers' bed 9:36-TIMESTRING Take", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "laundry out of machine and put in dryer", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "TIMESTRING-10:00 Clean", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "bathrooms I get to the end and read it over", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "with a fresh surge of optimism. At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 149, "this rate I should be done easily by", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 161, "lunchtime. 9:36 Fuck. I cannot make this", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 173, "bed. Why won't this sheet lie flat?", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 185, "TIMESTRING And why do they", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 185, "9:42", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:43 for 0 quotations:
    case 583:
      Serial.println(F("No quotes for 09:43"));
      return;

    // Codegen for 09:44 for 0 quotations:
    case 584:
      Serial.println(F("No quotes for 09:44"));
      return;

    // Codegen for 09:45 for 1 quotations:
    case 585:
      Serial.println(F("Only one option for 09:45:"));
    Serial.println(F("09:45 - 9.15, 9.30, 9.45, 10! Bond felt the excitement ball up inside him like cat's fur. - Ian Fleming, On Her Majesty's Secret Service "));
// DEBUG: (5, 5)
// DEBUG: Operating on 9.15,
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on 9.30,
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on 10!
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on Bond
// DEBUG: ['9.15,', '9.30,', 'TIMESTRING,', '10!']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on felt
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on the
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on excitement
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on ball
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on up
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on inside
// DEBUG: ['Bond', 'felt', 'the', 'excitement', 'ball', 'up']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on him
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on like
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on cat's
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on fur.
// DEBUG: 133
// DEBUG: ['9.45']
// DEBUG: drawing cursor (77, 5)
// DEBUG: ['- Ian Fleming']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "9.15, 9.30, TIMESTRING, 10!", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Bond felt the excitement ball up", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(77, 5, "9.45", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Ian Fleming", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:46 for 0 quotations:
    case 586:
      Serial.println(F("No quotes for 09:46"));
      return;

    // Codegen for 09:47 for 1 quotations:
    case 587:
      Serial.println(F("Only one option for 09:47:"));
    Serial.println(F("09:47 - Monday February 6th. '9.47am. Or gone to Las Vegas and got married'. - Helen Fielding, Bridget Jones Diary"));
// DEBUG: (5, 5)
// DEBUG: Operating on Monday
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on February
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on 6th.
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on 'TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Monday', 'February', '6th.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on Or
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on gone
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on to
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on Las
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on Vegas
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on and
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on got
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on married'.
// DEBUG: ["'TIMESTRING", 'Or', 'gone', 'to', 'Las', 'Vegas', 'and', 'got']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['9.47am.']
// DEBUG: drawing cursor (134, 5)
// DEBUG: ['- Bridget Jones Diary']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "Monday February 6th.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "'TIMESTRING Or gone to Las Vegas and got", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(134, 5, "9.47am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- Bridget Jones Diary", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:48 for 0 quotations:
    case 588:
      Serial.println(F("No quotes for 09:48"));
      return;

    // Codegen for 09:49 for 0 quotations:
    case 589:
      Serial.println(F("No quotes for 09:49"));
      return;

    // Codegen for 09:50 for 2 quotations:
    case 590:
      option = random(0, 2);
      Serial.print(F("2 options for 09:50. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:50 - 9.50am. Hmmm. Think will go inspect make-up in case he does come in - Helen Fielding, Bridget Jones Diary"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 131
// DEBUG: (126, 5)
// DEBUG: Operating on Hmmm.
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on Think
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on will
// DEBUG: ['TIMESTRING', 'Hmmm.', 'Think']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on go
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on inspect
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on make-up
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on in
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on case
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on he
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on does
// DEBUG: ['will', 'go', 'inspect', 'make-up', 'in', 'case', 'he']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on come
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on in
// DEBUG: 59
// DEBUG: ['9.50am.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Bridget Jones Diary']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING Hmmm. Think", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "will go inspect make-up in case he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "9.50am.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Bridget Jones Diary", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:50 - Ten minutes to ten. I had just time to hide the bottle (after the nurse had left me) when you came into my room. - Wilkie Collins, The Law and the Lady "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on I
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on had
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on just
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on time
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on to
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on hide
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on the
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on bottle
// DEBUG: ['TIMESTRING', 'I', 'had', 'just', 'time', 'to', 'hide', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on (after
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on the
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on nurse
// DEBUG: 118
// DEBUG: (113, 29)
// DEBUG: Operating on had
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on left
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on me)
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on when
// DEBUG: ['bottle', '(after', 'the', 'nurse', 'had', 'left', 'me)']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on you
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on came
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on into
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on my
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on room.
// DEBUG: 146
// DEBUG: ['Ten minutes to ten.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Law and the Lady']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING I had just time to hide the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "bottle (after the nurse had left me)", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "Ten minutes to ten.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- The Law and the Lady", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:51 for 0 quotations:
    case 591:
      Serial.println(F("No quotes for 09:51"));
      return;

    // Codegen for 09:52 for 1 quotations:
    case 592:
      Serial.println(F("Only one option for 09:52:"));
    Serial.println(F("09:52 - She caught the 9:52 to Victoria. I kept well clear of her on the train and picked her up as she went through the barrier. Then she took a taxi to Hammersmith. - John le Carre, Call for the Dead"));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on caught
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on to
// DEBUG: ['She', 'caught', 'the', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on Victoria.
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on I
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on kept
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on well
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on clear
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on of
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on her
// DEBUG: ['to', 'Victoria.', 'I', 'kept', 'well', 'clear', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on on
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on the
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on train
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on and
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on picked
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on her
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on up
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on as
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on she
// DEBUG: ['her', 'on', 'the', 'train', 'and', 'picked', 'her', 'up', 'as']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on went
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on through
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on the
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on barrier.
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on Then
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on she
// DEBUG: ['she', 'went', 'through', 'the', 'barrier.', 'Then']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on took
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on a
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on taxi
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on to
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on Hammersmith.
// DEBUG: 180
// DEBUG: ['9:52']
// DEBUG: drawing cursor (92, 5)
// DEBUG: ['- Call for the Dead']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "She caught the TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "to Victoria. I kept well clear of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "her on the train and picked her up as", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "she went through the barrier. Then", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(92, 5, "9:52", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Call for the Dead", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:53 for 1 quotations:
    case 593:
      Serial.println(F("Only one option for 09:53:"));
    Serial.println(F("09:53 - Miss Pettigrew went to the bus-stop to await a bus. She could not afford the fare, but she could still less afford to lose a possible situation by being late. The bus deposited her about five minutes' walk from Onslow Mansions, an at seven minutes to ten precisely she was outside her destination. - Winifred Watson, Miss Pettigrew Lives for a Day "));
// DEBUG: (5, 5)
// DEBUG: Operating on Miss
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on Pettigrew
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on went
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on to
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on bus-stop
// DEBUG: ['Miss', 'Pettigrew', 'went', 'to', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on await
// DEBUG: 70
// DEBUG: (65, 17)
// DEBUG: Operating on a
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on bus.
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on She
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on could
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on not
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on afford
// DEBUG: ['bus-stop', 'to', 'await', 'a', 'bus.', 'She', 'could', 'not']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on fare,
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on but
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on she
// DEBUG: 119
// DEBUG: (114, 29)
// DEBUG: Operating on could
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on still
// DEBUG: 191
// DEBUG: (186, 29)
// DEBUG: Operating on less
// DEBUG: ['afford', 'the', 'fare,', 'but', 'she', 'could', 'still']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on afford
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on to
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on lose
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on a
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on possible
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on situation
// DEBUG: ['less', 'afford', 'to', 'lose', 'a', 'possible']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on by
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on being
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on late.
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on The
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on bus
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on deposited
// DEBUG: ['situation', 'by', 'being', 'late.', 'The', 'bus']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on her
// DEBUG: 42
// DEBUG: (37, 65)
// DEBUG: Operating on about
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on five
// DEBUG: 107
// DEBUG: (102, 65)
// DEBUG: Operating on minutes'
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on walk
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on from
// DEBUG: ['deposited', 'her', 'about', 'five', "minutes'", 'walk']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on Onslow
// DEBUG: 58
// DEBUG: (53, 77)
// DEBUG: Operating on Mansions,
// DEBUG: 122
// DEBUG: (117, 77)
// DEBUG: Operating on an
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on at
// DEBUG: 152
// DEBUG: (147, 77)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['from', 'Onslow', 'Mansions,', 'an', 'at']
// DEBUG: drawing cursor (5, 77)
// DEBUG: []
// DEBUG: drawing cursor (5, 89)
// DEBUG: (16, 101)
// DEBUG: Operating on precisely
// DEBUG: 85
// DEBUG: (80, 101)
// DEBUG: Operating on she
// DEBUG: 107
// DEBUG: (102, 101)
// DEBUG: Operating on was
// DEBUG: 129
// DEBUG: (124, 101)
// DEBUG: Operating on outside
// DEBUG: 179
// DEBUG: (174, 101)
// DEBUG: Operating on her
// DEBUG: 201
// DEBUG: (196, 101)
// DEBUG: Operating on destination.
// DEBUG: ['TIMESTRING', 'precisely', 'she', 'was', 'outside', 'her']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['seven minutes to ten']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- Winifred Watson']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "Miss Pettigrew went to the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "bus-stop to await a bus. She could not", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "afford the fare, but she could still", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "less afford to lose a possible", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "situation by being late. The bus", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "deposited her about five minutes' walk", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "from Onslow Mansions, an at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "TIMESTRING precisely she was outside her", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "seven minutes to ten", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Winifred Watson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:54 for 1 quotations:
    case 594:
      Serial.println(F("Only one option for 09:54:"));
    Serial.println(F("09:54 - 9:54 This is sheer torture. My arms have never ached so much in my entire life. The blankets weigh a ton, and the sheets won't go straight and I have no idea how to do the wretched corners. How do chambermaids do it? - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on This
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on is
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on sheer
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on torture.
// DEBUG: ['TIMESTRING', 'This', 'is', 'sheer']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on My
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on arms
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on have
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on never
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on ached
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on so
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on much
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on in
// DEBUG: ['torture.', 'My', 'arms', 'have', 'never', 'ached', 'so', 'much']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on my
// DEBUG: 28
// DEBUG: (23, 29)
// DEBUG: Operating on entire
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on life.
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on The
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on blankets
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on weigh
// DEBUG: ['in', 'my', 'entire', 'life.', 'The', 'blankets']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on a
// DEBUG: 24
// DEBUG: (19, 41)
// DEBUG: Operating on ton,
// DEBUG: 53
// DEBUG: (48, 41)
// DEBUG: Operating on and
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on sheets
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on won't
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on go
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on straight
// DEBUG: ['weigh', 'a', 'ton,', 'and', 'the', 'sheets', "won't", 'go']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on and
// DEBUG: 41
// DEBUG: (36, 53)
// DEBUG: Operating on I
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on have
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on no
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on idea
// DEBUG: 122
// DEBUG: (117, 53)
// DEBUG: Operating on how
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on to
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on do
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on the
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on wretched
// DEBUG: ['straight', 'and', 'I', 'have', 'no', 'idea', 'how', 'to', 'do', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on corners.
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on How
// DEBUG: 98
// DEBUG: (93, 65)
// DEBUG: Operating on do
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on chambermaids
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on do
// DEBUG: ['wretched', 'corners.', 'How', 'do', 'chambermaids']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on it?
// DEBUG: 35
// DEBUG: ['9:54']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING This is sheer", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "torture. My arms have never ached so much", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "in my entire life. The blankets", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "weigh a ton, and the sheets won't go", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "straight and I have no idea how to do the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "wretched corners. How do chambermaids", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "9:54", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:55 for 2 quotations:
    case 595:
      option = random(0, 2);
      Serial.print(F("2 options for 09:55. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("09:55 - At five to ten I'm ready in the hall. Nathaniel's mother's house is nearby but apparently tricky to find, so the plan is to meet here and he'll walk me over. I check my reflection in the hall mirror and wince. The streak of bleach in my hair is as obvious as ever. Am I really going out in public like this? - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on I'm
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on ready
// DEBUG: ['At', 'TIMESTRING', "I'm"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on hall.
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on Nathaniel's
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on mother's
// DEBUG: ['ready', 'in', 'the', 'hall.', "Nathaniel's"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on house
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on is
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on nearby
// DEBUG: 113
// DEBUG: (108, 29)
// DEBUG: Operating on but
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on apparently
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on tricky
// DEBUG: ["mother's", 'house', 'is', 'nearby', 'but', 'apparently']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on find,
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on so
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 41)
// DEBUG: Operating on plan
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on is
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on to
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on meet
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on here
// DEBUG: ['tricky', 'to', 'find,', 'so', 'the', 'plan', 'is', 'to', 'meet']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on he'll
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on walk
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on me
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on over.
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on I
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on check
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on my
// DEBUG: ['here', 'and', "he'll", 'walk', 'me', 'over.', 'I', 'check']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on reflection
// DEBUG: 84
// DEBUG: (79, 65)
// DEBUG: Operating on in
// DEBUG: 99
// DEBUG: (94, 65)
// DEBUG: Operating on the
// DEBUG: 121
// DEBUG: (116, 65)
// DEBUG: Operating on hall
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on mirror
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on and
// DEBUG: ['my', 'reflection', 'in', 'the', 'hall', 'mirror']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on wince.
// DEBUG: 57
// DEBUG: (52, 77)
// DEBUG: Operating on The
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on streak
// DEBUG: 122
// DEBUG: (117, 77)
// DEBUG: Operating on of
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on bleach
// DEBUG: 180
// DEBUG: (175, 77)
// DEBUG: Operating on in
// DEBUG: 195
// DEBUG: (190, 77)
// DEBUG: Operating on my
// DEBUG: 210
// DEBUG: (205, 77)
// DEBUG: Operating on hair
// DEBUG: ['and', 'wince.', 'The', 'streak', 'of', 'bleach', 'in', 'my']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on is
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on as
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on obvious
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on as
// DEBUG: 110
// DEBUG: (105, 89)
// DEBUG: Operating on ever.
// DEBUG: 146
// DEBUG: (141, 89)
// DEBUG: Operating on Am
// DEBUG: 161
// DEBUG: (156, 89)
// DEBUG: Operating on I
// DEBUG: 169
// DEBUG: (164, 89)
// DEBUG: Operating on really
// DEBUG: ['hair', 'is', 'as', 'obvious', 'as', 'ever.', 'Am', 'I']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on going
// DEBUG: 53
// DEBUG: (48, 101)
// DEBUG: Operating on out
// DEBUG: 75
// DEBUG: (70, 101)
// DEBUG: Operating on in
// DEBUG: 90
// DEBUG: (85, 101)
// DEBUG: Operating on public
// DEBUG: 133
// DEBUG: (128, 101)
// DEBUG: Operating on like
// DEBUG: 162
// DEBUG: (157, 101)
// DEBUG: Operating on this?
// DEBUG: 198
// DEBUG: ['five to ten']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING I'm", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "ready in the hall. Nathaniel's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "mother's house is nearby but apparently", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "tricky to find, so the plan is to meet", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "here and he'll walk me over. I check", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "my reflection in the hall mirror", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "and wince. The streak of bleach in my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "hair is as obvious as ever. Am I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "five to ten", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("09:55 - Good-morning, Lucien, good-morning, said Albert; \"your punctuality really alarms me. What do I say? punctuality! You, whom I expected last, you arrive at five minutes to ten, when the time fixed was half-past! Has the ministry resigned?\" - Alexandre Dumas, The Count of Monte Cristo"));
// DEBUG: (5, 5)
// DEBUG: Operating on Good-morning,
// DEBUG: 102
// DEBUG: (97, 5)
// DEBUG: Operating on Lucien,
// DEBUG: 152
// DEBUG: (147, 5)
// DEBUG: Operating on good-morning,
// DEBUG: ['Good-morning,', 'Lucien,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (19, 17)
// DEBUG: Operating on said
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on Albert;
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on \"your
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on punctuality
// DEBUG: ['good-morning,', 'said', 'Albert;', '\\"your']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on really
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on alarms
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on me.
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on What
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on do
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on I
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on say?
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on punctuality!
// DEBUG: ['punctuality', 'really', 'alarms', 'me.', 'What', 'do', 'I', 'say?']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (18, 41)
// DEBUG: Operating on You,
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on whom
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on I
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on expected
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on last,
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on you
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on arrive
// DEBUG: ['punctuality!', 'You,', 'whom', 'I', 'expected', 'last,', 'you']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['arrive', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on when
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on time
// DEBUG: 102
// DEBUG: (97, 65)
// DEBUG: Operating on fixed
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on was
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on half-past!
// DEBUG: ['TIMESTRING,', 'when', 'the', 'time', 'fixed', 'was']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on Has
// DEBUG: 43
// DEBUG: (38, 77)
// DEBUG: Operating on the
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on ministry
// DEBUG: 122
// DEBUG: (117, 77)
// DEBUG: Operating on resigned?\"
// DEBUG: 200
// DEBUG: ['five minutes to ten']
// DEBUG: drawing cursor (27, 53)
// DEBUG: ['- The Count of Monte Cristo']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "Good-morning, Lucien,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "good-morning, said Albert; \"your", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "punctuality really alarms me. What do I say?", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "punctuality! You, whom I expected last, you", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "arrive at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING, when the time fixed was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(27, 53, "five minutes to ten", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- The Count of Monte Cristo", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 09:56 for 0 quotations:
    case 596:
      Serial.println(F("No quotes for 09:56"));
      return;

    // Codegen for 09:57 for 0 quotations:
    case 597:
      Serial.println(F("No quotes for 09:57"));
      return;

    // Codegen for 09:58 for 1 quotations:
    case 598:
      Serial.println(F("Only one option for 09:58:"));
    Serial.println(F("09:58 - I didn't sleep too long, because I think it was only around ten o'clock when I woke up. - J.D. Salinger, Catcher in the Rye"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on didn't
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on sleep
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on too
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on long,
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on because
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on I
// DEBUG: ['I', "didn't", 'sleep', 'too', 'long,', 'because']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (7, 17)
// DEBUG: Operating on think
// DEBUG: 48
// DEBUG: (43, 17)
// DEBUG: Operating on it
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on was
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on only
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['I', 'think', 'it', 'was', 'only']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on when
// DEBUG: ['TIMESTRING']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on I
// DEBUG: 23
// DEBUG: (18, 41)
// DEBUG: Operating on woke
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on up.
// DEBUG: 74
// DEBUG: ["around ten o'clock"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Catcher in the Rye']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "I didn't sleep too long, because", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "I think it was only", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "around ten o'clock", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Catcher in the Rye", &Font12, WHITE, BLACK);
      return;

    // Codegen for 09:59 for 1 quotations:
    case 599:
      Serial.println(F("Only one option for 09:59:"));
    Serial.println(F("09:59 - One minute to ten. With a heavy heart Bert watched the clock. His legs were still aching very badly. He could not see the hands of the clock moving, but they were creeping on all the same. - Robert Tressell, The Ragged Trouserred Philanthropists"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 208
// DEBUG: (203, 5)
// DEBUG: Operating on With
// DEBUG: ['TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 17)
// DEBUG: Operating on heavy
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on heart
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on Bert
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on watched
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on the
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on clock.
// DEBUG: ['With', 'a', 'heavy', 'heart', 'Bert', 'watched', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on His
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on legs
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on were
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on still
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on aching
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on very
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on badly.
// DEBUG: ['clock.', 'His', 'legs', 'were', 'still', 'aching', 'very']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on He
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on could
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on not
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on see
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on the
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on hands
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on of
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on the
// DEBUG: 207
// DEBUG: (202, 41)
// DEBUG: Operating on clock
// DEBUG: ['badly.', 'He', 'could', 'not', 'see', 'the', 'hands', 'of', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on moving,
// DEBUG: 66
// DEBUG: (61, 53)
// DEBUG: Operating on but
// DEBUG: 88
// DEBUG: (83, 53)
// DEBUG: Operating on they
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on were
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on creeping
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on on
// DEBUG: ['clock', 'moving,', 'but', 'they', 'were', 'creeping']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on all
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on the
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on same.
// DEBUG: 93
// DEBUG: ['One minute to ten.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Robert Tressell']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "With a heavy heart Bert watched the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "clock. His legs were still aching very", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "badly. He could not see the hands of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "clock moving, but they were creeping", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "One minute to ten.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Robert Tressell", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:00 for 15 quotations:
    case 600:
      option = random(0, 15);
      Serial.print(F("15 options for 10:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:00 - ––In assaying to put on his regimental coat and waistcoat, my uncle Toby found the same objection in his wig, ––so that went off too: ––So that with one thing and what with another, as always falls out when a man is in the most haste, ––'twas ten o'clock, which was half an hour later than his usual time before my uncle Toby sallied out. - Laurence Sterne, Tristram Shandy "));
// DEBUG: (5, 5)
// DEBUG: Operating on ––In
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on assaying
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on to
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on put
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on on
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on his
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on regimental
// DEBUG: ['––In', 'assaying', 'to', 'put', 'on', 'his']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on coat
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on and
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on waistcoat,
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on my
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on uncle
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on Toby
// DEBUG: ['regimental', 'coat', 'and', 'waistcoat,', 'my', 'uncle']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on found
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on same
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on objection
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on in
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on his
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on wig,
// DEBUG: ['Toby', 'found', 'the', 'same', 'objection', 'in', 'his']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on ––so
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on that
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on went
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on off
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on too:
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on ––So
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on that
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on with
// DEBUG: ['wig,', '––so', 'that', 'went', 'off', 'too:', '––So', 'that']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on one
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on thing
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on and
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on what
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on with
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on another,
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on as
// DEBUG: ['with', 'one', 'thing', 'and', 'what', 'with', 'another,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on always
// DEBUG: 56
// DEBUG: (51, 65)
// DEBUG: Operating on falls
// DEBUG: 92
// DEBUG: (87, 65)
// DEBUG: Operating on out
// DEBUG: 114
// DEBUG: (109, 65)
// DEBUG: Operating on when
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on a
// DEBUG: 151
// DEBUG: (146, 65)
// DEBUG: Operating on man
// DEBUG: 173
// DEBUG: (168, 65)
// DEBUG: Operating on is
// DEBUG: 188
// DEBUG: (183, 65)
// DEBUG: Operating on in
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on the
// DEBUG: ['as', 'always', 'falls', 'out', 'when', 'a', 'man', 'is', 'in']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on most
// DEBUG: 43
// DEBUG: (38, 77)
// DEBUG: Operating on haste,
// DEBUG: 86
// DEBUG: (81, 77)
// DEBUG: Operating on ––'twas
// DEBUG: 136
// DEBUG: (131, 77)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'most', 'haste,', "––'twas"]
// DEBUG: drawing cursor (5, 77)
// DEBUG: 165
// DEBUG: (160, 89)
// DEBUG: Operating on which
// DEBUG: 201
// DEBUG: (196, 89)
// DEBUG: Operating on was
// DEBUG: ['TIMESTRING,', 'which']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on half
// DEBUG: 43
// DEBUG: (38, 101)
// DEBUG: Operating on an
// DEBUG: 58
// DEBUG: (53, 101)
// DEBUG: Operating on hour
// DEBUG: 87
// DEBUG: (82, 101)
// DEBUG: Operating on later
// DEBUG: 123
// DEBUG: (118, 101)
// DEBUG: Operating on than
// DEBUG: 152
// DEBUG: (147, 101)
// DEBUG: Operating on his
// DEBUG: 174
// DEBUG: (169, 101)
// DEBUG: Operating on usual
// DEBUG: 210
// DEBUG: (205, 101)
// DEBUG: Operating on time
// DEBUG: ['was', 'half', 'an', 'hour', 'later', 'than', 'his', 'usual']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on before
// DEBUG: 58
// DEBUG: (53, 113)
// DEBUG: Operating on my
// DEBUG: 73
// DEBUG: (68, 113)
// DEBUG: Operating on uncle
// DEBUG: 109
// DEBUG: (104, 113)
// DEBUG: Operating on Toby
// DEBUG: 138
// DEBUG: (133, 113)
// DEBUG: Operating on sallied
// DEBUG: 188
// DEBUG: (183, 113)
// DEBUG: Operating on out.
// DEBUG: ['time', 'before', 'my', 'uncle', 'Toby', 'sallied']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ["ten o'clock"]
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- Tristram Shandy']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "––In assaying to put on his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "regimental coat and waistcoat, my uncle", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Toby found the same objection in his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "wig, ––so that went off too: ––So that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "with one thing and what with another,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "as always falls out when a man is in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "the most haste, ––'twas", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "TIMESTRING, which", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "was half an hour later than his usual", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "time before my uncle Toby sallied", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "ten o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Tristram Shandy", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:00 - ’Tis but an hour ago since it was nine, And after one hour more ‘twill be eleven. - William Shakespeare, As You Like It"));
// DEBUG: (5, 5)
// DEBUG: Operating on ’Tis
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on but
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['’Tis', 'but']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on And
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on after
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on one
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on hour
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on more
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on ‘twill
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on be
// DEBUG: ['TIMESTRING,', 'And', 'after', 'one', 'hour', 'more', '‘twill']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on eleven.
// DEBUG: 63
// DEBUG: ['an hour ago since it was nine']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- As You Like It']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "’Tis but", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, And after one hour more ‘twill", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "an hour ago since it was nine", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- As You Like It", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("10:00 - For some seconds the light went on becoming brighter and brighter, and she saw everything more and more clearly and the clock ticked louder and louder until there was a terrific explosion right in her ear. Orlando leapt as if she had been violently struck on the head. Ten times she was struck. In fact it was ten o'clock in the morning. It was the eleventh of October. It was 1928. It was the present moment. - Virginia Woolf, Orlando "));
// DEBUG: (5, 5)
// DEBUG: Operating on For
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on some
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on seconds
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on the
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on light
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on went
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on on
// DEBUG: ['For', 'some', 'seconds', 'the', 'light', 'went']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on becoming
// DEBUG: 70
// DEBUG: (65, 17)
// DEBUG: Operating on brighter
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on and
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on brighter,
// DEBUG: ['on', 'becoming', 'brighter', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 29)
// DEBUG: Operating on she
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on saw
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on everything
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on more
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on and
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on more
// DEBUG: ['brighter,', 'and', 'she', 'saw', 'everything', 'more', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on clearly
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on and
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on the
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on clock
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on ticked
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on louder
// DEBUG: ['more', 'clearly', 'and', 'the', 'clock', 'ticked']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on louder
// DEBUG: 82
// DEBUG: (77, 53)
// DEBUG: Operating on until
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on there
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on was
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on a
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on terrific
// DEBUG: ['louder', 'and', 'louder', 'until', 'there', 'was', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on explosion
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on right
// DEBUG: 119
// DEBUG: (114, 65)
// DEBUG: Operating on in
// DEBUG: 134
// DEBUG: (129, 65)
// DEBUG: Operating on her
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on ear.
// DEBUG: 185
// DEBUG: (180, 65)
// DEBUG: Operating on Orlando
// DEBUG: ['terrific', 'explosion', 'right', 'in', 'her', 'ear.']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on leapt
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on as
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on if
// DEBUG: 84
// DEBUG: (79, 77)
// DEBUG: Operating on she
// DEBUG: 106
// DEBUG: (101, 77)
// DEBUG: Operating on had
// DEBUG: 128
// DEBUG: (123, 77)
// DEBUG: Operating on been
// DEBUG: 157
// DEBUG: (152, 77)
// DEBUG: Operating on violently
// DEBUG: ['Orlando', 'leapt', 'as', 'if', 'she', 'had', 'been']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on struck
// DEBUG: 63
// DEBUG: (58, 89)
// DEBUG: Operating on on
// DEBUG: 78
// DEBUG: (73, 89)
// DEBUG: Operating on the
// DEBUG: 100
// DEBUG: (95, 89)
// DEBUG: Operating on head.
// DEBUG: 136
// DEBUG: (131, 89)
// DEBUG: Operating on Ten
// DEBUG: 158
// DEBUG: (153, 89)
// DEBUG: Operating on times
// DEBUG: 194
// DEBUG: (189, 89)
// DEBUG: Operating on she
// DEBUG: ['violently', 'struck', 'on', 'the', 'head.', 'Ten', 'times']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on was
// DEBUG: 36
// DEBUG: (31, 101)
// DEBUG: Operating on struck.
// DEBUG: 86
// DEBUG: (81, 101)
// DEBUG: Operating on In
// DEBUG: 101
// DEBUG: (96, 101)
// DEBUG: Operating on fact
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on it
// DEBUG: 145
// DEBUG: (140, 101)
// DEBUG: Operating on was
// DEBUG: 167
// DEBUG: (162, 101)
// DEBUG: Operating on TIMESTRINGo'clock
// DEBUG: Wrorking on the timestring
// DEBUG: ['she', 'was', 'struck.', 'In', 'fact', 'it', 'was']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (23, 113)
// DEBUG: Operating on in
// DEBUG: 43
// DEBUG: (38, 113)
// DEBUG: Operating on the
// DEBUG: 65
// DEBUG: (60, 113)
// DEBUG: Operating on morning.
// DEBUG: 122
// DEBUG: (117, 113)
// DEBUG: Operating on It
// DEBUG: 137
// DEBUG: (132, 113)
// DEBUG: Operating on was
// DEBUG: 159
// DEBUG: (154, 113)
// DEBUG: Operating on the
// DEBUG: 181
// DEBUG: (176, 113)
// DEBUG: Operating on eleventh
// DEBUG: ["TIMESTRINGo'clock", 'in', 'the', 'morning.', 'It', 'was', 'the']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on of
// DEBUG: 34
// DEBUG: (29, 125)
// DEBUG: Operating on October.
// DEBUG: 91
// DEBUG: (86, 125)
// DEBUG: Operating on It
// DEBUG: 106
// DEBUG: (101, 125)
// DEBUG: Operating on was
// DEBUG: 128
// DEBUG: (123, 125)
// DEBUG: Operating on 1928.
// DEBUG: 164
// DEBUG: (159, 125)
// DEBUG: Operating on It
// DEBUG: 179
// DEBUG: (174, 125)
// DEBUG: Operating on was
// DEBUG: 201
// DEBUG: (196, 125)
// DEBUG: Operating on the
// DEBUG: ['eleventh', 'of', 'October.', 'It', 'was', '1928.', 'It', 'was']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (9, 137)
// DEBUG: Operating on present
// DEBUG: 64
// DEBUG: (59, 137)
// DEBUG: Operating on moment.
// DEBUG: 114
// DEBUG: ['ten ']
// DEBUG: drawing cursor (162, 101)
// DEBUG: ['- Virginia Woolf, Orlando ']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "For some seconds the light went", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "on becoming brighter and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "brighter, and she saw everything more and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "more clearly and the clock ticked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "louder and louder until there was a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "terrific explosion right in her ear.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "Orlando leapt as if she had been", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "violently struck on the head. Ten times", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "she was struck. In fact it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "TIMESTRINGo'clock in the morning. It was the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "eleventh of October. It was 1928. It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(162, 101, "ten ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Virginia Woolf, Orlando ", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("10:00 - The trial was irretrievably over; everything that could be said had been said, but he had never doubted that he would lose. The written verdict was handed down at 10:00 on Friday morning, and all that remained was a summing up from the reporters waiting in the corridor outside the district court. - Stieg Larsson, The Girl with the Dragon Tattoo "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on trial
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on was
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on irretrievably
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on over;
// DEBUG: ['The', 'trial', 'was', 'irretrievably']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on everything
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on that
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on could
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on be
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on said
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on had
// DEBUG: ['over;', 'everything', 'that', 'could', 'be', 'said']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on been
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on said,
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on but
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on he
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on had
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on never
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on doubted
// DEBUG: ['had', 'been', 'said,', 'but', 'he', 'had', 'never']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on that
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on he
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on would
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on lose.
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on The
// DEBUG: 156
// DEBUG: (151, 41)
// DEBUG: Operating on written
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on verdict
// DEBUG: ['doubted', 'that', 'he', 'would', 'lose.', 'The', 'written']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on was
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on handed
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on down
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on at
// DEBUG: 127
// DEBUG: (122, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['verdict', 'was', 'handed', 'down', 'at']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (16, 65)
// DEBUG: Operating on on
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on Friday
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on morning,
// DEBUG: 136
// DEBUG: (131, 65)
// DEBUG: Operating on and
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on all
// DEBUG: 180
// DEBUG: (175, 65)
// DEBUG: Operating on that
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on remained
// DEBUG: ['TIMESTRING', 'on', 'Friday', 'morning,', 'and', 'all', 'that']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on was
// DEBUG: 41
// DEBUG: (36, 77)
// DEBUG: Operating on a
// DEBUG: 49
// DEBUG: (44, 77)
// DEBUG: Operating on summing
// DEBUG: 99
// DEBUG: (94, 77)
// DEBUG: Operating on up
// DEBUG: 114
// DEBUG: (109, 77)
// DEBUG: Operating on from
// DEBUG: 143
// DEBUG: (138, 77)
// DEBUG: Operating on the
// DEBUG: 165
// DEBUG: (160, 77)
// DEBUG: Operating on reporters
// DEBUG: ['remained', 'was', 'a', 'summing', 'up', 'from', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on waiting
// DEBUG: 70
// DEBUG: (65, 89)
// DEBUG: Operating on in
// DEBUG: 85
// DEBUG: (80, 89)
// DEBUG: Operating on the
// DEBUG: 107
// DEBUG: (102, 89)
// DEBUG: Operating on corridor
// DEBUG: 164
// DEBUG: (159, 89)
// DEBUG: Operating on outside
// DEBUG: ['reporters', 'waiting', 'in', 'the', 'corridor']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 101)
// DEBUG: Operating on district
// DEBUG: 97
// DEBUG: (92, 101)
// DEBUG: Operating on court.
// DEBUG: 140
// DEBUG: ['10:00']
// DEBUG: drawing cursor (122, 53)
// DEBUG: ['- Stieg Larsson']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "The trial was irretrievably", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "over; everything that could be said", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "had been said, but he had never", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "doubted that he would lose. The written", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "verdict was handed down at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING on Friday morning, and all that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "remained was a summing up from the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "reporters waiting in the corridor", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(122, 53, "10:00", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Stieg Larsson", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("10:00 - According to military records no US bombers or any other kind of aircraft were flying over that region at the time, that is around 10 am on November 7,1944. - Haruki Murakami, Kafka on the shore "));
// DEBUG: (5, 5)
// DEBUG: Operating on According
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on to
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on military
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on records
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on no
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on US
// DEBUG: ['According', 'to', 'military', 'records', 'no']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on bombers
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on or
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on any
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on other
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on kind
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on of
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on aircraft
// DEBUG: ['US', 'bombers', 'or', 'any', 'other', 'kind', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on were
// DEBUG: 48
// DEBUG: (43, 29)
// DEBUG: Operating on flying
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on over
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on that
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on region
// DEBUG: 192
// DEBUG: (187, 29)
// DEBUG: Operating on at
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on the
// DEBUG: ['aircraft', 'were', 'flying', 'over', 'that', 'region', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on time,
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on that
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on is
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on around
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['the', 'time,', 'that', 'is', 'around']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on on
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on November
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on 7,1944.
// DEBUG: 143
// DEBUG: ['10 am']
// DEBUG: drawing cursor (132, 41)
// DEBUG: ['- Kafka on the shore']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "According to military records no", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "US bombers or any other kind of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "aircraft were flying over that region at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the time, that is around", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(132, 41, "10 am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Kafka on the shore", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("10:00 - At about ten o'clock in the morning the sun threw a bright dust-laden bar through one of the side windows, and in and out of the beam flies shot like rushing stars. - John Steinbeck, Of Mice And Men "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on about
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on in
// DEBUG: ['At', 'about', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on morning
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on the
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on sun
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on threw
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on a
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on bright
// DEBUG: ['in', 'the', 'morning', 'the', 'sun', 'threw', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on dust-laden
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on bar
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on through
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on one
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on of
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on the
// DEBUG: ['bright', 'dust-laden', 'bar', 'through', 'one', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on side
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on windows,
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on and
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on in
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on and
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on out
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on of
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on the
// DEBUG: ['the', 'side', 'windows,', 'and', 'in', 'and', 'out', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on beam
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on flies
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on shot
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on like
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on rushing
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on stars.
// DEBUG: ['the', 'beam', 'flies', 'shot', 'like', 'rushing']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ["ten o'clock"]
// DEBUG: drawing cursor (56, 5)
// DEBUG: ['- Of Mice And Men']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "At about TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "in the morning the sun threw a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "bright dust-laden bar through one of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the side windows, and in and out of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "the beam flies shot like rushing", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(56, 5, "ten o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Of Mice And Men", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("10:00 - I went to bed and the next thing I knew I was awake again and it was getting on for ten o' clock in the morning. Ring, ring, said the telephone, ring, ring. - Russell Hoban, The Medusa Frequency "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on went
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on to
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on bed
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on and
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on the
// DEBUG: 128
// DEBUG: (123, 5)
// DEBUG: Operating on next
// DEBUG: 157
// DEBUG: (152, 5)
// DEBUG: Operating on thing
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on I
// DEBUG: 201
// DEBUG: (196, 5)
// DEBUG: Operating on knew
// DEBUG: ['I', 'went', 'to', 'bed', 'and', 'the', 'next', 'thing', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on I
// DEBUG: 23
// DEBUG: (18, 17)
// DEBUG: Operating on was
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on awake
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on again
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on and
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on it
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on was
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on getting
// DEBUG: ['knew', 'I', 'was', 'awake', 'again', 'and', 'it', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on on
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on for
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on in
// DEBUG: ['getting', 'on', 'for', 'TIMESTRING']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on morning.
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on Ring,
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on ring,
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on said
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on the
// DEBUG: ['in', 'the', 'morning.', 'Ring,', 'ring,', 'said']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on telephone,
// DEBUG: 85
// DEBUG: (80, 53)
// DEBUG: Operating on ring,
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on ring.
// DEBUG: 157
// DEBUG: ["ten o' clock"]
// DEBUG: drawing cursor (50, 29)
// DEBUG: ['- The Medusa Frequency']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "I went to bed and the next thing I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "knew I was awake again and it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "getting on for TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "in the morning. Ring, ring, said", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(50, 29, "ten o' clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- The Medusa Frequency", &Font12, WHITE, BLACK);
          return;
        case 7:
          Serial.println(F("10:00 - If Wednesday should ever come! It did come, and exactly when it might be reasonably looked for. It came - it was fine - and Catherine trod on air. By ten o'clock, the chaise and four conveyed the two from the abbey; and, after an agreeable drive of almost twenty miles, they entered Woodston, a large and populous village, in a situation not unpleasant. - Jane Austen, Northanger Abbey "));
// DEBUG: (5, 5)
// DEBUG: Operating on If
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on Wednesday
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on should
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on ever
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on come!
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on It
// DEBUG: ['If', 'Wednesday', 'should', 'ever', 'come!']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on did
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on come,
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on and
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on exactly
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on when
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on it
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on might
// DEBUG: ['It', 'did', 'come,', 'and', 'exactly', 'when', 'it']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on be
// DEBUG: 31
// DEBUG: (26, 29)
// DEBUG: Operating on reasonably
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on looked
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on for.
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on It
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on came
// DEBUG: ['might', 'be', 'reasonably', 'looked', 'for.', 'It']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on -
// DEBUG: 23
// DEBUG: (18, 41)
// DEBUG: Operating on it
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on was
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on fine
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on -
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on and
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on Catherine
// DEBUG: 183
// DEBUG: (178, 41)
// DEBUG: Operating on trod
// DEBUG: ['came', '-', 'it', 'was', 'fine', '-', 'and', 'Catherine']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on on
// DEBUG: 30
// DEBUG: (25, 53)
// DEBUG: Operating on air.
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on By
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['trod', 'on', 'air.', 'By']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on chaise
// DEBUG: 87
// DEBUG: (82, 65)
// DEBUG: Operating on and
// DEBUG: 109
// DEBUG: (104, 65)
// DEBUG: Operating on four
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on conveyed
// DEBUG: 195
// DEBUG: (190, 65)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING,', 'the', 'chaise', 'and', 'four', 'conveyed']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on two
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on from
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on abbey;
// DEBUG: 130
// DEBUG: (125, 77)
// DEBUG: Operating on and,
// DEBUG: 159
// DEBUG: (154, 77)
// DEBUG: Operating on after
// DEBUG: 195
// DEBUG: (190, 77)
// DEBUG: Operating on an
// DEBUG: 210
// DEBUG: (205, 77)
// DEBUG: Operating on agreeable
// DEBUG: ['the', 'two', 'from', 'the', 'abbey;', 'and,', 'after', 'an']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on drive
// DEBUG: 56
// DEBUG: (51, 89)
// DEBUG: Operating on of
// DEBUG: 71
// DEBUG: (66, 89)
// DEBUG: Operating on almost
// DEBUG: 114
// DEBUG: (109, 89)
// DEBUG: Operating on twenty
// DEBUG: 157
// DEBUG: (152, 89)
// DEBUG: Operating on miles,
// DEBUG: 200
// DEBUG: (195, 89)
// DEBUG: Operating on they
// DEBUG: ['agreeable', 'drive', 'of', 'almost', 'twenty', 'miles,']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on entered
// DEBUG: 65
// DEBUG: (60, 101)
// DEBUG: Operating on Woodston,
// DEBUG: 129
// DEBUG: (124, 101)
// DEBUG: Operating on a
// DEBUG: 137
// DEBUG: (132, 101)
// DEBUG: Operating on large
// DEBUG: 173
// DEBUG: (168, 101)
// DEBUG: Operating on and
// DEBUG: 195
// DEBUG: (190, 101)
// DEBUG: Operating on populous
// DEBUG: ['they', 'entered', 'Woodston,', 'a', 'large', 'and']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (14, 113)
// DEBUG: Operating on village,
// DEBUG: 76
// DEBUG: (71, 113)
// DEBUG: Operating on in
// DEBUG: 91
// DEBUG: (86, 113)
// DEBUG: Operating on a
// DEBUG: 99
// DEBUG: (94, 113)
// DEBUG: Operating on situation
// DEBUG: 163
// DEBUG: (158, 113)
// DEBUG: Operating on not
// DEBUG: 185
// DEBUG: (180, 113)
// DEBUG: Operating on unpleasant.
// DEBUG: ['populous', 'village,', 'in', 'a', 'situation', 'not']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ["ten o'clock"]
// DEBUG: drawing cursor (69, 53)
// DEBUG: ['- Northanger Abbey']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "If Wednesday should ever come!", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "It did come, and exactly when it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "might be reasonably looked for. It", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "came - it was fine - and Catherine", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "trod on air. By", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING, the chaise and four conveyed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "the two from the abbey; and, after an", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "agreeable drive of almost twenty miles,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "they entered Woodston, a large and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "populous village, in a situation not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(69, 53, "ten o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- Northanger Abbey", &Font12, WHITE, BLACK);
          return;
        case 8:
          Serial.println(F("10:00 - King Richard: Well, but what's o'clock? Buckingham: Upon the stroke of ten. - William Shakespeare, Richard III "));
// DEBUG: (5, 5)
// DEBUG: Operating on King
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on Richard:
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on Well,
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on but
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on what's
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on o'clock?
// DEBUG: ['King', 'Richard:', 'Well,', 'but', "what's"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on Buckingham:
// DEBUG: 97
// DEBUG: (92, 17)
// DEBUG: Operating on Upon
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on the
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on stroke
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on of
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ["o'clock?", 'Buckingham:', 'Upon', 'the', 'stroke', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 109
// DEBUG: ['ten']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Richard III']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "King Richard: Well, but what's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "o'clock? Buckingham: Upon the stroke of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "ten", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Richard III", &Font12, WHITE, BLACK);
          return;
        case 9:
          Serial.println(F("10:00 - Monday 30 March 1668 Up betimes, and so to the office, there to do business till about 10 o’clock - Samuel Pepys, The Diary of Samuel Pepys "));
// DEBUG: (5, 5)
// DEBUG: Operating on Monday
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on 30
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on March
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on 1668
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on Up
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on betimes,
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on and
// DEBUG: ['Monday', '30', 'March', '1668', 'Up', 'betimes,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on so
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on to
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on the
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on office,
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on there
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on to
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on do
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on business
// DEBUG: ['and', 'so', 'to', 'the', 'office,', 'there', 'to', 'do']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on till
// DEBUG: 48
// DEBUG: (43, 29)
// DEBUG: Operating on about
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['business', 'till', 'about']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['10 o’clock']
// DEBUG: drawing cursor (79, 29)
// DEBUG: ['- The Diary of Samuel Pepys']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "Monday 30 March 1668 Up betimes,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "and so to the office, there to do", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "business till about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(79, 29, "10 o’clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- The Diary of Samuel Pepys", &Font12, WHITE, BLACK);
          return;
        case 10:
          Serial.println(F("10:00 - On July 25th, 8:30 a.m. the bitch Novaya dies whelping. At 10 o'clock she is lowered into her cool grave, at 7:30 that same evening we see our first floes and greet them wishing they were the last. - Christoph Ransmayr, The Terrors of Ice and Darkness "));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on July
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on 25th,
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on 8:30
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on a.m.
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on bitch
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on Novaya
// DEBUG: ['On', 'July', '25th,', '8:30', 'a.m.', 'the', 'bitch']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on dies
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on whelping.
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on At
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Novaya', 'dies', 'whelping.', 'At']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on she
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on is
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on lowered
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on into
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on her
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on cool
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on grave,
// DEBUG: ['TIMESTRING', 'she', 'is', 'lowered', 'into', 'her', 'cool']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on 7:30
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on that
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on same
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on evening
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on we
// DEBUG: 184
// DEBUG: (179, 41)
// DEBUG: Operating on see
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on our
// DEBUG: ['grave,', 'at', '7:30', 'that', 'same', 'evening', 'we', 'see']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on first
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on floes
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on and
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on greet
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on them
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on wishing
// DEBUG: ['our', 'first', 'floes', 'and', 'greet', 'them']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on they
// DEBUG: 47
// DEBUG: (42, 65)
// DEBUG: Operating on were
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on the
// DEBUG: 98
// DEBUG: (93, 65)
// DEBUG: Operating on last.
// DEBUG: 134
// DEBUG: ["10 o'clock"]
// DEBUG: drawing cursor (120, 17)
// DEBUG: ['- Christoph Ransmayr']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "On July 25th, 8:30 a.m. the bitch", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Novaya dies whelping. At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING she is lowered into her cool", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "grave, at 7:30 that same evening we see", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "our first floes and greet them", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(120, 17, "10 o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Christoph Ransmayr", &Font12, WHITE, BLACK);
          return;
        case 11:
          Serial.println(F("10:00 - The pundit sighed. 'Only a fool like me would leave his door open when a riot can occur at any moment, and only a fool like me would say yes to you,' he said. 'What time?' Just his head was sticking out of the partially opened door. The money from blessing the ice-cream factory must have dulled his desire for work, I thought. 'Ten.' 'Ten-thirty.' Without another word, he closed the door. - Akhil Sharma, An Obedient Father "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on pundit
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on sighed.
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on 'Only
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on a
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on fool
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on like
// DEBUG: ['The', 'pundit', 'sighed.', "'Only", 'a', 'fool']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on me
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on would
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on leave
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on his
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on door
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on open
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on when
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on a
// DEBUG: ['like', 'me', 'would', 'leave', 'his', 'door', 'open', 'when']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (7, 29)
// DEBUG: Operating on riot
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on can
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on occur
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on at
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on any
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on moment,
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on and
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on only
// DEBUG: ['a', 'riot', 'can', 'occur', 'at', 'any', 'moment,', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 41)
// DEBUG: Operating on fool
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on like
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on me
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on would
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on say
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on yes
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on to
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on you,'
// DEBUG: ['only', 'a', 'fool', 'like', 'me', 'would', 'say', 'yes', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on he
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on said.
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on 'What
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on time?'
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on Just
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on his
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on head
// DEBUG: ["you,'", 'he', 'said.', "'What", "time?'", 'Just', 'his']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on was
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on sticking
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on out
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on of
// DEBUG: 131
// DEBUG: (126, 65)
// DEBUG: Operating on the
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on partially
// DEBUG: ['head', 'was', 'sticking', 'out', 'of', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on opened
// DEBUG: 63
// DEBUG: (58, 77)
// DEBUG: Operating on door.
// DEBUG: 99
// DEBUG: (94, 77)
// DEBUG: Operating on The
// DEBUG: 121
// DEBUG: (116, 77)
// DEBUG: Operating on money
// DEBUG: 157
// DEBUG: (152, 77)
// DEBUG: Operating on from
// DEBUG: 186
// DEBUG: (181, 77)
// DEBUG: Operating on blessing
// DEBUG: ['partially', 'opened', 'door.', 'The', 'money', 'from']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (14, 89)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 89)
// DEBUG: Operating on ice-cream
// DEBUG: 105
// DEBUG: (100, 89)
// DEBUG: Operating on factory
// DEBUG: 155
// DEBUG: (150, 89)
// DEBUG: Operating on must
// DEBUG: 184
// DEBUG: (179, 89)
// DEBUG: Operating on have
// DEBUG: ['blessing', 'the', 'ice-cream', 'factory', 'must']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on dulled
// DEBUG: 58
// DEBUG: (53, 101)
// DEBUG: Operating on his
// DEBUG: 80
// DEBUG: (75, 101)
// DEBUG: Operating on desire
// DEBUG: 123
// DEBUG: (118, 101)
// DEBUG: Operating on for
// DEBUG: 145
// DEBUG: (140, 101)
// DEBUG: Operating on work,
// DEBUG: 181
// DEBUG: (176, 101)
// DEBUG: Operating on I
// DEBUG: 189
// DEBUG: (184, 101)
// DEBUG: Operating on thought.
// DEBUG: ['have', 'dulled', 'his', 'desire', 'for', 'work,', 'I']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (14, 113)
// DEBUG: Operating on 'Ten.'
// DEBUG: 62
// DEBUG: (57, 113)
// DEBUG: Operating on 'TIMESTRING.'
// DEBUG: Wrorking on the timestring
// DEBUG: ['thought.', "'Ten.'"]
// DEBUG: drawing cursor (5, 113)
// DEBUG: (19, 125)
// DEBUG: Operating on Without
// DEBUG: 74
// DEBUG: (69, 125)
// DEBUG: Operating on another
// DEBUG: 124
// DEBUG: (119, 125)
// DEBUG: Operating on word,
// DEBUG: 160
// DEBUG: (155, 125)
// DEBUG: Operating on he
// DEBUG: 175
// DEBUG: (170, 125)
// DEBUG: Operating on closed
// DEBUG: ["'TIMESTRING.'", 'Without', 'another', 'word,', 'he']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (12, 137)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 137)
// DEBUG: Operating on door.
// DEBUG: 75
// DEBUG: ['Ten-thirty']
// DEBUG: drawing cursor (57, 113)
// DEBUG: ['- An Obedient Father']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "The pundit sighed. 'Only a fool", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "like me would leave his door open when", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "a riot can occur at any moment, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "only a fool like me would say yes to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "you,' he said. 'What time?' Just his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "head was sticking out of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "partially opened door. The money from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "blessing the ice-cream factory must", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "have dulled his desire for work, I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "thought. 'Ten.'", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "'TIMESTRING.' Without another word, he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(57, 113, "Ten-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- An Obedient Father", &Font12, WHITE, BLACK);
          return;
        case 12:
          Serial.println(F("10:00 - The Saturday immediately preceding the examinations was a very busy day for Kennedy. At ten o' clock he was entering Willey's room; the latter had given him a key and left the room vacant by previous arrangement - in fact he had taken Olivia on another house hunting trip. - Barry Unsworth, The Greeks have a word for it "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Saturday
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on immediately
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on preceding
// DEBUG: ['The', 'Saturday', 'immediately']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on the
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on examinations
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on was
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on a
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on very
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on busy
// DEBUG: ['preceding', 'the', 'examinations', 'was', 'a', 'very']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on day
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on for
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on Kennedy.
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on At
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['busy', 'day', 'for', 'Kennedy.', 'At']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on he
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on was
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on entering
// DEBUG: ['TIMESTRING', 'he', 'was']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on Willey's
// DEBUG: 76
// DEBUG: (71, 53)
// DEBUG: Operating on room;
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on the
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on latter
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on had
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on given
// DEBUG: ['entering', "Willey's", 'room;', 'the', 'latter', 'had']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on him
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on a
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on key
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on and
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on left
// DEBUG: 119
// DEBUG: (114, 65)
// DEBUG: Operating on the
// DEBUG: 141
// DEBUG: (136, 65)
// DEBUG: Operating on room
// DEBUG: 170
// DEBUG: (165, 65)
// DEBUG: Operating on vacant
// DEBUG: ['given', 'him', 'a', 'key', 'and', 'left', 'the', 'room']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on by
// DEBUG: 32
// DEBUG: (27, 77)
// DEBUG: Operating on previous
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on arrangement
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on -
// DEBUG: 175
// DEBUG: (170, 77)
// DEBUG: Operating on in
// DEBUG: 190
// DEBUG: (185, 77)
// DEBUG: Operating on fact
// DEBUG: ['vacant', 'by', 'previous', 'arrangement', '-', 'in']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on he
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on had
// DEBUG: 52
// DEBUG: (47, 89)
// DEBUG: Operating on taken
// DEBUG: 88
// DEBUG: (83, 89)
// DEBUG: Operating on Olivia
// DEBUG: 131
// DEBUG: (126, 89)
// DEBUG: Operating on on
// DEBUG: 146
// DEBUG: (141, 89)
// DEBUG: Operating on another
// DEBUG: 196
// DEBUG: (191, 89)
// DEBUG: Operating on house
// DEBUG: ['fact', 'he', 'had', 'taken', 'Olivia', 'on', 'another']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on hunting
// DEBUG: 66
// DEBUG: (61, 101)
// DEBUG: Operating on trip.
// DEBUG: 102
// DEBUG: ["ten o' clock"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Barry Unsworth']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "The Saturday immediately", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "preceding the examinations was a very", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "busy day for Kennedy. At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING he was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "entering Willey's room; the latter had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "given him a key and left the room", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "vacant by previous arrangement - in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "fact he had taken Olivia on another", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "ten o' clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- Barry Unsworth", &Font12, WHITE, BLACK);
          return;
        case 13:
          Serial.println(F("10:00 - Each of us saved up sixpence. We were to meet at ten in the morning on the Canal Bridge. - James Joyce, Dubliners "));
// DEBUG: (5, 5)
// DEBUG: Operating on Each
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on of
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on us
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on saved
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on up
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on sixpence.
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on We
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on were
// DEBUG: ['Each', 'of', 'us', 'saved', 'up', 'sixpence.', 'We']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on meet
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on in
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on the
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on morning
// DEBUG: ['were', 'to', 'meet', 'TIMESTRING', 'in', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on on
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on Canal
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on Bridge.
// DEBUG: 141
// DEBUG: ['at ten']
// DEBUG: drawing cursor (54, 17)
// DEBUG: ['- James Joyce, Dubliners ']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "Each of us saved up sixpence. We", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "were to meet TIMESTRING in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(54, 17, "at ten", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- James Joyce, Dubliners ", &Font12, WHITE, BLACK);
          return;
        case 14:
          Serial.println(F("10:00 - The written verdict was handed down at 10:00 on Friday morning, and allthat remained was a summing up from the reporters waiting in the corridor outside the district court. - Stieg Larsson, The girl with the dragon tattoo "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on written
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on verdict
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on was
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on handed
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on down
// DEBUG: ['The', 'written', 'verdict', 'was', 'handed']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on at
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on on
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on Friday
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on morning,
// DEBUG: ['down', 'at', 'TIMESTRING', 'on', 'Friday']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on and
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on allthat
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on remained
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on was
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on a
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on summing
// DEBUG: ['morning,', 'and', 'allthat', 'remained', 'was', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on up
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on from
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on the
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on reporters
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on waiting
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on in
// DEBUG: ['summing', 'up', 'from', 'the', 'reporters', 'waiting']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on corridor
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on outside
// DEBUG: 142
// DEBUG: (137, 53)
// DEBUG: Operating on the
// DEBUG: 164
// DEBUG: (159, 53)
// DEBUG: Operating on district
// DEBUG: ['in', 'the', 'corridor', 'outside', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on court.
// DEBUG: 62
// DEBUG: ['10:00']
// DEBUG: drawing cursor (25, 17)
// DEBUG: ['- Stieg Larsson']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "The written verdict was handed", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "down at TIMESTRING on Friday", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "morning, and allthat remained was a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "summing up from the reporters waiting", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "in the corridor outside the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(25, 17, "10:00", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Stieg Larsson", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:01 for 1 quotations:
    case 601:
      Serial.println(F("Only one option for 10:01:"));
    Serial.println(F("10:01 - At about ten o'clock in the morning the sun threw a bright dust-laden bar through one of the side windows, and in and out of the beam flies shot like rushing stars.' - John Steinbeck, Of Mice And Men"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on morning
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on sun
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on threw
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on a
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on bright
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning', 'the', 'sun', 'threw', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on dust-laden
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on bar
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on through
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on one
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on of
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on the
// DEBUG: ['bright', 'dust-laden', 'bar', 'through', 'one', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on side
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on windows,
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on and
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on in
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on and
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on out
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on of
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on the
// DEBUG: ['the', 'side', 'windows,', 'and', 'in', 'and', 'out', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on beam
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on flies
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on shot
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on like
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on rushing
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on stars.'
// DEBUG: ['the', 'beam', 'flies', 'shot', 'like', 'rushing']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ["about ten o'clock"]
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Of Mice And Men']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING in the morning the sun threw a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "bright dust-laden bar through one of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the side windows, and in and out of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "the beam flies shot like rushing", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "about ten o'clock", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Of Mice And Men", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:02 for 1 quotations:
    case 602:
      Serial.println(F("Only one option for 10:02:"));
    Serial.println(F("10:02 - It was two minutes after ten; she was not satisfied with her clothes, her face, her apartment. She heated the coffee again and sat down in the chair by the window. Can't do anything more now, she thought, no sense trying to improve anything the last minute. - Shirley Jackson, The Daemon Lover"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on she
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on was
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on not
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on satisfied
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on with
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on her
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on clothes,
// DEBUG: ['TIMESTRING;', 'she', 'was', 'not', 'satisfied', 'with', 'her']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on her
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on face,
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on her
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on apartment.
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on She
// DEBUG: 192
// DEBUG: (187, 29)
// DEBUG: Operating on heated
// DEBUG: ['clothes,', 'her', 'face,', 'her', 'apartment.', 'She']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on coffee
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on again
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on and
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on sat
// DEBUG: 162
// DEBUG: (157, 41)
// DEBUG: Operating on down
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on in
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on the
// DEBUG: ['heated', 'the', 'coffee', 'again', 'and', 'sat', 'down', 'in']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on chair
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on by
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on window.
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on Can't
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on do
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on anything
// DEBUG: ['the', 'chair', 'by', 'the', 'window.', "Can't", 'do']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on more
// DEBUG: 48
// DEBUG: (43, 65)
// DEBUG: Operating on now,
// DEBUG: 77
// DEBUG: (72, 65)
// DEBUG: Operating on she
// DEBUG: 99
// DEBUG: (94, 65)
// DEBUG: Operating on thought,
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on no
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on sense
// DEBUG: 207
// DEBUG: (202, 65)
// DEBUG: Operating on trying
// DEBUG: ['anything', 'more', 'now,', 'she', 'thought,', 'no', 'sense']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 77)
// DEBUG: Operating on improve
// DEBUG: 82
// DEBUG: (77, 77)
// DEBUG: Operating on anything
// DEBUG: 139
// DEBUG: (134, 77)
// DEBUG: Operating on the
// DEBUG: 161
// DEBUG: (156, 77)
// DEBUG: Operating on last
// DEBUG: 190
// DEBUG: (185, 77)
// DEBUG: Operating on minute.
// DEBUG: ['trying', 'to', 'improve', 'anything', 'the', 'last']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['two minutes after ten']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ['- The Daemon Lover']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING; she was not satisfied with her", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "clothes, her face, her apartment. She", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "heated the coffee again and sat down in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "the chair by the window. Can't do", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "anything more now, she thought, no sense", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "trying to improve anything the last", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(42, 5, "two minutes after ten", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- The Daemon Lover", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:03 for 2 quotations:
    case 603:
      option = random(0, 2);
      Serial.print(F("2 options for 10:03. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:03 - It's 10.03 according to his watch, and he is travelling down through the Scottish highlands to Inverness, tired and ever-so-slightly anxious in case he falls asleep between now and when the train reaches the station, and misses his cue to say to Alice, Drew and Aleesha: 'OK, this is Inverness, let's move it.' - Michel Faber, “Vanilla-Bright like Eminem” from The Farenheit Twins "));
// DEBUG: (5, 5)
// DEBUG: Operating on It's
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on according
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on to
// DEBUG: ["It's", 'TIMESTRING', 'according']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on his
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on watch,
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on and
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on he
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on is
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on travelling
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on down
// DEBUG: ['to', 'his', 'watch,', 'and', 'he', 'is', 'travelling']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on through
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on Scottish
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on highlands
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on to
// DEBUG: ['down', 'through', 'the', 'Scottish', 'highlands']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on Inverness,
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on tired
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on and
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on ever-so-slightly
// DEBUG: ['to', 'Inverness,', 'tired', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (22, 53)
// DEBUG: Operating on anxious
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on in
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on case
// DEBUG: 121
// DEBUG: (116, 53)
// DEBUG: Operating on he
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on falls
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on asleep
// DEBUG: ['ever-so-slightly', 'anxious', 'in', 'case', 'he', 'falls']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on between
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on now
// DEBUG: 89
// DEBUG: (84, 65)
// DEBUG: Operating on and
// DEBUG: 111
// DEBUG: (106, 65)
// DEBUG: Operating on when
// DEBUG: 140
// DEBUG: (135, 65)
// DEBUG: Operating on the
// DEBUG: 162
// DEBUG: (157, 65)
// DEBUG: Operating on train
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on reaches
// DEBUG: ['asleep', 'between', 'now', 'and', 'when', 'the', 'train']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on station,
// DEBUG: 97
// DEBUG: (92, 77)
// DEBUG: Operating on and
// DEBUG: 119
// DEBUG: (114, 77)
// DEBUG: Operating on misses
// DEBUG: 162
// DEBUG: (157, 77)
// DEBUG: Operating on his
// DEBUG: 184
// DEBUG: (179, 77)
// DEBUG: Operating on cue
// DEBUG: 206
// DEBUG: (201, 77)
// DEBUG: Operating on to
// DEBUG: ['reaches', 'the', 'station,', 'and', 'misses', 'his', 'cue']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on say
// DEBUG: 35
// DEBUG: (30, 89)
// DEBUG: Operating on to
// DEBUG: 50
// DEBUG: (45, 89)
// DEBUG: Operating on Alice,
// DEBUG: 93
// DEBUG: (88, 89)
// DEBUG: Operating on Drew
// DEBUG: 122
// DEBUG: (117, 89)
// DEBUG: Operating on and
// DEBUG: 144
// DEBUG: (139, 89)
// DEBUG: Operating on Aleesha:
// DEBUG: 201
// DEBUG: (196, 89)
// DEBUG: Operating on 'OK,
// DEBUG: ['to', 'say', 'to', 'Alice,', 'Drew', 'and', 'Aleesha:']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on this
// DEBUG: 44
// DEBUG: (39, 101)
// DEBUG: Operating on is
// DEBUG: 59
// DEBUG: (54, 101)
// DEBUG: Operating on Inverness,
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on let's
// DEBUG: 166
// DEBUG: (161, 101)
// DEBUG: Operating on move
// DEBUG: 195
// DEBUG: (190, 101)
// DEBUG: Operating on it.'
// DEBUG: ["'OK,", 'this', 'is', 'Inverness,', "let's", 'move']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['10.03']
// DEBUG: drawing cursor (34, 5)
// DEBUG: ['- Michel Faber']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "It's TIMESTRING according", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "to his watch, and he is travelling", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "down through the Scottish highlands", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "to Inverness, tired and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "ever-so-slightly anxious in case he falls", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "asleep between now and when the train", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "reaches the station, and misses his cue", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "to say to Alice, Drew and Aleesha:", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "'OK, this is Inverness, let's move", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(34, 5, "10.03", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Michel Faber", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:03 - The date was the 14th of May and the clock on his desk said the time was twenty three minutes past ten, so he tapped in the numbers 10.23. At least, that's what he meant to do. In fact he typed in the numbers 10.03. - Andrew Norriss, Ctrl-Z"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on date
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on was
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on 14th
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on of
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on May
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on and
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on the
// DEBUG: ['The', 'date', 'was', 'the', '14th', 'of', 'May', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on clock
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on on
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on his
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on desk
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on said
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on time
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on was
// DEBUG: ['the', 'clock', 'on', 'his', 'desk', 'said', 'the', 'time']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on twenty
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on three
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on minutes
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on past
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on ten,
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on so
// DEBUG: ['was', 'twenty', 'three', 'minutes', 'past', 'ten,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on he
// DEBUG: 28
// DEBUG: (23, 41)
// DEBUG: Operating on tapped
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on in
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on numbers
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on 10.23.
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on At
// DEBUG: ['so', 'he', 'tapped', 'in', 'the', 'numbers', '10.23.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on least,
// DEBUG: 56
// DEBUG: (51, 53)
// DEBUG: Operating on that's
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on what
// DEBUG: 128
// DEBUG: (123, 53)
// DEBUG: Operating on he
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on meant
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on to
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on do.
// DEBUG: ['At', 'least,', "that's", 'what', 'he', 'meant', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on In
// DEBUG: 29
// DEBUG: (24, 65)
// DEBUG: Operating on fact
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on he
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on typed
// DEBUG: 109
// DEBUG: (104, 65)
// DEBUG: Operating on in
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on numbers
// DEBUG: 196
// DEBUG: (191, 65)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['do.', 'In', 'fact', 'he', 'typed', 'in', 'the', 'numbers']
// DEBUG: drawing cursor (5, 65)
// DEBUG: 123
// DEBUG: ['10.03']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['- Andrew Norriss, Ctrl-Z']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "The date was the 14th of May and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the clock on his desk said the time", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "was twenty three minutes past ten,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "so he tapped in the numbers 10.23.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "At least, that's what he meant to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "do. In fact he typed in the numbers", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "10.03", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Andrew Norriss, Ctrl-Z", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:04 for 0 quotations:
    case 604:
      Serial.println(F("No quotes for 10:04"));
      return;

    // Codegen for 10:05 for 1 quotations:
    case 605:
      Serial.println(F("Only one option for 10:05:"));
    Serial.println(F("10:05 - We both watch as a pair of swans sail regally under the little bridge. Then I glance at my watch. It's already five past ten. “We should get going,” I say with a little start. Your mother will be waiting.” “There's no rush,” Nathaniel calls as I hasten down the other side of the bridge. “We've got all day.” He lopes down the bridge. “It's OK. You can slow down.” I try to match his relaxed pace. But I'm not used to this easy rhythm. I'm used to striding along crowded pavements, fighting my way, pushing and elbowing. - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on We
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on both
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on watch
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on as
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on a
// DEBUG: 113
// DEBUG: (108, 5)
// DEBUG: Operating on pair
// DEBUG: 142
// DEBUG: (137, 5)
// DEBUG: Operating on of
// DEBUG: 157
// DEBUG: (152, 5)
// DEBUG: Operating on swans
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on sail
// DEBUG: ['We', 'both', 'watch', 'as', 'a', 'pair', 'of', 'swans']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on regally
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on under
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on the
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on little
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on bridge.
// DEBUG: ['sail', 'regally', 'under', 'the', 'little']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on Then
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on I
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on glance
// DEBUG: 98
// DEBUG: (93, 29)
// DEBUG: Operating on at
// DEBUG: 113
// DEBUG: (108, 29)
// DEBUG: Operating on my
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on watch.
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on It's
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on already
// DEBUG: ['bridge.', 'Then', 'I', 'glance', 'at', 'my', 'watch.', "It's"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on “We
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on should
// DEBUG: ['already', 'TIMESTRING.', '“We']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on get
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on going,”
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on I
// DEBUG: 97
// DEBUG: (92, 53)
// DEBUG: Operating on say
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on with
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on a
// DEBUG: 156
// DEBUG: (151, 53)
// DEBUG: Operating on little
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on start.
// DEBUG: ['should', 'get', 'going,”', 'I', 'say', 'with', 'a', 'little']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on Your
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on mother
// DEBUG: 89
// DEBUG: (84, 65)
// DEBUG: Operating on will
// DEBUG: 118
// DEBUG: (113, 65)
// DEBUG: Operating on be
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on waiting.”
// DEBUG: 197
// DEBUG: (192, 65)
// DEBUG: Operating on “There's
// DEBUG: ['start.', 'Your', 'mother', 'will', 'be', 'waiting.”']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on no
// DEBUG: 34
// DEBUG: (29, 77)
// DEBUG: Operating on rush,”
// DEBUG: 77
// DEBUG: (72, 77)
// DEBUG: Operating on Nathaniel
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on calls
// DEBUG: 177
// DEBUG: (172, 77)
// DEBUG: Operating on as
// DEBUG: 192
// DEBUG: (187, 77)
// DEBUG: Operating on I
// DEBUG: 200
// DEBUG: (195, 77)
// DEBUG: Operating on hasten
// DEBUG: ["“There's", 'no', 'rush,”', 'Nathaniel', 'calls', 'as', 'I']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on down
// DEBUG: 46
// DEBUG: (41, 89)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 89)
// DEBUG: Operating on other
// DEBUG: 104
// DEBUG: (99, 89)
// DEBUG: Operating on side
// DEBUG: 133
// DEBUG: (128, 89)
// DEBUG: Operating on of
// DEBUG: 148
// DEBUG: (143, 89)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 89)
// DEBUG: Operating on bridge.
// DEBUG: ['hasten', 'down', 'the', 'other', 'side', 'of', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on “We've
// DEBUG: 61
// DEBUG: (56, 101)
// DEBUG: Operating on got
// DEBUG: 83
// DEBUG: (78, 101)
// DEBUG: Operating on all
// DEBUG: 105
// DEBUG: (100, 101)
// DEBUG: Operating on day.”
// DEBUG: 141
// DEBUG: (136, 101)
// DEBUG: Operating on He
// DEBUG: 156
// DEBUG: (151, 101)
// DEBUG: Operating on lopes
// DEBUG: 192
// DEBUG: (187, 101)
// DEBUG: Operating on down
// DEBUG: ['bridge.', "“We've", 'got', 'all', 'day.”', 'He', 'lopes']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 113)
// DEBUG: Operating on bridge.
// DEBUG: 87
// DEBUG: (82, 113)
// DEBUG: Operating on “It's
// DEBUG: 123
// DEBUG: (118, 113)
// DEBUG: Operating on OK.
// DEBUG: 145
// DEBUG: (140, 113)
// DEBUG: Operating on You
// DEBUG: 167
// DEBUG: (162, 113)
// DEBUG: Operating on can
// DEBUG: 189
// DEBUG: (184, 113)
// DEBUG: Operating on slow
// DEBUG: ['down', 'the', 'bridge.', "“It's", 'OK.', 'You', 'can']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (10, 125)
// DEBUG: Operating on down.”
// DEBUG: 58
// DEBUG: (53, 125)
// DEBUG: Operating on I
// DEBUG: 66
// DEBUG: (61, 125)
// DEBUG: Operating on try
// DEBUG: 88
// DEBUG: (83, 125)
// DEBUG: Operating on to
// DEBUG: 103
// DEBUG: (98, 125)
// DEBUG: Operating on match
// DEBUG: 139
// DEBUG: (134, 125)
// DEBUG: Operating on his
// DEBUG: 161
// DEBUG: (156, 125)
// DEBUG: Operating on relaxed
// DEBUG: 211
// DEBUG: (206, 125)
// DEBUG: Operating on pace.
// DEBUG: ['slow', 'down.”', 'I', 'try', 'to', 'match', 'his', 'relaxed']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (11, 137)
// DEBUG: Operating on But
// DEBUG: 38
// DEBUG: (33, 137)
// DEBUG: Operating on I'm
// DEBUG: 60
// DEBUG: (55, 137)
// DEBUG: Operating on not
// DEBUG: 82
// DEBUG: (77, 137)
// DEBUG: Operating on used
// DEBUG: 111
// DEBUG: (106, 137)
// DEBUG: Operating on to
// DEBUG: 126
// DEBUG: (121, 137)
// DEBUG: Operating on this
// DEBUG: 155
// DEBUG: (150, 137)
// DEBUG: Operating on easy
// DEBUG: 184
// DEBUG: (179, 137)
// DEBUG: Operating on rhythm.
// DEBUG: ['pace.', 'But', "I'm", 'not', 'used', 'to', 'this', 'easy']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (13, 149)
// DEBUG: Operating on I'm
// DEBUG: 40
// DEBUG: (35, 149)
// DEBUG: Operating on used
// DEBUG: 69
// DEBUG: (64, 149)
// DEBUG: Operating on to
// DEBUG: 84
// DEBUG: (79, 149)
// DEBUG: Operating on striding
// DEBUG: 141
// DEBUG: (136, 149)
// DEBUG: Operating on along
// DEBUG: 177
// DEBUG: (172, 149)
// DEBUG: Operating on crowded
// DEBUG: ['rhythm.', "I'm", 'used', 'to', 'striding', 'along']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (13, 161)
// DEBUG: Operating on pavements,
// DEBUG: 89
// DEBUG: (84, 161)
// DEBUG: Operating on fighting
// DEBUG: 146
// DEBUG: (141, 161)
// DEBUG: Operating on my
// DEBUG: 161
// DEBUG: (156, 161)
// DEBUG: Operating on way,
// DEBUG: 190
// DEBUG: (185, 161)
// DEBUG: Operating on pushing
// DEBUG: ['crowded', 'pavements,', 'fighting', 'my', 'way,']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (13, 173)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 173)
// DEBUG: Operating on elbowing.
// DEBUG: 104
// DEBUG: ['five past ten']
// DEBUG: drawing cursor (13, 41)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "We both watch as a pair of swans", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "sail regally under the little", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "bridge. Then I glance at my watch. It's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "already TIMESTRING. “We", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "should get going,” I say with a little", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "start. Your mother will be waiting.”", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "“There's no rush,” Nathaniel calls as I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "hasten down the other side of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "bridge. “We've got all day.” He lopes", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "down the bridge. “It's OK. You can", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "slow down.” I try to match his relaxed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "pace. But I'm not used to this easy", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 149, "rhythm. I'm used to striding along", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 161, "crowded pavements, fighting my way,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(13, 41, "five past ten", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:06 for 0 quotations:
    case 606:
      Serial.println(F("No quotes for 10:06"));
      return;

    // Codegen for 10:07 for 1 quotations:
    case 607:
      Serial.println(F("Only one option for 10:07:"));
    Serial.println(F("10:07 - 10.07 am: In a meeting with Rod, Momo and Guy. We are rehearsing the final for the third time, with Rod and Guy taking the parts of the clients, when Rod's secretary, Lorraine, bursts in. - Allison Pearson, I Don't Know How She Does It"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING:
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: (140, 5)
// DEBUG: Operating on In
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on a
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on meeting
// DEBUG: ['TIMESTRING:', 'In', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on with
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on Rod,
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on Momo
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on and
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on Guy.
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on We
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on are
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on rehearsing
// DEBUG: ['meeting', 'with', 'Rod,', 'Momo', 'and', 'Guy.', 'We', 'are']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on the
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on final
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on for
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on the
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on third
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on time,
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on with
// DEBUG: ['rehearsing', 'the', 'final', 'for', 'the', 'third', 'time,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on Rod
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on and
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on Guy
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on taking
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on parts
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on of
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on the
// DEBUG: ['with', 'Rod', 'and', 'Guy', 'taking', 'the', 'parts', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on clients,
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on when
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on Rod's
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on secretary,
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on Lorraine,
// DEBUG: ['the', 'clients,', 'when', "Rod's", 'secretary,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on bursts
// DEBUG: 63
// DEBUG: (58, 65)
// DEBUG: Operating on in.
// DEBUG: 85
// DEBUG: ['10.07 am']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Allison Pearson']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING: In a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "meeting with Rod, Momo and Guy. We are", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "rehearsing the final for the third time,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "with Rod and Guy taking the parts of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "the clients, when Rod's secretary,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "10.07 am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Allison Pearson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:08 for 0 quotations:
    case 608:
      Serial.println(F("No quotes for 10:08"));
      return;

    // Codegen for 10:09 for 1 quotations:
    case 609:
      Serial.println(F("Only one option for 10:09:"));
    Serial.println(F("10:09 - He followed the squeals down a hallway. A wall clock read 8:09-10:09 Dallas time. - James Ellroy, American Tabloid"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on followed
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on squeals
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on down
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on a
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on hallway.
// DEBUG: ['He', 'followed', 'the', 'squeals', 'down', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on A
// DEBUG: 27
// DEBUG: (22, 17)
// DEBUG: Operating on wall
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on clock
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on read
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on 8:09-TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['hallway.', 'A', 'wall', 'clock', 'read']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (21, 29)
// DEBUG: Operating on Dallas
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on time.
// DEBUG: 105
// DEBUG: ['10:09']
// DEBUG: drawing cursor (116, 17)
// DEBUG: ['- American Tabloid']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "He followed the squeals down a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "hallway. A wall clock read", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(116, 17, "10:09", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- American Tabloid", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:10 for 2 quotations:
    case 610:
      option = random(0, 2);
      Serial.print(F("2 options for 10:10. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:10 - 10:10 Shot is fired. - John Dickson Carr, The Hollow Man "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on Shot
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on is
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on fired.
// DEBUG: 204
// DEBUG: ['10:10']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Hollow Man']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "10:10", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- The Hollow Man", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:10 - Saturday morning was bright and sunny, and at ten minutes past 10 Donald arrived at the Embankment entrance of Charing Cross Underground Station, carrying a small suitcase full of clothes suitable for outdoor sports and pastimes. - AG Macdonell, England, Their England"));
// DEBUG: (5, 5)
// DEBUG: Operating on Saturday
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on morning
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on was
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on bright
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on and
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on sunny,
// DEBUG: ['Saturday', 'morning', 'was', 'bright', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on at
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['sunny,', 'and', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on Donald
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on arrived
// DEBUG: 114
// DEBUG: (109, 29)
// DEBUG: Operating on at
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on the
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on Embankment
// DEBUG: ['TIMESTRING', 'Donald', 'arrived', 'at', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on entrance
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on of
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on Charing
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on Cross
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on Underground
// DEBUG: ['Embankment', 'entrance', 'of', 'Charing', 'Cross']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on Station,
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on carrying
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on a
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on small
// DEBUG: 180
// DEBUG: (175, 53)
// DEBUG: Operating on suitcase
// DEBUG: ['Underground', 'Station,', 'carrying', 'a', 'small']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on full
// DEBUG: 48
// DEBUG: (43, 65)
// DEBUG: Operating on of
// DEBUG: 63
// DEBUG: (58, 65)
// DEBUG: Operating on clothes
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on suitable
// DEBUG: 170
// DEBUG: (165, 65)
// DEBUG: Operating on for
// DEBUG: 192
// DEBUG: (187, 65)
// DEBUG: Operating on outdoor
// DEBUG: ['suitcase', 'full', 'of', 'clothes', 'suitable', 'for']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on sports
// DEBUG: 61
// DEBUG: (56, 77)
// DEBUG: Operating on and
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on pastimes.
// DEBUG: 147
// DEBUG: ['ten minutes past 10']
// DEBUG: drawing cursor (49, 17)
// DEBUG: ['- England, Their England']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "Saturday morning was bright and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "sunny, and at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING Donald arrived at the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Embankment entrance of Charing Cross", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Underground Station, carrying a small", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "suitcase full of clothes suitable for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(49, 17, "ten minutes past 10", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- England, Their England", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:11 for 1 quotations:
    case 611:
      Serial.println(F("Only one option for 10:11:"));
    Serial.println(F("10:11 - Through the curtained windows of the furnished apartment which Mrs. Horace Hignett had rented for her stay in New York rays of golden sunlight peeped in like the foremost spies of some advancing army. It was a fine summer morning. The hands of the Dutch clock in the hall pointed to thirteen minutes past nine; those of the ormolu clock in the sitting-room to eleven minutes past ten; those of the carriage clock on the bookshelf to fourteen minutes to six. In other words, it was exactly eight; and Mrs. Hignett acknowledged the fact by moving her head on the pillow, opening her eyes, and sitting up in bed. She always woke at eight precisely. - P.G. Wodehouse, Three Men and a Maid "));
// DEBUG: (5, 5)
// DEBUG: Operating on Through
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on the
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on curtained
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on windows
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on of
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on the
// DEBUG: ['Through', 'the', 'curtained', 'windows', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on furnished
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on apartment
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on which
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on Mrs.
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on Horace
// DEBUG: ['the', 'furnished', 'apartment', 'which', 'Mrs.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on Hignett
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on had
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on rented
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on for
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on her
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on stay
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on in
// DEBUG: ['Horace', 'Hignett', 'had', 'rented', 'for', 'her', 'stay']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on New
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on York
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on rays
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on of
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on golden
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on sunlight
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on peeped
// DEBUG: ['in', 'New', 'York', 'rays', 'of', 'golden', 'sunlight']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on like
// DEBUG: 61
// DEBUG: (56, 53)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on foremost
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on spies
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on of
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on some
// DEBUG: ['peeped', 'in', 'like', 'the', 'foremost', 'spies', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on advancing
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on army.
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on It
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on was
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on a
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on fine
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on summer
// DEBUG: ['some', 'advancing', 'army.', 'It', 'was', 'a', 'fine']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on morning.
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on The
// DEBUG: 96
// DEBUG: (91, 77)
// DEBUG: Operating on hands
// DEBUG: 132
// DEBUG: (127, 77)
// DEBUG: Operating on of
// DEBUG: 147
// DEBUG: (142, 77)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 77)
// DEBUG: Operating on Dutch
// DEBUG: 205
// DEBUG: (200, 77)
// DEBUG: Operating on clock
// DEBUG: ['summer', 'morning.', 'The', 'hands', 'of', 'the', 'Dutch']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 89)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 89)
// DEBUG: Operating on hall
// DEBUG: 82
// DEBUG: (77, 89)
// DEBUG: Operating on pointed
// DEBUG: 132
// DEBUG: (127, 89)
// DEBUG: Operating on to
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on thirteen
// DEBUG: 204
// DEBUG: (199, 89)
// DEBUG: Operating on minutes
// DEBUG: ['clock', 'in', 'the', 'hall', 'pointed', 'to', 'thirteen']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on past
// DEBUG: 47
// DEBUG: (42, 101)
// DEBUG: Operating on nine;
// DEBUG: 83
// DEBUG: (78, 101)
// DEBUG: Operating on those
// DEBUG: 119
// DEBUG: (114, 101)
// DEBUG: Operating on of
// DEBUG: 134
// DEBUG: (129, 101)
// DEBUG: Operating on the
// DEBUG: 156
// DEBUG: (151, 101)
// DEBUG: Operating on ormolu
// DEBUG: 199
// DEBUG: (194, 101)
// DEBUG: Operating on clock
// DEBUG: ['minutes', 'past', 'nine;', 'those', 'of', 'the', 'ormolu']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 113)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 113)
// DEBUG: Operating on sitting-room
// DEBUG: 138
// DEBUG: (133, 113)
// DEBUG: Operating on to
// DEBUG: 153
// DEBUG: (148, 113)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: ['clock', 'in', 'the', 'sitting-room', 'to']
// DEBUG: drawing cursor (5, 113)
// DEBUG: []
// DEBUG: drawing cursor (5, 125)
// DEBUG: (17, 137)
// DEBUG: Operating on those
// DEBUG: 58
// DEBUG: (53, 137)
// DEBUG: Operating on of
// DEBUG: 73
// DEBUG: (68, 137)
// DEBUG: Operating on the
// DEBUG: 95
// DEBUG: (90, 137)
// DEBUG: Operating on carriage
// DEBUG: 152
// DEBUG: (147, 137)
// DEBUG: Operating on clock
// DEBUG: 188
// DEBUG: (183, 137)
// DEBUG: Operating on on
// DEBUG: 203
// DEBUG: (198, 137)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING;', 'those', 'of', 'the', 'carriage', 'clock', 'on']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on bookshelf
// DEBUG: 78
// DEBUG: (73, 149)
// DEBUG: Operating on to
// DEBUG: 93
// DEBUG: (88, 149)
// DEBUG: Operating on fourteen
// DEBUG: 150
// DEBUG: (145, 149)
// DEBUG: Operating on minutes
// DEBUG: 200
// DEBUG: (195, 149)
// DEBUG: Operating on to
// DEBUG: ['the', 'bookshelf', 'to', 'fourteen', 'minutes']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (8, 161)
// DEBUG: Operating on six.
// DEBUG: 42
// DEBUG: (37, 161)
// DEBUG: Operating on In
// DEBUG: 57
// DEBUG: (52, 161)
// DEBUG: Operating on other
// DEBUG: 93
// DEBUG: (88, 161)
// DEBUG: Operating on words,
// DEBUG: 136
// DEBUG: (131, 161)
// DEBUG: Operating on it
// DEBUG: 151
// DEBUG: (146, 161)
// DEBUG: Operating on was
// DEBUG: 173
// DEBUG: (168, 161)
// DEBUG: Operating on exactly
// DEBUG: ['to', 'six.', 'In', 'other', 'words,', 'it', 'was']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (13, 173)
// DEBUG: Operating on eight;
// DEBUG: 61
// DEBUG: (56, 173)
// DEBUG: Operating on and
// DEBUG: 83
// DEBUG: (78, 173)
// DEBUG: Operating on Mrs.
// DEBUG: 112
// DEBUG: (107, 173)
// DEBUG: Operating on Hignett
// DEBUG: 162
// DEBUG: (157, 173)
// DEBUG: Operating on acknowledged
// DEBUG: ['exactly', 'eight;', 'and', 'Mrs.', 'Hignett']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (18, 185)
// DEBUG: Operating on the
// DEBUG: 45
// DEBUG: (40, 185)
// DEBUG: Operating on fact
// DEBUG: 74
// DEBUG: (69, 185)
// DEBUG: Operating on by
// DEBUG: 89
// DEBUG: (84, 185)
// DEBUG: Operating on moving
// DEBUG: 132
// DEBUG: (127, 185)
// DEBUG: Operating on her
// DEBUG: 154
// DEBUG: (149, 185)
// DEBUG: Operating on head
// DEBUG: 183
// DEBUG: (178, 185)
// DEBUG: Operating on on
// DEBUG: 198
// DEBUG: (193, 185)
// DEBUG: Operating on the
// DEBUG: ['acknowledged', 'the', 'fact', 'by', 'moving', 'her', 'head', 'on']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (9, 197)
// DEBUG: Operating on pillow,
// DEBUG: 64
// DEBUG: (59, 197)
// DEBUG: Operating on opening
// DEBUG: 114
// DEBUG: (109, 197)
// DEBUG: Operating on her
// DEBUG: 136
// DEBUG: (131, 197)
// DEBUG: Operating on eyes,
// DEBUG: 172
// DEBUG: (167, 197)
// DEBUG: Operating on and
// DEBUG: 194
// DEBUG: (189, 197)
// DEBUG: Operating on sitting
// DEBUG: ['the', 'pillow,', 'opening', 'her', 'eyes,', 'and']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (13, 209)
// DEBUG: Operating on up
// DEBUG: 33
// DEBUG: (28, 209)
// DEBUG: Operating on in
// DEBUG: 48
// DEBUG: (43, 209)
// DEBUG: Operating on bed.
// DEBUG: 77
// DEBUG: (72, 209)
// DEBUG: Operating on She
// DEBUG: 99
// DEBUG: (94, 209)
// DEBUG: Operating on always
// DEBUG: 142
// DEBUG: (137, 209)
// DEBUG: Operating on woke
// DEBUG: 171
// DEBUG: (166, 209)
// DEBUG: Operating on at
// DEBUG: 186
// DEBUG: (181, 209)
// DEBUG: Operating on eight
// DEBUG: ['sitting', 'up', 'in', 'bed.', 'She', 'always', 'woke', 'at']
// DEBUG: drawing cursor (5, 209)
// DEBUG: (11, 221)
// DEBUG: Operating on precisely.
// DEBUG: 87
// DEBUG: ['eleven minutes past ten']
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['- Three Men and a Maid']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "Through the curtained windows of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "the furnished apartment which Mrs.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Horace Hignett had rented for her stay", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "in New York rays of golden sunlight", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "peeped in like the foremost spies of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "some advancing army. It was a fine", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "summer morning. The hands of the Dutch", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "clock in the hall pointed to thirteen", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "minutes past nine; those of the ormolu", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "clock in the sitting-room to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "TIMESTRING; those of the carriage clock on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 149, "the bookshelf to fourteen minutes", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 161, "to six. In other words, it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 173, "exactly eight; and Mrs. Hignett", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 185, "acknowledged the fact by moving her head on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 197, "the pillow, opening her eyes, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 209, "sitting up in bed. She always woke at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "eleven minutes past ten", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Three Men and a Maid", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:12 for 2 quotations:
    case 612:
      option = random(0, 2);
      Serial.print(F("2 options for 10:12. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:12 - I'll take the coffee tray out, I suggest humbly. As I pick it up I glance again at my watch. Ten twelve. I wonder if they've started the meeting. - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on I'll
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on take
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on coffee
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on tray
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on out,
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on I
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on suggest
// DEBUG: ["I'll", 'take', 'the', 'coffee', 'tray', 'out,', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on humbly.
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on As
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on I
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on pick
// DEBUG: 120
// DEBUG: (115, 17)
// DEBUG: Operating on it
// DEBUG: 135
// DEBUG: (130, 17)
// DEBUG: Operating on up
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on I
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on glance
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on again
// DEBUG: ['suggest', 'humbly.', 'As', 'I', 'pick', 'it', 'up', 'I', 'glance']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 29)
// DEBUG: Operating on my
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on watch.
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['again', 'at', 'my', 'watch.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on I
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on wonder
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on if
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on they've
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on started
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on the
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on meeting.
// DEBUG: ['TIMESTRING.', 'I', 'wonder', 'if', "they've", 'started', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['Ten twelve']
// DEBUG: drawing cursor (84, 29)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "I'll take the coffee tray out, I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "suggest humbly. As I pick it up I glance", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "again at my watch.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING. I wonder if they've started the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(84, 29, "Ten twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:12 - He stood up once, early on, to lock his office door, and then he was reading the last page, and it was exactly 10:12 a.m., and the sun beating on his office windows was a different sun from the one he'd always known. - Jonathan Franzen, Freedom"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on stood
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on up
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on once,
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on early
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on on,
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on to
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on lock
// DEBUG: ['He', 'stood', 'up', 'once,', 'early', 'on,', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on his
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on office
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on door,
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on and
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on then
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on he
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on was
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on reading
// DEBUG: ['lock', 'his', 'office', 'door,', 'and', 'then', 'he', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on last
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on page,
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on and
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on it
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on was
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on exactly
// DEBUG: ['reading', 'the', 'last', 'page,', 'and', 'it', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on and
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on the
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on sun
// DEBUG: ['exactly', 'TIMESTRING,', 'and', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on beating
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on on
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on his
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on office
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on windows
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on was
// DEBUG: ['sun', 'beating', 'on', 'his', 'office', 'windows']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on a
// DEBUG: 22
// DEBUG: (17, 65)
// DEBUG: Operating on different
// DEBUG: 86
// DEBUG: (81, 65)
// DEBUG: Operating on sun
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on from
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on the
// DEBUG: 159
// DEBUG: (154, 65)
// DEBUG: Operating on one
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on he'd
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on always
// DEBUG: ['was', 'a', 'different', 'sun', 'from', 'the', 'one', "he'd"]
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on known.
// DEBUG: 60
// DEBUG: ['10:12 a.m.']
// DEBUG: drawing cursor (13, 41)
// DEBUG: ['- Jonathan Franzen, Freedom']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "He stood up once, early on, to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "lock his office door, and then he was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "reading the last page, and it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "exactly TIMESTRING, and the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "sun beating on his office windows", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "was a different sun from the one he'd", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(13, 41, "10:12 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Jonathan Franzen, Freedom", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:13 for 1 quotations:
    case 613:
      Serial.println(F("Only one option for 10:13:"));
    Serial.println(F("10:13 - And I sent it to the Daily Telegraph at thirteen minutes past ten. \"Bravo, Mr. Blount!\" \"Very good, M. Jolivet.\" - Jules Verne, Michel Strogoff"));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on I
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on sent
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on it
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on to
// DEBUG: 99
// DEBUG: (94, 5)
// DEBUG: Operating on the
// DEBUG: 121
// DEBUG: (116, 5)
// DEBUG: Operating on Daily
// DEBUG: 157
// DEBUG: (152, 5)
// DEBUG: Operating on Telegraph
// DEBUG: ['And', 'I', 'sent', 'it', 'to', 'the', 'Daily']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on at
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Telegraph', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on \"Bravo,
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on Mr.
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on Blount!\"
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on \"Very
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on good,
// DEBUG: ['TIMESTRING.', '\\"Bravo,', 'Mr.', 'Blount!\\"', '\\"Very']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on M.
// DEBUG: 31
// DEBUG: (26, 41)
// DEBUG: Operating on Jolivet.\"
// DEBUG: 102
// DEBUG: ['thirteen minutes past ten']
// DEBUG: drawing cursor (30, 17)
// DEBUG: ['- Michel Strogoff']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "And I sent it to the Daily", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Telegraph at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING. \"Bravo, Mr. Blount!\" \"Very", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(30, 17, "thirteen minutes past ten", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Michel Strogoff", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:14 for 1 quotations:
    case 614:
      Serial.println(F("Only one option for 10:14:"));
    Serial.println(F("10:14 - Okay. Ten fourteen: Mrs. Narada reports that her cat has been attacked by a large dog. Now I send all the boys out looking, but they don't find anything until eleven.|Coyote Blue|Christopher Moore 10:15|10.15|At 10.15 Arlena departed from her rondezvous, a minute or two later Patrick Redfern came down and registered surprise, annoyance, etc. Christine's task was easy enough. Keeping her own watch concealed she asked she asked Linda at twenty-five past eleven what time it was. Linda looked at her watch and replied that it was a quarter to twelve.|Evil under the sun |Agatha Christie 10:16|10:16|10:16 At last. Forty minutes of hard work and I have made precisely one bed. I'm way behind. But never mind. Just keep moving. Laundry next.|The Undomestic Goddess |Sophie Kinsella 10:17|seventeen minutes past ten|By the bye,\" said the first, \"I was able this morning to telegraph the very words of the order to my cousin at seventeen minutes past ten.\" - Jules Verne, Michel Strogoff"));
// DEBUG: (5, 5)
// DEBUG: Operating on Okay.
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on TIMESTRING:
// DEBUG: Wrorking on the timestring
// DEBUG: 209
// DEBUG: (204, 5)
// DEBUG: Operating on Mrs.
// DEBUG: ['Okay.', 'TIMESTRING:']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on Narada
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on reports
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on that
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on her
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on cat
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on has
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on been
// DEBUG: ['Mrs.', 'Narada', 'reports', 'that', 'her', 'cat', 'has']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on attacked
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on by
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on a
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on large
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on dog.
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on Now
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on I
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on send
// DEBUG: ['been', 'attacked', 'by', 'a', 'large', 'dog.', 'Now', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on all
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on the
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on boys
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on out
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on looking,
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on but
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on they
// DEBUG: ['send', 'all', 'the', 'boys', 'out', 'looking,', 'but']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on don't
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on find
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on anything
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on until
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on eleven.|Coyote
// DEBUG: ['they', "don't", 'find', 'anything', 'until']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (20, 65)
// DEBUG: Operating on Blue|Christopher
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on Moore
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on 10:15|10.15|At
// DEBUG: ['eleven.|Coyote', 'Blue|Christopher', 'Moore']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (20, 77)
// DEBUG: Operating on 10.15
// DEBUG: 61
// DEBUG: (56, 77)
// DEBUG: Operating on Arlena
// DEBUG: 104
// DEBUG: (99, 77)
// DEBUG: Operating on departed
// DEBUG: 161
// DEBUG: (156, 77)
// DEBUG: Operating on from
// DEBUG: 190
// DEBUG: (185, 77)
// DEBUG: Operating on her
// DEBUG: ['10:15|10.15|At', '10.15', 'Arlena', 'departed', 'from']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on rondezvous,
// DEBUG: 92
// DEBUG: (87, 89)
// DEBUG: Operating on a
// DEBUG: 100
// DEBUG: (95, 89)
// DEBUG: Operating on minute
// DEBUG: 143
// DEBUG: (138, 89)
// DEBUG: Operating on or
// DEBUG: 158
// DEBUG: (153, 89)
// DEBUG: Operating on two
// DEBUG: 180
// DEBUG: (175, 89)
// DEBUG: Operating on later
// DEBUG: ['her', 'rondezvous,', 'a', 'minute', 'or', 'two']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on Patrick
// DEBUG: 66
// DEBUG: (61, 101)
// DEBUG: Operating on Redfern
// DEBUG: 116
// DEBUG: (111, 101)
// DEBUG: Operating on came
// DEBUG: 145
// DEBUG: (140, 101)
// DEBUG: Operating on down
// DEBUG: 174
// DEBUG: (169, 101)
// DEBUG: Operating on and
// DEBUG: 196
// DEBUG: (191, 101)
// DEBUG: Operating on registered
// DEBUG: ['later', 'Patrick', 'Redfern', 'came', 'down', 'and']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (16, 113)
// DEBUG: Operating on surprise,
// DEBUG: 85
// DEBUG: (80, 113)
// DEBUG: Operating on annoyance,
// DEBUG: 156
// DEBUG: (151, 113)
// DEBUG: Operating on etc.
// DEBUG: 185
// DEBUG: (180, 113)
// DEBUG: Operating on Christine's
// DEBUG: ['registered', 'surprise,', 'annoyance,', 'etc.']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (17, 125)
// DEBUG: Operating on task
// DEBUG: 51
// DEBUG: (46, 125)
// DEBUG: Operating on was
// DEBUG: 73
// DEBUG: (68, 125)
// DEBUG: Operating on easy
// DEBUG: 102
// DEBUG: (97, 125)
// DEBUG: Operating on enough.
// DEBUG: 152
// DEBUG: (147, 125)
// DEBUG: Operating on Keeping
// DEBUG: 202
// DEBUG: (197, 125)
// DEBUG: Operating on her
// DEBUG: ["Christine's", 'task', 'was', 'easy', 'enough.', 'Keeping']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (9, 137)
// DEBUG: Operating on own
// DEBUG: 36
// DEBUG: (31, 137)
// DEBUG: Operating on watch
// DEBUG: 72
// DEBUG: (67, 137)
// DEBUG: Operating on concealed
// DEBUG: 136
// DEBUG: (131, 137)
// DEBUG: Operating on she
// DEBUG: 158
// DEBUG: (153, 137)
// DEBUG: Operating on asked
// DEBUG: 194
// DEBUG: (189, 137)
// DEBUG: Operating on she
// DEBUG: ['her', 'own', 'watch', 'concealed', 'she', 'asked']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on asked
// DEBUG: 50
// DEBUG: (45, 149)
// DEBUG: Operating on Linda
// DEBUG: 86
// DEBUG: (81, 149)
// DEBUG: Operating on at
// DEBUG: 101
// DEBUG: (96, 149)
// DEBUG: Operating on twenty-five
// DEBUG: 179
// DEBUG: (174, 149)
// DEBUG: Operating on past
// DEBUG: 208
// DEBUG: (203, 149)
// DEBUG: Operating on eleven
// DEBUG: ['she', 'asked', 'Linda', 'at', 'twenty-five', 'past']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (12, 161)
// DEBUG: Operating on what
// DEBUG: 46
// DEBUG: (41, 161)
// DEBUG: Operating on time
// DEBUG: 75
// DEBUG: (70, 161)
// DEBUG: Operating on it
// DEBUG: 90
// DEBUG: (85, 161)
// DEBUG: Operating on was.
// DEBUG: 119
// DEBUG: (114, 161)
// DEBUG: Operating on Linda
// DEBUG: 155
// DEBUG: (150, 161)
// DEBUG: Operating on looked
// DEBUG: 198
// DEBUG: (193, 161)
// DEBUG: Operating on at
// DEBUG: ['eleven', 'what', 'time', 'it', 'was.', 'Linda', 'looked']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (8, 173)
// DEBUG: Operating on her
// DEBUG: 35
// DEBUG: (30, 173)
// DEBUG: Operating on watch
// DEBUG: 71
// DEBUG: (66, 173)
// DEBUG: Operating on and
// DEBUG: 93
// DEBUG: (88, 173)
// DEBUG: Operating on replied
// DEBUG: 143
// DEBUG: (138, 173)
// DEBUG: Operating on that
// DEBUG: 172
// DEBUG: (167, 173)
// DEBUG: Operating on it
// DEBUG: 187
// DEBUG: (182, 173)
// DEBUG: Operating on was
// DEBUG: 209
// DEBUG: (204, 173)
// DEBUG: Operating on a
// DEBUG: ['at', 'her', 'watch', 'and', 'replied', 'that', 'it', 'was']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (7, 185)
// DEBUG: Operating on quarter
// DEBUG: 62
// DEBUG: (57, 185)
// DEBUG: Operating on to
// DEBUG: 77
// DEBUG: (72, 185)
// DEBUG: Operating on twelve.|Evil
// DEBUG: 162
// DEBUG: (157, 185)
// DEBUG: Operating on under
// DEBUG: 198
// DEBUG: (193, 185)
// DEBUG: Operating on the
// DEBUG: ['a', 'quarter', 'to', 'twelve.|Evil', 'under']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (9, 197)
// DEBUG: Operating on sun
// DEBUG: 36
// DEBUG: (31, 197)
// DEBUG: Operating on |Agatha
// DEBUG: 86
// DEBUG: (81, 197)
// DEBUG: Operating on Christie
// DEBUG: 143
// DEBUG: (138, 197)
// DEBUG: Operating on 10:16|10:16|10:16
// DEBUG: ['the', 'sun', '|Agatha', 'Christie']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (23, 209)
// DEBUG: Operating on At
// DEBUG: 43
// DEBUG: (38, 209)
// DEBUG: Operating on last.
// DEBUG: 79
// DEBUG: (74, 209)
// DEBUG: Operating on Forty
// DEBUG: 115
// DEBUG: (110, 209)
// DEBUG: Operating on minutes
// DEBUG: 165
// DEBUG: (160, 209)
// DEBUG: Operating on of
// DEBUG: 180
// DEBUG: (175, 209)
// DEBUG: Operating on hard
// DEBUG: 209
// DEBUG: (204, 209)
// DEBUG: Operating on work
// DEBUG: ['10:16|10:16|10:16', 'At', 'last.', 'Forty', 'minutes', 'of', 'hard']
// DEBUG: drawing cursor (5, 209)
// DEBUG: (10, 221)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 221)
// DEBUG: Operating on I
// DEBUG: 45
// DEBUG: (40, 221)
// DEBUG: Operating on have
// DEBUG: 74
// DEBUG: (69, 221)
// DEBUG: Operating on made
// DEBUG: 103
// DEBUG: (98, 221)
// DEBUG: Operating on precisely
// DEBUG: 167
// DEBUG: (162, 221)
// DEBUG: Operating on one
// DEBUG: 189
// DEBUG: (184, 221)
// DEBUG: Operating on bed.
// DEBUG: ['work', 'and', 'I', 'have', 'made', 'precisely', 'one']
// DEBUG: drawing cursor (5, 221)
// DEBUG: (10, 233)
// DEBUG: Operating on I'm
// DEBUG: 37
// DEBUG: (32, 233)
// DEBUG: Operating on way
// DEBUG: 59
// DEBUG: (54, 233)
// DEBUG: Operating on behind.
// DEBUG: 109
// DEBUG: (104, 233)
// DEBUG: Operating on But
// DEBUG: 131
// DEBUG: (126, 233)
// DEBUG: Operating on never
// DEBUG: 167
// DEBUG: (162, 233)
// DEBUG: Operating on mind.
// DEBUG: 203
// DEBUG: (198, 233)
// DEBUG: Operating on Just
// DEBUG: ['bed.', "I'm", 'way', 'behind.', 'But', 'never', 'mind.']
// DEBUG: drawing cursor (5, 233)
// DEBUG: (10, 245)
// DEBUG: Operating on keep
// DEBUG: 44
// DEBUG: (39, 245)
// DEBUG: Operating on moving.
// DEBUG: 94
// DEBUG: (89, 245)
// DEBUG: Operating on Laundry
// DEBUG: 144
// DEBUG: (139, 245)
// DEBUG: Operating on next.|The
// DEBUG: 208
// DEBUG: (203, 245)
// DEBUG: Operating on Undomestic
// DEBUG: ['Just', 'keep', 'moving.', 'Laundry', 'next.|The']
// DEBUG: drawing cursor (5, 245)
// DEBUG: (16, 257)
// DEBUG: Operating on Goddess
// DEBUG: 71
// DEBUG: (66, 257)
// DEBUG: Operating on |Sophie
// DEBUG: 121
// DEBUG: (116, 257)
// DEBUG: Operating on Kinsella
// DEBUG: 178
// DEBUG: (173, 257)
// DEBUG: Operating on 10:17|seventeen
// DEBUG: ['Undomestic', 'Goddess', '|Sophie', 'Kinsella']
// DEBUG: drawing cursor (5, 257)
// DEBUG: (21, 269)
// DEBUG: Operating on minutes
// DEBUG: 76
// DEBUG: (71, 269)
// DEBUG: Operating on past
// DEBUG: 105
// DEBUG: (100, 269)
// DEBUG: Operating on ten|By
// DEBUG: 148
// DEBUG: (143, 269)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 269)
// DEBUG: Operating on bye,\"
// DEBUG: ['10:17|seventeen', 'minutes', 'past', 'ten|By', 'the']
// DEBUG: drawing cursor (5, 269)
// DEBUG: (12, 281)
// DEBUG: Operating on said
// DEBUG: 46
// DEBUG: (41, 281)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 281)
// DEBUG: Operating on first,
// DEBUG: 111
// DEBUG: (106, 281)
// DEBUG: Operating on \"I
// DEBUG: 133
// DEBUG: (128, 281)
// DEBUG: Operating on was
// DEBUG: 155
// DEBUG: (150, 281)
// DEBUG: Operating on able
// DEBUG: 184
// DEBUG: (179, 281)
// DEBUG: Operating on this
// DEBUG: ['bye,\\"', 'said', 'the', 'first,', '\\"I', 'was', 'able']
// DEBUG: drawing cursor (5, 281)
// DEBUG: (10, 293)
// DEBUG: Operating on morning
// DEBUG: 65
// DEBUG: (60, 293)
// DEBUG: Operating on to
// DEBUG: 80
// DEBUG: (75, 293)
// DEBUG: Operating on telegraph
// DEBUG: 144
// DEBUG: (139, 293)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 293)
// DEBUG: Operating on very
// DEBUG: 195
// DEBUG: (190, 293)
// DEBUG: Operating on words
// DEBUG: ['this', 'morning', 'to', 'telegraph', 'the', 'very']
// DEBUG: drawing cursor (5, 293)
// DEBUG: (11, 305)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 305)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 305)
// DEBUG: Operating on order
// DEBUG: 89
// DEBUG: (84, 305)
// DEBUG: Operating on to
// DEBUG: 104
// DEBUG: (99, 305)
// DEBUG: Operating on my
// DEBUG: 119
// DEBUG: (114, 305)
// DEBUG: Operating on cousin
// DEBUG: 162
// DEBUG: (157, 305)
// DEBUG: Operating on at
// DEBUG: 177
// DEBUG: (172, 305)
// DEBUG: Operating on seventeen
// DEBUG: ['words', 'of', 'the', 'order', 'to', 'my', 'cousin', 'at']
// DEBUG: drawing cursor (5, 305)
// DEBUG: (15, 317)
// DEBUG: Operating on minutes
// DEBUG: 70
// DEBUG: (65, 317)
// DEBUG: Operating on past
// DEBUG: 99
// DEBUG: (94, 317)
// DEBUG: Operating on ten.\"
// DEBUG: 142
// DEBUG: ['Ten fourteen']
// DEBUG: drawing cursor (41, 5)
// DEBUG: ['- Michel Strogoff']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "Okay. TIMESTRING:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Mrs. Narada reports that her cat has", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "been attacked by a large dog. Now I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "send all the boys out looking, but", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "they don't find anything until", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "eleven.|Coyote Blue|Christopher Moore", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "10:15|10.15|At 10.15 Arlena departed from", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "her rondezvous, a minute or two", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "later Patrick Redfern came down and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "registered surprise, annoyance, etc.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "Christine's task was easy enough. Keeping", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "her own watch concealed she asked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 149, "she asked Linda at twenty-five past", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 161, "eleven what time it was. Linda looked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 173, "at her watch and replied that it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 185, "a quarter to twelve.|Evil under", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 197, "the sun |Agatha Christie", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 209, "10:16|10:16|10:16 At last. Forty minutes of hard", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 221, "work and I have made precisely one", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 233, "bed. I'm way behind. But never mind.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 245, "Just keep moving. Laundry next.|The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 257, "Undomestic Goddess |Sophie Kinsella", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 269, "10:17|seventeen minutes past ten|By the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 281, "bye,\" said the first, \"I was able", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 293, "this morning to telegraph the very", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 305, "words of the order to my cousin at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(41, 5, "Ten fourteen", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Michel Strogoff", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:15 for 0 quotations:
    case 615:
      Serial.println(F("No quotes for 10:15"));
      return;

    // Codegen for 10:16 for 0 quotations:
    case 616:
      Serial.println(F("No quotes for 10:16"));
      return;

    // Codegen for 10:17 for 0 quotations:
    case 617:
      Serial.println(F("No quotes for 10:17"));
      return;

    // Codegen for 10:18 for 1 quotations:
    case 618:
      Serial.println(F("Only one option for 10:18:"));
    Serial.println(F("10:18 - I know that it was 10:18 when I got home because I look at my watch a lot. - Jonathan Safran Foer, Extremely Loud and Incredibly Close"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on know
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on that
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on it
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on was
// DEBUG: 113
// DEBUG: (108, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['I', 'know', 'that', 'it', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on when
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on I
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on got
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on home
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on because
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on I
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on look
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on at
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on my
// DEBUG: ['TIMESTRING', 'when', 'I', 'got', 'home', 'because', 'I', 'look', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on watch
// DEBUG: 49
// DEBUG: (44, 29)
// DEBUG: Operating on a
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on lot.
// DEBUG: 86
// DEBUG: ['10:18']
// DEBUG: drawing cursor (108, 5)
// DEBUG: ['- Jonathan Safran Foer']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "I know that it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING when I got home because I look at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(108, 5, "10:18", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Jonathan Safran Foer", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:19 for 0 quotations:
    case 619:
      Serial.println(F("No quotes for 10:19"));
      return;

    // Codegen for 10:20 for 1 quotations:
    case 620:
      Serial.println(F("Only one option for 10:20:"));
    Serial.println(F("10:20 - How much is the clock fast now? His mother straightened the battered alarm clock that was lying on its side in the middle of the mantelpiece until its dial showed a quarter to twelve and then laid it once more on its side. An hour and twenty-five minutes, she said. The right time now is twenty past ten. - James Joyce, A Portrait of the Artist as a Young Man"));
// DEBUG: (5, 5)
// DEBUG: Operating on How
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on much
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on is
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on the
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on clock
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on fast
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on now?
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on His
// DEBUG: ['How', 'much', 'is', 'the', 'clock', 'fast', 'now?']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on mother
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on straightened
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on the
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on battered
// DEBUG: ['His', 'mother', 'straightened', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on alarm
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on clock
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on that
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on was
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on lying
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on on
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on its
// DEBUG: ['battered', 'alarm', 'clock', 'that', 'was', 'lying', 'on']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on side
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on in
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on the
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on middle
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on of
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on the
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on mantelpiece
// DEBUG: ['its', 'side', 'in', 'the', 'middle', 'of', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on until
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on its
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on dial
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on showed
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on a
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on quarter
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on to
// DEBUG: ['mantelpiece', 'until', 'its', 'dial', 'showed', 'a', 'quarter']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on twelve
// DEBUG: 56
// DEBUG: (51, 65)
// DEBUG: Operating on and
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on then
// DEBUG: 107
// DEBUG: (102, 65)
// DEBUG: Operating on laid
// DEBUG: 136
// DEBUG: (131, 65)
// DEBUG: Operating on it
// DEBUG: 151
// DEBUG: (146, 65)
// DEBUG: Operating on once
// DEBUG: 180
// DEBUG: (175, 65)
// DEBUG: Operating on more
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on on
// DEBUG: ['to', 'twelve', 'and', 'then', 'laid', 'it', 'once', 'more']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on its
// DEBUG: 35
// DEBUG: (30, 77)
// DEBUG: Operating on side.
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on An
// DEBUG: 86
// DEBUG: (81, 77)
// DEBUG: Operating on hour
// DEBUG: 115
// DEBUG: (110, 77)
// DEBUG: Operating on and
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on twenty-five
// DEBUG: ['on', 'its', 'side.', 'An', 'hour', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (17, 89)
// DEBUG: Operating on minutes,
// DEBUG: 79
// DEBUG: (74, 89)
// DEBUG: Operating on she
// DEBUG: 101
// DEBUG: (96, 89)
// DEBUG: Operating on said.
// DEBUG: 137
// DEBUG: (132, 89)
// DEBUG: Operating on The
// DEBUG: 159
// DEBUG: (154, 89)
// DEBUG: Operating on right
// DEBUG: 195
// DEBUG: (190, 89)
// DEBUG: Operating on time
// DEBUG: ['twenty-five', 'minutes,', 'she', 'said.', 'The', 'right']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on now
// DEBUG: 37
// DEBUG: (32, 101)
// DEBUG: Operating on is
// DEBUG: 52
// DEBUG: (47, 101)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['time', 'now', 'is']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['twenty past ten']
// DEBUG: drawing cursor (47, 101)
// DEBUG: ['- James Joyce']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "How much is the clock fast now?", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "His mother straightened the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "battered alarm clock that was lying on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "its side in the middle of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "mantelpiece until its dial showed a quarter", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "to twelve and then laid it once more", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "on its side. An hour and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "twenty-five minutes, she said. The right", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "time now is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(47, 101, "twenty past ten", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- James Joyce", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:21 for 1 quotations:
    case 621:
      Serial.println(F("Only one option for 10:21:"));
    Serial.println(F("10:21 - Liz Headleand stares into the mirror, as though entranced. She does not see herself or the objects on her dressing-table. The clock abruptly jerks to 10.21. - Margaret Drabble, The Radiant Way"));
// DEBUG: (5, 5)
// DEBUG: Operating on Liz
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Headleand
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on stares
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on into
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on the
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on mirror,
// DEBUG: ['Liz', 'Headleand', 'stares', 'into', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on as
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on though
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on entranced.
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on She
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on does
// DEBUG: 198
// DEBUG: (193, 17)
// DEBUG: Operating on not
// DEBUG: ['mirror,', 'as', 'though', 'entranced.', 'She', 'does']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on see
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on herself
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on or
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on the
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on objects
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on on
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on her
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on dressing-table.
// DEBUG: ['not', 'see', 'herself', 'or', 'the', 'objects', 'on', 'her']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (21, 41)
// DEBUG: Operating on The
// DEBUG: 48
// DEBUG: (43, 41)
// DEBUG: Operating on clock
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on abruptly
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on jerks
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on to
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['dressing-table.', 'The', 'clock', 'abruptly', 'jerks', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: 123
// DEBUG: ['10.21']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- The Radiant Way']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "Liz Headleand stares into the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "mirror, as though entranced. She does", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "not see herself or the objects on her", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "dressing-table. The clock abruptly jerks to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "10.21", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- The Radiant Way", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:22 for 1 quotations:
    case 622:
      Serial.println(F("Only one option for 10:22:"));
    Serial.println(F("10:22 - I listened to them, and listened to them again, and then before I had time to figure out what to do, or even what to think or feel, the phone started ringing. It was 10:22:27. I looked at the caller ID and saw that it was him. - Jonathan Safran Foer, Extremely Loud and Incredibly Close"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on listened
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on to
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on them,
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on and
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on listened
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on to
// DEBUG: ['I', 'listened', 'to', 'them,', 'and', 'listened']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on them
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on again,
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on and
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on then
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on before
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on I
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on had
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on time
// DEBUG: ['to', 'them', 'again,', 'and', 'then', 'before', 'I', 'had']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on figure
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on out
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on what
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on to
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on do,
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on or
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on even
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on what
// DEBUG: ['time', 'to', 'figure', 'out', 'what', 'to', 'do,', 'or', 'even']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on think
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on or
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on feel,
// DEBUG: 117
// DEBUG: (112, 41)
// DEBUG: Operating on the
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on phone
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on started
// DEBUG: ['what', 'to', 'think', 'or', 'feel,', 'the', 'phone']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on ringing.
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on It
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on was
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on TIMESTRING:27.
// DEBUG: Wrorking on the timestring
// DEBUG: ['started', 'ringing.', 'It', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (20, 65)
// DEBUG: Operating on I
// DEBUG: 33
// DEBUG: (28, 65)
// DEBUG: Operating on looked
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on at
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on the
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on caller
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on ID
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on and
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on saw
// DEBUG: ['TIMESTRING:27.', 'I', 'looked', 'at', 'the', 'caller', 'ID', 'and']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on that
// DEBUG: 43
// DEBUG: (38, 77)
// DEBUG: Operating on it
// DEBUG: 58
// DEBUG: (53, 77)
// DEBUG: Operating on was
// DEBUG: 80
// DEBUG: (75, 77)
// DEBUG: Operating on him.
// DEBUG: 109
// DEBUG: ['10:22']
// DEBUG: drawing cursor (107, 53)
// DEBUG: ['- Jonathan Safran Foer']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "I listened to them, and listened", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "to them again, and then before I had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "time to figure out what to do, or even", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "what to think or feel, the phone", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "started ringing. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING:27. I looked at the caller ID and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(107, 53, "10:22", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Jonathan Safran Foer", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:23 for 1 quotations:
    case 623:
      Serial.println(F("Only one option for 10:23:"));
    Serial.println(F("10:23 - The date was the 14th of May and the clock on his desk said the time was twenty three minutes past ten, so he tapped in the numbers 10.23. At least, that's what he meant to do. In fact he typed in the numbers 10.03 - Andrew Norriss, Ctrl-Z"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on date
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on was
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on the
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on 14th
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on of
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on May
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on and
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on the
// DEBUG: ['The', 'date', 'was', 'the', '14th', 'of', 'May', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on clock
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on on
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on his
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on desk
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on said
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on time
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on was
// DEBUG: ['the', 'clock', 'on', 'his', 'desk', 'said', 'the', 'time']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on so
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on he
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on tapped
// DEBUG: 95
// DEBUG: (90, 53)
// DEBUG: Operating on in
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on the
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on numbers
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on 10.23.
// DEBUG: ['TIMESTRING,', 'so', 'he', 'tapped', 'in', 'the', 'numbers']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on At
// DEBUG: 32
// DEBUG: (27, 65)
// DEBUG: Operating on least,
// DEBUG: 75
// DEBUG: (70, 65)
// DEBUG: Operating on that's
// DEBUG: 118
// DEBUG: (113, 65)
// DEBUG: Operating on what
// DEBUG: 147
// DEBUG: (142, 65)
// DEBUG: Operating on he
// DEBUG: 162
// DEBUG: (157, 65)
// DEBUG: Operating on meant
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on to
// DEBUG: ['10.23.', 'At', 'least,', "that's", 'what', 'he', 'meant']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on do.
// DEBUG: 35
// DEBUG: (30, 77)
// DEBUG: Operating on In
// DEBUG: 50
// DEBUG: (45, 77)
// DEBUG: Operating on fact
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on he
// DEBUG: 94
// DEBUG: (89, 77)
// DEBUG: Operating on typed
// DEBUG: 130
// DEBUG: (125, 77)
// DEBUG: Operating on in
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on the
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on numbers
// DEBUG: ['to', 'do.', 'In', 'fact', 'he', 'typed', 'in', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on 10.03
// DEBUG: 54
// DEBUG: ['twenty three minutes past ten']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Andrew Norriss, Ctrl-Z']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "The date was the 14th of May and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "the clock on his desk said the time", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING, so he tapped in the numbers", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "10.23. At least, that's what he meant", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "to do. In fact he typed in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "twenty three minutes past ten", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Andrew Norriss, Ctrl-Z", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:24 for 0 quotations:
    case 624:
      Serial.println(F("No quotes for 10:24"));
      return;

    // Codegen for 10:25 for 2 quotations:
    case 625:
      option = random(0, 2);
      Serial.print(F("2 options for 10:25. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:25 - 10:25: Phone call from Lüding, very worked up, urging me to return at once and get in touch with Alois, who was equally worked up. - Heinrich Böll, The Lost Honour of Katharina Blum"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING:
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on Phone
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on call
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on from
// DEBUG: ['TIMESTRING:', 'Phone', 'call']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on Lüding,
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on very
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on worked
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on up,
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on urging
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on me
// DEBUG: ['from', 'Lüding,', 'very', 'worked', 'up,', 'urging']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on to
// DEBUG: 28
// DEBUG: (23, 29)
// DEBUG: Operating on return
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on at
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on once
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on and
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on get
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on in
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on touch
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on with
// DEBUG: ['me', 'to', 'return', 'at', 'once', 'and', 'get', 'in', 'touch']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on Alois,
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on who
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on was
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on equally
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on worked
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on up.
// DEBUG: ['with', 'Alois,', 'who', 'was', 'equally', 'worked']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['10:25']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Heinrich Böll']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING: Phone call", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "from Lüding, very worked up, urging", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "me to return at once and get in touch", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "with Alois, who was equally worked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "10:25", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Heinrich Böll", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:25 - One meal is enough now, topped up with a glucose shot. Sleep is still 'black', completely unrefreshing. Last night I took a 16 mm. film of the first three hours, screened it this morning at the lab. The first true-horror movie. I looked like a half-animated corpse. Woke 10:25. To sleep 3:45. - JG Ballard, The Voices of Time "));
// DEBUG: (5, 5)
// DEBUG: Operating on One
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on meal
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on is
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on enough
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on now,
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on topped
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on up
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on with
// DEBUG: ['One', 'meal', 'is', 'enough', 'now,', 'topped', 'up']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 17)
// DEBUG: Operating on glucose
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on shot.
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on Sleep
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on is
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on still
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on 'black',
// DEBUG: ['with', 'a', 'glucose', 'shot.', 'Sleep', 'is', 'still']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on completely
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on unrefreshing.
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on Last
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on night
// DEBUG: ["'black',", 'completely', 'unrefreshing.', 'Last']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on I
// DEBUG: 24
// DEBUG: (19, 41)
// DEBUG: Operating on took
// DEBUG: 53
// DEBUG: (48, 41)
// DEBUG: Operating on a
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on 16
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on mm.
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on film
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on of
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on the
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on first
// DEBUG: 200
// DEBUG: (195, 41)
// DEBUG: Operating on three
// DEBUG: ['night', 'I', 'took', 'a', '16', 'mm.', 'film', 'of', 'the', 'first']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on hours,
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on screened
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on it
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on this
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on morning
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on at
// DEBUG: ['three', 'hours,', 'screened', 'it', 'this', 'morning']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on lab.
// DEBUG: 64
// DEBUG: (59, 65)
// DEBUG: Operating on The
// DEBUG: 86
// DEBUG: (81, 65)
// DEBUG: Operating on first
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on true-horror
// DEBUG: 200
// DEBUG: (195, 65)
// DEBUG: Operating on movie.
// DEBUG: ['at', 'the', 'lab.', 'The', 'first', 'true-horror']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on I
// DEBUG: 25
// DEBUG: (20, 77)
// DEBUG: Operating on looked
// DEBUG: 68
// DEBUG: (63, 77)
// DEBUG: Operating on like
// DEBUG: 97
// DEBUG: (92, 77)
// DEBUG: Operating on a
// DEBUG: 105
// DEBUG: (100, 77)
// DEBUG: Operating on half-animated
// DEBUG: 197
// DEBUG: (192, 77)
// DEBUG: Operating on corpse.
// DEBUG: ['movie.', 'I', 'looked', 'like', 'a', 'half-animated']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on Woke
// DEBUG: 47
// DEBUG: (42, 89)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 161
// DEBUG: (156, 89)
// DEBUG: Operating on To
// DEBUG: 176
// DEBUG: (171, 89)
// DEBUG: Operating on sleep
// DEBUG: ['corpse.', 'Woke', 'TIMESTRING.', 'To']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on 3:45.
// DEBUG: 52
// DEBUG: ['10:25']
// DEBUG: drawing cursor (42, 89)
// DEBUG: ['- The Voices of Time']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "One meal is enough now, topped up", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "with a glucose shot. Sleep is still", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "'black', completely unrefreshing. Last", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "night I took a 16 mm. film of the first", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "three hours, screened it this morning", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "at the lab. The first true-horror", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "movie. I looked like a half-animated", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "corpse. Woke TIMESTRING. To", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 89, "10:25", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Voices of Time", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:26 for 2 quotations:
    case 626:
      option = random(0, 2);
      Serial.print(F("2 options for 10:26. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:26 - 10:26 No. Please, no. I can hardly bear to look. It's a total disaster. Everything in the washing machine has gone pink. Every single thing. What happened? With trembling fingers I pick out a damp cashmere cardigan. It was a cream when I put it in. It's now a sickly shade of candy floss. I knew K3 was bad news. I knew it - - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on No.
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on Please,
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on no.
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on I
// DEBUG: ['TIMESTRING', 'No.', 'Please,', 'no.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (7, 17)
// DEBUG: Operating on can
// DEBUG: 34
// DEBUG: (29, 17)
// DEBUG: Operating on hardly
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on bear
// DEBUG: 106
// DEBUG: (101, 17)
// DEBUG: Operating on to
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on look.
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on It's
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on a
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on total
// DEBUG: ['I', 'can', 'hardly', 'bear', 'to', 'look.', "It's", 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on disaster.
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on Everything
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on in
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on washing
// DEBUG: ['total', 'disaster.', 'Everything', 'in', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on machine
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on has
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on gone
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on pink.
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on Every
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on single
// DEBUG: ['washing', 'machine', 'has', 'gone', 'pink.', 'Every']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on thing.
// DEBUG: 60
// DEBUG: (55, 53)
// DEBUG: Operating on What
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on happened?
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on With
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on trembling
// DEBUG: ['single', 'thing.', 'What', 'happened?', 'With']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on fingers
// DEBUG: 70
// DEBUG: (65, 65)
// DEBUG: Operating on I
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on pick
// DEBUG: 107
// DEBUG: (102, 65)
// DEBUG: Operating on out
// DEBUG: 129
// DEBUG: (124, 65)
// DEBUG: Operating on a
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on damp
// DEBUG: 166
// DEBUG: (161, 65)
// DEBUG: Operating on cashmere
// DEBUG: ['trembling', 'fingers', 'I', 'pick', 'out', 'a', 'damp']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on cardigan.
// DEBUG: 83
// DEBUG: (78, 77)
// DEBUG: Operating on It
// DEBUG: 98
// DEBUG: (93, 77)
// DEBUG: Operating on was
// DEBUG: 120
// DEBUG: (115, 77)
// DEBUG: Operating on a
// DEBUG: 128
// DEBUG: (123, 77)
// DEBUG: Operating on cream
// DEBUG: 164
// DEBUG: (159, 77)
// DEBUG: Operating on when
// DEBUG: 193
// DEBUG: (188, 77)
// DEBUG: Operating on I
// DEBUG: 201
// DEBUG: (196, 77)
// DEBUG: Operating on put
// DEBUG: ['cashmere', 'cardigan.', 'It', 'was', 'a', 'cream', 'when', 'I']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on it
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on in.
// DEBUG: 51
// DEBUG: (46, 89)
// DEBUG: Operating on It's
// DEBUG: 80
// DEBUG: (75, 89)
// DEBUG: Operating on now
// DEBUG: 102
// DEBUG: (97, 89)
// DEBUG: Operating on a
// DEBUG: 110
// DEBUG: (105, 89)
// DEBUG: Operating on sickly
// DEBUG: 153
// DEBUG: (148, 89)
// DEBUG: Operating on shade
// DEBUG: 189
// DEBUG: (184, 89)
// DEBUG: Operating on of
// DEBUG: 204
// DEBUG: (199, 89)
// DEBUG: Operating on candy
// DEBUG: ['put', 'it', 'in.', "It's", 'now', 'a', 'sickly', 'shade', 'of']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on floss.
// DEBUG: 59
// DEBUG: (54, 101)
// DEBUG: Operating on I
// DEBUG: 67
// DEBUG: (62, 101)
// DEBUG: Operating on knew
// DEBUG: 96
// DEBUG: (91, 101)
// DEBUG: Operating on K3
// DEBUG: 111
// DEBUG: (106, 101)
// DEBUG: Operating on was
// DEBUG: 133
// DEBUG: (128, 101)
// DEBUG: Operating on bad
// DEBUG: 155
// DEBUG: (150, 101)
// DEBUG: Operating on news.
// DEBUG: 191
// DEBUG: (186, 101)
// DEBUG: Operating on I
// DEBUG: 199
// DEBUG: (194, 101)
// DEBUG: Operating on knew
// DEBUG: ['candy', 'floss.', 'I', 'knew', 'K3', 'was', 'bad', 'news.', 'I']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 113)
// DEBUG: Operating on -
// DEBUG: 38
// DEBUG: ['10:26']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING No. Please, no.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "I can hardly bear to look. It's a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "total disaster. Everything in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "washing machine has gone pink. Every", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "single thing. What happened? With", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "trembling fingers I pick out a damp", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "cashmere cardigan. It was a cream when I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "put it in. It's now a sickly shade of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "candy floss. I knew K3 was bad news. I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "10:26", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:26 - In the exact centre of my visual field was the alarm clock, hands pointing to ten-twenty-six. An alarm clock I received as a memento of somebody's wedding. - Haruki Murakami, Hard-boiled Wonderland and The End of the World"));
// DEBUG: (5, 5)
// DEBUG: Operating on In
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on exact
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on centre
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on of
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on my
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on visual
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on field
// DEBUG: ['In', 'the', 'exact', 'centre', 'of', 'my', 'visual']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on was
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on the
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on alarm
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on clock,
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on hands
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on pointing
// DEBUG: ['field', 'was', 'the', 'alarm', 'clock,', 'hands']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on An
// DEBUG: ['pointing', 'to', 'TIMESTRING.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on alarm
// DEBUG: 49
// DEBUG: (44, 41)
// DEBUG: Operating on clock
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on I
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on received
// DEBUG: 150
// DEBUG: (145, 41)
// DEBUG: Operating on as
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on a
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on memento
// DEBUG: ['An', 'alarm', 'clock', 'I', 'received', 'as', 'a']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on somebody's
// DEBUG: 104
// DEBUG: (99, 53)
// DEBUG: Operating on wedding.
// DEBUG: 161
// DEBUG: ['ten-twenty-six']
// DEBUG: drawing cursor (29, 29)
// DEBUG: ['- Haruki Murakami']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "In the exact centre of my visual", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "field was the alarm clock, hands", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "pointing to TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "An alarm clock I received as a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(29, 29, "ten-twenty-six", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Haruki Murakami", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:27 for 2 quotations:
    case 627:
      option = random(0, 2);
      Serial.print(F("2 options for 10:27. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:27 - Mr. Harcourt woke up with mysterious suddenness at twenty-seven minutes past 10, and, by a curious coincidence, it was at that very instant that the butler came in with two footmen laden with trays of whisky, brandy, syphons, glasses, and biscuits. - AG Macdonell, England, Their England"));
// DEBUG: (5, 5)
// DEBUG: Operating on Mr.
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Harcourt
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on woke
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on up
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on with
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on mysterious
// DEBUG: ['Mr.', 'Harcourt', 'woke', 'up', 'with']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on suddenness
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on at
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['mysterious', 'suddenness', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on and,
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on by
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on a
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on curious
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on coincidence,
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on it
// DEBUG: ['TIMESTRING,', 'and,', 'by', 'a', 'curious', 'coincidence,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on was
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on at
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on that
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on very
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on instant
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on that
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on the
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on butler
// DEBUG: ['it', 'was', 'at', 'that', 'very', 'instant', 'that', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on came
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on in
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on with
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on two
// DEBUG: 112
// DEBUG: (107, 65)
// DEBUG: Operating on footmen
// DEBUG: 162
// DEBUG: (157, 65)
// DEBUG: Operating on laden
// DEBUG: 198
// DEBUG: (193, 65)
// DEBUG: Operating on with
// DEBUG: ['butler', 'came', 'in', 'with', 'two', 'footmen', 'laden']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on trays
// DEBUG: 51
// DEBUG: (46, 77)
// DEBUG: Operating on of
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on whisky,
// DEBUG: 116
// DEBUG: (111, 77)
// DEBUG: Operating on brandy,
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on syphons,
// DEBUG: ['with', 'trays', 'of', 'whisky,', 'brandy,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (14, 89)
// DEBUG: Operating on glasses,
// DEBUG: 76
// DEBUG: (71, 89)
// DEBUG: Operating on and
// DEBUG: 98
// DEBUG: (93, 89)
// DEBUG: Operating on biscuits.
// DEBUG: 162
// DEBUG: ['twenty-seven minutes past 10']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- England, Their England']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "Mr. Harcourt woke up with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "mysterious suddenness at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING, and, by a curious coincidence,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "it was at that very instant that the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "butler came in with two footmen laden", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "with trays of whisky, brandy,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "twenty-seven minutes past 10", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- England, Their England", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:27 - She is on holiday in Norfolk. The substandard clock radio says 10:27 a.m. The noise is Katrina the Cleaner thumping the hoover against the skirting boards and the bedroom doors. Her hand is asleep. It is still hooked through the handstrap of the camera. She unhooks it and shakes it to get the blood back into it. She puts her feet on top of her trainers and slides them across the substandard carpet. It has the bare naked feet of who knows how many hundreds of dead or old people on it. - Ali Smith, The Accidental "));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on is
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on on
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on holiday
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on in
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on Norfolk.
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on The
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on substandard
// DEBUG: ['She', 'is', 'on', 'holiday', 'in', 'Norfolk.', 'The']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on clock
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on radio
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on says
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['substandard', 'clock', 'radio', 'says']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on The
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on noise
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on is
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on Katrina
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on Cleaner
// DEBUG: ['TIMESTRING', 'The', 'noise', 'is', 'Katrina', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on thumping
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on hoover
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on against
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on the
// DEBUG: ['Cleaner', 'thumping', 'the', 'hoover', 'against']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on skirting
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on boards
// DEBUG: 114
// DEBUG: (109, 53)
// DEBUG: Operating on and
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on the
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on bedroom
// DEBUG: 208
// DEBUG: (203, 53)
// DEBUG: Operating on doors.
// DEBUG: ['the', 'skirting', 'boards', 'and', 'the', 'bedroom']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on Her
// DEBUG: 39
// DEBUG: (34, 65)
// DEBUG: Operating on hand
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on is
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on asleep.
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on It
// DEBUG: 148
// DEBUG: (143, 65)
// DEBUG: Operating on is
// DEBUG: 163
// DEBUG: (158, 65)
// DEBUG: Operating on still
// DEBUG: 199
// DEBUG: (194, 65)
// DEBUG: Operating on hooked
// DEBUG: ['doors.', 'Her', 'hand', 'is', 'asleep.', 'It', 'is', 'still']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on through
// DEBUG: 67
// DEBUG: (62, 77)
// DEBUG: Operating on the
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on handstrap
// DEBUG: 153
// DEBUG: (148, 77)
// DEBUG: Operating on of
// DEBUG: 168
// DEBUG: (163, 77)
// DEBUG: Operating on the
// DEBUG: 190
// DEBUG: (185, 77)
// DEBUG: Operating on camera.
// DEBUG: ['hooked', 'through', 'the', 'handstrap', 'of', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on She
// DEBUG: 40
// DEBUG: (35, 89)
// DEBUG: Operating on unhooks
// DEBUG: 90
// DEBUG: (85, 89)
// DEBUG: Operating on it
// DEBUG: 105
// DEBUG: (100, 89)
// DEBUG: Operating on and
// DEBUG: 127
// DEBUG: (122, 89)
// DEBUG: Operating on shakes
// DEBUG: 170
// DEBUG: (165, 89)
// DEBUG: Operating on it
// DEBUG: 185
// DEBUG: (180, 89)
// DEBUG: Operating on to
// DEBUG: 200
// DEBUG: (195, 89)
// DEBUG: Operating on get
// DEBUG: ['camera.', 'She', 'unhooks', 'it', 'and', 'shakes', 'it', 'to']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 101)
// DEBUG: Operating on blood
// DEBUG: 72
// DEBUG: (67, 101)
// DEBUG: Operating on back
// DEBUG: 101
// DEBUG: (96, 101)
// DEBUG: Operating on into
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on it.
// DEBUG: 152
// DEBUG: (147, 101)
// DEBUG: Operating on She
// DEBUG: 174
// DEBUG: (169, 101)
// DEBUG: Operating on puts
// DEBUG: 203
// DEBUG: (198, 101)
// DEBUG: Operating on her
// DEBUG: ['get', 'the', 'blood', 'back', 'into', 'it.', 'She', 'puts']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on feet
// DEBUG: 43
// DEBUG: (38, 113)
// DEBUG: Operating on on
// DEBUG: 58
// DEBUG: (53, 113)
// DEBUG: Operating on top
// DEBUG: 80
// DEBUG: (75, 113)
// DEBUG: Operating on of
// DEBUG: 95
// DEBUG: (90, 113)
// DEBUG: Operating on her
// DEBUG: 117
// DEBUG: (112, 113)
// DEBUG: Operating on trainers
// DEBUG: 174
// DEBUG: (169, 113)
// DEBUG: Operating on and
// DEBUG: 196
// DEBUG: (191, 113)
// DEBUG: Operating on slides
// DEBUG: ['her', 'feet', 'on', 'top', 'of', 'her', 'trainers', 'and']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (12, 125)
// DEBUG: Operating on them
// DEBUG: 46
// DEBUG: (41, 125)
// DEBUG: Operating on across
// DEBUG: 89
// DEBUG: (84, 125)
// DEBUG: Operating on the
// DEBUG: 111
// DEBUG: (106, 125)
// DEBUG: Operating on substandard
// DEBUG: 189
// DEBUG: (184, 125)
// DEBUG: Operating on carpet.
// DEBUG: ['slides', 'them', 'across', 'the', 'substandard']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (13, 137)
// DEBUG: Operating on It
// DEBUG: 33
// DEBUG: (28, 137)
// DEBUG: Operating on has
// DEBUG: 55
// DEBUG: (50, 137)
// DEBUG: Operating on the
// DEBUG: 77
// DEBUG: (72, 137)
// DEBUG: Operating on bare
// DEBUG: 106
// DEBUG: (101, 137)
// DEBUG: Operating on naked
// DEBUG: 142
// DEBUG: (137, 137)
// DEBUG: Operating on feet
// DEBUG: 171
// DEBUG: (166, 137)
// DEBUG: Operating on of
// DEBUG: 186
// DEBUG: (181, 137)
// DEBUG: Operating on who
// DEBUG: 208
// DEBUG: (203, 137)
// DEBUG: Operating on knows
// DEBUG: ['carpet.', 'It', 'has', 'the', 'bare', 'naked', 'feet', 'of', 'who']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (11, 149)
// DEBUG: Operating on how
// DEBUG: 38
// DEBUG: (33, 149)
// DEBUG: Operating on many
// DEBUG: 67
// DEBUG: (62, 149)
// DEBUG: Operating on hundreds
// DEBUG: 124
// DEBUG: (119, 149)
// DEBUG: Operating on of
// DEBUG: 139
// DEBUG: (134, 149)
// DEBUG: Operating on dead
// DEBUG: 168
// DEBUG: (163, 149)
// DEBUG: Operating on or
// DEBUG: 183
// DEBUG: (178, 149)
// DEBUG: Operating on old
// DEBUG: 205
// DEBUG: (200, 149)
// DEBUG: Operating on people
// DEBUG: ['knows', 'how', 'many', 'hundreds', 'of', 'dead', 'or', 'old']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (12, 161)
// DEBUG: Operating on on
// DEBUG: 32
// DEBUG: (27, 161)
// DEBUG: Operating on it.
// DEBUG: 54
// DEBUG: ['10:27 a.m.']
// DEBUG: drawing cursor (118, 17)
// DEBUG: ['- Ali Smith, The Accidental ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "She is on holiday in Norfolk. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "substandard clock radio says", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING The noise is Katrina the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Cleaner thumping the hoover against", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "the skirting boards and the bedroom", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "doors. Her hand is asleep. It is still", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "hooked through the handstrap of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "camera. She unhooks it and shakes it to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "get the blood back into it. She puts", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "her feet on top of her trainers and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "slides them across the substandard", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "carpet. It has the bare naked feet of who", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "knows how many hundreds of dead or old", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(118, 17, "10:27 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Ali Smith, The Accidental ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:28 for 0 quotations:
    case 628:
      Serial.println(F("No quotes for 10:28"));
      return;

    // Codegen for 10:29 for 0 quotations:
    case 629:
      Serial.println(F("No quotes for 10:29"));
      return;

    // Codegen for 10:30 for 3 quotations:
    case 630:
      option = random(0, 3);
      Serial.print(F("3 options for 10:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:30 - 10.30 a.m. Break - Mark Haddon, The Curious Incident of the Dog in the Night-time "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 152
// DEBUG: (147, 5)
// DEBUG: Operating on Break
// DEBUG: 188
// DEBUG: ['10.30 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "10.30 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:30 - according to the clock on the wall, it is barely ten thirty. - Michael Cunningham, The Hours "));
// DEBUG: (5, 5)
// DEBUG: Operating on according
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on to
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on the
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on clock
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on on
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on the
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on wall,
// DEBUG: ['according', 'to', 'the', 'clock', 'on', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on it
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on is
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on barely
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['wall,', 'it', 'is', 'barely']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['ten thirty']
// DEBUG: drawing cursor (84, 17)
// DEBUG: ['- The Hours']
// DEBUG: drawing cursor (130, 192)
          paint.Paint_DrawString_EN(5, 5, "according to the clock on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "wall, it is barely", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(84, 17, "ten thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(130, 192, "- The Hours", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("10:30 - At ten-thirty I'm cleaned up, shaved and dressed in my Easter best - a two-piece seersucker Palm Beach I've had since college. - Richard Ford, The Sportswriter"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on I'm
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on cleaned
// DEBUG: ['At', 'TIMESTRING', "I'm"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on up,
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on shaved
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on and
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on dressed
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on in
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on my
// DEBUG: 185
// DEBUG: (180, 17)
// DEBUG: Operating on Easter
// DEBUG: ['cleaned', 'up,', 'shaved', 'and', 'dressed', 'in', 'my']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on best
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on -
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on a
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on two-piece
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on seersucker
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on Palm
// DEBUG: ['Easter', 'best', '-', 'a', 'two-piece', 'seersucker']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on Beach
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on I've
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on had
// DEBUG: 102
// DEBUG: (97, 41)
// DEBUG: Operating on since
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on college.
// DEBUG: 195
// DEBUG: ['ten-thirty']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The Sportswriter']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING I'm", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "cleaned up, shaved and dressed in my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Easter best - a two-piece seersucker", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "ten-thirty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Sportswriter", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:31 for 0 quotations:
    case 631:
      Serial.println(F("No quotes for 10:31"));
      return;

    // Codegen for 10:32 for 1 quotations:
    case 632:
      Serial.println(F("Only one option for 10:32:"));
    Serial.println(F("10:32 - If you please. You went to bed at what time, Madame? \"Just after half past ten.\" - Agatha Christie, Death on the Nile"));
// DEBUG: (5, 5)
// DEBUG: Operating on If
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on you
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on please.
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on You
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on went
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on to
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on bed
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on at
// DEBUG: 200
// DEBUG: (195, 5)
// DEBUG: Operating on what
// DEBUG: ['If', 'you', 'please.', 'You', 'went', 'to', 'bed', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on time,
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on Madame?
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on \"TIMESTRING\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['what', 'time,', 'Madame?']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['Just after half past ten.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Death on the Nile']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "If you please. You went to bed at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "what time, Madame?", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Just after half past ten.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Death on the Nile", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:33 for 0 quotations:
    case 633:
      Serial.println(F("No quotes for 10:33"));
      return;

    // Codegen for 10:34 for 0 quotations:
    case 634:
      Serial.println(F("No quotes for 10:34"));
      return;

    // Codegen for 10:35 for 1 quotations:
    case 635:
      Serial.println(F("Only one option for 10:35:"));
    Serial.println(F("10:35 - Five-and-twenty to eleven. A horrible hour - a macabre hour, for it is not only the hour of pleasure ended, it is the hour when pleasure itself has been found wanting. - Patrick Hamilton, Rope"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on A
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on horrible
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on hour
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on -
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on a
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on macabre
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on hour,
// DEBUG: ['TIMESTRING.', 'A', 'horrible', 'hour', '-', 'a', 'macabre']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on for
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on it
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on is
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on not
// DEBUG: 90
// DEBUG: (85, 29)
// DEBUG: Operating on only
// DEBUG: 119
// DEBUG: (114, 29)
// DEBUG: Operating on the
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on hour
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on of
// DEBUG: 185
// DEBUG: (180, 29)
// DEBUG: Operating on pleasure
// DEBUG: ['hour,', 'for', 'it', 'is', 'not', 'only', 'the', 'hour', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on ended,
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on it
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on is
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on the
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on hour
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on when
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on pleasure
// DEBUG: ['pleasure', 'ended,', 'it', 'is', 'the', 'hour', 'when']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on itself
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on has
// DEBUG: 84
// DEBUG: (79, 53)
// DEBUG: Operating on been
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on found
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on wanting.
// DEBUG: 206
// DEBUG: ['Five-and-twenty to eleven']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Patrick Hamilton, Rope']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. A horrible hour - a macabre", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "hour, for it is not only the hour of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "pleasure ended, it is the hour when", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "Five-and-twenty to eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Patrick Hamilton, Rope", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:36 for 1 quotations:
    case 636:
      Serial.println(F("Only one option for 10:36:"));
    Serial.println(F("10:36 - Strand post mark and dispatched ten thirty-six said Holmes reading it over and over. \"Mr Overton was evidently considerably excited when he sent it over and somewhat incoherent in consequence.\" - Arthur Conan Doyle, The Adventure of the Missing Three-Quarter"));
// DEBUG: (5, 5)
// DEBUG: Operating on Strand
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on post
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on mark
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on and
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on dispatched
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Strand', 'post', 'mark', 'and', 'dispatched']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on said
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on Holmes
// DEBUG: ['TIMESTRING', 'said']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on reading
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on it
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on over
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on and
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on over.
// DEBUG: 169
// DEBUG: (164, 29)
// DEBUG: Operating on \"Mr
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on Overton
// DEBUG: ['Holmes', 'reading', 'it', 'over', 'and', 'over.', '\\"Mr']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on was
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on evidently
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on considerably
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on excited
// DEBUG: ['Overton', 'was', 'evidently', 'considerably']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on when
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on he
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on sent
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on it
// DEBUG: 106
// DEBUG: (101, 53)
// DEBUG: Operating on over
// DEBUG: 135
// DEBUG: (130, 53)
// DEBUG: Operating on and
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on somewhat
// DEBUG: ['excited', 'when', 'he', 'sent', 'it', 'over', 'and']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on incoherent
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on in
// DEBUG: 105
// DEBUG: (100, 65)
// DEBUG: Operating on consequence.\"
// DEBUG: 204
// DEBUG: ['ten thirty-six']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Arthur Conan Doyle']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "Strand post mark and dispatched", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING said", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Holmes reading it over and over. \"Mr", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Overton was evidently considerably", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "excited when he sent it over and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "ten thirty-six", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Arthur Conan Doyle", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:37 for 1 quotations:
    case 637:
      Serial.println(F("Only one option for 10:37:"));
    Serial.println(F("10:37 - I quite agree with you,' said Mr Murbles. 'It is a most awkward situation. Lady Dormer died at precisely 10.37 a.m. on November 11th.' - Dorothy L. Sayers, The Unpleasantness at the Bellona Club"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on quite
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on agree
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on with
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on you,'
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on said
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on Mr
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on Murbles.
// DEBUG: ['I', 'quite', 'agree', 'with', "you,'", 'said', 'Mr']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on 'It
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on is
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on a
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on most
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on awkward
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on situation.
// DEBUG: ['Murbles.', "'It", 'is', 'a', 'most', 'awkward']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on Lady
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on Dormer
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on died
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on at
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on precisely
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['situation.', 'Lady', 'Dormer', 'died', 'at', 'precisely']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on on
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on November
// DEBUG: ['TIMESTRING', 'on']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on 11th.'
// DEBUG: 62
// DEBUG: ['10.37 a.m.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Dorothy L. Sayers']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "I quite agree with you,' said Mr", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Murbles. 'It is a most awkward", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "situation. Lady Dormer died at precisely", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "10.37 a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Dorothy L. Sayers", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:38 for 1 quotations:
    case 638:
      Serial.println(F("Only one option for 10:38:"));
    Serial.println(F("10:38 - There must be a solution, there must be. Frantically I scan the cans of products stacked on the shelves. Stain Away. Vanish. There has to be a remedy. ... I just need to think. ... 10:38 OK, I have the answer. It may not totally work—but it's my best shot. - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on There
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on must
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on be
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on a
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on solution,
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on there
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on must
// DEBUG: ['There', 'must', 'be', 'a', 'solution,', 'there']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on be.
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on Frantically
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on I
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on scan
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on cans
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on of
// DEBUG: ['must', 'be.', 'Frantically', 'I', 'scan', 'the', 'cans']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on products
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on stacked
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on on
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on the
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on shelves.
// DEBUG: ['of', 'products', 'stacked', 'on', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on Stain
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on Away.
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on Vanish.
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on There
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on has
// DEBUG: 199
// DEBUG: (194, 41)
// DEBUG: Operating on to
// DEBUG: ['shelves.', 'Stain', 'Away.', 'Vanish.', 'There', 'has']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on be
// DEBUG: 28
// DEBUG: (23, 53)
// DEBUG: Operating on a
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on remedy.
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on ...
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on I
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on just
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on need
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on to
// DEBUG: 189
// DEBUG: (184, 53)
// DEBUG: Operating on think.
// DEBUG: ['to', 'be', 'a', 'remedy.', '...', 'I', 'just', 'need', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on ...
// DEBUG: 39
// DEBUG: (34, 65)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on OK,
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on I
// DEBUG: 176
// DEBUG: (171, 65)
// DEBUG: Operating on have
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on the
// DEBUG: ['think.', '...', 'TIMESTRING', 'OK,', 'I', 'have']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on answer.
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on It
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on may
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on not
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on totally
// DEBUG: 173
// DEBUG: (168, 77)
// DEBUG: Operating on work—but
// DEBUG: ['the', 'answer.', 'It', 'may', 'not', 'totally']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (14, 89)
// DEBUG: Operating on it's
// DEBUG: 48
// DEBUG: (43, 89)
// DEBUG: Operating on my
// DEBUG: 63
// DEBUG: (58, 89)
// DEBUG: Operating on best
// DEBUG: 92
// DEBUG: (87, 89)
// DEBUG: Operating on shot.
// DEBUG: 128
// DEBUG: ['10:38']
// DEBUG: drawing cursor (34, 65)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "There must be a solution, there", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "must be. Frantically I scan the cans", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "of products stacked on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "shelves. Stain Away. Vanish. There has", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "to be a remedy. ... I just need to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "think. ... TIMESTRING OK, I have", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "the answer. It may not totally", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(34, 65, "10:38", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:39 for 0 quotations:
    case 639:
      Serial.println(F("No quotes for 10:39"));
      return;

    // Codegen for 10:40 for 1 quotations:
    case 640:
      Serial.println(F("Only one option for 10:40:"));
    Serial.println(F("10:40 - 10:40: Call from Katharina asking me whether I had really said what was in the News. - Heinrich Böll, The Lost Honour of Katharina Blum"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING:
// DEBUG: Wrorking on the timestring
// DEBUG: 124
// DEBUG: (119, 5)
// DEBUG: Operating on Call
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on from
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on Katharina
// DEBUG: ['TIMESTRING:', 'Call', 'from']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on asking
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on me
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on whether
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on I
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on had
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on really
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on said
// DEBUG: ['Katharina', 'asking', 'me', 'whether', 'I', 'had', 'really']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on what
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on was
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on in
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on the
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on News.
// DEBUG: 139
// DEBUG: ['10:40']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Heinrich Böll']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING: Call from", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Katharina asking me whether I had really", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "10:40", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Heinrich Böll", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:41 for 0 quotations:
    case 641:
      Serial.println(F("No quotes for 10:41"));
      return;

    // Codegen for 10:42 for 0 quotations:
    case 642:
      Serial.println(F("No quotes for 10:42"));
      return;

    // Codegen for 10:43 for 1 quotations:
    case 643:
      Serial.println(F("Only one option for 10:43:"));
    Serial.println(F("10:43 - 24 January, 10.43 a.m: one month and two days later I wonder if I should worry about the fact that my darling boyfriend bought me a birthday present that has the potential to cause instant death... - Jane Costello, The Wish List"));
// DEBUG: (5, 5)
// DEBUG: Operating on 24
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on January,
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on TIMESTRING:
// DEBUG: Wrorking on the timestring
// DEBUG: ['24', 'January,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on one
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on month
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on and
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on two
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on days
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on later
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on I
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on wonder
// DEBUG: ['TIMESTRING:', 'one', 'month', 'and', 'two', 'days', 'later', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on if
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on I
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on should
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on worry
// DEBUG: 119
// DEBUG: (114, 29)
// DEBUG: Operating on about
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on the
// DEBUG: 177
// DEBUG: (172, 29)
// DEBUG: Operating on fact
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on that
// DEBUG: ['wonder', 'if', 'I', 'should', 'worry', 'about', 'the', 'fact']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on my
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on darling
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on boyfriend
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on bought
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on me
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on a
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on birthday
// DEBUG: ['that', 'my', 'darling', 'boyfriend', 'bought', 'me', 'a']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on present
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on that
// DEBUG: 98
// DEBUG: (93, 53)
// DEBUG: Operating on has
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on the
// DEBUG: 142
// DEBUG: (137, 53)
// DEBUG: Operating on potential
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on to
// DEBUG: ['birthday', 'present', 'that', 'has', 'the', 'potential']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on cause
// DEBUG: 49
// DEBUG: (44, 65)
// DEBUG: Operating on instant
// DEBUG: 99
// DEBUG: (94, 65)
// DEBUG: Operating on death...
// DEBUG: 156
// DEBUG: ['10.43 a.m']
// DEBUG: drawing cursor (77, 5)
// DEBUG: ['- The Wish List']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "24 January,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING: one month and two days later I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "wonder if I should worry about the fact", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "that my darling boyfriend bought me a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "birthday present that has the potential", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(77, 5, "10.43 a.m", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- The Wish List", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:44 for 0 quotations:
    case 644:
      Serial.println(F("No quotes for 10:44"));
      return;

    // Codegen for 10:45 for 2 quotations:
    case 645:
      option = random(0, 2);
      Serial.print(F("2 options for 10:45. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:45 - If this is so, we have now to determine what Barker and Mrs. Douglas, presuming they are not the actual murderers, would have been doing from quarter to eleven, when the sound of the shot brought them down, until quarter past eleven, when they rang for the bell and summoned the servants'. - Arthur Conan Doyle, The Valley of Fear"));
// DEBUG: (5, 5)
// DEBUG: Operating on If
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on this
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on is
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on so,
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on we
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on have
// DEBUG: 135
// DEBUG: (130, 5)
// DEBUG: Operating on now
// DEBUG: 157
// DEBUG: (152, 5)
// DEBUG: Operating on to
// DEBUG: 172
// DEBUG: (167, 5)
// DEBUG: Operating on determine
// DEBUG: ['If', 'this', 'is', 'so,', 'we', 'have', 'now', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on what
// DEBUG: 49
// DEBUG: (44, 17)
// DEBUG: Operating on Barker
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on and
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on Mrs.
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on Douglas,
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on presuming
// DEBUG: ['determine', 'what', 'Barker', 'and', 'Mrs.', 'Douglas,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on they
// DEBUG: 49
// DEBUG: (44, 29)
// DEBUG: Operating on are
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on not
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on the
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on actual
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on murderers,
// DEBUG: ['presuming', 'they', 'are', 'not', 'the', 'actual']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on would
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on have
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on been
// DEBUG: 115
// DEBUG: (110, 41)
// DEBUG: Operating on doing
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on from
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['murderers,', 'would', 'have', 'been', 'doing', 'from']
// DEBUG: drawing cursor (5, 41)
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on when
// DEBUG: ['TIMESTRING,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on sound
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on of
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on shot
// DEBUG: 139
// DEBUG: (134, 65)
// DEBUG: Operating on brought
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on them
// DEBUG: ['when', 'the', 'sound', 'of', 'the', 'shot', 'brought']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on down,
// DEBUG: 51
// DEBUG: (46, 77)
// DEBUG: Operating on until
// DEBUG: 87
// DEBUG: (82, 77)
// DEBUG: Operating on quarter
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on past
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on eleven,
// DEBUG: ['them', 'down,', 'until', 'quarter', 'past']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on when
// DEBUG: 47
// DEBUG: (42, 89)
// DEBUG: Operating on they
// DEBUG: 76
// DEBUG: (71, 89)
// DEBUG: Operating on rang
// DEBUG: 105
// DEBUG: (100, 89)
// DEBUG: Operating on for
// DEBUG: 127
// DEBUG: (122, 89)
// DEBUG: Operating on the
// DEBUG: 149
// DEBUG: (144, 89)
// DEBUG: Operating on bell
// DEBUG: 178
// DEBUG: (173, 89)
// DEBUG: Operating on and
// DEBUG: 200
// DEBUG: (195, 89)
// DEBUG: Operating on summoned
// DEBUG: ['eleven,', 'when', 'they', 'rang', 'for', 'the', 'bell', 'and']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (14, 101)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 101)
// DEBUG: Operating on servants'.
// DEBUG: 112
// DEBUG: ['quarter to eleven']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- The Valley of Fear']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "If this is so, we have now to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "determine what Barker and Mrs. Douglas,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "presuming they are not the actual", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "murderers, would have been doing from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "when the sound of the shot brought", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "them down, until quarter past", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "eleven, when they rang for the bell and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "quarter to eleven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Valley of Fear", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:45 - They reached King's Cross at a quarter to eleven. Mr Weasley dashed across the road to get trolleys for their trunks and they all hurried into the station. - J.K.Rowling, Harry Potter and the Chamber of Secrets "));
// DEBUG: (5, 5)
// DEBUG: Operating on They
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on reached
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on King's
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on Cross
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on at
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on a
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['They', 'reached', "King's", 'Cross', 'at', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on Mr
// DEBUG: ['TIMESTRING.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on Weasley
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on dashed
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on across
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on the
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on road
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on to
// DEBUG: ['Mr', 'Weasley', 'dashed', 'across', 'the', 'road']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on get
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on trolleys
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on for
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on their
// DEBUG: 150
// DEBUG: (145, 41)
// DEBUG: Operating on trunks
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on and
// DEBUG: ['to', 'get', 'trolleys', 'for', 'their', 'trunks']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on they
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on all
// DEBUG: 65
// DEBUG: (60, 53)
// DEBUG: Operating on hurried
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on into
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on station.
// DEBUG: ['and', 'they', 'all', 'hurried', 'into', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['quarter to eleven']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- J.K.Rowling']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "They reached King's Cross at a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Mr Weasley dashed across the road", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "to get trolleys for their trunks", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "and they all hurried into the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "quarter to eleven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- J.K.Rowling", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:46 for 0 quotations:
    case 646:
      Serial.println(F("No quotes for 10:46"));
      return;

    // Codegen for 10:47 for 1 quotations:
    case 647:
      Serial.println(F("Only one option for 10:47:"));
    Serial.println(F("10:47 - He whistles in the shower. It is 10.47 and he is ready for the off. - Jackie Kay, Trumpet"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on whistles
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on in
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on the
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on shower.
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on It
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on is
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['He', 'whistles', 'in', 'the', 'shower.', 'It', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on and
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on he
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on is
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on ready
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on for
// DEBUG: ['TIMESTRING', 'and', 'he', 'is', 'ready']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on off.
// DEBUG: 65
// DEBUG: ['10.47']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Jackie Kay, Trumpet']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "He whistles in the shower. It is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING and he is ready", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "10.47", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- Jackie Kay, Trumpet", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:48 for 1 quotations:
    case 648:
      Serial.println(F("Only one option for 10:48:"));
    Serial.println(F("10:48 - At 10.48am, I closed my folder but didn't bother putting it back in my bag, so you knew I was on my way to a committee or meeting room nearby. Before I stood up, I folded my paper napkin and put it and the spoon into my coffee cup, a neat sort of person, you thought. - Louise Doughty, Apple Tree Yard"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on I
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on closed
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on my
// DEBUG: ['At', 'TIMESTRING,', 'I', 'closed']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on folder
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on but
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on didn't
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on bother
// DEBUG: 164
// DEBUG: (159, 17)
// DEBUG: Operating on putting
// DEBUG: ['my', 'folder', 'but', "didn't", 'bother']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on it
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on back
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on in
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on my
// DEBUG: 92
// DEBUG: (87, 29)
// DEBUG: Operating on bag,
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on so
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on you
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on knew
// DEBUG: 187
// DEBUG: (182, 29)
// DEBUG: Operating on I
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on was
// DEBUG: ['putting', 'it', 'back', 'in', 'my', 'bag,', 'so', 'you', 'knew', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on on
// DEBUG: 29
// DEBUG: (24, 41)
// DEBUG: Operating on my
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on way
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on to
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on a
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on committee
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on or
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on meeting
// DEBUG: ['was', 'on', 'my', 'way', 'to', 'a', 'committee', 'or']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on room
// DEBUG: 47
// DEBUG: (42, 53)
// DEBUG: Operating on nearby.
// DEBUG: 97
// DEBUG: (92, 53)
// DEBUG: Operating on Before
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on I
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on stood
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on up,
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on I
// DEBUG: ['meeting', 'room', 'nearby.', 'Before', 'I', 'stood', 'up,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (7, 65)
// DEBUG: Operating on folded
// DEBUG: 55
// DEBUG: (50, 65)
// DEBUG: Operating on my
// DEBUG: 70
// DEBUG: (65, 65)
// DEBUG: Operating on paper
// DEBUG: 106
// DEBUG: (101, 65)
// DEBUG: Operating on napkin
// DEBUG: 149
// DEBUG: (144, 65)
// DEBUG: Operating on and
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on put
// DEBUG: 193
// DEBUG: (188, 65)
// DEBUG: Operating on it
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on and
// DEBUG: ['I', 'folded', 'my', 'paper', 'napkin', 'and', 'put', 'it']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on spoon
// DEBUG: 72
// DEBUG: (67, 77)
// DEBUG: Operating on into
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on my
// DEBUG: 116
// DEBUG: (111, 77)
// DEBUG: Operating on coffee
// DEBUG: 159
// DEBUG: (154, 77)
// DEBUG: Operating on cup,
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on a
// DEBUG: 196
// DEBUG: (191, 77)
// DEBUG: Operating on neat
// DEBUG: ['and', 'the', 'spoon', 'into', 'my', 'coffee', 'cup,', 'a']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on sort
// DEBUG: 44
// DEBUG: (39, 89)
// DEBUG: Operating on of
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on person,
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on you
// DEBUG: 131
// DEBUG: (126, 89)
// DEBUG: Operating on thought.
// DEBUG: 188
// DEBUG: ['10.48am']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Apple Tree Yard']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING, I closed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "my folder but didn't bother", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "putting it back in my bag, so you knew I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "was on my way to a committee or", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "meeting room nearby. Before I stood up,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "I folded my paper napkin and put it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "and the spoon into my coffee cup, a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "10.48am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Apple Tree Yard", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:49 for 1 quotations:
    case 649:
      Serial.println(F("Only one option for 10:49:"));
    Serial.println(F("10:49 - By forty-nine minutes past ten, we fall in again with a fine portion of the ancient road, which the modern track constantly follows, and descend by some steep windings, hewn in the side of a precipitous cliff, to the place where the Ouad-el-Haoud commences. - Félicien de Saulcy, Narrative of a Journey round the Dead Sea and in the Bible lands in 1850 and 1851"));
// DEBUG: (5, 5)
// DEBUG: Operating on By
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['By']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on we
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on fall
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on in
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on again
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on with
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on a
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on fine
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on portion
// DEBUG: ['TIMESTRING,', 'we', 'fall', 'in', 'again', 'with', 'a', 'fine']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on ancient
// DEBUG: 105
// DEBUG: (100, 41)
// DEBUG: Operating on road,
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on which
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on the
// DEBUG: 199
// DEBUG: (194, 41)
// DEBUG: Operating on modern
// DEBUG: ['portion', 'of', 'the', 'ancient', 'road,', 'which', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on track
// DEBUG: 53
// DEBUG: (48, 53)
// DEBUG: Operating on constantly
// DEBUG: 124
// DEBUG: (119, 53)
// DEBUG: Operating on follows,
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on and
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on descend
// DEBUG: ['modern', 'track', 'constantly', 'follows,', 'and']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on by
// DEBUG: 33
// DEBUG: (28, 65)
// DEBUG: Operating on some
// DEBUG: 62
// DEBUG: (57, 65)
// DEBUG: Operating on steep
// DEBUG: 98
// DEBUG: (93, 65)
// DEBUG: Operating on windings,
// DEBUG: 162
// DEBUG: (157, 65)
// DEBUG: Operating on hewn
// DEBUG: 191
// DEBUG: (186, 65)
// DEBUG: Operating on in
// DEBUG: 206
// DEBUG: (201, 65)
// DEBUG: Operating on the
// DEBUG: ['descend', 'by', 'some', 'steep', 'windings,', 'hewn', 'in']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on side
// DEBUG: 43
// DEBUG: (38, 77)
// DEBUG: Operating on of
// DEBUG: 58
// DEBUG: (53, 77)
// DEBUG: Operating on a
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on precipitous
// DEBUG: 144
// DEBUG: (139, 77)
// DEBUG: Operating on cliff,
// DEBUG: 187
// DEBUG: (182, 77)
// DEBUG: Operating on to
// DEBUG: 202
// DEBUG: (197, 77)
// DEBUG: Operating on the
// DEBUG: ['the', 'side', 'of', 'a', 'precipitous', 'cliff,', 'to']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on place
// DEBUG: 50
// DEBUG: (45, 89)
// DEBUG: Operating on where
// DEBUG: 86
// DEBUG: (81, 89)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 89)
// DEBUG: Operating on Ouad-el-Haoud
// DEBUG: 200
// DEBUG: (195, 89)
// DEBUG: Operating on commences.
// DEBUG: ['the', 'place', 'where', 'the', 'Ouad-el-Haoud']
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['forty-nine minutes past ten']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Félicien de Saulcy']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "By", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING, we fall in again with a fine", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "portion of the ancient road, which the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "modern track constantly follows, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "descend by some steep windings, hewn in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "the side of a precipitous cliff, to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "the place where the Ouad-el-Haoud", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "forty-nine minutes past ten", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Félicien de Saulcy", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:50 for 2 quotations:
    case 650:
      option = random(0, 2);
      Serial.print(F("2 options for 10:50. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:50 - 10.50 a.m. Art class with Mrs Peters - Mark Haddon, The Curious Incident of the Dog in the Night-time "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 152
// DEBUG: (147, 5)
// DEBUG: Operating on Art
// DEBUG: 174
// DEBUG: (169, 5)
// DEBUG: Operating on class
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on with
// DEBUG: ['TIMESTRING', 'Art', 'class']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on Mrs
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on Peters
// DEBUG: 80
// DEBUG: ['10.50 a.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING Art class", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "10.50 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:50 - As he walked back to the flight office, airmen were forming a line to await the arrival of the NAAFI van with morning tea and cakes. Lambert looked at his watch; it was ten to eleven. - Len Deighton, Bomber"));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on he
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on walked
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on back
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on to
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on the
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on flight
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on office,
// DEBUG: ['As', 'he', 'walked', 'back', 'to', 'the', 'flight']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on airmen
// DEBUG: 61
// DEBUG: (56, 17)
// DEBUG: Operating on were
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on forming
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on a
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on line
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on to
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on await
// DEBUG: ['office,', 'airmen', 'were', 'forming', 'a', 'line', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on arrival
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on of
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on the
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on NAAFI
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on van
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on with
// DEBUG: ['await', 'the', 'arrival', 'of', 'the', 'NAAFI', 'van']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on morning
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on tea
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on and
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on cakes.
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on Lambert
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on looked
// DEBUG: ['with', 'morning', 'tea', 'and', 'cakes.', 'Lambert']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on his
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on watch;
// DEBUG: 97
// DEBUG: (92, 53)
// DEBUG: Operating on it
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on was
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['looked', 'at', 'his', 'watch;', 'it', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: 179
// DEBUG: ['ten to eleven']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- Len Deighton, Bomber']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "As he walked back to the flight", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "office, airmen were forming a line to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "await the arrival of the NAAFI van", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "with morning tea and cakes. Lambert", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "looked at his watch; it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "ten to eleven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Len Deighton, Bomber", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:51 for 0 quotations:
    case 651:
      Serial.println(F("No quotes for 10:51"));
      return;

    // Codegen for 10:52 for 0 quotations:
    case 652:
      Serial.println(F("No quotes for 10:52"));
      return;

    // Codegen for 10:53 for 2 quotations:
    case 653:
      option = random(0, 2);
      Serial.print(F("2 options for 10:53. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("10:53 - He begins to make a record of our observations.'10.53 hrs,' he writes, as we crouch at the top of the stairs, listening to his mother in the hall below. - Michael Frayn, Spies"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on begins
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on to
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on make
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on a
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on record
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on of
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on our
// DEBUG: 200
// DEBUG: (195, 5)
// DEBUG: Operating on observations.'TIMESTRING,'
// DEBUG: Wrorking on the timestring
// DEBUG: ['He', 'begins', 'to', 'make', 'a', 'record', 'of', 'our']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (32, 29)
// DEBUG: Operating on he
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on writes,
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on as
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on we
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on crouch
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on at
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on the
// DEBUG: ["observations.'TIMESTRING,'", 'he', 'writes,', 'as', 'we', 'crouch', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on top
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on of
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on stairs,
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on listening
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on to
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on his
// DEBUG: ['the', 'top', 'of', 'the', 'stairs,', 'listening', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on mother
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on in
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on hall
// DEBUG: 123
// DEBUG: (118, 53)
// DEBUG: Operating on below.
// DEBUG: 166
// DEBUG: ['10.53 hrs']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Michael Frayn, Spies']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "He begins to make a record of our", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "observations.'TIMESTRING,' he writes, as we crouch at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the top of the stairs, listening to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "10.53 hrs", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Michael Frayn, Spies", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("10:53 - I gaze and gaze again at that face, which seems to me both strange and familiar, said Austerlitz, I run the tape back repeatedly, looking at the time indicator in the top left-hand corner of the screen, where the figures covering part of her forehead show the minutes and seconds, from 10:53 to 10:57, while the hundredths of a second flash by so fast that you cannot read and capture them. - W.G. Sebald, Austerlitz "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on gaze
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on and
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on gaze
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on again
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on at
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on that
// DEBUG: 178
// DEBUG: (173, 5)
// DEBUG: Operating on face,
// DEBUG: ['I', 'gaze', 'and', 'gaze', 'again', 'at', 'that']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on which
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on seems
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on to
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on me
// DEBUG: 118
// DEBUG: (113, 17)
// DEBUG: Operating on both
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on strange
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on and
// DEBUG: ['face,', 'which', 'seems', 'to', 'me', 'both', 'strange']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on familiar,
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on said
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on Austerlitz,
// DEBUG: 185
// DEBUG: (180, 29)
// DEBUG: Operating on I
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on run
// DEBUG: ['and', 'familiar,', 'said', 'Austerlitz,', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on tape
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on back
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on repeatedly,
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on looking
// DEBUG: ['run', 'the', 'tape', 'back', 'repeatedly,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on time
// DEBUG: 84
// DEBUG: (79, 53)
// DEBUG: Operating on indicator
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on in
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on the
// DEBUG: 185
// DEBUG: (180, 53)
// DEBUG: Operating on top
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on left-hand
// DEBUG: ['looking', 'at', 'the', 'time', 'indicator', 'in', 'the', 'top']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (15, 65)
// DEBUG: Operating on corner
// DEBUG: 63
// DEBUG: (58, 65)
// DEBUG: Operating on of
// DEBUG: 78
// DEBUG: (73, 65)
// DEBUG: Operating on the
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on screen,
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on where
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on the
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on figures
// DEBUG: ['left-hand', 'corner', 'of', 'the', 'screen,', 'where', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on covering
// DEBUG: 75
// DEBUG: (70, 77)
// DEBUG: Operating on part
// DEBUG: 104
// DEBUG: (99, 77)
// DEBUG: Operating on of
// DEBUG: 119
// DEBUG: (114, 77)
// DEBUG: Operating on her
// DEBUG: 141
// DEBUG: (136, 77)
// DEBUG: Operating on forehead
// DEBUG: 198
// DEBUG: (193, 77)
// DEBUG: Operating on show
// DEBUG: ['figures', 'covering', 'part', 'of', 'her', 'forehead']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 89)
// DEBUG: Operating on minutes
// DEBUG: 87
// DEBUG: (82, 89)
// DEBUG: Operating on and
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on seconds,
// DEBUG: 166
// DEBUG: (161, 89)
// DEBUG: Operating on from
// DEBUG: 195
// DEBUG: (190, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['show', 'the', 'minutes', 'and', 'seconds,', 'from']
// DEBUG: drawing cursor (5, 89)
// DEBUG: 116
// DEBUG: (111, 101)
// DEBUG: Operating on to
// DEBUG: 131
// DEBUG: (126, 101)
// DEBUG: Operating on 10:57,
// DEBUG: 174
// DEBUG: (169, 101)
// DEBUG: Operating on while
// DEBUG: 210
// DEBUG: (205, 101)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'to', '10:57,', 'while']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on hundredths
// DEBUG: 85
// DEBUG: (80, 113)
// DEBUG: Operating on of
// DEBUG: 100
// DEBUG: (95, 113)
// DEBUG: Operating on a
// DEBUG: 108
// DEBUG: (103, 113)
// DEBUG: Operating on second
// DEBUG: 151
// DEBUG: (146, 113)
// DEBUG: Operating on flash
// DEBUG: 187
// DEBUG: (182, 113)
// DEBUG: Operating on by
// DEBUG: 202
// DEBUG: (197, 113)
// DEBUG: Operating on so
// DEBUG: ['the', 'hundredths', 'of', 'a', 'second', 'flash', 'by']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (8, 125)
// DEBUG: Operating on fast
// DEBUG: 42
// DEBUG: (37, 125)
// DEBUG: Operating on that
// DEBUG: 71
// DEBUG: (66, 125)
// DEBUG: Operating on you
// DEBUG: 93
// DEBUG: (88, 125)
// DEBUG: Operating on cannot
// DEBUG: 136
// DEBUG: (131, 125)
// DEBUG: Operating on read
// DEBUG: 165
// DEBUG: (160, 125)
// DEBUG: Operating on and
// DEBUG: 187
// DEBUG: (182, 125)
// DEBUG: Operating on capture
// DEBUG: ['so', 'fast', 'that', 'you', 'cannot', 'read', 'and']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (13, 137)
// DEBUG: Operating on them.
// DEBUG: 54
// DEBUG: ['10:53']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- W.G. Sebald, Austerlitz ']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "I gaze and gaze again at that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "face, which seems to me both strange", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "and familiar, said Austerlitz, I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "run the tape back repeatedly,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "looking at the time indicator in the top", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "left-hand corner of the screen, where the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "figures covering part of her forehead", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "show the minutes and seconds, from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "TIMESTRING to 10:57, while", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "the hundredths of a second flash by", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "so fast that you cannot read and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "10:53", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- W.G. Sebald, Austerlitz ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 10:54 for 0 quotations:
    case 654:
      Serial.println(F("No quotes for 10:54"));
      return;

    // Codegen for 10:55 for 1 quotations:
    case 655:
      Serial.println(F("Only one option for 10:55:"));
    Serial.println(F("10:55 - The clock was still saying five minutes to eleven when Pooh and Piglet set out on their way half an hour later. - AA Milne, The House at Pooh Corner"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on clock
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on was
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on still
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on saying
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'clock', 'was', 'still', 'saying']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on when
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on Pooh
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on and
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on Piglet
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on set
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on out
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on on
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on their
// DEBUG: ['TIMESTRING', 'when', 'Pooh', 'and', 'Piglet', 'set', 'out', 'on']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on way
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on half
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on an
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on hour
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on later.
// DEBUG: 154
// DEBUG: ['five minutes to eleven']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The House at Pooh Corner']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "The clock was still saying", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING when Pooh and Piglet set out on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "five minutes to eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- The House at Pooh Corner", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:56 for 0 quotations:
    case 656:
      Serial.println(F("No quotes for 10:56"));
      return;

    // Codegen for 10:57 for 1 quotations:
    case 657:
      Serial.println(F("Only one option for 10:57:"));
    Serial.println(F("10:57 - I run the tape back repeatedly, looking at the time indicator in the top left-hand corner of the screen, where the figures covering part of her forehead show the minutes and seconds, from 10.53 to 10.57. - W. G. Sebald, Austerlitz"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on run
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on the
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on tape
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on back
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on repeatedly,
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on looking
// DEBUG: ['I', 'run', 'the', 'tape', 'back', 'repeatedly,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 17)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 17)
// DEBUG: Operating on time
// DEBUG: 84
// DEBUG: (79, 17)
// DEBUG: Operating on indicator
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on in
// DEBUG: 163
// DEBUG: (158, 17)
// DEBUG: Operating on the
// DEBUG: 185
// DEBUG: (180, 17)
// DEBUG: Operating on top
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on left-hand
// DEBUG: ['looking', 'at', 'the', 'time', 'indicator', 'in', 'the', 'top']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on corner
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on of
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on the
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on screen,
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on where
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on the
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on figures
// DEBUG: ['left-hand', 'corner', 'of', 'the', 'screen,', 'where', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on covering
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on part
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on of
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on her
// DEBUG: 141
// DEBUG: (136, 41)
// DEBUG: Operating on forehead
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on show
// DEBUG: ['figures', 'covering', 'part', 'of', 'her', 'forehead']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on minutes
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on and
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on seconds,
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on from
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on 10.53
// DEBUG: ['show', 'the', 'minutes', 'and', 'seconds,', 'from']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 145
// DEBUG: ['10.57']
// DEBUG: drawing cursor (26, 65)
// DEBUG: ['- W. G. Sebald, Austerlitz']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "I run the tape back repeatedly,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "looking at the time indicator in the top", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "left-hand corner of the screen, where the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "figures covering part of her forehead", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "show the minutes and seconds, from", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(26, 65, "10.57", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- W. G. Sebald, Austerlitz", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:58 for 1 quotations:
    case 658:
      Serial.println(F("Only one option for 10:58:"));
    Serial.println(F("10:58 - One day Joe was sitting in the office waiting for his 11 o'clock appointment, and at 10:58 this black gal came in. - Helen DeWitt, Lightning Rods"));
// DEBUG: (5, 5)
// DEBUG: Operating on One
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on day
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on Joe
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on was
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on sitting
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on in
// DEBUG: 163
// DEBUG: (158, 5)
// DEBUG: Operating on the
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on office
// DEBUG: ['One', 'day', 'Joe', 'was', 'sitting', 'in', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on waiting
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on for
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on his
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on 11
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on o'clock
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on appointment,
// DEBUG: ['office', 'waiting', 'for', 'his', '11', "o'clock"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (18, 29)
// DEBUG: Operating on and
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on at
// DEBUG: 60
// DEBUG: (55, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on this
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on black
// DEBUG: ['appointment,', 'and', 'at', 'TIMESTRING', 'this']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on gal
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on came
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on in.
// DEBUG: 89
// DEBUG: ['10:58']
// DEBUG: drawing cursor (55, 29)
// DEBUG: ['- Lightning Rods']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "One day Joe was sitting in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "office waiting for his 11 o'clock", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "appointment, and at TIMESTRING this", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(55, 29, "10:58", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Lightning Rods", &Font12, WHITE, BLACK);
      return;

    // Codegen for 10:59 for 1 quotations:
    case 659:
      Serial.println(F("Only one option for 10:59:"));
    Serial.println(F("10:59 - Harry grunted in his sleep and his face slid down the window an inch or so, making his glasses still more lopsided, but he did not wake up. An alarm clock, repaired by Harry several years ago, ticked loudly on the sill, showing one minute to eleven. - J. K. Rowling, Harry Potter and the Half-Blood Prince"));
// DEBUG: (5, 5)
// DEBUG: Operating on Harry
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on grunted
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on in
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on his
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on sleep
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on and
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on his
// DEBUG: ['Harry', 'grunted', 'in', 'his', 'sleep', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on face
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on slid
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on down
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on the
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on window
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on an
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on inch
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on or
// DEBUG: ['his', 'face', 'slid', 'down', 'the', 'window', 'an', 'inch']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on so,
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on making
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on his
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on glasses
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on still
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on more
// DEBUG: ['or', 'so,', 'making', 'his', 'glasses', 'still']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on lopsided,
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on but
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on he
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on did
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on not
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on wake
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on up.
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on An
// DEBUG: ['more', 'lopsided,', 'but', 'he', 'did', 'not', 'wake', 'up.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on alarm
// DEBUG: 49
// DEBUG: (44, 53)
// DEBUG: Operating on clock,
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on repaired
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on by
// DEBUG: 164
// DEBUG: (159, 53)
// DEBUG: Operating on Harry
// DEBUG: 200
// DEBUG: (195, 53)
// DEBUG: Operating on several
// DEBUG: ['An', 'alarm', 'clock,', 'repaired', 'by', 'Harry']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on years
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on ago,
// DEBUG: 83
// DEBUG: (78, 65)
// DEBUG: Operating on ticked
// DEBUG: 126
// DEBUG: (121, 65)
// DEBUG: Operating on loudly
// DEBUG: 169
// DEBUG: (164, 65)
// DEBUG: Operating on on
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on the
// DEBUG: 206
// DEBUG: (201, 65)
// DEBUG: Operating on sill,
// DEBUG: ['several', 'years', 'ago,', 'ticked', 'loudly', 'on', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on showing
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['sill,', 'showing']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['one minute to eleven']
// DEBUG: drawing cursor (61, 77)
// DEBUG: ['- J. K. Rowling']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "Harry grunted in his sleep and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "his face slid down the window an inch", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "or so, making his glasses still", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "more lopsided, but he did not wake up.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "An alarm clock, repaired by Harry", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "several years ago, ticked loudly on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "sill, showing", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(61, 77, "one minute to eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- J. K. Rowling", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:00 for 15 quotations:
    case 660:
      option = random(0, 15);
      Serial.print(F("15 options for 11:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:00 - 'Who can - what can -” asked Mrs Dalloway (thinking it was outrageous to be interrupted at eleven o'clock on the morning of the day she was giving a party), hearing a step on the stairs. - Virginia Woolf, Mrs Dalloway "));
// DEBUG: (5, 5)
// DEBUG: Operating on 'Who
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on can
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on -
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on what
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on can
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on -”
// DEBUG: 135
// DEBUG: (130, 5)
// DEBUG: Operating on asked
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on Mrs
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on Dalloway
// DEBUG: ["'Who", 'can', '-', 'what', 'can', '-”', 'asked', 'Mrs']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on (thinking
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on it
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on was
// DEBUG: 120
// DEBUG: (115, 17)
// DEBUG: Operating on outrageous
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on to
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on be
// DEBUG: ['Dalloway', '(thinking', 'it', 'was', 'outrageous', 'to']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on interrupted
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on at
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['be', 'interrupted', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on on
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on morning
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on of
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on the
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on day
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on she
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on was
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on giving
// DEBUG: ['TIMESTRING', 'on', 'the', 'morning', 'of', 'the', 'day', 'she', 'was']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on a
// DEBUG: 25
// DEBUG: (20, 53)
// DEBUG: Operating on party),
// DEBUG: 75
// DEBUG: (70, 53)
// DEBUG: Operating on hearing
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on a
// DEBUG: 133
// DEBUG: (128, 53)
// DEBUG: Operating on step
// DEBUG: 162
// DEBUG: (157, 53)
// DEBUG: Operating on on
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on the
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on stairs.
// DEBUG: ['giving', 'a', 'party),', 'hearing', 'a', 'step', 'on', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ["eleven o'clock"]
// DEBUG: drawing cursor (101, 29)
// DEBUG: ['- Mrs Dalloway']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "'Who can - what can -” asked Mrs", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Dalloway (thinking it was outrageous to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "be interrupted at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING on the morning of the day she was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "giving a party), hearing a step on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(101, 29, "eleven o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Mrs Dalloway", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:00 - By 11 o'clock I have finished the first chapter of Mr Y. The winter sun is peeping meekly through the thin curtains and I decide to get up - Scarlett Thomas, The End of Mr Y "));
// DEBUG: (5, 5)
// DEBUG: Operating on By
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on I
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on have
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on finished
// DEBUG: ['By', 'TIMESTRING', 'I', 'have']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on the
// DEBUG: 41
// DEBUG: (36, 17)
// DEBUG: Operating on first
// DEBUG: 77
// DEBUG: (72, 17)
// DEBUG: Operating on chapter
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on of
// DEBUG: 142
// DEBUG: (137, 17)
// DEBUG: Operating on Mr
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on Y.
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on The
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on winter
// DEBUG: ['finished', 'the', 'first', 'chapter', 'of', 'Mr', 'Y.', 'The']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on sun
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on is
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on peeping
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on meekly
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on through
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on the
// DEBUG: ['winter', 'sun', 'is', 'peeping', 'meekly', 'through']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on thin
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on curtains
// DEBUG: 100
// DEBUG: (95, 41)
// DEBUG: Operating on and
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on I
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on decide
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on to
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on get
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on up
// DEBUG: ['the', 'thin', 'curtains', 'and', 'I', 'decide', 'to', 'get']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ["11 o'clock"]
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- The End of Mr Y']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "By TIMESTRING I have", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "finished the first chapter of Mr Y. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "winter sun is peeping meekly through", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the thin curtains and I decide to get", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "11 o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- The End of Mr Y", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("11:00 - I dare say it was champagne at eleven in the morning. - Rosamond Lehmann, The Weather in the Streets "));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on dare
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on say
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on it
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on was
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on champagne
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['I', 'dare', 'say', 'it', 'was', 'champagne']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['at eleven in the morning']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Weather in the Streets']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "I dare say it was champagne", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "at eleven in the morning", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- The Weather in the Streets", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("11:00 - As her husband had told him, she was still in bed although it was past 11 o'clock. Her normally mobile face was encased in clay, rigid and menacing as an Aztec mask. - Evelyn Waugh, Scoop "));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on her
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on husband
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on had
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on told
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on him,
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on she
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on was
// DEBUG: ['As', 'her', 'husband', 'had', 'told', 'him,', 'she']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on still
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on in
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on bed
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on although
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on it
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on was
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on past
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['was', 'still', 'in', 'bed', 'although', 'it', 'was', 'past']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on Her
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on normally
// DEBUG: ['TIMESTRING.', 'Her']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on mobile
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on face
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on was
// DEBUG: 113
// DEBUG: (108, 41)
// DEBUG: Operating on encased
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on in
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on clay,
// DEBUG: ['normally', 'mobile', 'face', 'was', 'encased', 'in']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on rigid
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on and
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on menacing
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on as
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on an
// DEBUG: 161
// DEBUG: (156, 53)
// DEBUG: Operating on Aztec
// DEBUG: 197
// DEBUG: (192, 53)
// DEBUG: Operating on mask.
// DEBUG: ['clay,', 'rigid', 'and', 'menacing', 'as', 'an', 'Aztec']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ["11 o'clock"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Evelyn Waugh, Scoop ']
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "As her husband had told him, she", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "was still in bed although it was past", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING. Her", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "normally mobile face was encased in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "clay, rigid and menacing as an Aztec", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "11 o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- Evelyn Waugh, Scoop ", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("11:00 - As they looked the whole world became perfectly silent, and a flight of gulls crossed the sky, first one gull leading, then another, and in this extraordinary silence and peace, in this pallor, in this purity, bells struck eleven times the sound fading up there among the gulls. - Virginia Woolf, Mrs. Dalloway "));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on they
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on looked
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on the
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on whole
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on world
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on became
// DEBUG: ['As', 'they', 'looked', 'the', 'whole', 'world']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on perfectly
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on silent,
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on and
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on a
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on flight
// DEBUG: 204
// DEBUG: (199, 17)
// DEBUG: Operating on of
// DEBUG: ['became', 'perfectly', 'silent,', 'and', 'a', 'flight']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on gulls
// DEBUG: 49
// DEBUG: (44, 29)
// DEBUG: Operating on crossed
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on the
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on sky,
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on first
// DEBUG: 186
// DEBUG: (181, 29)
// DEBUG: Operating on one
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on gull
// DEBUG: ['of', 'gulls', 'crossed', 'the', 'sky,', 'first', 'one']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on leading,
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on then
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on another,
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on and
// DEBUG: 180
// DEBUG: (175, 41)
// DEBUG: Operating on in
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on this
// DEBUG: ['gull', 'leading,', 'then', 'another,', 'and', 'in']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on extraordinary
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on silence
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on and
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on peace,
// DEBUG: ['this', 'extraordinary', 'silence', 'and']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 65)
// DEBUG: Operating on this
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on pallor,
// DEBUG: 111
// DEBUG: (106, 65)
// DEBUG: Operating on in
// DEBUG: 126
// DEBUG: (121, 65)
// DEBUG: Operating on this
// DEBUG: 155
// DEBUG: (150, 65)
// DEBUG: Operating on purity,
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on bells
// DEBUG: ['peace,', 'in', 'this', 'pallor,', 'in', 'this', 'purity,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on struck
// DEBUG: 59
// DEBUG: (54, 77)
// DEBUG: Operating on TIMESTRINGtimes
// DEBUG: Wrorking on the timestring
// DEBUG: ['bells', 'struck']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (21, 89)
// DEBUG: Operating on the
// DEBUG: 48
// DEBUG: (43, 89)
// DEBUG: Operating on sound
// DEBUG: 84
// DEBUG: (79, 89)
// DEBUG: Operating on fading
// DEBUG: 127
// DEBUG: (122, 89)
// DEBUG: Operating on up
// DEBUG: 142
// DEBUG: (137, 89)
// DEBUG: Operating on there
// DEBUG: 178
// DEBUG: (173, 89)
// DEBUG: Operating on among
// DEBUG: ['TIMESTRINGtimes', 'the', 'sound', 'fading', 'up', 'there']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 101)
// DEBUG: Operating on gulls.
// DEBUG: 81
// DEBUG: ['eleven ']
// DEBUG: drawing cursor (54, 77)
// DEBUG: ['- Mrs. Dalloway']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "As they looked the whole world", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "became perfectly silent, and a flight", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "of gulls crossed the sky, first one", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "gull leading, then another, and in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "this extraordinary silence and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "peace, in this pallor, in this purity,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "bells struck", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "TIMESTRINGtimes the sound fading up there", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(54, 77, "eleven ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Mrs. Dalloway", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("11:00 - At eleven o'clock in the morning, large flakes had appeared from a colourless sky and invaded the fields, gardens and lawns of Romerike like an armada from outer space. - Jo Nesbo, The Snowman "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 195
// DEBUG: (190, 5)
// DEBUG: Operating on in
// DEBUG: 210
// DEBUG: (205, 5)
// DEBUG: Operating on the
// DEBUG: ['At', 'TIMESTRING', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on morning,
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on large
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on flakes
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on had
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on appeared
// DEBUG: ['the', 'morning,', 'large', 'flakes', 'had']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on from
// DEBUG: 48
// DEBUG: (43, 29)
// DEBUG: Operating on a
// DEBUG: 56
// DEBUG: (51, 29)
// DEBUG: Operating on colourless
// DEBUG: 127
// DEBUG: (122, 29)
// DEBUG: Operating on sky
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on and
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on invaded
// DEBUG: ['appeared', 'from', 'a', 'colourless', 'sky', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on fields,
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on gardens
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on and
// DEBUG: 162
// DEBUG: (157, 41)
// DEBUG: Operating on lawns
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on of
// DEBUG: ['invaded', 'the', 'fields,', 'gardens', 'and', 'lawns']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on Romerike
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on like
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on an
// DEBUG: 114
// DEBUG: (109, 53)
// DEBUG: Operating on armada
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on from
// DEBUG: 186
// DEBUG: (181, 53)
// DEBUG: Operating on outer
// DEBUG: ['of', 'Romerike', 'like', 'an', 'armada', 'from']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on space.
// DEBUG: 59
// DEBUG: ["eleven o'clock"]
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Jo Nesbo, The Snowman ']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the morning, large flakes had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "appeared from a colourless sky and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "invaded the fields, gardens and lawns", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "of Romerike like an armada from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "eleven o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Jo Nesbo, The Snowman ", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("11:00 - At eleven o'clock the phone rang, and still the figure did not respond, any more than it had responded when the phone had rung at twenty-five to seven, and again for ten minutes continuously starting at five to seven... - Douglas Adams, The Long Dark Tea-Time of the Soul"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 195
// DEBUG: (190, 5)
// DEBUG: Operating on the
// DEBUG: ['At', 'TIMESTRING']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on phone
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on rang,
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on and
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on still
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on figure
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on did
// DEBUG: ['the', 'phone', 'rang,', 'and', 'still', 'the', 'figure']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on not
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on respond,
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on any
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on more
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on than
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on it
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on had
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on responded
// DEBUG: ['did', 'not', 'respond,', 'any', 'more', 'than', 'it', 'had']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on when
// DEBUG: 49
// DEBUG: (44, 41)
// DEBUG: Operating on the
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on phone
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on had
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on rung
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on at
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on twenty-five
// DEBUG: ['responded', 'when', 'the', 'phone', 'had', 'rung', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on to
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on seven,
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on and
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on again
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on for
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on ten
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on minutes
// DEBUG: ['twenty-five', 'to', 'seven,', 'and', 'again', 'for', 'ten']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on continuously
// DEBUG: 103
// DEBUG: (98, 65)
// DEBUG: Operating on starting
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on at
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on five
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on to
// DEBUG: ['minutes', 'continuously', 'starting', 'at', 'five']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on seven...
// DEBUG: 70
// DEBUG: ["eleven o'clock"]
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Douglas Adams']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "At TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the phone rang, and still the figure", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "did not respond, any more than it had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "responded when the phone had rung at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "twenty-five to seven, and again for ten", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "minutes continuously starting at five", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "eleven o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Douglas Adams", &Font12, WHITE, BLACK);
          return;
        case 7:
          Serial.println(F("11:00 - Big Ben was striking as she stepped out into the street. It was eleven o'clock and the unused hour was fresh as if issued to children on a beach. - Virginia Woolf, Mrs Dalloway "));
// DEBUG: (5, 5)
// DEBUG: Operating on Big
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Ben
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on was
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on striking
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on as
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on she
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on stepped
// DEBUG: ['Big', 'Ben', 'was', 'striking', 'as', 'she']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on out
// DEBUG: 40
// DEBUG: (35, 17)
// DEBUG: Operating on into
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on the
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on street.
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on It
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on was
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['stepped', 'out', 'into', 'the', 'street.', 'It', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on and
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on unused
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on hour
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on was
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on fresh
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on as
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on if
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on issued
// DEBUG: ['the', 'unused', 'hour', 'was', 'fresh', 'as', 'if']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on children
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on on
// DEBUG: 104
// DEBUG: (99, 53)
// DEBUG: Operating on a
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on beach.
// DEBUG: 155
// DEBUG: ["eleven o'clock"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Mrs Dalloway']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "Big Ben was striking as she", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "stepped out into the street. It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the unused hour was fresh as if", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "eleven o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Mrs Dalloway", &Font12, WHITE, BLACK);
          return;
        case 8:
          Serial.println(F("11:00 - It was about eleven o'clock in the morning, mid October, with the sun not shining and a look of hard wet rain in the clearness of the foothills. I was wearing my powder-blue suit, with dark blue shirt, tie and display handkerchief, black brogues, black wool socks with dark blue clocks on them. I was neat, clean, shaved and sober, and I didn't care who knew it. I was everything the well-dressed private detective ought to be. I was calling on four millon dollars. - Raymond Chandler, The big sleep "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on about
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'about']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on morning,
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on mid
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on October,
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on with
// DEBUG: ['TIMESTRING', 'in', 'the', 'morning,', 'mid', 'October,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on sun
// DEBUG: 59
// DEBUG: (54, 29)
// DEBUG: Operating on not
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on shining
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on and
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on a
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on look
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on of
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on hard
// DEBUG: ['with', 'the', 'sun', 'not', 'shining', 'and', 'a', 'look', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on wet
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on rain
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on in
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on the
// DEBUG: 103
// DEBUG: (98, 41)
// DEBUG: Operating on clearness
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on of
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on the
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on foothills.
// DEBUG: ['hard', 'wet', 'rain', 'in', 'the', 'clearness', 'of', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on I
// DEBUG: 29
// DEBUG: (24, 53)
// DEBUG: Operating on was
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on wearing
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on my
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on powder-blue
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on suit,
// DEBUG: ['foothills.', 'I', 'was', 'wearing', 'my', 'powder-blue']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on with
// DEBUG: 45
// DEBUG: (40, 65)
// DEBUG: Operating on dark
// DEBUG: 74
// DEBUG: (69, 65)
// DEBUG: Operating on blue
// DEBUG: 103
// DEBUG: (98, 65)
// DEBUG: Operating on shirt,
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on tie
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on and
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on display
// DEBUG: ['suit,', 'with', 'dark', 'blue', 'shirt,', 'tie', 'and']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on handkerchief,
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on black
// DEBUG: 146
// DEBUG: (141, 77)
// DEBUG: Operating on brogues,
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on black
// DEBUG: ['display', 'handkerchief,', 'black', 'brogues,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on wool
// DEBUG: 45
// DEBUG: (40, 89)
// DEBUG: Operating on socks
// DEBUG: 81
// DEBUG: (76, 89)
// DEBUG: Operating on with
// DEBUG: 110
// DEBUG: (105, 89)
// DEBUG: Operating on dark
// DEBUG: 139
// DEBUG: (134, 89)
// DEBUG: Operating on blue
// DEBUG: 168
// DEBUG: (163, 89)
// DEBUG: Operating on clocks
// DEBUG: 211
// DEBUG: (206, 89)
// DEBUG: Operating on on
// DEBUG: ['black', 'wool', 'socks', 'with', 'dark', 'blue', 'clocks']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on them.
// DEBUG: 49
// DEBUG: (44, 101)
// DEBUG: Operating on I
// DEBUG: 57
// DEBUG: (52, 101)
// DEBUG: Operating on was
// DEBUG: 79
// DEBUG: (74, 101)
// DEBUG: Operating on neat,
// DEBUG: 115
// DEBUG: (110, 101)
// DEBUG: Operating on clean,
// DEBUG: 158
// DEBUG: (153, 101)
// DEBUG: Operating on shaved
// DEBUG: 201
// DEBUG: (196, 101)
// DEBUG: Operating on and
// DEBUG: ['on', 'them.', 'I', 'was', 'neat,', 'clean,', 'shaved']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on sober,
// DEBUG: 57
// DEBUG: (52, 113)
// DEBUG: Operating on and
// DEBUG: 79
// DEBUG: (74, 113)
// DEBUG: Operating on I
// DEBUG: 87
// DEBUG: (82, 113)
// DEBUG: Operating on didn't
// DEBUG: 130
// DEBUG: (125, 113)
// DEBUG: Operating on care
// DEBUG: 159
// DEBUG: (154, 113)
// DEBUG: Operating on who
// DEBUG: 181
// DEBUG: (176, 113)
// DEBUG: Operating on knew
// DEBUG: 210
// DEBUG: (205, 113)
// DEBUG: Operating on it.
// DEBUG: ['and', 'sober,', 'and', 'I', "didn't", 'care', 'who', 'knew']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (9, 125)
// DEBUG: Operating on I
// DEBUG: 22
// DEBUG: (17, 125)
// DEBUG: Operating on was
// DEBUG: 44
// DEBUG: (39, 125)
// DEBUG: Operating on everything
// DEBUG: 115
// DEBUG: (110, 125)
// DEBUG: Operating on the
// DEBUG: 137
// DEBUG: (132, 125)
// DEBUG: Operating on well-dressed
// DEBUG: ['it.', 'I', 'was', 'everything', 'the']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (18, 137)
// DEBUG: Operating on private
// DEBUG: 73
// DEBUG: (68, 137)
// DEBUG: Operating on detective
// DEBUG: 137
// DEBUG: (132, 137)
// DEBUG: Operating on ought
// DEBUG: 173
// DEBUG: (168, 137)
// DEBUG: Operating on to
// DEBUG: 188
// DEBUG: (183, 137)
// DEBUG: Operating on be.
// DEBUG: 210
// DEBUG: (205, 137)
// DEBUG: Operating on I
// DEBUG: ['well-dressed', 'private', 'detective', 'ought', 'to', 'be.']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (7, 149)
// DEBUG: Operating on was
// DEBUG: 34
// DEBUG: (29, 149)
// DEBUG: Operating on calling
// DEBUG: 84
// DEBUG: (79, 149)
// DEBUG: Operating on on
// DEBUG: 99
// DEBUG: (94, 149)
// DEBUG: Operating on four
// DEBUG: 128
// DEBUG: (123, 149)
// DEBUG: Operating on millon
// DEBUG: 171
// DEBUG: (166, 149)
// DEBUG: Operating on dollars.
// DEBUG: ['I', 'was', 'calling', 'on', 'four', 'millon']
// DEBUG: drawing cursor (5, 149)
// DEBUG: ["eleven o'clock"]
// DEBUG: drawing cursor (78, 5)
// DEBUG: ['- The big sleep']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "It was about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING in the morning, mid October,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "with the sun not shining and a look of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "hard wet rain in the clearness of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "foothills. I was wearing my powder-blue", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "suit, with dark blue shirt, tie and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "display handkerchief, black brogues,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "black wool socks with dark blue clocks", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "on them. I was neat, clean, shaved", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "and sober, and I didn't care who knew", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "it. I was everything the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "well-dressed private detective ought to be.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "I was calling on four millon", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(78, 5, "eleven o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- The big sleep", &Font12, WHITE, BLACK);
          return;
        case 9:
          Serial.println(F("11:00 - My sister is terrified that I might write and tell all the family secrets. Why do I feel like a rebel, like an iconoclast? I am only trying to do a writing class, what is wrong with that? I keep telling myself that once in the car I will be fine, I can listen to Radio Four Woman’s Hour and that will take me till eleven o’clock when the class starts. - Patsy Hickman, The Saints "));
// DEBUG: (5, 5)
// DEBUG: Operating on My
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on sister
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on is
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on terrified
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on that
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on I
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on might
// DEBUG: ['My', 'sister', 'is', 'terrified', 'that', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on write
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on and
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on tell
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on all
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on family
// DEBUG: 190
// DEBUG: (185, 17)
// DEBUG: Operating on secrets.
// DEBUG: ['might', 'write', 'and', 'tell', 'all', 'the', 'family']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on Why
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on do
// DEBUG: 56
// DEBUG: (51, 29)
// DEBUG: Operating on I
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on feel
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on like
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on a
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on rebel,
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on like
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on an
// DEBUG: ['secrets.', 'Why', 'do', 'I', 'feel', 'like', 'a', 'rebel,', 'like']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on iconoclast?
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on I
// DEBUG: 99
// DEBUG: (94, 41)
// DEBUG: Operating on am
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on only
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on trying
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on to
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on do
// DEBUG: ['an', 'iconoclast?', 'I', 'am', 'only', 'trying', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 53)
// DEBUG: Operating on writing
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on class,
// DEBUG: 114
// DEBUG: (109, 53)
// DEBUG: Operating on what
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on is
// DEBUG: 158
// DEBUG: (153, 53)
// DEBUG: Operating on wrong
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on with
// DEBUG: ['do', 'a', 'writing', 'class,', 'what', 'is', 'wrong']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on that?
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on I
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on keep
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on telling
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on myself
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on that
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on once
// DEBUG: ['with', 'that?', 'I', 'keep', 'telling', 'myself', 'that']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on in
// DEBUG: 30
// DEBUG: (25, 77)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 77)
// DEBUG: Operating on car
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on I
// DEBUG: 82
// DEBUG: (77, 77)
// DEBUG: Operating on will
// DEBUG: 111
// DEBUG: (106, 77)
// DEBUG: Operating on be
// DEBUG: 126
// DEBUG: (121, 77)
// DEBUG: Operating on fine,
// DEBUG: 162
// DEBUG: (157, 77)
// DEBUG: Operating on I
// DEBUG: 170
// DEBUG: (165, 77)
// DEBUG: Operating on can
// DEBUG: 192
// DEBUG: (187, 77)
// DEBUG: Operating on listen
// DEBUG: ['once', 'in', 'the', 'car', 'I', 'will', 'be', 'fine,', 'I', 'can']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 89)
// DEBUG: Operating on Radio
// DEBUG: 68
// DEBUG: (63, 89)
// DEBUG: Operating on Four
// DEBUG: 97
// DEBUG: (92, 89)
// DEBUG: Operating on Woman’s
// DEBUG: 147
// DEBUG: (142, 89)
// DEBUG: Operating on Hour
// DEBUG: 176
// DEBUG: (171, 89)
// DEBUG: Operating on and
// DEBUG: 198
// DEBUG: (193, 89)
// DEBUG: Operating on that
// DEBUG: ['listen', 'to', 'Radio', 'Four', 'Woman’s', 'Hour', 'and']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on will
// DEBUG: 44
// DEBUG: (39, 101)
// DEBUG: Operating on take
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on me
// DEBUG: 88
// DEBUG: (83, 101)
// DEBUG: Operating on till
// DEBUG: 117
// DEBUG: (112, 101)
// DEBUG: Operating on TIMESTRINGo’clock
// DEBUG: Wrorking on the timestring
// DEBUG: ['that', 'will', 'take', 'me', 'till']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (23, 113)
// DEBUG: Operating on when
// DEBUG: 57
// DEBUG: (52, 113)
// DEBUG: Operating on the
// DEBUG: 79
// DEBUG: (74, 113)
// DEBUG: Operating on class
// DEBUG: 115
// DEBUG: (110, 113)
// DEBUG: Operating on starts.
// DEBUG: 165
// DEBUG: ['eleven ']
// DEBUG: drawing cursor (112, 101)
// DEBUG: ['- Patsy Hickman, The Saints ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "My sister is terrified that I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "might write and tell all the family", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "secrets. Why do I feel like a rebel, like", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "an iconoclast? I am only trying to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "do a writing class, what is wrong", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "with that? I keep telling myself that", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "once in the car I will be fine, I can", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "listen to Radio Four Woman’s Hour and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "that will take me till", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(112, 101, "eleven ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Patsy Hickman, The Saints ", &Font12, WHITE, BLACK);
          return;
        case 10:
          Serial.println(F("11:00 - ON the morning following the events just narrated, Mrs. Arlington was seated at breakfast in a sweet little parlour of the splendid mansion which the Earl of Warrington had taken and fitted up for her in Dover Street, Piccadilly. It was about eleven o'clock; and the Enchantress was attired in a delicious deshabillé. With her little feet upon an ottoman near the fender, and her fine form reclining in a luxurious large arm-chair, she divided her attention between her chocolate and the columns of the Morning Herald. She invariably prolonged the morning's repast as much as possible, limply because it served to wile away the time until the hour for dressing arrived. - G.W.M. Reynolds, The Mysteries of London "));
// DEBUG: (5, 5)
// DEBUG: Operating on ON
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on morning
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on following
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on the
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on events
// DEBUG: ['ON', 'the', 'morning', 'following', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on just
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on narrated,
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on Mrs.
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on Arlington
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on was
// DEBUG: ['events', 'just', 'narrated,', 'Mrs.', 'Arlington']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on seated
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on at
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on breakfast
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on in
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on a
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on sweet
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on little
// DEBUG: ['was', 'seated', 'at', 'breakfast', 'in', 'a', 'sweet']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on parlour
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on of
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on the
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on splendid
// DEBUG: 161
// DEBUG: (156, 41)
// DEBUG: Operating on mansion
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on which
// DEBUG: ['little', 'parlour', 'of', 'the', 'splendid', 'mansion']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on Earl
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on of
// DEBUG: 82
// DEBUG: (77, 53)
// DEBUG: Operating on Warrington
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on had
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on taken
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on and
// DEBUG: ['which', 'the', 'Earl', 'of', 'Warrington', 'had', 'taken']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on fitted
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on up
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on for
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on her
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on in
// DEBUG: 131
// DEBUG: (126, 65)
// DEBUG: Operating on Dover
// DEBUG: 167
// DEBUG: (162, 65)
// DEBUG: Operating on Street,
// DEBUG: ['and', 'fitted', 'up', 'for', 'her', 'in', 'Dover']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on Piccadilly.
// DEBUG: 96
// DEBUG: (91, 77)
// DEBUG: Operating on It
// DEBUG: 111
// DEBUG: (106, 77)
// DEBUG: Operating on was
// DEBUG: 133
// DEBUG: (128, 77)
// DEBUG: Operating on about
// DEBUG: 169
// DEBUG: (164, 77)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: ['Street,', 'Piccadilly.', 'It', 'was', 'about']
// DEBUG: drawing cursor (5, 77)
// DEBUG: 186
// DEBUG: (181, 89)
// DEBUG: Operating on and
// DEBUG: 208
// DEBUG: (203, 89)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING;', 'and']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on Enchantress
// DEBUG: 92
// DEBUG: (87, 101)
// DEBUG: Operating on was
// DEBUG: 114
// DEBUG: (109, 101)
// DEBUG: Operating on attired
// DEBUG: 164
// DEBUG: (159, 101)
// DEBUG: Operating on in
// DEBUG: 179
// DEBUG: (174, 101)
// DEBUG: Operating on a
// DEBUG: 187
// DEBUG: (182, 101)
// DEBUG: Operating on delicious
// DEBUG: ['the', 'Enchantress', 'was', 'attired', 'in', 'a']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (15, 113)
// DEBUG: Operating on deshabillé.
// DEBUG: 98
// DEBUG: (93, 113)
// DEBUG: Operating on With
// DEBUG: 127
// DEBUG: (122, 113)
// DEBUG: Operating on her
// DEBUG: 149
// DEBUG: (144, 113)
// DEBUG: Operating on little
// DEBUG: 192
// DEBUG: (187, 113)
// DEBUG: Operating on feet
// DEBUG: ['delicious', 'deshabillé.', 'With', 'her', 'little']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (10, 125)
// DEBUG: Operating on upon
// DEBUG: 44
// DEBUG: (39, 125)
// DEBUG: Operating on an
// DEBUG: 59
// DEBUG: (54, 125)
// DEBUG: Operating on ottoman
// DEBUG: 109
// DEBUG: (104, 125)
// DEBUG: Operating on near
// DEBUG: 138
// DEBUG: (133, 125)
// DEBUG: Operating on the
// DEBUG: 160
// DEBUG: (155, 125)
// DEBUG: Operating on fender,
// DEBUG: 210
// DEBUG: (205, 125)
// DEBUG: Operating on and
// DEBUG: ['feet', 'upon', 'an', 'ottoman', 'near', 'the', 'fender,']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (9, 137)
// DEBUG: Operating on her
// DEBUG: 36
// DEBUG: (31, 137)
// DEBUG: Operating on fine
// DEBUG: 65
// DEBUG: (60, 137)
// DEBUG: Operating on form
// DEBUG: 94
// DEBUG: (89, 137)
// DEBUG: Operating on reclining
// DEBUG: 158
// DEBUG: (153, 137)
// DEBUG: Operating on in
// DEBUG: 173
// DEBUG: (168, 137)
// DEBUG: Operating on a
// DEBUG: 181
// DEBUG: (176, 137)
// DEBUG: Operating on luxurious
// DEBUG: ['and', 'her', 'fine', 'form', 'reclining', 'in', 'a']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (15, 149)
// DEBUG: Operating on large
// DEBUG: 56
// DEBUG: (51, 149)
// DEBUG: Operating on arm-chair,
// DEBUG: 127
// DEBUG: (122, 149)
// DEBUG: Operating on she
// DEBUG: 149
// DEBUG: (144, 149)
// DEBUG: Operating on divided
// DEBUG: 199
// DEBUG: (194, 149)
// DEBUG: Operating on her
// DEBUG: ['luxurious', 'large', 'arm-chair,', 'she', 'divided']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (9, 161)
// DEBUG: Operating on attention
// DEBUG: 78
// DEBUG: (73, 161)
// DEBUG: Operating on between
// DEBUG: 128
// DEBUG: (123, 161)
// DEBUG: Operating on her
// DEBUG: 150
// DEBUG: (145, 161)
// DEBUG: Operating on chocolate
// DEBUG: ['her', 'attention', 'between', 'her']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (15, 173)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 173)
// DEBUG: Operating on the
// DEBUG: 64
// DEBUG: (59, 173)
// DEBUG: Operating on columns
// DEBUG: 114
// DEBUG: (109, 173)
// DEBUG: Operating on of
// DEBUG: 129
// DEBUG: (124, 173)
// DEBUG: Operating on the
// DEBUG: 151
// DEBUG: (146, 173)
// DEBUG: Operating on Morning
// DEBUG: 201
// DEBUG: (196, 173)
// DEBUG: Operating on Herald.
// DEBUG: ['chocolate', 'and', 'the', 'columns', 'of', 'the', 'Morning']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (13, 185)
// DEBUG: Operating on She
// DEBUG: 40
// DEBUG: (35, 185)
// DEBUG: Operating on invariably
// DEBUG: 111
// DEBUG: (106, 185)
// DEBUG: Operating on prolonged
// DEBUG: 175
// DEBUG: (170, 185)
// DEBUG: Operating on the
// DEBUG: 197
// DEBUG: (192, 185)
// DEBUG: Operating on morning's
// DEBUG: ['Herald.', 'She', 'invariably', 'prolonged', 'the']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (15, 197)
// DEBUG: Operating on repast
// DEBUG: 63
// DEBUG: (58, 197)
// DEBUG: Operating on as
// DEBUG: 78
// DEBUG: (73, 197)
// DEBUG: Operating on much
// DEBUG: 107
// DEBUG: (102, 197)
// DEBUG: Operating on as
// DEBUG: 122
// DEBUG: (117, 197)
// DEBUG: Operating on possible,
// DEBUG: 186
// DEBUG: (181, 197)
// DEBUG: Operating on limply
// DEBUG: ["morning's", 'repast', 'as', 'much', 'as', 'possible,']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (12, 209)
// DEBUG: Operating on because
// DEBUG: 67
// DEBUG: (62, 209)
// DEBUG: Operating on it
// DEBUG: 82
// DEBUG: (77, 209)
// DEBUG: Operating on served
// DEBUG: 125
// DEBUG: (120, 209)
// DEBUG: Operating on to
// DEBUG: 140
// DEBUG: (135, 209)
// DEBUG: Operating on wile
// DEBUG: 169
// DEBUG: (164, 209)
// DEBUG: Operating on away
// DEBUG: 198
// DEBUG: (193, 209)
// DEBUG: Operating on the
// DEBUG: ['limply', 'because', 'it', 'served', 'to', 'wile', 'away']
// DEBUG: drawing cursor (5, 209)
// DEBUG: (9, 221)
// DEBUG: Operating on time
// DEBUG: 43
// DEBUG: (38, 221)
// DEBUG: Operating on until
// DEBUG: 79
// DEBUG: (74, 221)
// DEBUG: Operating on the
// DEBUG: 101
// DEBUG: (96, 221)
// DEBUG: Operating on hour
// DEBUG: 130
// DEBUG: (125, 221)
// DEBUG: Operating on for
// DEBUG: 152
// DEBUG: (147, 221)
// DEBUG: Operating on dressing
// DEBUG: 209
// DEBUG: (204, 221)
// DEBUG: Operating on arrived.
// DEBUG: ['the', 'time', 'until', 'the', 'hour', 'for', 'dressing']
// DEBUG: drawing cursor (5, 221)
// DEBUG: ["eleven o'clock"]
// DEBUG: drawing cursor (5, 89)
// DEBUG: ['- The Mysteries of London']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "ON the morning following the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "events just narrated, Mrs. Arlington", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "was seated at breakfast in a sweet", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "little parlour of the splendid mansion", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "which the Earl of Warrington had taken", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "and fitted up for her in Dover", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "Street, Piccadilly. It was about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "TIMESTRING; and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "the Enchantress was attired in a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "delicious deshabillé. With her little", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "feet upon an ottoman near the fender,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "and her fine form reclining in a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "luxurious large arm-chair, she divided", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "her attention between her", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "chocolate and the columns of the Morning", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "Herald. She invariably prolonged the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 197, "morning's repast as much as possible,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 209, "limply because it served to wile away", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 221, "the time until the hour for dressing", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "eleven o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- The Mysteries of London", &Font12, WHITE, BLACK);
          return;
        case 11:
          Serial.println(F("11:00 - Quiet as I am, I become at Eleven o'Clock in the Morning on every day of the week save Sunday - George Augustus Sala, Twice Around the Clock"));
// DEBUG: (5, 5)
// DEBUG: Operating on Quiet
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on as
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on I
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on am,
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on I
// DEBUG: 99
// DEBUG: (94, 5)
// DEBUG: Operating on become
// DEBUG: 142
// DEBUG: (137, 5)
// DEBUG: Operating on at
// DEBUG: 157
// DEBUG: (152, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Quiet', 'as', 'I', 'am,', 'I', 'become', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on on
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on every
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on day
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on of
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on the
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on week
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on save
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on Sunday
// DEBUG: ['TIMESTRING', 'on', 'every', 'day', 'of', 'the', 'week', 'save']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ["Eleven o'Clock in the Morning"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Twice Around the Clock']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "Quiet as I am, I become at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING on every day of the week save", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Eleven o'Clock in the Morning", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Twice Around the Clock", &Font12, WHITE, BLACK);
          return;
        case 12:
          Serial.println(F("11:00 - Though perhaps' – but here the bracket clock whirred and then hectically struck eleven, its weights spooling downwards at the sudden expense of energy. She had to sit for a moment, when the echo had vanished, to repossess her thoughts. - Alan Hollinghurst, The Stranger's Child "));
// DEBUG: (5, 5)
// DEBUG: Operating on Though
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on perhaps'
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on –
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on but
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on here
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on the
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on bracket
// DEBUG: ['Though', "perhaps'", '–', 'but', 'here', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on clock
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on whirred
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on and
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on then
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on hectically
// DEBUG: ['bracket', 'clock', 'whirred', 'and', 'then']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on struck
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 185
// DEBUG: (180, 29)
// DEBUG: Operating on its
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on weights
// DEBUG: ['hectically', 'struck', 'TIMESTRING,', 'its']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on spooling
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on downwards
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on the
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on sudden
// DEBUG: ['weights', 'spooling', 'downwards', 'at', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on expense
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on of
// DEBUG: 82
// DEBUG: (77, 53)
// DEBUG: Operating on energy.
// DEBUG: 132
// DEBUG: (127, 53)
// DEBUG: Operating on She
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on had
// DEBUG: 176
// DEBUG: (171, 53)
// DEBUG: Operating on to
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on sit
// DEBUG: ['sudden', 'expense', 'of', 'energy.', 'She', 'had', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on for
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on a
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on moment,
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on when
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on the
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on echo
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on had
// DEBUG: 196
// DEBUG: (191, 65)
// DEBUG: Operating on vanished,
// DEBUG: ['sit', 'for', 'a', 'moment,', 'when', 'the', 'echo', 'had']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on to
// DEBUG: 35
// DEBUG: (30, 77)
// DEBUG: Operating on repossess
// DEBUG: 99
// DEBUG: (94, 77)
// DEBUG: Operating on her
// DEBUG: 121
// DEBUG: (116, 77)
// DEBUG: Operating on thoughts.
// DEBUG: 185
// DEBUG: ['eleven']
// DEBUG: drawing cursor (59, 29)
// DEBUG: ["- The Stranger's Child"]
// DEBUG: drawing cursor (53, 192)
          paint.Paint_DrawString_EN(5, 5, "Though perhaps' – but here the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "bracket clock whirred and then", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "hectically struck TIMESTRING, its", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "weights spooling downwards at the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "sudden expense of energy. She had to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "sit for a moment, when the echo had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(59, 29, "eleven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(53, 192, "- The Stranger's Child", &Font12, WHITE, BLACK);
          return;
        case 13:
          Serial.println(F("11:00 - We got to Waterloo at eleven, and asked where the eleven-five started from. Of course nobody knew. - Jerome K Jerome, Three Men in a Boat"));
// DEBUG: (5, 5)
// DEBUG: Operating on We
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on got
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on to
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on Waterloo
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['We', 'got', 'to', 'Waterloo']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on asked
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on where
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on the
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on eleven-five
// DEBUG: ['TIMESTRING,', 'and', 'asked', 'where', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on started
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on from.
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on Of
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on course
// DEBUG: 166
// DEBUG: (161, 29)
// DEBUG: Operating on nobody
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on knew.
// DEBUG: ['eleven-five', 'started', 'from.', 'Of', 'course', 'nobody']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['at eleven']
// DEBUG: drawing cursor (114, 5)
// DEBUG: ['- Three Men in a Boat']
// DEBUG: drawing cursor (60, 192)
          paint.Paint_DrawString_EN(5, 5, "We got to Waterloo", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, and asked where the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "eleven-five started from. Of course nobody", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(114, 5, "at eleven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(60, 192, "- Three Men in a Boat", &Font12, WHITE, BLACK);
          return;
        case 14:
          Serial.println(F("11:00 - We passed a few sad hours until eleven o'clock, when the trial was to commence. My father and the rest of the family being obliged to attend as witnesses, I accompanied them to the court. During the whole of this wretched mockery of justice I suffered living torture. - Mary Shelley, Frankenstein "));
// DEBUG: (5, 5)
// DEBUG: Operating on We
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on passed
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on a
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on few
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on sad
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on hours
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on until
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['We', 'passed', 'a', 'few', 'sad', 'hours', 'until']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on when
// DEBUG: ['TIMESTRING,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on trial
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on was
// DEBUG: 95
// DEBUG: (90, 29)
// DEBUG: Operating on to
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on commence.
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on My
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on father
// DEBUG: ['when', 'the', 'trial', 'was', 'to', 'commence.', 'My']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 41)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on rest
// DEBUG: 90
// DEBUG: (85, 41)
// DEBUG: Operating on of
// DEBUG: 105
// DEBUG: (100, 41)
// DEBUG: Operating on the
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on family
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on being
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on obliged
// DEBUG: ['father', 'and', 'the', 'rest', 'of', 'the', 'family', 'being']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on attend
// DEBUG: 76
// DEBUG: (71, 53)
// DEBUG: Operating on as
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on witnesses,
// DEBUG: 162
// DEBUG: (157, 53)
// DEBUG: Operating on I
// DEBUG: 170
// DEBUG: (165, 53)
// DEBUG: Operating on accompanied
// DEBUG: ['obliged', 'to', 'attend', 'as', 'witnesses,', 'I']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on them
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on to
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on the
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on court.
// DEBUG: 131
// DEBUG: (126, 65)
// DEBUG: Operating on During
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on the
// DEBUG: 196
// DEBUG: (191, 65)
// DEBUG: Operating on whole
// DEBUG: ['accompanied', 'them', 'to', 'the', 'court.', 'During', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on this
// DEBUG: 60
// DEBUG: (55, 77)
// DEBUG: Operating on wretched
// DEBUG: 117
// DEBUG: (112, 77)
// DEBUG: Operating on mockery
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on of
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on justice
// DEBUG: ['whole', 'of', 'this', 'wretched', 'mockery', 'of']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on I
// DEBUG: 26
// DEBUG: (21, 89)
// DEBUG: Operating on suffered
// DEBUG: 83
// DEBUG: (78, 89)
// DEBUG: Operating on living
// DEBUG: 126
// DEBUG: (121, 89)
// DEBUG: Operating on torture.
// DEBUG: 183
// DEBUG: ["eleven o'clock"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Mary Shelley, Frankenstein ']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "We passed a few sad hours until", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "when the trial was to commence. My", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "father and the rest of the family being", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "obliged to attend as witnesses, I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "accompanied them to the court. During the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "whole of this wretched mockery of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "eleven o'clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Mary Shelley, Frankenstein ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:01 for 1 quotations:
    case 661:
      Serial.println(F("Only one option for 11:01:"));
    Serial.println(F("11:01 - O'Neil rises and takes the tray. He has finished the tea, but the muffins are still here in a wicker basket covered with a blue napkin. The clock above the stove says that it is just past eleven, and guests will be arriving at the house now. - Justin Cronin, Mary and O'Neil"));
// DEBUG: (5, 5)
// DEBUG: Operating on O'Neil
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on rises
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on and
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on takes
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on tray.
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on He
// DEBUG: ["O'Neil", 'rises', 'and', 'takes', 'the', 'tray.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on has
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on finished
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on the
// DEBUG: 114
// DEBUG: (109, 17)
// DEBUG: Operating on tea,
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on but
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on the
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on muffins
// DEBUG: ['He', 'has', 'finished', 'the', 'tea,', 'but', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on are
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on still
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on here
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on in
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on a
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on wicker
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on basket
// DEBUG: ['muffins', 'are', 'still', 'here', 'in', 'a', 'wicker']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on covered
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on with
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on a
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on blue
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on napkin.
// DEBUG: 183
// DEBUG: (178, 41)
// DEBUG: Operating on The
// DEBUG: 205
// DEBUG: (200, 41)
// DEBUG: Operating on clock
// DEBUG: ['basket', 'covered', 'with', 'a', 'blue', 'napkin.', 'The']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on above
// DEBUG: 52
// DEBUG: (47, 53)
// DEBUG: Operating on the
// DEBUG: 74
// DEBUG: (69, 53)
// DEBUG: Operating on stove
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on says
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on that
// DEBUG: 168
// DEBUG: (163, 53)
// DEBUG: Operating on it
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on is
// DEBUG: 198
// DEBUG: (193, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['clock', 'above', 'the', 'stove', 'says', 'that', 'it', 'is']
// DEBUG: drawing cursor (5, 53)
// DEBUG: 200
// DEBUG: (195, 65)
// DEBUG: Operating on and
// DEBUG: ['TIMESTRING,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on guests
// DEBUG: 57
// DEBUG: (52, 77)
// DEBUG: Operating on will
// DEBUG: 86
// DEBUG: (81, 77)
// DEBUG: Operating on be
// DEBUG: 101
// DEBUG: (96, 77)
// DEBUG: Operating on arriving
// DEBUG: 158
// DEBUG: (153, 77)
// DEBUG: Operating on at
// DEBUG: 173
// DEBUG: (168, 77)
// DEBUG: Operating on the
// DEBUG: 195
// DEBUG: (190, 77)
// DEBUG: Operating on house
// DEBUG: ['and', 'guests', 'will', 'be', 'arriving', 'at', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on now.
// DEBUG: 45
// DEBUG: ['just past eleven']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ["- Mary and O'Neil"]
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "O'Neil rises and takes the tray.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "He has finished the tea, but the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "muffins are still here in a wicker", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "basket covered with a blue napkin. The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "clock above the stove says that it is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "and guests will be arriving at the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "just past eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Mary and O'Neil", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:02 for 1 quotations:
    case 662:
      Serial.println(F("Only one option for 11:02:"));
    Serial.println(F("11:02 - On August 9th, three days later, at 11.02am, another B−29 dropped the second bomb on the industrial section of the city of Nagasaki, totally destroying 1 1/2 square miles of the city, killing 39,000 persons and injuring 25,000 more. - Manhattan Engineer District, The Atomic Bombings of Hiroshima and Nagasaki"));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on August
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on 9th,
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on three
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on days
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on later,
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on at
// DEBUG: ['On', 'August', '9th,', 'three', 'days', 'later,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on another
// DEBUG: 191
// DEBUG: (186, 17)
// DEBUG: Operating on B−29
// DEBUG: ['at', 'TIMESTRING,', 'another']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on dropped
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on second
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on bomb
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on on
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on the
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on industrial
// DEBUG: ['B−29', 'dropped', 'the', 'second', 'bomb', 'on', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on section
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on of
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on city
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on of
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on Nagasaki,
// DEBUG: ['industrial', 'section', 'of', 'the', 'city', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (15, 53)
// DEBUG: Operating on totally
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on destroying
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on 1
// DEBUG: 149
// DEBUG: (144, 53)
// DEBUG: Operating on 1/2
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on square
// DEBUG: ['Nagasaki,', 'totally', 'destroying', '1', '1/2']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on miles
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on of
// DEBUG: 68
// DEBUG: (63, 65)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on city,
// DEBUG: 126
// DEBUG: (121, 65)
// DEBUG: Operating on killing
// DEBUG: 176
// DEBUG: (171, 65)
// DEBUG: Operating on 39,000
// DEBUG: ['square', 'miles', 'of', 'the', 'city,', 'killing']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on persons
// DEBUG: 67
// DEBUG: (62, 77)
// DEBUG: Operating on and
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on injuring
// DEBUG: 146
// DEBUG: (141, 77)
// DEBUG: Operating on 25,000
// DEBUG: 189
// DEBUG: (184, 77)
// DEBUG: Operating on more.
// DEBUG: ['39,000', 'persons', 'and', 'injuring', '25,000']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['11.02am']
// DEBUG: drawing cursor (8, 17)
// DEBUG: ['- Manhattan Engineer District']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "On August 9th, three days later,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "at TIMESTRING, another", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "B−29 dropped the second bomb on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "industrial section of the city of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Nagasaki, totally destroying 1 1/2", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "square miles of the city, killing", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "39,000 persons and injuring 25,000", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(8, 17, "11.02am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Manhattan Engineer District", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:03 for 2 quotations:
    case 663:
      option = random(0, 2);
      Serial.print(F("2 options for 11:03. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:03 - What time are you meeting him? she called out. \"Eleven oh-three,\" he said. \"That made me think he's for real. Military and intelligence types set precise appointment times to eliminate confusion and ambiguity. Nothing ambiguous about eleven oh-three.\" - Christopher Buckley, Little Green Men "));
// DEBUG: (5, 5)
// DEBUG: Operating on What
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on time
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on are
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on you
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on meeting
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on him?
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on she
// DEBUG: ['What', 'time', 'are', 'you', 'meeting', 'him?']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on called
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on out.
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on \"TIMESTRING,\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['she', 'called', 'out.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (21, 29)
// DEBUG: Operating on he
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on said.
// DEBUG: 77
// DEBUG: (72, 29)
// DEBUG: Operating on \"That
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on made
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on me
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on think
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on he's
// DEBUG: ['\\"TIMESTRING,\\"', 'he', 'said.', '\\"That', 'made', 'me', 'think']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on for
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on real.
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on Military
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on and
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on intelligence
// DEBUG: ["he's", 'for', 'real.', 'Military', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (18, 53)
// DEBUG: Operating on types
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on set
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on precise
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on appointment
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on times
// DEBUG: ['intelligence', 'types', 'set', 'precise', 'appointment']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on eliminate
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on confusion
// DEBUG: 159
// DEBUG: (154, 65)
// DEBUG: Operating on and
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on ambiguity.
// DEBUG: ['times', 'to', 'eliminate', 'confusion', 'and']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on Nothing
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on ambiguous
// DEBUG: 135
// DEBUG: (130, 77)
// DEBUG: Operating on about
// DEBUG: 171
// DEBUG: (166, 77)
// DEBUG: Operating on eleven
// DEBUG: ['ambiguity.', 'Nothing', 'ambiguous', 'about']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on oh-three.\"
// DEBUG: 95
// DEBUG: ['Eleven oh-three']
// DEBUG: drawing cursor (81, 17)
// DEBUG: ['- Little Green Men']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "What time are you meeting him?", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "she called out.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "\"TIMESTRING,\" he said. \"That made me think", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "he's for real. Military and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "intelligence types set precise appointment", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "times to eliminate confusion and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "ambiguity. Nothing ambiguous about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(81, 17, "Eleven oh-three", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- Little Green Men", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:03 - On the fourth, at 11.03am, the editor of the Yidische Zaitung put in a call to him; Doctor Yarmolinsky did not answer. He was found in his room, his face already a little dark, nearly nude beneath a large, anachronistic cape. - Jorge Luis Borges, Death and the Compass"));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on fourth,
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on at
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['On', 'the', 'fourth,', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on editor
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on of
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on the
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on Yidische
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on Zaitung
// DEBUG: ['TIMESTRING,', 'the', 'editor', 'of', 'the', 'Yidische']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on put
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on in
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on a
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on call
// DEBUG: 92
// DEBUG: (87, 29)
// DEBUG: Operating on to
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on him;
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on Doctor
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on Yarmolinsky
// DEBUG: ['Zaitung', 'put', 'in', 'a', 'call', 'to', 'him;', 'Doctor']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on did
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on not
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on answer.
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on He
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on was
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on found
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on in
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on his
// DEBUG: ['Yarmolinsky', 'did', 'not', 'answer.', 'He', 'was', 'found', 'in']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on room,
// DEBUG: 50
// DEBUG: (45, 53)
// DEBUG: Operating on his
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on face
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on already
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on a
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on little
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on dark,
// DEBUG: ['his', 'room,', 'his', 'face', 'already', 'a', 'little']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on nearly
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on nude
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on beneath
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on a
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on large,
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on anachronistic
// DEBUG: ['dark,', 'nearly', 'nude', 'beneath', 'a', 'large,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (19, 77)
// DEBUG: Operating on cape.
// DEBUG: 60
// DEBUG: ['11.03am']
// DEBUG: drawing cursor (107, 5)
// DEBUG: ['- Death and the Compass']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "On the fourth, at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, the editor of the Yidische", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Zaitung put in a call to him; Doctor", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Yarmolinsky did not answer. He was found in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "his room, his face already a little", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "dark, nearly nude beneath a large,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(107, 5, "11.03am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- Death and the Compass", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:04 for 1 quotations:
    case 664:
      Serial.println(F("Only one option for 11:04:"));
    Serial.println(F("11:04 - As her husband had told him, she was still in bed although it was past 11 o'clock. Her normally mobile face was encased in clay, rigid and menacing as an Aztec mask. - Evelyn Waugh, Scoop "));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on her
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on husband
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on had
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on told
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on him,
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on she
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on was
// DEBUG: ['As', 'her', 'husband', 'had', 'told', 'him,', 'she']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on still
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on in
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on bed
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on although
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on it
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on was
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['was', 'still', 'in', 'bed', 'although', 'it', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on Her
// DEBUG: ['TIMESTRING.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on normally
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on mobile
// DEBUG: 114
// DEBUG: (109, 41)
// DEBUG: Operating on face
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on was
// DEBUG: 165
// DEBUG: (160, 41)
// DEBUG: Operating on encased
// DEBUG: ['Her', 'normally', 'mobile', 'face', 'was']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on clay,
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on rigid
// DEBUG: 105
// DEBUG: (100, 53)
// DEBUG: Operating on and
// DEBUG: 127
// DEBUG: (122, 53)
// DEBUG: Operating on menacing
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on as
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on an
// DEBUG: ['encased', 'in', 'clay,', 'rigid', 'and', 'menacing', 'as']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on Aztec
// DEBUG: 49
// DEBUG: (44, 65)
// DEBUG: Operating on mask.
// DEBUG: 85
// DEBUG: ["past 11 o'clock"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Evelyn Waugh, Scoop ']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "As her husband had told him, she", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "was still in bed although it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Her normally mobile face was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "encased in clay, rigid and menacing as", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "past 11 o'clock", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Evelyn Waugh, Scoop ", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:05 for 2 quotations:
    case 665:
      option = random(0, 2);
      Serial.print(F("2 options for 11:05. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:05 - July 3: 5 3/4 hours. Little done today. Deepening lethargy, dragged myself over to the lab, nearly left the road twice. Concentrated enough to feed the zoo and get the log up to date. Read through the operating manuals Whitby left for the last time, decided on a delivery rate of 40 rontgens/min., target distance of 530 cm. Everything is ready now. Woke 11:05. To sleep 3:15. - JG Ballard, The Voices of Time "));
// DEBUG: (5, 5)
// DEBUG: Operating on July
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on 3:
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on 5
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on 3/4
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on hours.
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on Little
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on done
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on today.
// DEBUG: ['July', '3:', '5', '3/4', 'hours.', 'Little', 'done']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on Deepening
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on lethargy,
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on dragged
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on myself
// DEBUG: ['today.', 'Deepening', 'lethargy,', 'dragged']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on over
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on to
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on the
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on lab,
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on nearly
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on left
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on the
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on road
// DEBUG: ['myself', 'over', 'to', 'the', 'lab,', 'nearly', 'left', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on twice.
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on Concentrated
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on enough
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on to
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on feed
// DEBUG: ['road', 'twice.', 'Concentrated', 'enough', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on zoo
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on and
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on get
// DEBUG: 103
// DEBUG: (98, 53)
// DEBUG: Operating on the
// DEBUG: 125
// DEBUG: (120, 53)
// DEBUG: Operating on log
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on up
// DEBUG: 162
// DEBUG: (157, 53)
// DEBUG: Operating on to
// DEBUG: 177
// DEBUG: (172, 53)
// DEBUG: Operating on date.
// DEBUG: ['feed', 'the', 'zoo', 'and', 'get', 'the', 'log', 'up', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on Read
// DEBUG: 45
// DEBUG: (40, 65)
// DEBUG: Operating on through
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on the
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on operating
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on manuals
// DEBUG: ['date.', 'Read', 'through', 'the', 'operating']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on Whitby
// DEBUG: 61
// DEBUG: (56, 77)
// DEBUG: Operating on left
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on for
// DEBUG: 112
// DEBUG: (107, 77)
// DEBUG: Operating on the
// DEBUG: 134
// DEBUG: (129, 77)
// DEBUG: Operating on last
// DEBUG: 163
// DEBUG: (158, 77)
// DEBUG: Operating on time,
// DEBUG: 199
// DEBUG: (194, 77)
// DEBUG: Operating on decided
// DEBUG: ['manuals', 'Whitby', 'left', 'for', 'the', 'last', 'time,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on on
// DEBUG: 33
// DEBUG: (28, 89)
// DEBUG: Operating on a
// DEBUG: 41
// DEBUG: (36, 89)
// DEBUG: Operating on delivery
// DEBUG: 98
// DEBUG: (93, 89)
// DEBUG: Operating on rate
// DEBUG: 127
// DEBUG: (122, 89)
// DEBUG: Operating on of
// DEBUG: 142
// DEBUG: (137, 89)
// DEBUG: Operating on 40
// DEBUG: 157
// DEBUG: (152, 89)
// DEBUG: Operating on rontgens/min.,
// DEBUG: ['decided', 'on', 'a', 'delivery', 'rate', 'of', '40']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (20, 101)
// DEBUG: Operating on target
// DEBUG: 68
// DEBUG: (63, 101)
// DEBUG: Operating on distance
// DEBUG: 125
// DEBUG: (120, 101)
// DEBUG: Operating on of
// DEBUG: 140
// DEBUG: (135, 101)
// DEBUG: Operating on 530
// DEBUG: 162
// DEBUG: (157, 101)
// DEBUG: Operating on cm.
// DEBUG: 184
// DEBUG: (179, 101)
// DEBUG: Operating on Everything
// DEBUG: ['rontgens/min.,', 'target', 'distance', 'of', '530', 'cm.']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (16, 113)
// DEBUG: Operating on is
// DEBUG: 36
// DEBUG: (31, 113)
// DEBUG: Operating on ready
// DEBUG: 72
// DEBUG: (67, 113)
// DEBUG: Operating on now.
// DEBUG: 101
// DEBUG: (96, 113)
// DEBUG: Operating on Woke
// DEBUG: 130
// DEBUG: (125, 113)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Everything', 'is', 'ready', 'now.', 'Woke']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (17, 125)
// DEBUG: Operating on To
// DEBUG: 37
// DEBUG: (32, 125)
// DEBUG: Operating on sleep
// DEBUG: 73
// DEBUG: (68, 125)
// DEBUG: Operating on 3:15.
// DEBUG: 109
// DEBUG: ['11:05']
// DEBUG: drawing cursor (125, 113)
// DEBUG: ['- The Voices of Time']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "July 3: 5 3/4 hours. Little done", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "today. Deepening lethargy, dragged", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "myself over to the lab, nearly left the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "road twice. Concentrated enough to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "feed the zoo and get the log up to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "date. Read through the operating", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "manuals Whitby left for the last time,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "decided on a delivery rate of 40", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "rontgens/min., target distance of 530 cm.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "Everything is ready now. Woke", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(125, 113, "11:05", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- The Voices of Time", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:05 - Sansom arrived in a Town Car at five past eleven. Local plates, which meant he had ridden up most of the way on the train. Less convenient for him, but a smaller carbon footprint than driving all the way, or flying. Every detail mattered, in a campaign. - Lee Child, Gone Tomorrow"));
// DEBUG: (5, 5)
// DEBUG: Operating on Sansom
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on arrived
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on in
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on a
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on Town
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on Car
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on at
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Sansom', 'arrived', 'in', 'a', 'Town', 'Car', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on Local
// DEBUG: ['TIMESTRING.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on plates,
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on which
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on meant
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on he
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on had
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on ridden
// DEBUG: ['Local', 'plates,', 'which', 'meant', 'he', 'had']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on up
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on most
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on of
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on the
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on way
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on on
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on the
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on train.
// DEBUG: 200
// DEBUG: (195, 41)
// DEBUG: Operating on Less
// DEBUG: ['ridden', 'up', 'most', 'of', 'the', 'way', 'on', 'the', 'train.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on convenient
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on for
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on him,
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on but
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on a
// DEBUG: 167
// DEBUG: (162, 53)
// DEBUG: Operating on smaller
// DEBUG: ['Less', 'convenient', 'for', 'him,', 'but', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on carbon
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on footprint
// DEBUG: 125
// DEBUG: (120, 65)
// DEBUG: Operating on than
// DEBUG: 154
// DEBUG: (149, 65)
// DEBUG: Operating on driving
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on all
// DEBUG: ['smaller', 'carbon', 'footprint', 'than', 'driving']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on way,
// DEBUG: 65
// DEBUG: (60, 77)
// DEBUG: Operating on or
// DEBUG: 80
// DEBUG: (75, 77)
// DEBUG: Operating on flying.
// DEBUG: 130
// DEBUG: (125, 77)
// DEBUG: Operating on Every
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on detail
// DEBUG: 209
// DEBUG: (204, 77)
// DEBUG: Operating on mattered,
// DEBUG: ['all', 'the', 'way,', 'or', 'flying.', 'Every', 'detail']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (15, 89)
// DEBUG: Operating on in
// DEBUG: 35
// DEBUG: (30, 89)
// DEBUG: Operating on a
// DEBUG: 43
// DEBUG: (38, 89)
// DEBUG: Operating on campaign.
// DEBUG: 107
// DEBUG: ['five past eleven']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Lee Child, Gone Tomorrow']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "Sansom arrived in a Town Car at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Local plates, which meant he had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "ridden up most of the way on the train.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Less convenient for him, but a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "smaller carbon footprint than driving", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "all the way, or flying. Every detail", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "five past eleven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Lee Child, Gone Tomorrow", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:06 for 2 quotations:
    case 666:
      option = random(0, 2);
      Serial.print(F("2 options for 11:06. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:06 - 11:06 And ... oh. The ironing. What am I going to do about that? - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on And
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on ...
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on oh.
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on The
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on ironing.
// DEBUG: ['TIMESTRING', 'And', '...', 'oh.', 'The']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (14, 17)
// DEBUG: Operating on What
// DEBUG: 48
// DEBUG: (43, 17)
// DEBUG: Operating on am
// DEBUG: 63
// DEBUG: (58, 17)
// DEBUG: Operating on I
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on going
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on to
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on do
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on about
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on that?
// DEBUG: 209
// DEBUG: ['11:06']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING And ... oh. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "11:06", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:06 - Despite the remaking of the BookWorld, some books remained tantalisingly out of reach [...] It was entirely possible that they didn't know there was a BookWorld, and still they thought they were real. A fantastic notion, until you consider that up until 11.06am on 12 April 1948, everyone else had thought the same. - Jasper Fforde, One of Our Thursdays is Missing"));
// DEBUG: (5, 5)
// DEBUG: Operating on Despite
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on the
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on remaking
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on of
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on the
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on BookWorld,
// DEBUG: ['Despite', 'the', 'remaking', 'of', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on some
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on books
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on remained
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on tantalisingly
// DEBUG: ['BookWorld,', 'some', 'books', 'remained']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (19, 29)
// DEBUG: Operating on out
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on of
// DEBUG: 61
// DEBUG: (56, 29)
// DEBUG: Operating on reach
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on [...]
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on It
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on was
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on entirely
// DEBUG: ['tantalisingly', 'out', 'of', 'reach', '[...]', 'It', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on possible
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on that
// DEBUG: 105
// DEBUG: (100, 41)
// DEBUG: Operating on they
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on didn't
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on know
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on there
// DEBUG: ['entirely', 'possible', 'that', 'they', "didn't", 'know']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on was
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on a
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on BookWorld,
// DEBUG: 117
// DEBUG: (112, 53)
// DEBUG: Operating on and
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on still
// DEBUG: 175
// DEBUG: (170, 53)
// DEBUG: Operating on they
// DEBUG: 204
// DEBUG: (199, 53)
// DEBUG: Operating on thought
// DEBUG: ['there', 'was', 'a', 'BookWorld,', 'and', 'still', 'they']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on they
// DEBUG: 47
// DEBUG: (42, 65)
// DEBUG: Operating on were
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on real.
// DEBUG: 112
// DEBUG: (107, 65)
// DEBUG: Operating on A
// DEBUG: 120
// DEBUG: (115, 65)
// DEBUG: Operating on fantastic
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on notion,
// DEBUG: ['thought', 'they', 'were', 'real.', 'A', 'fantastic']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on until
// DEBUG: 54
// DEBUG: (49, 77)
// DEBUG: Operating on you
// DEBUG: 76
// DEBUG: (71, 77)
// DEBUG: Operating on consider
// DEBUG: 133
// DEBUG: (128, 77)
// DEBUG: Operating on that
// DEBUG: 162
// DEBUG: (157, 77)
// DEBUG: Operating on up
// DEBUG: 177
// DEBUG: (172, 77)
// DEBUG: Operating on until
// DEBUG: ['notion,', 'until', 'you', 'consider', 'that', 'up']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 137
// DEBUG: (132, 89)
// DEBUG: Operating on on
// DEBUG: 152
// DEBUG: (147, 89)
// DEBUG: Operating on 12
// DEBUG: 167
// DEBUG: (162, 89)
// DEBUG: Operating on April
// DEBUG: 203
// DEBUG: (198, 89)
// DEBUG: Operating on 1948,
// DEBUG: ['until', 'TIMESTRING', 'on', '12', 'April']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on everyone
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on else
// DEBUG: 102
// DEBUG: (97, 101)
// DEBUG: Operating on had
// DEBUG: 124
// DEBUG: (119, 101)
// DEBUG: Operating on thought
// DEBUG: 174
// DEBUG: (169, 101)
// DEBUG: Operating on the
// DEBUG: 196
// DEBUG: (191, 101)
// DEBUG: Operating on same.
// DEBUG: ['1948,', 'everyone', 'else', 'had', 'thought', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['11.06am']
// DEBUG: drawing cursor (11, 89)
// DEBUG: ['- Jasper Fforde']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Despite the remaking of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "BookWorld, some books remained", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "tantalisingly out of reach [...] It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "entirely possible that they didn't know", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "there was a BookWorld, and still they", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "thought they were real. A fantastic", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "notion, until you consider that up", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "until TIMESTRING on 12 April", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "1948, everyone else had thought the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(11, 89, "11.06am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Jasper Fforde", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:07 for 1 quotations:
    case 667:
      Serial.println(F("Only one option for 11:07:"));
    Serial.println(F("11:07 - At exactly seven minutes past eleven by the ship's clock the Adventurer gave a prolonged screech and, moorings cast off, edged her way out of the basin and dipped her nose in the laughing waters of the bay, embarked at last on a voyage that was destined to fully vindicate her new name. - Ralph Henry Barbour, The Adventure Club Afloat "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on exactly
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['At', 'exactly']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on by
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on ship's
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on clock
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on the
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on Adventurer
// DEBUG: ['TIMESTRING', 'by', 'the', "ship's", 'clock', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on gave
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on a
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on prolonged
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on screech
// DEBUG: 172
// DEBUG: (167, 41)
// DEBUG: Operating on and,
// DEBUG: 201
// DEBUG: (196, 41)
// DEBUG: Operating on moorings
// DEBUG: ['Adventurer', 'gave', 'a', 'prolonged', 'screech', 'and,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on cast
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on off,
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on edged
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on her
// DEBUG: 135
// DEBUG: (130, 53)
// DEBUG: Operating on way
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on out
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on of
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on the
// DEBUG: ['moorings', 'cast', 'off,', 'edged', 'her', 'way', 'out', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on basin
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on and
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on dipped
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on her
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on nose
// DEBUG: 166
// DEBUG: (161, 65)
// DEBUG: Operating on in
// DEBUG: 181
// DEBUG: (176, 65)
// DEBUG: Operating on the
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on laughing
// DEBUG: ['the', 'basin', 'and', 'dipped', 'her', 'nose', 'in', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on waters
// DEBUG: 62
// DEBUG: (57, 77)
// DEBUG: Operating on of
// DEBUG: 77
// DEBUG: (72, 77)
// DEBUG: Operating on the
// DEBUG: 99
// DEBUG: (94, 77)
// DEBUG: Operating on bay,
// DEBUG: 128
// DEBUG: (123, 77)
// DEBUG: Operating on embarked
// DEBUG: 185
// DEBUG: (180, 77)
// DEBUG: Operating on at
// DEBUG: 200
// DEBUG: (195, 77)
// DEBUG: Operating on last
// DEBUG: ['laughing', 'waters', 'of', 'the', 'bay,', 'embarked', 'at']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on on
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on a
// DEBUG: 38
// DEBUG: (33, 89)
// DEBUG: Operating on voyage
// DEBUG: 81
// DEBUG: (76, 89)
// DEBUG: Operating on that
// DEBUG: 110
// DEBUG: (105, 89)
// DEBUG: Operating on was
// DEBUG: 132
// DEBUG: (127, 89)
// DEBUG: Operating on destined
// DEBUG: 189
// DEBUG: (184, 89)
// DEBUG: Operating on to
// DEBUG: 204
// DEBUG: (199, 89)
// DEBUG: Operating on fully
// DEBUG: ['last', 'on', 'a', 'voyage', 'that', 'was', 'destined', 'to']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on vindicate
// DEBUG: 80
// DEBUG: (75, 101)
// DEBUG: Operating on her
// DEBUG: 102
// DEBUG: (97, 101)
// DEBUG: Operating on new
// DEBUG: 124
// DEBUG: (119, 101)
// DEBUG: Operating on name.
// DEBUG: 160
// DEBUG: ['seven minutes past eleven']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Adventure Club Afloat']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "At exactly", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING by the ship's clock the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Adventurer gave a prolonged screech and,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "moorings cast off, edged her way out of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "the basin and dipped her nose in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "laughing waters of the bay, embarked at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "last on a voyage that was destined to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "seven minutes past eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- The Adventure Club Afloat", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:08 for 1 quotations:
    case 668:
      Serial.println(F("Only one option for 11:08:"));
    Serial.println(F("11:08 - The bursar was standing in the hall with his arms folded across his chest and when he caught sight of the fat young man he looked significantly at the clock. It was eight minutes past eleven. - James Joyce, Stephen Hero"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on bursar
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on was
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on standing
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on in
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on the
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on hall
// DEBUG: ['The', 'bursar', 'was', 'standing', 'in', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on with
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on his
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on arms
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on folded
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on across
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on his
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on chest
// DEBUG: ['hall', 'with', 'his', 'arms', 'folded', 'across', 'his']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on when
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on he
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on caught
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on sight
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on of
// DEBUG: 176
// DEBUG: (171, 29)
// DEBUG: Operating on the
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on fat
// DEBUG: ['chest', 'and', 'when', 'he', 'caught', 'sight', 'of', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on young
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on man
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on he
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on looked
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on significantly
// DEBUG: ['fat', 'young', 'man', 'he', 'looked']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (19, 53)
// DEBUG: Operating on at
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 53)
// DEBUG: Operating on clock.
// DEBUG: 104
// DEBUG: (99, 53)
// DEBUG: Operating on It
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on was
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['significantly', 'at', 'the', 'clock.', 'It', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: []
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['eight minutes past eleven']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- James Joyce, Stephen Hero']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "The bursar was standing in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "hall with his arms folded across his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "chest and when he caught sight of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "fat young man he looked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "significantly at the clock. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "eight minutes past eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- James Joyce, Stephen Hero", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:09 for 1 quotations:
    case 669:
      Serial.println(F("Only one option for 11:09:"));
    Serial.println(F("11:09 - The first time I saw them it was around eleven, eleven-fifteen, a Saturday morning, I was about two thirds through my route when I turned onto their block and noticed a '56 Ford sedan pulled up in the yard with a big open U-Haul behind. - Raymond Carver, Where I'm Calling From "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on first
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on time
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on I
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on saw
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on them
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on it
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on was
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'first', 'time', 'I', 'saw', 'them', 'it', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on eleven-fifteen,
// DEBUG: ['TIMESTRING,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (21, 29)
// DEBUG: Operating on a
// DEBUG: 34
// DEBUG: (29, 29)
// DEBUG: Operating on Saturday
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on morning,
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on I
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on was
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on about
// DEBUG: ['eleven-fifteen,', 'a', 'Saturday', 'morning,', 'I', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on two
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on thirds
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on through
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on my
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on route
// DEBUG: 182
// DEBUG: (177, 41)
// DEBUG: Operating on when
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on I
// DEBUG: ['about', 'two', 'thirds', 'through', 'my', 'route', 'when']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (7, 53)
// DEBUG: Operating on turned
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on onto
// DEBUG: 84
// DEBUG: (79, 53)
// DEBUG: Operating on their
// DEBUG: 120
// DEBUG: (115, 53)
// DEBUG: Operating on block
// DEBUG: 156
// DEBUG: (151, 53)
// DEBUG: Operating on and
// DEBUG: 178
// DEBUG: (173, 53)
// DEBUG: Operating on noticed
// DEBUG: ['I', 'turned', 'onto', 'their', 'block', 'and']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on a
// DEBUG: 26
// DEBUG: (21, 65)
// DEBUG: Operating on '56
// DEBUG: 48
// DEBUG: (43, 65)
// DEBUG: Operating on Ford
// DEBUG: 77
// DEBUG: (72, 65)
// DEBUG: Operating on sedan
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on pulled
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on up
// DEBUG: 171
// DEBUG: (166, 65)
// DEBUG: Operating on in
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on the
// DEBUG: 208
// DEBUG: (203, 65)
// DEBUG: Operating on yard
// DEBUG: ['noticed', 'a', "'56", 'Ford', 'sedan', 'pulled', 'up', 'in', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on with
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on a
// DEBUG: 52
// DEBUG: (47, 77)
// DEBUG: Operating on big
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on open
// DEBUG: 103
// DEBUG: (98, 77)
// DEBUG: Operating on U-Haul
// DEBUG: 146
// DEBUG: (141, 77)
// DEBUG: Operating on behind.
// DEBUG: 196
// DEBUG: ['around eleven']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ["- Where I'm Calling From"]
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "The first time I saw them it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "eleven-fifteen, a Saturday morning, I was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "about two thirds through my route when", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "I turned onto their block and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "noticed a '56 Ford sedan pulled up in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "around eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Where I'm Calling From", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:10 for 1 quotations:
    case 670:
      Serial.println(F("Only one option for 11:10:"));
    Serial.println(F("11:10 - Ten minutes after eleven in Archie McCue's room on the third floor of the extension to the Robert Matthews' soaring sixties' tower - The Queen's Tower, although no queen was ever likely to live in it. - Kate Atkinson, Emotionally Weird"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on Archie
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on McCue's
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on room
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on on
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on the
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on third
// DEBUG: ['TIMESTRING', 'in', 'Archie', "McCue's", 'room', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on floor
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on of
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on the
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on extension
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on to
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on the
// DEBUG: 190
// DEBUG: (185, 29)
// DEBUG: Operating on Robert
// DEBUG: ['third', 'floor', 'of', 'the', 'extension', 'to', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on Matthews'
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on soaring
// DEBUG: 131
// DEBUG: (126, 41)
// DEBUG: Operating on sixties'
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on tower
// DEBUG: ['Robert', "Matthews'", 'soaring', "sixties'"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on -
// DEBUG: 24
// DEBUG: (19, 53)
// DEBUG: Operating on The
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on Queen's
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on Tower,
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on although
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on no
// DEBUG: 211
// DEBUG: (206, 53)
// DEBUG: Operating on queen
// DEBUG: ['tower', '-', 'The', "Queen's", 'Tower,', 'although', 'no']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on was
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on ever
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on likely
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on to
// DEBUG: 125
// DEBUG: (120, 65)
// DEBUG: Operating on live
// DEBUG: 154
// DEBUG: (149, 65)
// DEBUG: Operating on in
// DEBUG: 169
// DEBUG: (164, 65)
// DEBUG: Operating on it.
// DEBUG: 191
// DEBUG: ['Ten minutes after eleven']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Emotionally Weird']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING in Archie McCue's room on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "third floor of the extension to the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Robert Matthews' soaring sixties'", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "tower - The Queen's Tower, although no", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "Ten minutes after eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Emotionally Weird", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:11 for 0 quotations:
    case 671:
      Serial.println(F("No quotes for 11:11"));
      return;

    // Codegen for 11:12 for 2 quotations:
    case 672:
      option = random(0, 2);
      Serial.print(F("2 options for 11:12. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:12 - 11:12 I have a solution, via the local paper. A girl from the village will collect it, iron it all overnight at £3 a shirt, and sew on Eddie's button. - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on I
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on have
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on a
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on solution,
// DEBUG: ['TIMESTRING', 'I', 'have', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on via
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on the
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on local
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on paper.
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on A
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on girl
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on from
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on the
// DEBUG: ['solution,', 'via', 'the', 'local', 'paper.', 'A', 'girl', 'from']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on village
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on will
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on collect
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on it,
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on iron
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on it
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on all
// DEBUG: ['the', 'village', 'will', 'collect', 'it,', 'iron', 'it']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on overnight
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on at
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on £3
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on a
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on shirt,
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on and
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on sew
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on on
// DEBUG: ['all', 'overnight', 'at', '£3', 'a', 'shirt,', 'and', 'sew']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on Eddie's
// DEBUG: 63
// DEBUG: (58, 53)
// DEBUG: Operating on button.
// DEBUG: 113
// DEBUG: ['11:12']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING I have a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "solution, via the local paper. A girl from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the village will collect it, iron it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "all overnight at £3 a shirt, and sew", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "11:12", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:12 - I squinted down the street at the bank clock: 11:12, 87 degrees. \"It's only a block and a half and it's not that hot, Daddy. The walk will do you good.\" - Jane Smiley, A Thousand Acres"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on squinted
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on down
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on the
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on street
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on at
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on the
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on bank
// DEBUG: ['I', 'squinted', 'down', 'the', 'street', 'at', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on clock:
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 172
// DEBUG: (167, 17)
// DEBUG: Operating on 87
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on degrees.
// DEBUG: ['bank', 'clock:', 'TIMESTRING,', '87']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on \"It's
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on only
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on a
// DEBUG: 99
// DEBUG: (94, 29)
// DEBUG: Operating on block
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on and
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on a
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on half
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on and
// DEBUG: ['degrees.', '\\"It\'s', 'only', 'a', 'block', 'and', 'a', 'half']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on it's
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on not
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on that
// DEBUG: 94
// DEBUG: (89, 41)
// DEBUG: Operating on hot,
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on Daddy.
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on The
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on walk
// DEBUG: ['and', "it's", 'not', 'that', 'hot,', 'Daddy.', 'The']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on will
// DEBUG: 44
// DEBUG: (39, 53)
// DEBUG: Operating on do
// DEBUG: 59
// DEBUG: (54, 53)
// DEBUG: Operating on you
// DEBUG: 81
// DEBUG: (76, 53)
// DEBUG: Operating on good.\"
// DEBUG: 131
// DEBUG: ['11:12']
// DEBUG: drawing cursor (53, 17)
// DEBUG: ['- A Thousand Acres']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "I squinted down the street at the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "bank clock: TIMESTRING, 87", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "degrees. \"It's only a block and a half", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "and it's not that hot, Daddy. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(53, 17, "11:12", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- A Thousand Acres", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:13 for 0 quotations:
    case 673:
      Serial.println(F("No quotes for 11:13"));
      return;

    // Codegen for 11:14 for 1 quotations:
    case 674:
      Serial.println(F("Only one option for 11:14:"));
    Serial.println(F("11:14 - The report was dated Sunday, 25 September, 1966, at 11.14am. The text was laconic. Call from Hrk Vanger; stating that his brother's daughter (?) Harriett Ulrika Vanger, born 15 June 1960 (age 1960) has been missing from her home on Hedley Island since Saturday afternoon. - Stieg Larsson, The Girl With The Dragon Tattoo"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on report
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on was
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on dated
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on Sunday,
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on 25
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on September,
// DEBUG: ['The', 'report', 'was', 'dated', 'Sunday,', '25']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on 1966,
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on at
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on The
// DEBUG: ['September,', '1966,', 'at', 'TIMESTRING']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on text
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on was
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on laconic.
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on Call
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on from
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on Hrk
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on Vanger;
// DEBUG: ['The', 'text', 'was', 'laconic.', 'Call', 'from', 'Hrk']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on stating
// DEBUG: 68
// DEBUG: (63, 41)
// DEBUG: Operating on that
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on his
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on brother's
// DEBUG: 183
// DEBUG: (178, 41)
// DEBUG: Operating on daughter
// DEBUG: ['Vanger;', 'stating', 'that', 'his', "brother's"]
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on (?)
// DEBUG: 41
// DEBUG: (36, 53)
// DEBUG: Operating on Harriett
// DEBUG: 98
// DEBUG: (93, 53)
// DEBUG: Operating on Ulrika
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on Vanger,
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on born
// DEBUG: ['daughter', '(?)', 'Harriett', 'Ulrika', 'Vanger,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on 15
// DEBUG: 30
// DEBUG: (25, 65)
// DEBUG: Operating on June
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on 1960
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on (age
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on 1960)
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on has
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on been
// DEBUG: 204
// DEBUG: (199, 65)
// DEBUG: Operating on missing
// DEBUG: ['born', '15', 'June', '1960', '(age', '1960)', 'has', 'been']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on from
// DEBUG: 47
// DEBUG: (42, 77)
// DEBUG: Operating on her
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on home
// DEBUG: 98
// DEBUG: (93, 77)
// DEBUG: Operating on on
// DEBUG: 113
// DEBUG: (108, 77)
// DEBUG: Operating on Hedley
// DEBUG: 156
// DEBUG: (151, 77)
// DEBUG: Operating on Island
// DEBUG: 199
// DEBUG: (194, 77)
// DEBUG: Operating on since
// DEBUG: ['missing', 'from', 'her', 'home', 'on', 'Hedley', 'Island']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on Saturday
// DEBUG: 73
// DEBUG: (68, 89)
// DEBUG: Operating on afternoon.
// DEBUG: 144
// DEBUG: ['11.14am.']
// DEBUG: drawing cursor (67, 17)
// DEBUG: ['- Stieg Larsson']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "The report was dated Sunday, 25", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "September, 1966, at TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "The text was laconic. Call from Hrk", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Vanger; stating that his brother's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "daughter (?) Harriett Ulrika Vanger,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "born 15 June 1960 (age 1960) has been", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "missing from her home on Hedley Island", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(67, 17, "11.14am.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Stieg Larsson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:15 for 2 quotations:
    case 675:
      option = random(0, 2);
      Serial.print(F("2 options for 11:15. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:15 - Shall be glad if you will come with me. Air and scenery perfect. Leave Paddington by the 11:15. - Sir Arthur Conan Doyle, The Adventures of Sherlock Holmes"));
// DEBUG: (5, 5)
// DEBUG: Operating on Shall
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on be
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on glad
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on if
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on you
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on will
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on come
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on with
// DEBUG: ['Shall', 'be', 'glad', 'if', 'you', 'will', 'come']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on me.
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on Air
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on and
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on scenery
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on perfect.
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on Leave
// DEBUG: ['with', 'me.', 'Air', 'and', 'scenery', 'perfect.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on Paddington
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on by
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on the
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Leave', 'Paddington', 'by', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['11:15']
// DEBUG: drawing cursor (119, 29)
// DEBUG: ['- Sir Arthur Conan Doyle']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "Shall be glad if you will come", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "with me. Air and scenery perfect.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Leave Paddington by the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(119, 29, "11:15", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Sir Arthur Conan Doyle", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:15 - The first time I saw them it was around eleven, eleven-fifteen, a Saturday morning, I was about two thirds through my route when I turned onto their block and noticed a '56 Ford sedan pulled up in the yard with a big open U-Haul behind. There are only three houses on Pine, and theirs was the last house,the others being the Murchisons, who'd been in Arcata a little less than a year, and the Grants, who'd been here about two years. Murchison worked at Simpson Redwood, and Gene Grant was a cook on the morning shift at Denny's. Those two, then a vacant lot, then the house on the end that used to belong to the Coles. - Raymond Carver, Where I'm Calling From "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on first
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on time
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on I
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on saw
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on them
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on it
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on was
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on around
// DEBUG: ['The', 'first', 'time', 'I', 'saw', 'them', 'it', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on eleven,
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['around', 'eleven,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on a
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on Saturday
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on morning,
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on I
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on was
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on about
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on two
// DEBUG: ['TIMESTRING,', 'a', 'Saturday', 'morning,', 'I', 'was', 'about']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on thirds
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on through
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on my
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on route
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on when
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on I
// DEBUG: 195
// DEBUG: (190, 41)
// DEBUG: Operating on turned
// DEBUG: ['two', 'thirds', 'through', 'my', 'route', 'when', 'I']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on onto
// DEBUG: 46
// DEBUG: (41, 53)
// DEBUG: Operating on their
// DEBUG: 82
// DEBUG: (77, 53)
// DEBUG: Operating on block
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on and
// DEBUG: 140
// DEBUG: (135, 53)
// DEBUG: Operating on noticed
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on a
// DEBUG: 198
// DEBUG: (193, 53)
// DEBUG: Operating on '56
// DEBUG: ['turned', 'onto', 'their', 'block', 'and', 'noticed', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on Ford
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on sedan
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on pulled
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on up
// DEBUG: 137
// DEBUG: (132, 65)
// DEBUG: Operating on in
// DEBUG: 152
// DEBUG: (147, 65)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on yard
// DEBUG: 203
// DEBUG: (198, 65)
// DEBUG: Operating on with
// DEBUG: ["'56", 'Ford', 'sedan', 'pulled', 'up', 'in', 'the', 'yard']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 77)
// DEBUG: Operating on big
// DEBUG: 45
// DEBUG: (40, 77)
// DEBUG: Operating on open
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on U-Haul
// DEBUG: 117
// DEBUG: (112, 77)
// DEBUG: Operating on behind.
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on There
// DEBUG: 203
// DEBUG: (198, 77)
// DEBUG: Operating on are
// DEBUG: ['with', 'a', 'big', 'open', 'U-Haul', 'behind.', 'There']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on only
// DEBUG: 43
// DEBUG: (38, 89)
// DEBUG: Operating on three
// DEBUG: 79
// DEBUG: (74, 89)
// DEBUG: Operating on houses
// DEBUG: 122
// DEBUG: (117, 89)
// DEBUG: Operating on on
// DEBUG: 137
// DEBUG: (132, 89)
// DEBUG: Operating on Pine,
// DEBUG: 173
// DEBUG: (168, 89)
// DEBUG: Operating on and
// DEBUG: 195
// DEBUG: (190, 89)
// DEBUG: Operating on theirs
// DEBUG: ['are', 'only', 'three', 'houses', 'on', 'Pine,', 'and']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on was
// DEBUG: 39
// DEBUG: (34, 101)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 101)
// DEBUG: Operating on last
// DEBUG: 90
// DEBUG: (85, 101)
// DEBUG: Operating on house,the
// DEBUG: 154
// DEBUG: (149, 101)
// DEBUG: Operating on others
// DEBUG: 197
// DEBUG: (192, 101)
// DEBUG: Operating on being
// DEBUG: ['theirs', 'was', 'the', 'last', 'house,the', 'others']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 113)
// DEBUG: Operating on Murchisons,
// DEBUG: 116
// DEBUG: (111, 113)
// DEBUG: Operating on who'd
// DEBUG: 152
// DEBUG: (147, 113)
// DEBUG: Operating on been
// DEBUG: 181
// DEBUG: (176, 113)
// DEBUG: Operating on in
// DEBUG: 196
// DEBUG: (191, 113)
// DEBUG: Operating on Arcata
// DEBUG: ['being', 'the', 'Murchisons,', "who'd", 'been', 'in']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (12, 125)
// DEBUG: Operating on a
// DEBUG: 25
// DEBUG: (20, 125)
// DEBUG: Operating on little
// DEBUG: 68
// DEBUG: (63, 125)
// DEBUG: Operating on less
// DEBUG: 97
// DEBUG: (92, 125)
// DEBUG: Operating on than
// DEBUG: 126
// DEBUG: (121, 125)
// DEBUG: Operating on a
// DEBUG: 134
// DEBUG: (129, 125)
// DEBUG: Operating on year,
// DEBUG: 170
// DEBUG: (165, 125)
// DEBUG: Operating on and
// DEBUG: 192
// DEBUG: (187, 125)
// DEBUG: Operating on the
// DEBUG: ['Arcata', 'a', 'little', 'less', 'than', 'a', 'year,', 'and']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (9, 137)
// DEBUG: Operating on Grants,
// DEBUG: 64
// DEBUG: (59, 137)
// DEBUG: Operating on who'd
// DEBUG: 100
// DEBUG: (95, 137)
// DEBUG: Operating on been
// DEBUG: 129
// DEBUG: (124, 137)
// DEBUG: Operating on here
// DEBUG: 158
// DEBUG: (153, 137)
// DEBUG: Operating on about
// DEBUG: 194
// DEBUG: (189, 137)
// DEBUG: Operating on two
// DEBUG: ['the', 'Grants,', "who'd", 'been', 'here', 'about']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on years.
// DEBUG: 57
// DEBUG: (52, 149)
// DEBUG: Operating on Murchison
// DEBUG: 121
// DEBUG: (116, 149)
// DEBUG: Operating on worked
// DEBUG: 164
// DEBUG: (159, 149)
// DEBUG: Operating on at
// DEBUG: 179
// DEBUG: (174, 149)
// DEBUG: Operating on Simpson
// DEBUG: ['two', 'years.', 'Murchison', 'worked', 'at']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (13, 161)
// DEBUG: Operating on Redwood,
// DEBUG: 75
// DEBUG: (70, 161)
// DEBUG: Operating on and
// DEBUG: 97
// DEBUG: (92, 161)
// DEBUG: Operating on Gene
// DEBUG: 126
// DEBUG: (121, 161)
// DEBUG: Operating on Grant
// DEBUG: 162
// DEBUG: (157, 161)
// DEBUG: Operating on was
// DEBUG: 184
// DEBUG: (179, 161)
// DEBUG: Operating on a
// DEBUG: 192
// DEBUG: (187, 161)
// DEBUG: Operating on cook
// DEBUG: ['Simpson', 'Redwood,', 'and', 'Gene', 'Grant', 'was', 'a']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (10, 173)
// DEBUG: Operating on on
// DEBUG: 30
// DEBUG: (25, 173)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 173)
// DEBUG: Operating on morning
// DEBUG: 102
// DEBUG: (97, 173)
// DEBUG: Operating on shift
// DEBUG: 138
// DEBUG: (133, 173)
// DEBUG: Operating on at
// DEBUG: 153
// DEBUG: (148, 173)
// DEBUG: Operating on Denny's.
// DEBUG: 210
// DEBUG: (205, 173)
// DEBUG: Operating on Those
// DEBUG: ['cook', 'on', 'the', 'morning', 'shift', 'at', "Denny's."]
// DEBUG: drawing cursor (5, 173)
// DEBUG: (11, 185)
// DEBUG: Operating on two,
// DEBUG: 45
// DEBUG: (40, 185)
// DEBUG: Operating on then
// DEBUG: 74
// DEBUG: (69, 185)
// DEBUG: Operating on a
// DEBUG: 82
// DEBUG: (77, 185)
// DEBUG: Operating on vacant
// DEBUG: 125
// DEBUG: (120, 185)
// DEBUG: Operating on lot,
// DEBUG: 154
// DEBUG: (149, 185)
// DEBUG: Operating on then
// DEBUG: 183
// DEBUG: (178, 185)
// DEBUG: Operating on the
// DEBUG: 205
// DEBUG: (200, 185)
// DEBUG: Operating on house
// DEBUG: ['Those', 'two,', 'then', 'a', 'vacant', 'lot,', 'then', 'the']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (11, 197)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 197)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 197)
// DEBUG: Operating on end
// DEBUG: 75
// DEBUG: (70, 197)
// DEBUG: Operating on that
// DEBUG: 104
// DEBUG: (99, 197)
// DEBUG: Operating on used
// DEBUG: 133
// DEBUG: (128, 197)
// DEBUG: Operating on to
// DEBUG: 148
// DEBUG: (143, 197)
// DEBUG: Operating on belong
// DEBUG: 191
// DEBUG: (186, 197)
// DEBUG: Operating on to
// DEBUG: 206
// DEBUG: (201, 197)
// DEBUG: Operating on the
// DEBUG: ['house', 'on', 'the', 'end', 'that', 'used', 'to', 'belong', 'to']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (9, 209)
// DEBUG: Operating on Coles.
// DEBUG: 57
// DEBUG: ['eleven-fifteen']
// DEBUG: drawing cursor (62, 17)
// DEBUG: ["- Where I'm Calling From"]
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "The first time I saw them it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "around eleven,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, a Saturday morning, I was about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "two thirds through my route when I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "turned onto their block and noticed a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "'56 Ford sedan pulled up in the yard", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "with a big open U-Haul behind. There", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "are only three houses on Pine, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "theirs was the last house,the others", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "being the Murchisons, who'd been in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "Arcata a little less than a year, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "the Grants, who'd been here about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "two years. Murchison worked at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "Simpson Redwood, and Gene Grant was a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "cook on the morning shift at Denny's.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "Those two, then a vacant lot, then the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 197, "house on the end that used to belong to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(62, 17, "eleven-fifteen", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Where I'm Calling From", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:16 for 0 quotations:
    case 676:
      Serial.println(F("No quotes for 11:16"));
      return;

    // Codegen for 11:17 for 1 quotations:
    case 677:
      Serial.println(F("Only one option for 11:17:"));
    Serial.println(F("11:17 - Mrs. Mooney glanced instinctively at the little gilt clock on the mantelpiece as soon as she had become aware through her revery that the bells of George's Church had stopped ringing. It was seventeen minutes past eleven: she would have lots of time to have the matter out with Mr. Doran and then catch short twelve at Marlborough Street. She was sure she would win. - James Joyce, Dubliners "));
// DEBUG: (5, 5)
// DEBUG: Operating on Mrs.
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on Mooney
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on glanced
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on instinctively
// DEBUG: ['Mrs.', 'Mooney', 'glanced']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (19, 17)
// DEBUG: Operating on at
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on the
// DEBUG: 61
// DEBUG: (56, 17)
// DEBUG: Operating on little
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on gilt
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on clock
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on on
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on the
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on mantelpiece
// DEBUG: ['instinctively', 'at', 'the', 'little', 'gilt', 'clock', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on as
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on soon
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on as
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on she
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on had
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on become
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on aware
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on through
// DEBUG: ['mantelpiece', 'as', 'soon', 'as', 'she', 'had', 'become', 'aware']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on her
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on revery
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on that
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on the
// DEBUG: 134
// DEBUG: (129, 41)
// DEBUG: Operating on bells
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on of
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on George's
// DEBUG: ['through', 'her', 'revery', 'that', 'the', 'bells', 'of']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on Church
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on had
// DEBUG: 84
// DEBUG: (79, 53)
// DEBUG: Operating on stopped
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on ringing.
// DEBUG: 191
// DEBUG: (186, 53)
// DEBUG: Operating on It
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on was
// DEBUG: ["George's", 'Church', 'had', 'stopped', 'ringing.', 'It']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on TIMESTRING:
// DEBUG: Wrorking on the timestring
// DEBUG: ['was']
// DEBUG: drawing cursor (5, 65)
// DEBUG: []
// DEBUG: drawing cursor (5, 77)
// DEBUG: (17, 89)
// DEBUG: Operating on she
// DEBUG: 44
// DEBUG: (39, 89)
// DEBUG: Operating on would
// DEBUG: 80
// DEBUG: (75, 89)
// DEBUG: Operating on have
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on lots
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on of
// DEBUG: 153
// DEBUG: (148, 89)
// DEBUG: Operating on time
// DEBUG: 182
// DEBUG: (177, 89)
// DEBUG: Operating on to
// DEBUG: 197
// DEBUG: (192, 89)
// DEBUG: Operating on have
// DEBUG: ['TIMESTRING:', 'she', 'would', 'have', 'lots', 'of', 'time', 'to']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 101)
// DEBUG: Operating on matter
// DEBUG: 80
// DEBUG: (75, 101)
// DEBUG: Operating on out
// DEBUG: 102
// DEBUG: (97, 101)
// DEBUG: Operating on with
// DEBUG: 131
// DEBUG: (126, 101)
// DEBUG: Operating on Mr.
// DEBUG: 153
// DEBUG: (148, 101)
// DEBUG: Operating on Doran
// DEBUG: 189
// DEBUG: (184, 101)
// DEBUG: Operating on and
// DEBUG: 211
// DEBUG: (206, 101)
// DEBUG: Operating on then
// DEBUG: ['have', 'the', 'matter', 'out', 'with', 'Mr.', 'Doran', 'and']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on catch
// DEBUG: 51
// DEBUG: (46, 113)
// DEBUG: Operating on short
// DEBUG: 87
// DEBUG: (82, 113)
// DEBUG: Operating on twelve
// DEBUG: 130
// DEBUG: (125, 113)
// DEBUG: Operating on at
// DEBUG: 145
// DEBUG: (140, 113)
// DEBUG: Operating on Marlborough
// DEBUG: ['then', 'catch', 'short', 'twelve', 'at']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (17, 125)
// DEBUG: Operating on Street.
// DEBUG: 72
// DEBUG: (67, 125)
// DEBUG: Operating on She
// DEBUG: 94
// DEBUG: (89, 125)
// DEBUG: Operating on was
// DEBUG: 116
// DEBUG: (111, 125)
// DEBUG: Operating on sure
// DEBUG: 145
// DEBUG: (140, 125)
// DEBUG: Operating on she
// DEBUG: 167
// DEBUG: (162, 125)
// DEBUG: Operating on would
// DEBUG: 203
// DEBUG: (198, 125)
// DEBUG: Operating on win.
// DEBUG: ['Marlborough', 'Street.', 'She', 'was', 'sure', 'she', 'would']
// DEBUG: drawing cursor (5, 125)
// DEBUG: ['seventeen minutes past eleven']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['- James Joyce, Dubliners ']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "Mrs. Mooney glanced", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "instinctively at the little gilt clock on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "mantelpiece as soon as she had become aware", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "through her revery that the bells of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "George's Church had stopped ringing. It", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "TIMESTRING: she would have lots of time to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "have the matter out with Mr. Doran and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "then catch short twelve at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "Marlborough Street. She was sure she would", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "seventeen minutes past eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- James Joyce, Dubliners ", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:18 for 1 quotations:
    case 678:
      Serial.println(F("Only one option for 11:18:"));
    Serial.println(F("11:18 - It is 11.18. A row of bungalows in a round with a clump of larch tree in the middle. - Jackie Kay, Trumpet"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on is
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on A
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on row
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on of
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on bungalows
// DEBUG: ['It', 'is', 'TIMESTRING.', 'A', 'row', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on in
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on a
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on round
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on with
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on a
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on clump
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on of
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on larch
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on tree
// DEBUG: ['bungalows', 'in', 'a', 'round', 'with', 'a', 'clump', 'of', 'larch']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on in
// DEBUG: 30
// DEBUG: (25, 29)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on middle.
// DEBUG: 102
// DEBUG: ['11.18']
// DEBUG: drawing cursor (35, 5)
// DEBUG: ['- Jackie Kay, Trumpet']
// DEBUG: drawing cursor (60, 192)
    paint.Paint_DrawString_EN(5, 5, "It is TIMESTRING. A row of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "bungalows in a round with a clump of larch", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(35, 5, "11.18", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(60, 192, "- Jackie Kay, Trumpet", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:19 for 1 quotations:
    case 679:
      Serial.println(F("Only one option for 11:19:"));
    Serial.println(F("11:19 - A whistle cut sharply across his words. Peter got onto his knees to look out the window, and Miss Fuller glared at him. Polly looked down at her watch: 11:19. The train. But the stationmaster had said it was always late. - Connie Willis, Blackout"));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on whistle
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on cut
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on sharply
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on across
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on his
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on words.
// DEBUG: ['A', 'whistle', 'cut', 'sharply', 'across', 'his']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on Peter
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on got
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on onto
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on his
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on knees
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on to
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on look
// DEBUG: 206
// DEBUG: (201, 17)
// DEBUG: Operating on out
// DEBUG: ['words.', 'Peter', 'got', 'onto', 'his', 'knees', 'to', 'look']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on window,
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on and
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on Miss
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on Fuller
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on glared
// DEBUG: ['out', 'the', 'window,', 'and', 'Miss', 'Fuller']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on him.
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on Polly
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on looked
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on down
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on at
// DEBUG: 184
// DEBUG: (179, 41)
// DEBUG: Operating on her
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on watch:
// DEBUG: ['glared', 'at', 'him.', 'Polly', 'looked', 'down', 'at', 'her']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on The
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on train.
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on But
// DEBUG: ['watch:', 'TIMESTRING.', 'The', 'train.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on the
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on stationmaster
// DEBUG: 128
// DEBUG: (123, 65)
// DEBUG: Operating on had
// DEBUG: 150
// DEBUG: (145, 65)
// DEBUG: Operating on said
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on it
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on was
// DEBUG: ['But', 'the', 'stationmaster', 'had', 'said', 'it']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on always
// DEBUG: 57
// DEBUG: (52, 77)
// DEBUG: Operating on late.
// DEBUG: 93
// DEBUG: ['11:19']
// DEBUG: drawing cursor (12, 53)
// DEBUG: ['- Connie Willis, Blackout']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "A whistle cut sharply across his", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "words. Peter got onto his knees to look", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "out the window, and Miss Fuller", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "glared at him. Polly looked down at her", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "watch: TIMESTRING. The train.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "But the stationmaster had said it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(12, 53, "11:19", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- Connie Willis, Blackout", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:20 for 2 quotations:
    case 680:
      option = random(0, 2);
      Serial.print(F("2 options for 11:20. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:20 - OFFICER'S NOTES Disruption alert logged 11h20 from Stones' Pool Hall (Premises ID 33CBD-Long181). Officer and Aito /379 responded. On arrival found subject shouting threats and acting in aggressive manner. A scan of the subject's SIM ID register revealed that the subject has recent priors including previous public disruptions and a juvenile record. - Lauren Beukes, Moxyland "));
// DEBUG: (5, 5)
// DEBUG: Operating on OFFICER'S
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on NOTES
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on Disruption
// DEBUG: 181
// DEBUG: (176, 5)
// DEBUG: Operating on alert
// DEBUG: ["OFFICER'S", 'NOTES', 'Disruption']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on logged
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on from
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on Stones'
// DEBUG: ['alert', 'logged', 'TIMESTRING', 'from']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on Pool
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on Hall
// DEBUG: 76
// DEBUG: (71, 29)
// DEBUG: Operating on (Premises
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on ID
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on 33CBD-Long181).
// DEBUG: ["Stones'", 'Pool', 'Hall', '(Premises', 'ID']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (21, 41)
// DEBUG: Operating on Officer
// DEBUG: 76
// DEBUG: (71, 41)
// DEBUG: Operating on and
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on Aito
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on /379
// DEBUG: 156
// DEBUG: (151, 41)
// DEBUG: Operating on responded.
// DEBUG: ['33CBD-Long181).', 'Officer', 'and', 'Aito', '/379']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on On
// DEBUG: 36
// DEBUG: (31, 53)
// DEBUG: Operating on arrival
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on found
// DEBUG: 122
// DEBUG: (117, 53)
// DEBUG: Operating on subject
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on shouting
// DEBUG: ['responded.', 'On', 'arrival', 'found', 'subject']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on threats
// DEBUG: 69
// DEBUG: (64, 65)
// DEBUG: Operating on and
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on acting
// DEBUG: 134
// DEBUG: (129, 65)
// DEBUG: Operating on in
// DEBUG: 149
// DEBUG: (144, 65)
// DEBUG: Operating on aggressive
// DEBUG: ['shouting', 'threats', 'and', 'acting', 'in']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (16, 77)
// DEBUG: Operating on manner.
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on A
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on scan
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on of
// DEBUG: 123
// DEBUG: (118, 77)
// DEBUG: Operating on the
// DEBUG: 145
// DEBUG: (140, 77)
// DEBUG: Operating on subject's
// DEBUG: 209
// DEBUG: (204, 77)
// DEBUG: Operating on SIM
// DEBUG: ['aggressive', 'manner.', 'A', 'scan', 'of', 'the', "subject's"]
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on ID
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on register
// DEBUG: 86
// DEBUG: (81, 89)
// DEBUG: Operating on revealed
// DEBUG: 143
// DEBUG: (138, 89)
// DEBUG: Operating on that
// DEBUG: 172
// DEBUG: (167, 89)
// DEBUG: Operating on the
// DEBUG: 194
// DEBUG: (189, 89)
// DEBUG: Operating on subject
// DEBUG: ['SIM', 'ID', 'register', 'revealed', 'that', 'the']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on has
// DEBUG: 40
// DEBUG: (35, 101)
// DEBUG: Operating on recent
// DEBUG: 83
// DEBUG: (78, 101)
// DEBUG: Operating on priors
// DEBUG: 126
// DEBUG: (121, 101)
// DEBUG: Operating on including
// DEBUG: 190
// DEBUG: (185, 101)
// DEBUG: Operating on previous
// DEBUG: ['subject', 'has', 'recent', 'priors', 'including']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (14, 113)
// DEBUG: Operating on public
// DEBUG: 62
// DEBUG: (57, 113)
// DEBUG: Operating on disruptions
// DEBUG: 140
// DEBUG: (135, 113)
// DEBUG: Operating on and
// DEBUG: 162
// DEBUG: (157, 113)
// DEBUG: Operating on a
// DEBUG: 170
// DEBUG: (165, 113)
// DEBUG: Operating on juvenile
// DEBUG: ['previous', 'public', 'disruptions', 'and', 'a']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on record.
// DEBUG: 69
// DEBUG: ['11h20']
// DEBUG: drawing cursor (54, 17)
// DEBUG: ['- Lauren Beukes, Moxyland ']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "OFFICER'S NOTES Disruption", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "alert logged TIMESTRING from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Stones' Pool Hall (Premises ID", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "33CBD-Long181). Officer and Aito /379", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "responded. On arrival found subject", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "shouting threats and acting in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "aggressive manner. A scan of the subject's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "SIM ID register revealed that the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "subject has recent priors including", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "previous public disruptions and a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(54, 17, "11h20", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Lauren Beukes, Moxyland ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:20 - Sweeney pointed to the clock above the bar, held in the massive and indifferent jaws of a stuffed alligator head. The time was 11.20. - Neil Gaiman, American Gods"));
// DEBUG: (5, 5)
// DEBUG: Operating on Sweeney
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on pointed
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on to
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on the
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on clock
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on above
// DEBUG: ['Sweeney', 'pointed', 'to', 'the', 'clock']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on bar,
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on held
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on in
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on the
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on massive
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on and
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on indifferent
// DEBUG: ['above', 'the', 'bar,', 'held', 'in', 'the', 'massive', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on jaws
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on of
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on a
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on stuffed
// DEBUG: 124
// DEBUG: (119, 29)
// DEBUG: Operating on alligator
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on head.
// DEBUG: ['indifferent', 'jaws', 'of', 'a', 'stuffed', 'alligator']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on The
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on time
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on was
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 203
// DEBUG: ['11.20']
// DEBUG: drawing cursor (84, 41)
// DEBUG: ['- Neil Gaiman, American Gods']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "Sweeney pointed to the clock", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "above the bar, held in the massive and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "indifferent jaws of a stuffed alligator", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(84, 41, "11.20", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Neil Gaiman, American Gods", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:21 for 0 quotations:
    case 681:
      Serial.println(F("No quotes for 11:21"));
      return;

    // Codegen for 11:22 for 0 quotations:
    case 682:
      Serial.println(F("No quotes for 11:22"));
      return;

    // Codegen for 11:23 for 0 quotations:
    case 683:
      Serial.println(F("No quotes for 11:23"));
      return;

    // Codegen for 11:24 for 0 quotations:
    case 684:
      Serial.println(F("No quotes for 11:24"));
      return;

    // Codegen for 11:25 for 2 quotations:
    case 685:
      option = random(0, 2);
      Serial.print(F("2 options for 11:25. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:25 - At 10.15 Arlena departed from her rondezvous, a minute or two later Patrick Redfern came down and registered surprise, annoyance, etc. Christine's task was easy enough. Keeping her own watch concealed she asked Linda at twenty-five past eleven what time it was. Linda looked at her watch and replied that it was a quarter to twelve. - Agatha Christie, Evil under the Sun "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on 10.15
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on Arlena
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on departed
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on from
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on her
// DEBUG: ['At', '10.15', 'Arlena', 'departed', 'from']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on rondezvous,
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on a
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on minute
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on or
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on two
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on later
// DEBUG: ['her', 'rondezvous,', 'a', 'minute', 'or', 'two']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on Patrick
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on Redfern
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on came
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on down
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on and
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on registered
// DEBUG: ['later', 'Patrick', 'Redfern', 'came', 'down', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on surprise,
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on annoyance,
// DEBUG: 156
// DEBUG: (151, 41)
// DEBUG: Operating on etc.
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on Christine's
// DEBUG: ['registered', 'surprise,', 'annoyance,', 'etc.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on task
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on was
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on easy
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on enough.
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on Keeping
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on her
// DEBUG: ["Christine's", 'task', 'was', 'easy', 'enough.', 'Keeping']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on own
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on watch
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on concealed
// DEBUG: 136
// DEBUG: (131, 65)
// DEBUG: Operating on she
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on asked
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on Linda
// DEBUG: ['her', 'own', 'watch', 'concealed', 'she', 'asked']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Linda', 'at']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on what
// DEBUG: 50
// DEBUG: (45, 89)
// DEBUG: Operating on time
// DEBUG: 79
// DEBUG: (74, 89)
// DEBUG: Operating on it
// DEBUG: 94
// DEBUG: (89, 89)
// DEBUG: Operating on was.
// DEBUG: 123
// DEBUG: (118, 89)
// DEBUG: Operating on Linda
// DEBUG: 159
// DEBUG: (154, 89)
// DEBUG: Operating on looked
// DEBUG: 202
// DEBUG: (197, 89)
// DEBUG: Operating on at
// DEBUG: ['TIMESTRING', 'what', 'time', 'it', 'was.', 'Linda', 'looked']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on her
// DEBUG: 35
// DEBUG: (30, 101)
// DEBUG: Operating on watch
// DEBUG: 71
// DEBUG: (66, 101)
// DEBUG: Operating on and
// DEBUG: 93
// DEBUG: (88, 101)
// DEBUG: Operating on replied
// DEBUG: 143
// DEBUG: (138, 101)
// DEBUG: Operating on that
// DEBUG: 172
// DEBUG: (167, 101)
// DEBUG: Operating on it
// DEBUG: 187
// DEBUG: (182, 101)
// DEBUG: Operating on was
// DEBUG: 209
// DEBUG: (204, 101)
// DEBUG: Operating on a
// DEBUG: ['at', 'her', 'watch', 'and', 'replied', 'that', 'it', 'was']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (7, 113)
// DEBUG: Operating on quarter
// DEBUG: 62
// DEBUG: (57, 113)
// DEBUG: Operating on to
// DEBUG: 77
// DEBUG: (72, 113)
// DEBUG: Operating on twelve.
// DEBUG: 127
// DEBUG: ['twenty-five past eleven']
// DEBUG: drawing cursor (26, 77)
// DEBUG: ['- Evil under the Sun']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "At 10.15 Arlena departed from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "her rondezvous, a minute or two", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "later Patrick Redfern came down and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "registered surprise, annoyance, etc.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "Christine's task was easy enough. Keeping", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "her own watch concealed she asked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "Linda at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "TIMESTRING what time it was. Linda looked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "at her watch and replied that it was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(26, 77, "twenty-five past eleven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Evil under the Sun", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:25 - When, at about 11.25am, Katharina Blum was finally taken from her apartment for questioning, it was decided not to handcuff her at all. - Heinrich Böll, The Lost Honour of Katharina Blum"));
// DEBUG: (5, 5)
// DEBUG: Operating on When,
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on at
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on about
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['When,', 'at', 'about']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on Katharina
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on Blum
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on was
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on finally
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on taken
// DEBUG: ['TIMESTRING,', 'Katharina', 'Blum', 'was', 'finally']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on from
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on her
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on apartment
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on for
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on questioning,
// DEBUG: ['taken', 'from', 'her', 'apartment', 'for']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (18, 41)
// DEBUG: Operating on it
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on was
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on decided
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on not
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on to
// DEBUG: 147
// DEBUG: (142, 41)
// DEBUG: Operating on handcuff
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on her
// DEBUG: ['questioning,', 'it', 'was', 'decided', 'not', 'to', 'handcuff']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on at
// DEBUG: 29
// DEBUG: (24, 53)
// DEBUG: Operating on all.
// DEBUG: 58
// DEBUG: ['11.25am']
// DEBUG: drawing cursor (92, 5)
// DEBUG: ['- Heinrich Böll']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "When, at about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, Katharina Blum was finally", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "taken from her apartment for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "questioning, it was decided not to handcuff", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(92, 5, "11.25am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Heinrich Böll", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:26 for 0 quotations:
    case 686:
      Serial.println(F("No quotes for 11:26"));
      return;

    // Codegen for 11:27 for 1 quotations:
    case 687:
      Serial.println(F("Only one option for 11:27:"));
    Serial.println(F("11:27 - It's from one of the more recent plates the tree has scanned: 11.27 in the morning of 4 April 1175 - Chris James, The Second Internet Cafe, Part 2: The Cascade Annihilator"));
// DEBUG: (5, 5)
// DEBUG: Operating on It's
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on from
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on one
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on of
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on the
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on more
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on recent
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on plates
// DEBUG: ["It's", 'from', 'one', 'of', 'the', 'more', 'recent']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on tree
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on has
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on scanned:
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['plates', 'the', 'tree', 'has', 'scanned:']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on the
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on morning
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on of
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on 4
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on April
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on 1175
// DEBUG: 196
// DEBUG: ['11.27']
// DEBUG: drawing cursor (142, 17)
// DEBUG: ['- Chris James']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "It's from one of the more recent", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "plates the tree has scanned:", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(142, 17, "11.27", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Chris James", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:28 for 1 quotations:
    case 688:
      Serial.println(F("Only one option for 11:28:"));
    Serial.println(F("11:28 - From twenty minutes past nine until twenty-seven minutes past nine, from twenty-five minutes past eleven until twenty-eight minutes past eleven, from ten minutes to three until two minutes to three the heroes of the school met in a large familiarity whose Olympian laughter awed the fearful small boy that flitted uneasily past and chilled the slouching senior that rashly paused to examine the notices in assertion of an unearned right. - Compton Mackenzie, Sinister Street"));
// DEBUG: (5, 5)
// DEBUG: Operating on From
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on twenty
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on minutes
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on past
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on nine
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on until
// DEBUG: ['From', 'twenty', 'minutes', 'past', 'nine']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on twenty-seven
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on minutes
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on past
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on nine,
// DEBUG: ['until', 'twenty-seven', 'minutes', 'past']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on from
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on twenty-five
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on minutes
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on past
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on eleven
// DEBUG: ['nine,', 'from', 'twenty-five', 'minutes', 'past']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on until
// DEBUG: 53
// DEBUG: (48, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['eleven', 'until']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on from
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on ten
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on minutes
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on to
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on three
// DEBUG: 174
// DEBUG: (169, 65)
// DEBUG: Operating on until
// DEBUG: 210
// DEBUG: (205, 65)
// DEBUG: Operating on two
// DEBUG: ['TIMESTRING,', 'from', 'ten', 'minutes', 'to', 'three', 'until']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on minutes
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on to
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on three
// DEBUG: 115
// DEBUG: (110, 77)
// DEBUG: Operating on the
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on heroes
// DEBUG: 180
// DEBUG: (175, 77)
// DEBUG: Operating on of
// DEBUG: 195
// DEBUG: (190, 77)
// DEBUG: Operating on the
// DEBUG: ['two', 'minutes', 'to', 'three', 'the', 'heroes', 'of']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on school
// DEBUG: 57
// DEBUG: (52, 89)
// DEBUG: Operating on met
// DEBUG: 79
// DEBUG: (74, 89)
// DEBUG: Operating on in
// DEBUG: 94
// DEBUG: (89, 89)
// DEBUG: Operating on a
// DEBUG: 102
// DEBUG: (97, 89)
// DEBUG: Operating on large
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on familiarity
// DEBUG: ['the', 'school', 'met', 'in', 'a', 'large']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (17, 101)
// DEBUG: Operating on whose
// DEBUG: 58
// DEBUG: (53, 101)
// DEBUG: Operating on Olympian
// DEBUG: 115
// DEBUG: (110, 101)
// DEBUG: Operating on laughter
// DEBUG: 172
// DEBUG: (167, 101)
// DEBUG: Operating on awed
// DEBUG: 201
// DEBUG: (196, 101)
// DEBUG: Operating on the
// DEBUG: ['familiarity', 'whose', 'Olympian', 'laughter', 'awed']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on fearful
// DEBUG: 64
// DEBUG: (59, 113)
// DEBUG: Operating on small
// DEBUG: 100
// DEBUG: (95, 113)
// DEBUG: Operating on boy
// DEBUG: 122
// DEBUG: (117, 113)
// DEBUG: Operating on that
// DEBUG: 151
// DEBUG: (146, 113)
// DEBUG: Operating on flitted
// DEBUG: 201
// DEBUG: (196, 113)
// DEBUG: Operating on uneasily
// DEBUG: ['the', 'fearful', 'small', 'boy', 'that', 'flitted']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on past
// DEBUG: 48
// DEBUG: (43, 125)
// DEBUG: Operating on and
// DEBUG: 70
// DEBUG: (65, 125)
// DEBUG: Operating on chilled
// DEBUG: 120
// DEBUG: (115, 125)
// DEBUG: Operating on the
// DEBUG: 142
// DEBUG: (137, 125)
// DEBUG: Operating on slouching
// DEBUG: 206
// DEBUG: (201, 125)
// DEBUG: Operating on senior
// DEBUG: ['uneasily', 'past', 'and', 'chilled', 'the', 'slouching']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (12, 137)
// DEBUG: Operating on that
// DEBUG: 46
// DEBUG: (41, 137)
// DEBUG: Operating on rashly
// DEBUG: 89
// DEBUG: (84, 137)
// DEBUG: Operating on paused
// DEBUG: 132
// DEBUG: (127, 137)
// DEBUG: Operating on to
// DEBUG: 147
// DEBUG: (142, 137)
// DEBUG: Operating on examine
// DEBUG: 197
// DEBUG: (192, 137)
// DEBUG: Operating on the
// DEBUG: ['senior', 'that', 'rashly', 'paused', 'to', 'examine']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on notices
// DEBUG: 64
// DEBUG: (59, 149)
// DEBUG: Operating on in
// DEBUG: 79
// DEBUG: (74, 149)
// DEBUG: Operating on assertion
// DEBUG: 143
// DEBUG: (138, 149)
// DEBUG: Operating on of
// DEBUG: 158
// DEBUG: (153, 149)
// DEBUG: Operating on an
// DEBUG: 173
// DEBUG: (168, 149)
// DEBUG: Operating on unearned
// DEBUG: ['the', 'notices', 'in', 'assertion', 'of', 'an']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (14, 161)
// DEBUG: Operating on right.
// DEBUG: 62
// DEBUG: ['twenty-eight minutes past eleven']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- Sinister Street']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "From twenty minutes past nine", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "until twenty-seven minutes past", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "nine, from twenty-five minutes past", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "eleven until", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING, from ten minutes to three until", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "two minutes to three the heroes of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "the school met in a large", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "familiarity whose Olympian laughter awed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "the fearful small boy that flitted", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "uneasily past and chilled the slouching", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "senior that rashly paused to examine", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 149, "the notices in assertion of an", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "twenty-eight minutes past eleven", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Sinister Street", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:29 for 1 quotations:
    case 689:
      Serial.println(F("Only one option for 11:29:"));
    Serial.println(F("11:29 - You are four minutes too slow. No matter; it's enough to mention the error. Now from this moment, twenty-nine minutes after eleven, a.m., this Wednesday, 2nd October, you are in my service. - Jules Verne, Around the World in Eighty Days"));
// DEBUG: (5, 5)
// DEBUG: Operating on You
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on are
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on four
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on minutes
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on too
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on slow.
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on No
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on matter;
// DEBUG: ['You', 'are', 'four', 'minutes', 'too', 'slow.', 'No']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on it's
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on enough
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on to
// DEBUG: 105
// DEBUG: (100, 17)
// DEBUG: Operating on mention
// DEBUG: 155
// DEBUG: (150, 17)
// DEBUG: Operating on the
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on error.
// DEBUG: ['matter;', "it's", 'enough', 'to', 'mention', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on Now
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on from
// DEBUG: 68
// DEBUG: (63, 29)
// DEBUG: Operating on this
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on moment,
// DEBUG: 147
// DEBUG: (142, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['error.', 'Now', 'from', 'this', 'moment,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on this
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on Wednesday,
// DEBUG: 122
// DEBUG: (117, 53)
// DEBUG: Operating on 2nd
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on October,
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on you
// DEBUG: ['TIMESTRING,', 'this', 'Wednesday,', '2nd', 'October,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on are
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on in
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on my
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on service.
// DEBUG: 123
// DEBUG: ['twenty-nine minutes after eleven, a.m.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Jules Verne']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "You are four minutes too slow. No", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "matter; it's enough to mention the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "error. Now from this moment,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING, this Wednesday, 2nd October,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "twenty-nine minutes after eleven, a.m.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Jules Verne", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:30 for 4 quotations:
    case 690:
      option = random(0, 4);
      Serial.print(F("4 options for 11:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:30 - 'It is now 11.30. The door to this room is shut, and will remain shut, barring emergencies, until 12.00. I am authorised to inform you that we are now under battle orders. - Charles Stross, Singularity Sky "));
// DEBUG: (5, 5)
// DEBUG: Operating on 'It
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on is
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on now
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on The
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on door
// DEBUG: ["'It", 'is', 'now', 'TIMESTRING.', 'The']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 17)
// DEBUG: Operating on this
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on room
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on is
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on shut,
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on and
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on will
// DEBUG: 190
// DEBUG: (185, 17)
// DEBUG: Operating on remain
// DEBUG: ['door', 'to', 'this', 'room', 'is', 'shut,', 'and', 'will']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on shut,
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on barring
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on emergencies,
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on until
// DEBUG: ['remain', 'shut,', 'barring', 'emergencies,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on 12.00.
// DEBUG: 59
// DEBUG: (54, 41)
// DEBUG: Operating on I
// DEBUG: 67
// DEBUG: (62, 41)
// DEBUG: Operating on am
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on authorised
// DEBUG: 153
// DEBUG: (148, 41)
// DEBUG: Operating on to
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on inform
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on you
// DEBUG: ['until', '12.00.', 'I', 'am', 'authorised', 'to', 'inform']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on that
// DEBUG: 43
// DEBUG: (38, 53)
// DEBUG: Operating on we
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on are
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on now
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on under
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on battle
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on orders.
// DEBUG: ['you', 'that', 'we', 'are', 'now', 'under', 'battle']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['11.30']
// DEBUG: drawing cursor (64, 5)
// DEBUG: ['- Singularity Sky']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "'It is now TIMESTRING. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "door to this room is shut, and will", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "remain shut, barring emergencies,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "until 12.00. I am authorised to inform", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "you that we are now under battle", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(64, 5, "11.30", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Singularity Sky", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:30 - O, Frank - I made a mistake! - I thought that church with the spire was All Saints', and I was at the door at half-past eleven to a minute as you said... - Thomas Hardy, Far from the madding crowd "));
// DEBUG: (5, 5)
// DEBUG: Operating on O,
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on Frank
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on -
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on I
// DEBUG: 77
// DEBUG: (72, 5)
// DEBUG: Operating on made
// DEBUG: 106
// DEBUG: (101, 5)
// DEBUG: Operating on a
// DEBUG: 114
// DEBUG: (109, 5)
// DEBUG: Operating on mistake!
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on -
// DEBUG: 179
// DEBUG: (174, 5)
// DEBUG: Operating on I
// DEBUG: 187
// DEBUG: (182, 5)
// DEBUG: Operating on thought
// DEBUG: ['O,', 'Frank', '-', 'I', 'made', 'a', 'mistake!', '-', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on that
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on church
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on with
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on the
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on spire
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on was
// DEBUG: 199
// DEBUG: (194, 17)
// DEBUG: Operating on All
// DEBUG: ['thought', 'that', 'church', 'with', 'the', 'spire', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on Saints',
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on and
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on I
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on was
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on at
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on the
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on door
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on at
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['All', "Saints',", 'and', 'I', 'was', 'at', 'the', 'door', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 193
// DEBUG: (188, 41)
// DEBUG: Operating on to
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on a
// DEBUG: ['TIMESTRING', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (7, 53)
// DEBUG: Operating on minute
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on as
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on you
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on said...
// DEBUG: 142
// DEBUG: ['half-past eleven']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Far from the madding crowd']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "O, Frank - I made a mistake! - I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "thought that church with the spire was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "All Saints', and I was at the door at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "half-past eleven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Far from the madding crowd", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("11:30 - Thank-you, said C.B. quietly; but as he hung up his face was grim. In a few minutes he would have to break it to John that, although they had braved such dredful perils dring the earlier part of the night they had, after all, failed to save Christina. Beddows had abjured Satan at a little after half-past eleven. By about eighteen minutes the Canon had beaten them to it again.\" - Dennis Wheatley, To the Devil a Daughter "));
// DEBUG: (5, 5)
// DEBUG: Operating on Thank-you,
// DEBUG: 81
// DEBUG: (76, 5)
// DEBUG: Operating on said
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on C.B.
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on quietly;
// DEBUG: 196
// DEBUG: (191, 5)
// DEBUG: Operating on but
// DEBUG: ['Thank-you,', 'said', 'C.B.', 'quietly;']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on as
// DEBUG: 29
// DEBUG: (24, 17)
// DEBUG: Operating on he
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on hung
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on up
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on his
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on face
// DEBUG: 139
// DEBUG: (134, 17)
// DEBUG: Operating on was
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on grim.
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on In
// DEBUG: ['but', 'as', 'he', 'hung', 'up', 'his', 'face', 'was', 'grim.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 29)
// DEBUG: Operating on few
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on minutes
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on he
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on would
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on have
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on to
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on break
// DEBUG: ['In', 'a', 'few', 'minutes', 'he', 'would', 'have', 'to']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on it
// DEBUG: 31
// DEBUG: (26, 41)
// DEBUG: Operating on to
// DEBUG: 46
// DEBUG: (41, 41)
// DEBUG: Operating on John
// DEBUG: 75
// DEBUG: (70, 41)
// DEBUG: Operating on that,
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on although
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on they
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on had
// DEBUG: ['break', 'it', 'to', 'John', 'that,', 'although', 'they']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on braved
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on such
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on dredful
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on perils
// DEBUG: 179
// DEBUG: (174, 53)
// DEBUG: Operating on dring
// DEBUG: ['had', 'braved', 'such', 'dredful', 'perils']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 65)
// DEBUG: Operating on earlier
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on part
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on of
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on the
// DEBUG: 154
// DEBUG: (149, 65)
// DEBUG: Operating on night
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on they
// DEBUG: ['dring', 'the', 'earlier', 'part', 'of', 'the', 'night']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on had,
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on after
// DEBUG: 80
// DEBUG: (75, 77)
// DEBUG: Operating on all,
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on failed
// DEBUG: 152
// DEBUG: (147, 77)
// DEBUG: Operating on to
// DEBUG: 167
// DEBUG: (162, 77)
// DEBUG: Operating on save
// DEBUG: 196
// DEBUG: (191, 77)
// DEBUG: Operating on Christina.
// DEBUG: ['they', 'had,', 'after', 'all,', 'failed', 'to', 'save']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (16, 89)
// DEBUG: Operating on Beddows
// DEBUG: 71
// DEBUG: (66, 89)
// DEBUG: Operating on had
// DEBUG: 93
// DEBUG: (88, 89)
// DEBUG: Operating on abjured
// DEBUG: 143
// DEBUG: (138, 89)
// DEBUG: Operating on Satan
// DEBUG: 179
// DEBUG: (174, 89)
// DEBUG: Operating on at
// DEBUG: 194
// DEBUG: (189, 89)
// DEBUG: Operating on a
// DEBUG: 202
// DEBUG: (197, 89)
// DEBUG: Operating on little
// DEBUG: ['Christina.', 'Beddows', 'had', 'abjured', 'Satan', 'at', 'a']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on after
// DEBUG: 53
// DEBUG: (48, 101)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['little', 'after']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (17, 113)
// DEBUG: Operating on By
// DEBUG: 37
// DEBUG: (32, 113)
// DEBUG: Operating on about
// DEBUG: 73
// DEBUG: (68, 113)
// DEBUG: Operating on eighteen
// DEBUG: 130
// DEBUG: (125, 113)
// DEBUG: Operating on minutes
// DEBUG: 180
// DEBUG: (175, 113)
// DEBUG: Operating on the
// DEBUG: 202
// DEBUG: (197, 113)
// DEBUG: Operating on Canon
// DEBUG: ['TIMESTRING.', 'By', 'about', 'eighteen', 'minutes', 'the']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (11, 125)
// DEBUG: Operating on had
// DEBUG: 38
// DEBUG: (33, 125)
// DEBUG: Operating on beaten
// DEBUG: 81
// DEBUG: (76, 125)
// DEBUG: Operating on them
// DEBUG: 110
// DEBUG: (105, 125)
// DEBUG: Operating on to
// DEBUG: 125
// DEBUG: (120, 125)
// DEBUG: Operating on it
// DEBUG: 140
// DEBUG: (135, 125)
// DEBUG: Operating on again.\"
// DEBUG: 197
// DEBUG: ['half-past eleven']
// DEBUG: drawing cursor (48, 101)
// DEBUG: ['- To the Devil a Daughter']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "Thank-you, said C.B. quietly;", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "but as he hung up his face was grim.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "In a few minutes he would have to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "break it to John that, although they", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "had braved such dredful perils", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "dring the earlier part of the night", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "they had, after all, failed to save", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "Christina. Beddows had abjured Satan at a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "little after", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "TIMESTRING. By about eighteen minutes the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(48, 101, "half-past eleven", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- To the Devil a Daughter", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("11:30 - This time it was Kumiko. The wall clock said 11.30. - Haruki Murakami, The Wind-up Bird Chronicle "));
// DEBUG: (5, 5)
// DEBUG: Operating on This
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on time
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on it
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on was
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on Kumiko.
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on The
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on wall
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on clock
// DEBUG: ['This', 'time', 'it', 'was', 'Kumiko.', 'The', 'wall']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on said
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 159
// DEBUG: ['11.30']
// DEBUG: drawing cursor (40, 17)
// DEBUG: ['- The Wind-up Bird Chronicle']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "This time it was Kumiko. The wall", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(40, 17, "11.30", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- The Wind-up Bird Chronicle", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:31 for 1 quotations:
    case 691:
      Serial.println(F("Only one option for 11:31:"));
    Serial.println(F("11:31 - Albatross 8 passed over Pamlico Sound at 1131 local time. Its on-board programming was designed to trace thermal receptors over the entire visible horizon, interrogating everything in sight and locking on any signature that fit its acquisition parameters. - Tom Clancy, The Hunt for Red October "));
// DEBUG: (5, 5)
// DEBUG: Operating on Albatross
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on 8
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on passed
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on over
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on Pamlico
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on Sound
// DEBUG: ['Albatross', '8', 'passed', 'over', 'Pamlico']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on local
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on time.
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on Its
// DEBUG: ['Sound', 'at', 'TIMESTRING', 'local', 'time.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on on-board
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on programming
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on was
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on designed
// DEBUG: ['Its', 'on-board', 'programming', 'was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on trace
// DEBUG: 70
// DEBUG: (65, 41)
// DEBUG: Operating on thermal
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on receptors
// DEBUG: 184
// DEBUG: (179, 41)
// DEBUG: Operating on over
// DEBUG: ['designed', 'to', 'trace', 'thermal', 'receptors']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on entire
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on visible
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on horizon,
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on interrogating
// DEBUG: ['over', 'the', 'entire', 'visible', 'horizon,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (19, 65)
// DEBUG: Operating on everything
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on in
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on sight
// DEBUG: 146
// DEBUG: (141, 65)
// DEBUG: Operating on and
// DEBUG: 168
// DEBUG: (163, 65)
// DEBUG: Operating on locking
// DEBUG: ['interrogating', 'everything', 'in', 'sight', 'and']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on on
// DEBUG: 33
// DEBUG: (28, 77)
// DEBUG: Operating on any
// DEBUG: 55
// DEBUG: (50, 77)
// DEBUG: Operating on signature
// DEBUG: 119
// DEBUG: (114, 77)
// DEBUG: Operating on that
// DEBUG: 148
// DEBUG: (143, 77)
// DEBUG: Operating on fit
// DEBUG: 170
// DEBUG: (165, 77)
// DEBUG: Operating on its
// DEBUG: 192
// DEBUG: (187, 77)
// DEBUG: Operating on acquisition
// DEBUG: ['locking', 'on', 'any', 'signature', 'that', 'fit', 'its']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (17, 89)
// DEBUG: Operating on parameters.
// DEBUG: 100
// DEBUG: ['1131']
// DEBUG: drawing cursor (26, 17)
// DEBUG: ['- The Hunt for Red October']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "Albatross 8 passed over Pamlico", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Sound at TIMESTRING local time.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Its on-board programming was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "designed to trace thermal receptors", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "over the entire visible horizon,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "interrogating everything in sight and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "locking on any signature that fit its", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(26, 17, "1131", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- The Hunt for Red October", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:32 for 1 quotations:
    case 692:
      Serial.println(F("Only one option for 11:32:"));
    Serial.println(F("11:32 - And after that, not forgetting, there was the Flemish armada, all scattered, and all officially drowned, there and then, on a lovely morning, after the universal flood, at about eleven thirty two was it? Off the coast of Cominghome... - James Joyce, Finnegans Wake"));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on after
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on that,
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on not
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on forgetting,
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on there
// DEBUG: ['And', 'after', 'that,', 'not', 'forgetting,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on was
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on the
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on Flemish
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on armada,
// DEBUG: 160
// DEBUG: (155, 17)
// DEBUG: Operating on all
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on scattered,
// DEBUG: ['there', 'was', 'the', 'Flemish', 'armada,', 'all']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on all
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on officially
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on drowned,
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on there
// DEBUG: ['scattered,', 'and', 'all', 'officially', 'drowned,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on then,
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on on
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on a
// DEBUG: 97
// DEBUG: (92, 41)
// DEBUG: Operating on lovely
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on morning,
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on after
// DEBUG: ['there', 'and', 'then,', 'on', 'a', 'lovely', 'morning,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on universal
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on flood,
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on at
// DEBUG: 160
// DEBUG: (155, 53)
// DEBUG: Operating on about
// DEBUG: 196
// DEBUG: (191, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['after', 'the', 'universal', 'flood,', 'at', 'about']
// DEBUG: drawing cursor (5, 53)
// DEBUG: 200
// DEBUG: (195, 65)
// DEBUG: Operating on was
// DEBUG: ['TIMESTRING']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on it?
// DEBUG: 36
// DEBUG: (31, 77)
// DEBUG: Operating on Off
// DEBUG: 58
// DEBUG: (53, 77)
// DEBUG: Operating on the
// DEBUG: 80
// DEBUG: (75, 77)
// DEBUG: Operating on coast
// DEBUG: 116
// DEBUG: (111, 77)
// DEBUG: Operating on of
// DEBUG: 131
// DEBUG: (126, 77)
// DEBUG: Operating on Cominghome...
// DEBUG: ['was', 'it?', 'Off', 'the', 'coast', 'of']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['eleven thirty two']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- James Joyce, Finnegans Wake']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "And after that, not forgetting,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "there was the Flemish armada, all", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "scattered, and all officially drowned,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "there and then, on a lovely morning,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "after the universal flood, at about", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "was it? Off the coast of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "eleven thirty two", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- James Joyce, Finnegans Wake", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:33 for 0 quotations:
    case 693:
      Serial.println(F("No quotes for 11:33"));
      return;

    // Codegen for 11:34 for 1 quotations:
    case 694:
      Serial.println(F("Only one option for 11:34:"));
    Serial.println(F("11:34 - Christmas Eve 1995. 11.34am. The first time, Almasa says it slowly and softly, as if she is really looking for an answer. - Adnan Mahmutovic, How to Fare Well and Stay Fair"));
// DEBUG: (5, 5)
// DEBUG: Operating on Christmas
// DEBUG: 74
// DEBUG: (69, 5)
// DEBUG: Operating on Eve
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on 1995.
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Christmas', 'Eve', '1995.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on The
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on first
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on time,
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on Almasa
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on says
// DEBUG: 188
// DEBUG: (183, 17)
// DEBUG: Operating on it
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on slowly
// DEBUG: ['TIMESTRING.', 'The', 'first', 'time,', 'Almasa', 'says', 'it']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on softly,
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on as
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on if
// DEBUG: 119
// DEBUG: (114, 29)
// DEBUG: Operating on she
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on is
// DEBUG: 156
// DEBUG: (151, 29)
// DEBUG: Operating on really
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on looking
// DEBUG: ['slowly', 'and', 'softly,', 'as', 'if', 'she', 'is', 'really']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on for
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on an
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on answer.
// DEBUG: 105
// DEBUG: ['11.34am']
// DEBUG: drawing cursor (127, 5)
// DEBUG: ['- Adnan Mahmutovic']
// DEBUG: drawing cursor (81, 192)
    paint.Paint_DrawString_EN(5, 5, "Christmas Eve 1995.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. The first time, Almasa says it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "slowly and softly, as if she is really", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(127, 5, "11.34am", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(81, 192, "- Adnan Mahmutovic", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:35 for 1 quotations:
    case 695:
      Serial.println(F("Only one option for 11:35:"));
    Serial.println(F("11:35 - At 11.35 the Colonel came out; he looked hot and angry as he strode towards the lift. There goes a hanging judge, thought Wormold. - Graham Greene, Our Man in Havana"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on the
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on Colonel
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on came
// DEBUG: ['At', 'TIMESTRING', 'the', 'Colonel']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on out;
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on he
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on looked
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on hot
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on and
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on angry
// DEBUG: 182
// DEBUG: (177, 17)
// DEBUG: Operating on as
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on he
// DEBUG: ['came', 'out;', 'he', 'looked', 'hot', 'and', 'angry', 'as']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on strode
// DEBUG: 56
// DEBUG: (51, 29)
// DEBUG: Operating on towards
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on the
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on lift.
// DEBUG: 164
// DEBUG: (159, 29)
// DEBUG: Operating on There
// DEBUG: 200
// DEBUG: (195, 29)
// DEBUG: Operating on goes
// DEBUG: ['he', 'strode', 'towards', 'the', 'lift.', 'There']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 41)
// DEBUG: Operating on hanging
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on judge,
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on thought
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on Wormold.
// DEBUG: ['goes', 'a', 'hanging', 'judge,', 'thought']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['11.35']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Our Man in Havana']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING the Colonel", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "came out; he looked hot and angry as", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "he strode towards the lift. There", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "goes a hanging judge, thought", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "11.35", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Our Man in Havana", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:36 for 1 quotations:
    case 696:
      Serial.println(F("Only one option for 11:36:"));
    Serial.println(F("11:36 - I ran up the stairs, away from the heat and the noise, the mess and the confusion. I saw the clock radio by my bed. Eleven thirty-six. - Nicci French, Losing You"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on ran
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on up
// DEBUG: 55
// DEBUG: (50, 5)
// DEBUG: Operating on the
// DEBUG: 77
// DEBUG: (72, 5)
// DEBUG: Operating on stairs,
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on away
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on from
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on the
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on heat
// DEBUG: ['I', 'ran', 'up', 'the', 'stairs,', 'away', 'from', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on the
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on noise,
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on the
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on mess
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on and
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on the
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on confusion.
// DEBUG: ['heat', 'and', 'the', 'noise,', 'the', 'mess', 'and', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on I
// DEBUG: 29
// DEBUG: (24, 29)
// DEBUG: Operating on saw
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on clock
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on radio
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on by
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on my
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on bed.
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['confusion.', 'I', 'saw', 'the', 'clock', 'radio', 'by', 'my', 'bed.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 207
// DEBUG: ['Eleven thirty-six']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Nicci French, Losing You']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "I ran up the stairs, away from the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "heat and the noise, the mess and the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "confusion. I saw the clock radio by my bed.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Eleven thirty-six", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Nicci French, Losing You", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:37 for 0 quotations:
    case 697:
      Serial.println(F("No quotes for 11:37"));
      return;

    // Codegen for 11:38 for 1 quotations:
    case 698:
      Serial.println(F("Only one option for 11:38:"));
    Serial.println(F("11:38 - At 11:38, she left her desk and walked to the side door of the auditorium, arriving ten minutes before noon. - Dave Eggers, The Circle"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on she
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on left
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on her
// DEBUG: ['At', 'TIMESTRING,', 'she', 'left']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on desk
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on and
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on walked
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on to
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on the
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on side
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on door
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on of
// DEBUG: ['her', 'desk', 'and', 'walked', 'to', 'the', 'side', 'door']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on auditorium,
// DEBUG: 113
// DEBUG: (108, 29)
// DEBUG: Operating on arriving
// DEBUG: 170
// DEBUG: (165, 29)
// DEBUG: Operating on ten
// DEBUG: 192
// DEBUG: (187, 29)
// DEBUG: Operating on minutes
// DEBUG: ['of', 'the', 'auditorium,', 'arriving', 'ten']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on before
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on noon.
// DEBUG: 97
// DEBUG: ['11:38']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Dave Eggers, The Circle']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING, she left", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "her desk and walked to the side door", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "of the auditorium, arriving ten", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "11:38", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- Dave Eggers, The Circle", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:39 for 0 quotations:
    case 699:
      Serial.println(F("No quotes for 11:39"));
      return;

    // Codegen for 11:40 for 2 quotations:
    case 700:
      option = random(0, 2);
      Serial.print(F("2 options for 11:40. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:40 - On the line where these words were written, \"21st December, Saturday, Liverpool,\" he added, \"80th day, 11.40am,\" and waited. - Jules Verne, Around the World in Eighty Days"));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on line
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on where
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on these
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on words
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on were
// DEBUG: ['On', 'the', 'line', 'where', 'these', 'words']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on written,
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on \"21st
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on December,
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on Saturday,
// DEBUG: ['were', 'written,', '\\"21st', 'December,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on Liverpool,\"
// DEBUG: 105
// DEBUG: (100, 29)
// DEBUG: Operating on he
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on added,
// DEBUG: 163
// DEBUG: (158, 29)
// DEBUG: Operating on \"80th
// DEBUG: 206
// DEBUG: (201, 29)
// DEBUG: Operating on day,
// DEBUG: ['Saturday,', 'Liverpool,\\"', 'he', 'added,', '\\"80th']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on TIMESTRING,\"
// DEBUG: Wrorking on the timestring
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on and
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on waited.
// DEBUG: ['day,', 'TIMESTRING,\\"', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['11.40am']
// DEBUG: drawing cursor (10, 41)
// DEBUG: ['- Jules Verne']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "On the line where these words", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "were written, \"21st December,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Saturday, Liverpool,\" he added, \"80th", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "day, TIMESTRING,\" and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(10, 41, "11.40am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Jules Verne", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:40 - During the sessions at Ito he read the Lotus Sutra on mornings of play, and he now seemed to be bringing himself to order through silent meditation. Then, quickly, there came a rap of stone on board. It was twenty minutes before noon. - Yusunari Kawabata, The Master of Go "));
// DEBUG: (5, 5)
// DEBUG: Operating on During
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on the
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on sessions
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on at
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on Ito
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on he
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on read
// DEBUG: ['During', 'the', 'sessions', 'at', 'Ito', 'he']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on Lotus
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on Sutra
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on on
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on mornings
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on of
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on play,
// DEBUG: ['read', 'the', 'Lotus', 'Sutra', 'on', 'mornings', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on he
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on now
// DEBUG: 75
// DEBUG: (70, 29)
// DEBUG: Operating on seemed
// DEBUG: 118
// DEBUG: (113, 29)
// DEBUG: Operating on to
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on be
// DEBUG: 148
// DEBUG: (143, 29)
// DEBUG: Operating on bringing
// DEBUG: 205
// DEBUG: (200, 29)
// DEBUG: Operating on himself
// DEBUG: ['play,', 'and', 'he', 'now', 'seemed', 'to', 'be', 'bringing']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 41)
// DEBUG: Operating on order
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on through
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on silent
// DEBUG: 162
// DEBUG: (157, 41)
// DEBUG: Operating on meditation.
// DEBUG: ['himself', 'to', 'order', 'through', 'silent']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on Then,
// DEBUG: 58
// DEBUG: (53, 53)
// DEBUG: Operating on quickly,
// DEBUG: 115
// DEBUG: (110, 53)
// DEBUG: Operating on there
// DEBUG: 151
// DEBUG: (146, 53)
// DEBUG: Operating on came
// DEBUG: 180
// DEBUG: (175, 53)
// DEBUG: Operating on a
// DEBUG: 188
// DEBUG: (183, 53)
// DEBUG: Operating on rap
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on of
// DEBUG: ['meditation.', 'Then,', 'quickly,', 'there', 'came', 'a', 'rap']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on stone
// DEBUG: 49
// DEBUG: (44, 65)
// DEBUG: Operating on on
// DEBUG: 64
// DEBUG: (59, 65)
// DEBUG: Operating on board.
// DEBUG: 107
// DEBUG: (102, 65)
// DEBUG: Operating on It
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on was
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['of', 'stone', 'on', 'board.', 'It', 'was']
// DEBUG: drawing cursor (5, 65)
// DEBUG: []
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['twenty minutes before noon']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['- The Master of Go']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "During the sessions at Ito he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "read the Lotus Sutra on mornings of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "play, and he now seemed to be bringing", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "himself to order through silent", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "meditation. Then, quickly, there came a rap", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "of stone on board. It was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "twenty minutes before noon", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Master of Go", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:41 for 1 quotations:
    case 701:
      Serial.println(F("Only one option for 11:41:"));
    Serial.println(F("11:41 - Spagnola took a deep breath and started into the log again. \"Eleven forty-one: large dog craps in Dr. Yamata's Aston Martin.\" - Christopher Moore, Coyote Blue "));
// DEBUG: (5, 5)
// DEBUG: Operating on Spagnola
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on took
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on a
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on deep
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on breath
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on and
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on started
// DEBUG: ['Spagnola', 'took', 'a', 'deep', 'breath', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on into
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 17)
// DEBUG: Operating on log
// DEBUG: 91
// DEBUG: (86, 17)
// DEBUG: Operating on again.
// DEBUG: 134
// DEBUG: (129, 17)
// DEBUG: Operating on \"TIMESTRING:
// DEBUG: Wrorking on the timestring
// DEBUG: ['started', 'into', 'the', 'log', 'again.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (19, 41)
// DEBUG: Operating on large
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on dog
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on craps
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on in
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on Dr.
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on Yamata's
// DEBUG: ['\\"TIMESTRING:', 'large', 'dog', 'craps', 'in', 'Dr.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on Aston
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on Martin.\"
// DEBUG: 119
// DEBUG: ['Eleven forty-one']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Coyote Blue']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "Spagnola took a deep breath and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "started into the log again.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "\"TIMESTRING: large dog craps in Dr.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Eleven forty-one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Coyote Blue", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:42 for 1 quotations:
    case 702:
      Serial.println(F("Only one option for 11:42:"));
    Serial.println(F("11:42 - 11:42 I'm doing fine. I'm doing well. I've got the Hoover on, I'm cruising along nicely- What was that? What just went up the Hoover? Why is it making that grinding noise? Have I broken it? - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on I'm
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on doing
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on fine.
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on I'm
// DEBUG: ['TIMESTRING', "I'm", 'doing', 'fine.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on doing
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on well.
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on I've
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on got
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on the
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on Hoover
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on on,
// DEBUG: ["I'm", 'doing', 'well.', "I've", 'got', 'the', 'Hoover']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on I'm
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on cruising
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on along
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on nicely-
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on What
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on was
// DEBUG: ['on,', "I'm", 'cruising', 'along', 'nicely-', 'What']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on that?
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on What
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on just
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on went
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on up
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on Hoover?
// DEBUG: ['was', 'that?', 'What', 'just', 'went', 'up', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on Why
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on is
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on it
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on making
// DEBUG: 113
// DEBUG: (108, 53)
// DEBUG: Operating on that
// DEBUG: 142
// DEBUG: (137, 53)
// DEBUG: Operating on grinding
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on noise?
// DEBUG: ['Hoover?', 'Why', 'is', 'it', 'making', 'that', 'grinding']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on Have
// DEBUG: 46
// DEBUG: (41, 65)
// DEBUG: Operating on I
// DEBUG: 54
// DEBUG: (49, 65)
// DEBUG: Operating on broken
// DEBUG: 97
// DEBUG: (92, 65)
// DEBUG: Operating on it?
// DEBUG: 119
// DEBUG: ['11:42']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING I'm doing fine.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "I'm doing well. I've got the Hoover", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "on, I'm cruising along nicely- What", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "was that? What just went up the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Hoover? Why is it making that grinding", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "11:42", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:43 for 0 quotations:
    case 703:
      Serial.println(F("No quotes for 11:43"));
      return;

    // Codegen for 11:44 for 1 quotations:
    case 704:
      Serial.println(F("Only one option for 11:44:"));
    Serial.println(F("11:44 - At 10.15 Arlena departed from her rondezvous, a minute or two later Patrick Redfern came down and registered surprise, annoyance, etc. Christine's task was easy enough. Keeping her own watch concealed she asked Linda at twenty-five past eleven what time it was. Linda looked at her watch and replied that it was a quarter to twelve. - Agatha Christie, Evil under the Sun "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on 10.15
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on Arlena
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on departed
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on from
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on her
// DEBUG: ['At', '10.15', 'Arlena', 'departed', 'from']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on rondezvous,
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on a
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on minute
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on or
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on two
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on later
// DEBUG: ['her', 'rondezvous,', 'a', 'minute', 'or', 'two']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on Patrick
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on Redfern
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on came
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on down
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on and
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on registered
// DEBUG: ['later', 'Patrick', 'Redfern', 'came', 'down', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on surprise,
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on annoyance,
// DEBUG: 156
// DEBUG: (151, 41)
// DEBUG: Operating on etc.
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on Christine's
// DEBUG: ['registered', 'surprise,', 'annoyance,', 'etc.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on task
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on was
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on easy
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on enough.
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on Keeping
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on her
// DEBUG: ["Christine's", 'task', 'was', 'easy', 'enough.', 'Keeping']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on own
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on watch
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on concealed
// DEBUG: 136
// DEBUG: (131, 65)
// DEBUG: Operating on she
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on asked
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on Linda
// DEBUG: ['her', 'own', 'watch', 'concealed', 'she', 'asked']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on twenty-five
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on past
// DEBUG: 138
// DEBUG: (133, 77)
// DEBUG: Operating on eleven
// DEBUG: 181
// DEBUG: (176, 77)
// DEBUG: Operating on what
// DEBUG: 210
// DEBUG: (205, 77)
// DEBUG: Operating on time
// DEBUG: ['Linda', 'at', 'twenty-five', 'past', 'eleven', 'what']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on was.
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on Linda
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on looked
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on at
// DEBUG: 153
// DEBUG: (148, 89)
// DEBUG: Operating on her
// DEBUG: 175
// DEBUG: (170, 89)
// DEBUG: Operating on watch
// DEBUG: 211
// DEBUG: (206, 89)
// DEBUG: Operating on and
// DEBUG: ['time', 'it', 'was.', 'Linda', 'looked', 'at', 'her', 'watch']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on replied
// DEBUG: 64
// DEBUG: (59, 101)
// DEBUG: Operating on that
// DEBUG: 93
// DEBUG: (88, 101)
// DEBUG: Operating on it
// DEBUG: 108
// DEBUG: (103, 101)
// DEBUG: Operating on was
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on a
// DEBUG: 138
// DEBUG: (133, 101)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['and', 'replied', 'that', 'it', 'was', 'a']
// DEBUG: drawing cursor (5, 101)
// DEBUG: 207
// DEBUG: ['quarter to twelve']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ['- Evil under the Sun']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "At 10.15 Arlena departed from", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "her rondezvous, a minute or two", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "later Patrick Redfern came down and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "registered surprise, annoyance, etc.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Christine's task was easy enough. Keeping", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "her own watch concealed she asked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Linda at twenty-five past eleven what", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "time it was. Linda looked at her watch", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "and replied that it was a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "quarter to twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Evil under the Sun", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:45 for 5 quotations:
    case 705:
      option = random(0, 5);
      Serial.print(F("5 options for 11:45. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:45 - ...I waited till a quarter to twelve, and found then that I was in All Souls'. But I wasn't much frightened, for I thought it could be tomorrow as well. - Thomas Hardy, Far from the madding crowd "));
// DEBUG: (5, 5)
// DEBUG: Operating on ...I
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on waited
// DEBUG: 82
// DEBUG: (77, 5)
// DEBUG: Operating on till
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on a
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['...I', 'waited', 'till', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on and
// DEBUG: ['TIMESTRING,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on found
// DEBUG: 50
// DEBUG: (45, 29)
// DEBUG: Operating on then
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on that
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on I
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on was
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on in
// DEBUG: 153
// DEBUG: (148, 29)
// DEBUG: Operating on All
// DEBUG: 175
// DEBUG: (170, 29)
// DEBUG: Operating on Souls'.
// DEBUG: ['and', 'found', 'then', 'that', 'I', 'was', 'in', 'All']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on But
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on I
// DEBUG: 48
// DEBUG: (43, 41)
// DEBUG: Operating on wasn't
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on much
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on frightened,
// DEBUG: 198
// DEBUG: (193, 41)
// DEBUG: Operating on for
// DEBUG: ["Souls'.", 'But', 'I', "wasn't", 'much', 'frightened,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on I
// DEBUG: 22
// DEBUG: (17, 53)
// DEBUG: Operating on thought
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on it
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on could
// DEBUG: 123
// DEBUG: (118, 53)
// DEBUG: Operating on be
// DEBUG: 138
// DEBUG: (133, 53)
// DEBUG: Operating on tomorrow
// DEBUG: 195
// DEBUG: (190, 53)
// DEBUG: Operating on as
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on well.
// DEBUG: ['for', 'I', 'thought', 'it', 'could', 'be', 'tomorrow', 'as']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['quarter to twelve']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Far from the madding crowd']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "...I waited till a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "and found then that I was in All", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Souls'. But I wasn't much frightened,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "for I thought it could be tomorrow as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "quarter to twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- Far from the madding crowd", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:45 - Said Septimus, very slowly, very drowsily, smiling mysteriously. As he sat smiling at the dead man in the grey suit the quarter struck, the quarter to twelve.\" - Virginia Woolf, Mrs. Dalloway "));
// DEBUG: (5, 5)
// DEBUG: Operating on Said
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on Septimus,
// DEBUG: 103
// DEBUG: (98, 5)
// DEBUG: Operating on very
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on slowly,
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on very
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on drowsily,
// DEBUG: ['Said', 'Septimus,', 'very', 'slowly,', 'very']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on smiling
// DEBUG: 70
// DEBUG: (65, 17)
// DEBUG: Operating on mysteriously.
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on As
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on he
// DEBUG: 192
// DEBUG: (187, 17)
// DEBUG: Operating on sat
// DEBUG: ['drowsily,', 'smiling', 'mysteriously.', 'As', 'he']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on smiling
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on at
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on the
// DEBUG: 101
// DEBUG: (96, 29)
// DEBUG: Operating on dead
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on man
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on in
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on the
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on grey
// DEBUG: ['sat', 'smiling', 'at', 'the', 'dead', 'man', 'in', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on suit
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on the
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on quarter
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on struck,
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on TIMESTRING.\"
// DEBUG: Wrorking on the timestring
// DEBUG: ['grey', 'suit', 'the', 'quarter', 'struck,', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['quarter to twelve']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- Mrs. Dalloway']
// DEBUG: drawing cursor (102, 192)
          paint.Paint_DrawString_EN(5, 5, "Said Septimus, very slowly, very", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "drowsily, smiling mysteriously. As he", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "sat smiling at the dead man in the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "grey suit the quarter struck, the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "quarter to twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(102, 192, "- Mrs. Dalloway", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("11:45 - As he sat smiling, the quarter struck - the quarter to twelve. - Virginia Woolf, Mrs Dalloway "));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on he
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on sat
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on smiling,
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on the
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on quarter
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on struck
// DEBUG: ['As', 'he', 'sat', 'smiling,', 'the', 'quarter']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on -
// DEBUG: 25
// DEBUG: (20, 17)
// DEBUG: Operating on the
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['struck', '-', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['quarter to twelve']
// DEBUG: drawing cursor (42, 17)
// DEBUG: ['- Mrs Dalloway']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "As he sat smiling, the quarter", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "struck - the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 17, "quarter to twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Mrs Dalloway", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("11:45 - I arrived at St. Gatien from Nice on Tuesday, the 14th of August. I was arrested at 11.45am on Thursday, the 16th by an agent de police and an inspector in plain clothes and taken to the Commissariat. - Eric Ambler, Epitaph for a Spy"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on arrived
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on at
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on St.
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on Gatien
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on from
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on Nice
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on on
// DEBUG: ['I', 'arrived', 'at', 'St.', 'Gatien', 'from', 'Nice']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on Tuesday,
// DEBUG: 70
// DEBUG: (65, 17)
// DEBUG: Operating on the
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on 14th
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on of
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on August.
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on I
// DEBUG: 194
// DEBUG: (189, 17)
// DEBUG: Operating on was
// DEBUG: ['on', 'Tuesday,', 'the', '14th', 'of', 'August.', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on arrested
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on at
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 207
// DEBUG: (202, 29)
// DEBUG: Operating on on
// DEBUG: ['was', 'arrested', 'at', 'TIMESTRING']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on Thursday,
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on the
// DEBUG: 99
// DEBUG: (94, 41)
// DEBUG: Operating on 16th
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on by
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on an
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on agent
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on de
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on police
// DEBUG: ['on', 'Thursday,', 'the', '16th', 'by', 'an', 'agent', 'de']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on an
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on inspector
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on in
// DEBUG: 133
// DEBUG: (128, 53)
// DEBUG: Operating on plain
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on clothes
// DEBUG: ['police', 'and', 'an', 'inspector', 'in', 'plain']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 65)
// DEBUG: Operating on taken
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on to
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on the
// DEBUG: 113
// DEBUG: (108, 65)
// DEBUG: Operating on Commissariat.
// DEBUG: 205
// DEBUG: ['11.45am']
// DEBUG: drawing cursor (81, 29)
// DEBUG: ['- Epitaph for a Spy']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "I arrived at St. Gatien from Nice", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "on Tuesday, the 14th of August. I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "was arrested at TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "on Thursday, the 16th by an agent de", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "police and an inspector in plain", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(81, 29, "11.45am", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Epitaph for a Spy", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("11:45 - She tucked the phone in the crook of her neck and thumbed hurriedly through her pink messages. .... Dr. Provetto, at 11:45 A.M. - Lisa Scottoline, Mistaken Identity "));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on tucked
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on the
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on phone
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on in
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on crook
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on of
// DEBUG: ['She', 'tucked', 'the', 'phone', 'in', 'the', 'crook']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on her
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on neck
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on and
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on thumbed
// DEBUG: 136
// DEBUG: (131, 17)
// DEBUG: Operating on hurriedly
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on through
// DEBUG: ['of', 'her', 'neck', 'and', 'thumbed', 'hurriedly']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on her
// DEBUG: 40
// DEBUG: (35, 29)
// DEBUG: Operating on pink
// DEBUG: 69
// DEBUG: (64, 29)
// DEBUG: Operating on messages.
// DEBUG: 133
// DEBUG: (128, 29)
// DEBUG: Operating on ....
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on Dr.
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on Provetto,
// DEBUG: ['through', 'her', 'pink', 'messages.', '....', 'Dr.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on at
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 177
// DEBUG: ['11:45 A.M.']
// DEBUG: drawing cursor (30, 41)
// DEBUG: ['- Mistaken Identity']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "She tucked the phone in the crook", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "of her neck and thumbed hurriedly", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "through her pink messages. .... Dr.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(30, 41, "11:45 A.M.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Mistaken Identity", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:46 for 1 quotations:
    case 706:
      Serial.println(F("Only one option for 11:46:"));
    Serial.println(F("11:46 - At 10.15 Arlena departed from her rondezvous, a minute or two later Patrick Redfern came down and registered surprise, annoyance, etc. Christine's task was easy enough. Keeping her own watch concealed she asked Linda at twenty-five past eleven what time it was. Linda looked at her watch and replied that it was a quarter to twelve. - Agatha Christie, Evil under the Sun "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on 10.15
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on Arlena
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on departed
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on from
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on her
// DEBUG: ['At', '10.15', 'Arlena', 'departed', 'from']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on rondezvous,
// DEBUG: 92
// DEBUG: (87, 17)
// DEBUG: Operating on a
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on minute
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on or
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on two
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on later
// DEBUG: ['her', 'rondezvous,', 'a', 'minute', 'or', 'two']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on Patrick
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on Redfern
// DEBUG: 116
// DEBUG: (111, 29)
// DEBUG: Operating on came
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on down
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on and
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on registered
// DEBUG: ['later', 'Patrick', 'Redfern', 'came', 'down', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on surprise,
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on annoyance,
// DEBUG: 156
// DEBUG: (151, 41)
// DEBUG: Operating on etc.
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on Christine's
// DEBUG: ['registered', 'surprise,', 'annoyance,', 'etc.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on task
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on was
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on easy
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on enough.
// DEBUG: 152
// DEBUG: (147, 53)
// DEBUG: Operating on Keeping
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on her
// DEBUG: ["Christine's", 'task', 'was', 'easy', 'enough.', 'Keeping']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on own
// DEBUG: 36
// DEBUG: (31, 65)
// DEBUG: Operating on watch
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on concealed
// DEBUG: 136
// DEBUG: (131, 65)
// DEBUG: Operating on she
// DEBUG: 158
// DEBUG: (153, 65)
// DEBUG: Operating on asked
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on Linda
// DEBUG: ['her', 'own', 'watch', 'concealed', 'she', 'asked']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on twenty-five
// DEBUG: 109
// DEBUG: (104, 77)
// DEBUG: Operating on past
// DEBUG: 138
// DEBUG: (133, 77)
// DEBUG: Operating on eleven
// DEBUG: 181
// DEBUG: (176, 77)
// DEBUG: Operating on what
// DEBUG: 210
// DEBUG: (205, 77)
// DEBUG: Operating on time
// DEBUG: ['Linda', 'at', 'twenty-five', 'past', 'eleven', 'what']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on was.
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on Linda
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on looked
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on at
// DEBUG: 153
// DEBUG: (148, 89)
// DEBUG: Operating on her
// DEBUG: 175
// DEBUG: (170, 89)
// DEBUG: Operating on watch
// DEBUG: 211
// DEBUG: (206, 89)
// DEBUG: Operating on and
// DEBUG: ['time', 'it', 'was.', 'Linda', 'looked', 'at', 'her', 'watch']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on replied
// DEBUG: 64
// DEBUG: (59, 101)
// DEBUG: Operating on that
// DEBUG: 93
// DEBUG: (88, 101)
// DEBUG: Operating on it
// DEBUG: 108
// DEBUG: (103, 101)
// DEBUG: Operating on was
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on a
// DEBUG: 138
// DEBUG: (133, 101)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['and', 'replied', 'that', 'it', 'was', 'a']
// DEBUG: drawing cursor (5, 101)
// DEBUG: 207
// DEBUG: ['quarter to twelve']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ['- Evil under the Sun']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "At 10.15 Arlena departed from", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "her rondezvous, a minute or two", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "later Patrick Redfern came down and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "registered surprise, annoyance, etc.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Christine's task was easy enough. Keeping", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "her own watch concealed she asked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Linda at twenty-five past eleven what", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "time it was. Linda looked at her watch", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "and replied that it was a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "quarter to twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Evil under the Sun", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:47 for 1 quotations:
    case 707:
      Serial.println(F("Only one option for 11:47:"));
    Serial.println(F("11:47 - It was a vast plain with no one on it, neither living on the earth nor dead beneath it; and I walked a long time beneath a colourless sky, which didn't let me judge the time (my watch, set like all military watches to Berlin time, hadn't stood up to the swim and showed an eternal thirteen minutes to noon). - Jonathan Littell, The Kindly Ones"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on a
// DEBUG: 55
// DEBUG: (50, 5)
// DEBUG: Operating on vast
// DEBUG: 84
// DEBUG: (79, 5)
// DEBUG: Operating on plain
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on with
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on no
// DEBUG: 164
// DEBUG: (159, 5)
// DEBUG: Operating on one
// DEBUG: 186
// DEBUG: (181, 5)
// DEBUG: Operating on on
// DEBUG: 201
// DEBUG: (196, 5)
// DEBUG: Operating on it,
// DEBUG: ['It', 'was', 'a', 'vast', 'plain', 'with', 'no', 'one', 'on']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on neither
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on living
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on on
// DEBUG: 122
// DEBUG: (117, 17)
// DEBUG: Operating on the
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on earth
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on nor
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on dead
// DEBUG: ['it,', 'neither', 'living', 'on', 'the', 'earth', 'nor']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on beneath
// DEBUG: 65
// DEBUG: (60, 29)
// DEBUG: Operating on it;
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on and
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on I
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on walked
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on a
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on long
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on time
// DEBUG: ['dead', 'beneath', 'it;', 'and', 'I', 'walked', 'a', 'long']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on beneath
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on a
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on colourless
// DEBUG: 144
// DEBUG: (139, 41)
// DEBUG: Operating on sky,
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on which
// DEBUG: 209
// DEBUG: (204, 41)
// DEBUG: Operating on didn't
// DEBUG: ['time', 'beneath', 'a', 'colourless', 'sky,', 'which']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on let
// DEBUG: 39
// DEBUG: (34, 53)
// DEBUG: Operating on me
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on judge
// DEBUG: 90
// DEBUG: (85, 53)
// DEBUG: Operating on the
// DEBUG: 112
// DEBUG: (107, 53)
// DEBUG: Operating on time
// DEBUG: 141
// DEBUG: (136, 53)
// DEBUG: Operating on (my
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on watch,
// DEBUG: 206
// DEBUG: (201, 53)
// DEBUG: Operating on set
// DEBUG: ["didn't", 'let', 'me', 'judge', 'the', 'time', '(my', 'watch,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on like
// DEBUG: 43
// DEBUG: (38, 65)
// DEBUG: Operating on all
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on military
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on watches
// DEBUG: 172
// DEBUG: (167, 65)
// DEBUG: Operating on to
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on Berlin
// DEBUG: ['set', 'like', 'all', 'military', 'watches', 'to']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on time,
// DEBUG: 53
// DEBUG: (48, 77)
// DEBUG: Operating on hadn't
// DEBUG: 96
// DEBUG: (91, 77)
// DEBUG: Operating on stood
// DEBUG: 132
// DEBUG: (127, 77)
// DEBUG: Operating on up
// DEBUG: 147
// DEBUG: (142, 77)
// DEBUG: Operating on to
// DEBUG: 162
// DEBUG: (157, 77)
// DEBUG: Operating on the
// DEBUG: 184
// DEBUG: (179, 77)
// DEBUG: Operating on swim
// DEBUG: ['Berlin', 'time,', "hadn't", 'stood', 'up', 'to', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on and
// DEBUG: 37
// DEBUG: (32, 89)
// DEBUG: Operating on showed
// DEBUG: 80
// DEBUG: (75, 89)
// DEBUG: Operating on an
// DEBUG: 95
// DEBUG: (90, 89)
// DEBUG: Operating on eternal
// DEBUG: 145
// DEBUG: (140, 89)
// DEBUG: Operating on TIMESTRING).
// DEBUG: Wrorking on the timestring
// DEBUG: ['swim', 'and', 'showed', 'an', 'eternal']
// DEBUG: drawing cursor (5, 89)
// DEBUG: []
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['thirteen minutes to noon']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- The Kindly Ones']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "It was a vast plain with no one on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "it, neither living on the earth nor", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "dead beneath it; and I walked a long", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "time beneath a colourless sky, which", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "didn't let me judge the time (my watch,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "set like all military watches to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Berlin time, hadn't stood up to the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "swim and showed an eternal", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "thirteen minutes to noon", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- The Kindly Ones", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:48 for 1 quotations:
    case 708:
      Serial.println(F("Only one option for 11:48:"));
    Serial.println(F("11:48 - At 11:38, she left her desk and walked to the side door of the auditorium, arriving ten minutes before noon. - Dave Eggers, The Circle"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on 11:38,
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on she
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on left
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on her
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on desk
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on and
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on walked
// DEBUG: ['At', '11:38,', 'she', 'left', 'her', 'desk', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on side
// DEBUG: 83
// DEBUG: (78, 17)
// DEBUG: Operating on door
// DEBUG: 112
// DEBUG: (107, 17)
// DEBUG: Operating on of
// DEBUG: 127
// DEBUG: (122, 17)
// DEBUG: Operating on the
// DEBUG: 149
// DEBUG: (144, 17)
// DEBUG: Operating on auditorium,
// DEBUG: ['walked', 'to', 'the', 'side', 'door', 'of', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on arriving
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['auditorium,', 'arriving']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['ten minutes before noon']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Dave Eggers, The Circle']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "At 11:38, she left her desk and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "walked to the side door of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "auditorium, arriving", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "ten minutes before noon", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- Dave Eggers, The Circle", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:49 for 0 quotations:
    case 709:
      Serial.println(F("No quotes for 11:49"));
      return;

    // Codegen for 11:50 for 1 quotations:
    case 710:
      Serial.println(F("Only one option for 11:50:"));
    Serial.println(F("11:50 - The man who gave them to him handed him a ten-shilling note and promised him another if it were delivered at exactly ten minutes to twelve. - Agatha Christie, The Adventure of Johnnie Waverley: A Hercule Poirot Story"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on man
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on who
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on gave
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on them
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on to
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on him
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on handed
// DEBUG: ['The', 'man', 'who', 'gave', 'them', 'to', 'him']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on him
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on a
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on ten-shilling
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on note
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on and
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on promised
// DEBUG: ['handed', 'him', 'a', 'ten-shilling', 'note', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on him
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on another
// DEBUG: 91
// DEBUG: (86, 29)
// DEBUG: Operating on if
// DEBUG: 106
// DEBUG: (101, 29)
// DEBUG: Operating on it
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on were
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on delivered
// DEBUG: ['promised', 'him', 'another', 'if', 'it', 'were']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on at
// DEBUG: 35
// DEBUG: (30, 41)
// DEBUG: Operating on exactly
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['delivered', 'at', 'exactly']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['ten minutes to twelve']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- Agatha Christie']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "The man who gave them to him", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "handed him a ten-shilling note and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "promised him another if it were", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "delivered at exactly", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "ten minutes to twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Agatha Christie", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:51 for 1 quotations:
    case 711:
      Serial.println(F("Only one option for 11:51:"));
    Serial.println(F("11:51 - The next day, at nine minutes to twelve o'clock noon, the last clock ran down and stopped. It was then placed in the town museum, as a collector's item, or museum piece, with proper ceremonies, addresses, and the like. - James Thurber, Lanterns & Lances"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on next
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on day,
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on at
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'next', 'day,', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on o'clock
// DEBUG: 71
// DEBUG: (66, 29)
// DEBUG: Operating on noon,
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on the
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on last
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on clock
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on ran
// DEBUG: ['TIMESTRING', "o'clock", 'noon,', 'the', 'last', 'clock']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on down
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on and
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on stopped.
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on It
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on was
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on then
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on placed
// DEBUG: ['ran', 'down', 'and', 'stopped.', 'It', 'was', 'then']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on town
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on museum,
// DEBUG: 133
// DEBUG: (128, 53)
// DEBUG: Operating on as
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on a
// DEBUG: 156
// DEBUG: (151, 53)
// DEBUG: Operating on collector's
// DEBUG: ['placed', 'in', 'the', 'town', 'museum,', 'as', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on item,
// DEBUG: 58
// DEBUG: (53, 65)
// DEBUG: Operating on or
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on museum
// DEBUG: 116
// DEBUG: (111, 65)
// DEBUG: Operating on piece,
// DEBUG: 159
// DEBUG: (154, 65)
// DEBUG: Operating on with
// DEBUG: 188
// DEBUG: (183, 65)
// DEBUG: Operating on proper
// DEBUG: ["collector's", 'item,', 'or', 'museum', 'piece,', 'with']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on ceremonies,
// DEBUG: 95
// DEBUG: (90, 77)
// DEBUG: Operating on addresses,
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on and
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on the
// DEBUG: 210
// DEBUG: (205, 77)
// DEBUG: Operating on like.
// DEBUG: ['proper', 'ceremonies,', 'addresses,', 'and', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['nine minutes to twelve']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Lanterns & Lances']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "The next day, at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING o'clock noon, the last clock", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "ran down and stopped. It was then", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "placed in the town museum, as a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "collector's item, or museum piece, with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "proper ceremonies, addresses, and the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "nine minutes to twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Lanterns & Lances", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:52 for 1 quotations:
    case 712:
      Serial.println(F("Only one option for 11:52:"));
    Serial.println(F("11:52 - At any rate, we whirled into the station with many more, just as the great clock pointed to eight minutes to twelve o'clock. \"Thank God! We are in time,\" - Anna Sewell, Black Beauty"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on any
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on rate,
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on we
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on whirled
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on into
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on the
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on station
// DEBUG: ['At', 'any', 'rate,', 'we', 'whirled', 'into', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on with
// DEBUG: 47
// DEBUG: (42, 17)
// DEBUG: Operating on many
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on more,
// DEBUG: 112
// DEBUG: (107, 17)
// DEBUG: Operating on just
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on as
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on the
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on great
// DEBUG: ['station', 'with', 'many', 'more,', 'just', 'as', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on clock
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on pointed
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on to
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['great', 'clock', 'pointed', 'to']
// DEBUG: drawing cursor (5, 29)
// DEBUG: []
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on o'clock.
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on \"Thank
// DEBUG: 128
// DEBUG: (123, 53)
// DEBUG: Operating on God!
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on We
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on are
// DEBUG: 194
// DEBUG: (189, 53)
// DEBUG: Operating on in
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on time,\"
// DEBUG: ['TIMESTRING', "o'clock.", '\\"Thank', 'God!', 'We', 'are', 'in']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['eight minutes to twelve']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Anna Sewell, Black Beauty']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "At any rate, we whirled into the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "station with many more, just as the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "great clock pointed to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "TIMESTRING o'clock. \"Thank God! We are in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "eight minutes to twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- Anna Sewell, Black Beauty", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:53 for 0 quotations:
    case 713:
      Serial.println(F("No quotes for 11:53"));
      return;

    // Codegen for 11:54 for 1 quotations:
    case 714:
      Serial.println(F("Only one option for 11:54:"));
    Serial.println(F("11:54 - He swilled off the remains of [his beer] and looked at the clock. It was six minutes to twelve. - Patrick Hamilton, Hangover Square"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on swilled
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on off
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on the
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on remains
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on of
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on [his
// DEBUG: ['He', 'swilled', 'off', 'the', 'remains', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on beer]
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on and
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on looked
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on at
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on the
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on clock.
// DEBUG: 196
// DEBUG: (191, 17)
// DEBUG: Operating on It
// DEBUG: 211
// DEBUG: (206, 17)
// DEBUG: Operating on was
// DEBUG: ['[his', 'beer]', 'and', 'looked', 'at', 'the', 'clock.', 'It']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['was']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['six minutes to twelve']
// DEBUG: drawing cursor (9, 29)
// DEBUG: ['- Hangover Square']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "He swilled off the remains of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "[his beer] and looked at the clock. It", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(9, 29, "six minutes to twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Hangover Square", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:55 for 3 quotations:
    case 715:
      option = random(0, 3);
      Serial.print(F("3 options for 11:55. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:55 - He was tearing off on his bicycle to one of the jobs about five minutes to twelve to see if he could catch anyone leaving off for dinner before the proper time. - Robert Tressell, The Ragged Trousered Philanthropists"));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on tearing
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on off
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on on
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on his
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on bicycle
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on to
// DEBUG: ['He', 'was', 'tearing', 'off', 'on', 'his', 'bicycle']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on one
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on of
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on the
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on jobs
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on about
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['to', 'one', 'of', 'the', 'jobs', 'about']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on to
// DEBUG: 36
// DEBUG: (31, 41)
// DEBUG: Operating on see
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on if
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on he
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on could
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on catch
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on anyone
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on leaving
// DEBUG: ['TIMESTRING', 'to', 'see', 'if', 'he', 'could', 'catch', 'anyone']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on off
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on for
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on dinner
// DEBUG: 105
// DEBUG: (100, 53)
// DEBUG: Operating on before
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 53)
// DEBUG: Operating on proper
// DEBUG: ['leaving', 'off', 'for', 'dinner', 'before', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (12, 65)
// DEBUG: Operating on time.
// DEBUG: 53
// DEBUG: ['five minutes to twelve']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Robert Tressell']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "He was tearing off on his bicycle", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "to one of the jobs about", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "TIMESTRING to see if he could catch anyone", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "leaving off for dinner before the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "five minutes to twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Robert Tressell", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:55 - It was 11:55 a.m. on April 30. - Bernstein & Woodward, All the President's Men "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 189
// DEBUG: (184, 5)
// DEBUG: Operating on on
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on April
// DEBUG: ['It', 'was', 'TIMESTRING', 'on']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on 30.
// DEBUG: 38
// DEBUG: ['11:55 a.m.']
// DEBUG: drawing cursor (42, 5)
// DEBUG: ["- All the President's Men"]
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "It was TIMESTRING on", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(42, 5, "11:55 a.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- All the President's Men", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("11:55 - What time did you arrive at the site? It was 11:55. I remember since I happened to glance at my watch when we got there. We rode our bicycles to the bottom of the hill, as far as we could go, then climbed the rest of the way on foot. - Haruki Murakami, Kafka on the Shore"));
// DEBUG: (5, 5)
// DEBUG: Operating on What
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on time
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on did
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on you
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on arrive
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on at
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on the
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on site?
// DEBUG: ['What', 'time', 'did', 'you', 'arrive', 'at', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on It
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on was
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on I
// DEBUG: 175
// DEBUG: (170, 17)
// DEBUG: Operating on remember
// DEBUG: ['site?', 'It', 'was', 'TIMESTRING.', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on since
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on I
// DEBUG: 63
// DEBUG: (58, 29)
// DEBUG: Operating on happened
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on to
// DEBUG: 135
// DEBUG: (130, 29)
// DEBUG: Operating on glance
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on at
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on my
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on watch
// DEBUG: ['remember', 'since', 'I', 'happened', 'to', 'glance', 'at', 'my']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on when
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on we
// DEBUG: 60
// DEBUG: (55, 41)
// DEBUG: Operating on got
// DEBUG: 82
// DEBUG: (77, 41)
// DEBUG: Operating on there.
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on We
// DEBUG: 140
// DEBUG: (135, 41)
// DEBUG: Operating on rode
// DEBUG: 169
// DEBUG: (164, 41)
// DEBUG: Operating on our
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on bicycles
// DEBUG: ['watch', 'when', 'we', 'got', 'there.', 'We', 'rode', 'our']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 53)
// DEBUG: Operating on the
// DEBUG: 56
// DEBUG: (51, 53)
// DEBUG: Operating on bottom
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on of
// DEBUG: 114
// DEBUG: (109, 53)
// DEBUG: Operating on the
// DEBUG: 136
// DEBUG: (131, 53)
// DEBUG: Operating on hill,
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on as
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on far
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on as
// DEBUG: ['bicycles', 'to', 'the', 'bottom', 'of', 'the', 'hill,', 'as', 'far']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on we
// DEBUG: 28
// DEBUG: (23, 65)
// DEBUG: Operating on could
// DEBUG: 64
// DEBUG: (59, 65)
// DEBUG: Operating on go,
// DEBUG: 86
// DEBUG: (81, 65)
// DEBUG: Operating on then
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on climbed
// DEBUG: 165
// DEBUG: (160, 65)
// DEBUG: Operating on the
// DEBUG: 187
// DEBUG: (182, 65)
// DEBUG: Operating on rest
// DEBUG: ['as', 'we', 'could', 'go,', 'then', 'climbed', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on of
// DEBUG: 30
// DEBUG: (25, 77)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 77)
// DEBUG: Operating on way
// DEBUG: 74
// DEBUG: (69, 77)
// DEBUG: Operating on on
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on foot.
// DEBUG: 125
// DEBUG: ['11:55']
// DEBUG: drawing cursor (48, 17)
// DEBUG: ['- Kafka on the Shore']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "What time did you arrive at the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "site? It was TIMESTRING. I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "remember since I happened to glance at my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "watch when we got there. We rode our", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "bicycles to the bottom of the hill, as far", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "as we could go, then climbed the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(48, 17, "11:55", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Kafka on the Shore", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:56 for 2 quotations:
    case 716:
      option = random(0, 2);
      Serial.print(F("2 options for 11:56. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:56 - A few minutes' light around noon is all that you need to discover the error, and re-set the clock – provide that you bother to go up and make the observation. - Neal Stephenson, Odalisque: The Baroque Cycle #3 "));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on few
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on minutes'
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on light
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['A', 'few', "minutes'", 'light']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on is
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on all
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on that
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on you
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on need
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on to
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on discover
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'is', 'all', 'that', 'you', 'need', 'to', 'discover']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on error,
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on and
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on re-set
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on the
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on clock
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on –
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on provide
// DEBUG: ['the', 'error,', 'and', 're-set', 'the', 'clock', '–']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on that
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on you
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on bother
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on to
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on go
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on up
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on and
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on make
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on the
// DEBUG: ['provide', 'that', 'you', 'bother', 'to', 'go', 'up', 'and', 'make']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on observation.
// DEBUG: 99
// DEBUG: ['around noon']
// DEBUG: drawing cursor (128, 5)
// DEBUG: ['- Neal Stephenson']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "A few minutes' light", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING is all that you need to discover", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "the error, and re-set the clock –", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "provide that you bother to go up and make", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(128, 5, "around noon", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Neal Stephenson", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:56 - I wondered what the time is?' said the latter after a pause'. 'I don't know exactly', replied Easton, 'but it can't be far-off twelve.' - Robert Tressell, The Ragged Trousered Philanthropists"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on wondered
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on what
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on the
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on time
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on is?'
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on said
// DEBUG: ['I', 'wondered', 'what', 'the', 'time', "is?'"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on latter
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on after
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on a
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on pause'.
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on 'I
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on don't
// DEBUG: ['said', 'the', 'latter', 'after', 'a', "pause'.", "'I"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on know
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on exactly',
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on replied
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on Easton,
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on 'but
// DEBUG: ["don't", 'know', "exactly',", 'replied', 'Easton,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on TIMESTRING.'
// DEBUG: Wrorking on the timestring
// DEBUG: ["'but", 'it']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ["can't be far-off twelve"]
// DEBUG: drawing cursor (25, 41)
// DEBUG: ['- Robert Tressell']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "I wondered what the time is?'", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "said the latter after a pause'. 'I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "don't know exactly', replied Easton,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "'but it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(25, 41, "can't be far-off twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Robert Tressell", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:57 for 1 quotations:
    case 717:
      Serial.println(F("Only one option for 11:57:"));
    Serial.println(F("11:57 - I wondered what the time is?' said the latter after a pause'. 'I don't know exactly', replied Easton, 'but it can't be far-off twelve.' - Robert Tressell, The Ragged Trousered Philanthropists"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on wondered
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on what
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on the
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on time
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on is?'
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on said
// DEBUG: ['I', 'wondered', 'what', 'the', 'time', "is?'"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on latter
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on after
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on a
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on pause'.
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on 'I
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on don't
// DEBUG: ['said', 'the', 'latter', 'after', 'a', "pause'.", "'I"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on know
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on exactly',
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on replied
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on Easton,
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on 'but
// DEBUG: ["don't", 'know', "exactly',", 'replied', 'Easton,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on TIMESTRING.'
// DEBUG: Wrorking on the timestring
// DEBUG: ["'but", 'it']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ["can't be far-off twelve"]
// DEBUG: drawing cursor (25, 41)
// DEBUG: ['- Robert Tressell']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "I wondered what the time is?'", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "said the latter after a pause'. 'I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "don't know exactly', replied Easton,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "'but it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(25, 41, "can't be far-off twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Robert Tressell", &Font12, WHITE, BLACK);
      return;

    // Codegen for 11:58 for 2 quotations:
    case 718:
      option = random(0, 2);
      Serial.print(F("2 options for 11:58. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("11:58 - And when you go down the steps, it's always 11.58 on the morning of September ninth, 1958. - Stephen King, 11/22/63"));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on when
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on you
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on go
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on down
// DEBUG: 127
// DEBUG: (122, 5)
// DEBUG: Operating on the
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on steps,
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on it's
// DEBUG: ['And', 'when', 'you', 'go', 'down', 'the', 'steps,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on always
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on on
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on the
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on morning
// DEBUG: ["it's", 'always', 'TIMESTRING', 'on', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (13, 29)
// DEBUG: Operating on of
// DEBUG: 33
// DEBUG: (28, 29)
// DEBUG: Operating on September
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on ninth,
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on 1958.
// DEBUG: 176
// DEBUG: ['11.58']
// DEBUG: drawing cursor (53, 17)
// DEBUG: ['- Stephen King, 11/22/63']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "And when you go down the steps,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "it's always TIMESTRING on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(53, 17, "11.58", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Stephen King, 11/22/63", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("11:58 - Two minutes before the clock struck noon, the savage baron was on the platform to inspect the preparation for the frightful ceremony of mid-day. The block was laid forth-the hideous minister of vengeance, masked and in black, with the flaming glaive in his hand, was ready. The baron tried the edge of the blade with his finger, and asked the dreadful swordsman if his hand was sure? A nod was the reply of the man of blood. The weeping garrison and domestics shuddered and shrank from him. There was not one there but loved and pitied the gentle lady. - William Makepeace Thackeray, Burlesques "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: []
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on savage
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on baron
// DEBUG: 123
// DEBUG: (118, 29)
// DEBUG: Operating on was
// DEBUG: 145
// DEBUG: (140, 29)
// DEBUG: Operating on on
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on the
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on platform
// DEBUG: ['TIMESTRING,', 'the', 'savage', 'baron', 'was', 'on', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 41)
// DEBUG: Operating on inspect
// DEBUG: 84
// DEBUG: (79, 41)
// DEBUG: Operating on the
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on preparation
// DEBUG: 184
// DEBUG: (179, 41)
// DEBUG: Operating on for
// DEBUG: 206
// DEBUG: (201, 41)
// DEBUG: Operating on the
// DEBUG: ['platform', 'to', 'inspect', 'the', 'preparation', 'for']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on frightful
// DEBUG: 78
// DEBUG: (73, 53)
// DEBUG: Operating on ceremony
// DEBUG: 135
// DEBUG: (130, 53)
// DEBUG: Operating on of
// DEBUG: 150
// DEBUG: (145, 53)
// DEBUG: Operating on mid-day.
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on The
// DEBUG: ['the', 'frightful', 'ceremony', 'of', 'mid-day.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on block
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on was
// DEBUG: 72
// DEBUG: (67, 65)
// DEBUG: Operating on laid
// DEBUG: 101
// DEBUG: (96, 65)
// DEBUG: Operating on forth-the
// DEBUG: 165
// DEBUG: (160, 65)
// DEBUG: Operating on hideous
// DEBUG: ['The', 'block', 'was', 'laid', 'forth-the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on minister
// DEBUG: 75
// DEBUG: (70, 77)
// DEBUG: Operating on of
// DEBUG: 90
// DEBUG: (85, 77)
// DEBUG: Operating on vengeance,
// DEBUG: 161
// DEBUG: (156, 77)
// DEBUG: Operating on masked
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on and
// DEBUG: ['hideous', 'minister', 'of', 'vengeance,', 'masked']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on in
// DEBUG: 29
// DEBUG: (24, 89)
// DEBUG: Operating on black,
// DEBUG: 72
// DEBUG: (67, 89)
// DEBUG: Operating on with
// DEBUG: 101
// DEBUG: (96, 89)
// DEBUG: Operating on the
// DEBUG: 123
// DEBUG: (118, 89)
// DEBUG: Operating on flaming
// DEBUG: 173
// DEBUG: (168, 89)
// DEBUG: Operating on glaive
// DEBUG: ['and', 'in', 'black,', 'with', 'the', 'flaming']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 101)
// DEBUG: Operating on his
// DEBUG: 54
// DEBUG: (49, 101)
// DEBUG: Operating on hand,
// DEBUG: 90
// DEBUG: (85, 101)
// DEBUG: Operating on was
// DEBUG: 112
// DEBUG: (107, 101)
// DEBUG: Operating on ready.
// DEBUG: 155
// DEBUG: (150, 101)
// DEBUG: Operating on The
// DEBUG: 177
// DEBUG: (172, 101)
// DEBUG: Operating on baron
// DEBUG: ['glaive', 'in', 'his', 'hand,', 'was', 'ready.', 'The']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on tried
// DEBUG: 52
// DEBUG: (47, 113)
// DEBUG: Operating on the
// DEBUG: 74
// DEBUG: (69, 113)
// DEBUG: Operating on edge
// DEBUG: 103
// DEBUG: (98, 113)
// DEBUG: Operating on of
// DEBUG: 118
// DEBUG: (113, 113)
// DEBUG: Operating on the
// DEBUG: 140
// DEBUG: (135, 113)
// DEBUG: Operating on blade
// DEBUG: 176
// DEBUG: (171, 113)
// DEBUG: Operating on with
// DEBUG: 205
// DEBUG: (200, 113)
// DEBUG: Operating on his
// DEBUG: ['baron', 'tried', 'the', 'edge', 'of', 'the', 'blade', 'with']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (9, 125)
// DEBUG: Operating on finger,
// DEBUG: 64
// DEBUG: (59, 125)
// DEBUG: Operating on and
// DEBUG: 86
// DEBUG: (81, 125)
// DEBUG: Operating on asked
// DEBUG: 122
// DEBUG: (117, 125)
// DEBUG: Operating on the
// DEBUG: 144
// DEBUG: (139, 125)
// DEBUG: Operating on dreadful
// DEBUG: 201
// DEBUG: (196, 125)
// DEBUG: Operating on swordsman
// DEBUG: ['his', 'finger,', 'and', 'asked', 'the', 'dreadful']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (15, 137)
// DEBUG: Operating on if
// DEBUG: 35
// DEBUG: (30, 137)
// DEBUG: Operating on his
// DEBUG: 57
// DEBUG: (52, 137)
// DEBUG: Operating on hand
// DEBUG: 86
// DEBUG: (81, 137)
// DEBUG: Operating on was
// DEBUG: 108
// DEBUG: (103, 137)
// DEBUG: Operating on sure?
// DEBUG: 144
// DEBUG: (139, 137)
// DEBUG: Operating on A
// DEBUG: 152
// DEBUG: (147, 137)
// DEBUG: Operating on nod
// DEBUG: 174
// DEBUG: (169, 137)
// DEBUG: Operating on was
// DEBUG: 196
// DEBUG: (191, 137)
// DEBUG: Operating on the
// DEBUG: ['swordsman', 'if', 'his', 'hand', 'was', 'sure?', 'A', 'nod', 'was']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on reply
// DEBUG: 50
// DEBUG: (45, 149)
// DEBUG: Operating on of
// DEBUG: 65
// DEBUG: (60, 149)
// DEBUG: Operating on the
// DEBUG: 87
// DEBUG: (82, 149)
// DEBUG: Operating on man
// DEBUG: 109
// DEBUG: (104, 149)
// DEBUG: Operating on of
// DEBUG: 124
// DEBUG: (119, 149)
// DEBUG: Operating on blood.
// DEBUG: 167
// DEBUG: (162, 149)
// DEBUG: Operating on The
// DEBUG: 189
// DEBUG: (184, 149)
// DEBUG: Operating on weeping
// DEBUG: ['the', 'reply', 'of', 'the', 'man', 'of', 'blood.', 'The']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (13, 161)
// DEBUG: Operating on garrison
// DEBUG: 75
// DEBUG: (70, 161)
// DEBUG: Operating on and
// DEBUG: 97
// DEBUG: (92, 161)
// DEBUG: Operating on domestics
// DEBUG: 161
// DEBUG: (156, 161)
// DEBUG: Operating on shuddered
// DEBUG: ['weeping', 'garrison', 'and', 'domestics']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (15, 173)
// DEBUG: Operating on and
// DEBUG: 42
// DEBUG: (37, 173)
// DEBUG: Operating on shrank
// DEBUG: 85
// DEBUG: (80, 173)
// DEBUG: Operating on from
// DEBUG: 114
// DEBUG: (109, 173)
// DEBUG: Operating on him.
// DEBUG: 143
// DEBUG: (138, 173)
// DEBUG: Operating on There
// DEBUG: 179
// DEBUG: (174, 173)
// DEBUG: Operating on was
// DEBUG: 201
// DEBUG: (196, 173)
// DEBUG: Operating on not
// DEBUG: ['shuddered', 'and', 'shrank', 'from', 'him.', 'There', 'was']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (9, 185)
// DEBUG: Operating on one
// DEBUG: 36
// DEBUG: (31, 185)
// DEBUG: Operating on there
// DEBUG: 72
// DEBUG: (67, 185)
// DEBUG: Operating on but
// DEBUG: 94
// DEBUG: (89, 185)
// DEBUG: Operating on loved
// DEBUG: 130
// DEBUG: (125, 185)
// DEBUG: Operating on and
// DEBUG: 152
// DEBUG: (147, 185)
// DEBUG: Operating on pitied
// DEBUG: 195
// DEBUG: (190, 185)
// DEBUG: Operating on the
// DEBUG: ['not', 'one', 'there', 'but', 'loved', 'and', 'pitied']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (9, 197)
// DEBUG: Operating on gentle
// DEBUG: 57
// DEBUG: (52, 197)
// DEBUG: Operating on lady.
// DEBUG: 93
// DEBUG: ['Two minutes before the clock struck noon']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Burlesques']
// DEBUG: drawing cursor (123, 192)
          paint.Paint_DrawString_EN(5, 5, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING, the savage baron was on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "platform to inspect the preparation for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "the frightful ceremony of mid-day.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "The block was laid forth-the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "hideous minister of vengeance, masked", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "and in black, with the flaming", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "glaive in his hand, was ready. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "baron tried the edge of the blade with", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "his finger, and asked the dreadful", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "swordsman if his hand was sure? A nod was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "the reply of the man of blood. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "weeping garrison and domestics", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "shuddered and shrank from him. There was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "not one there but loved and pitied", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Two minutes before the clock struck noon", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(123, 192, "- Burlesques", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 11:59 for 1 quotations:
    case 719:
      Serial.println(F("Only one option for 11:59:"));
    Serial.println(F("11:59 - There is a big grandfather clock there, and as the hands drew near to twelve I don't mind confessing I was as nervous as a cat. - Agatha Christie, The Adventure of Johnnie Waverley: A Hercule Poirot Story"));
// DEBUG: (5, 5)
// DEBUG: Operating on There
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on is
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on a
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on big
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on grandfather
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on clock
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on there,
// DEBUG: ['There', 'is', 'a', 'big', 'grandfather', 'clock']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on as
// DEBUG: 54
// DEBUG: (49, 17)
// DEBUG: Operating on the
// DEBUG: 76
// DEBUG: (71, 17)
// DEBUG: Operating on hands
// DEBUG: 112
// DEBUG: (107, 17)
// DEBUG: Operating on drew
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['there,', 'and', 'as', 'the', 'hands', 'drew']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on I
// DEBUG: 187
// DEBUG: (182, 29)
// DEBUG: Operating on don't
// DEBUG: ['TIMESTRING', 'I']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on mind
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on confessing
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on I
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on was
// DEBUG: 146
// DEBUG: (141, 41)
// DEBUG: Operating on as
// DEBUG: 161
// DEBUG: (156, 41)
// DEBUG: Operating on nervous
// DEBUG: 211
// DEBUG: (206, 41)
// DEBUG: Operating on as
// DEBUG: ["don't", 'mind', 'confessing', 'I', 'was', 'as', 'nervous']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 53)
// DEBUG: Operating on cat.
// DEBUG: 50
// DEBUG: ['near to twelve']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Agatha Christie']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "There is a big grandfather clock", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "there, and as the hands drew", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "don't mind confessing I was as nervous", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "near to twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Agatha Christie", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:00 for 11 quotations:
    case 720:
      option = random(0, 11);
      Serial.print(F("11 options for 12:00. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("12:00 - 'It will soon be an hour and a half,' said the girl who kept the records. The noonday siren blew. 'Exactly a minute,' she said, looking at the stopwatch of which she was so proud. - Yasunari Kawabata, The Master of Go "));
// DEBUG: (5, 5)
// DEBUG: Operating on 'It
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on will
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on soon
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on be
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on an
// DEBUG: 120
// DEBUG: (115, 5)
// DEBUG: Operating on hour
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on and
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on a
// DEBUG: 179
// DEBUG: (174, 5)
// DEBUG: Operating on half,'
// DEBUG: ["'It", 'will', 'soon', 'be', 'an', 'hour', 'and', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on said
// DEBUG: 46
// DEBUG: (41, 17)
// DEBUG: Operating on the
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on girl
// DEBUG: 97
// DEBUG: (92, 17)
// DEBUG: Operating on who
// DEBUG: 119
// DEBUG: (114, 17)
// DEBUG: Operating on kept
// DEBUG: 148
// DEBUG: (143, 17)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 17)
// DEBUG: Operating on records.
// DEBUG: ["half,'", 'said', 'the', 'girl', 'who', 'kept', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on The
// DEBUG: 41
// DEBUG: (36, 29)
// DEBUG: Operating on TIMESTRINGday
// DEBUG: Wrorking on the timestring
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on siren
// DEBUG: 198
// DEBUG: (193, 29)
// DEBUG: Operating on blew.
// DEBUG: ['records.', 'The', 'TIMESTRINGday', 'siren']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on 'Exactly
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on a
// DEBUG: 81
// DEBUG: (76, 41)
// DEBUG: Operating on minute,'
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on she
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on said,
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on looking
// DEBUG: ['blew.', "'Exactly", 'a', "minute,'", 'she', 'said,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on the
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on stopwatch
// DEBUG: 119
// DEBUG: (114, 53)
// DEBUG: Operating on of
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on which
// DEBUG: 170
// DEBUG: (165, 53)
// DEBUG: Operating on she
// DEBUG: 192
// DEBUG: (187, 53)
// DEBUG: Operating on was
// DEBUG: ['looking', 'at', 'the', 'stopwatch', 'of', 'which', 'she']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on so
// DEBUG: 29
// DEBUG: (24, 65)
// DEBUG: Operating on proud.
// DEBUG: 72
// DEBUG: ['noon']
// DEBUG: drawing cursor (36, 29)
// DEBUG: ['- The Master of Go']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "'It will soon be an hour and a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "half,' said the girl who kept the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "records. The TIMESTRINGday siren", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "blew. 'Exactly a minute,' she said,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "looking at the stopwatch of which she", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(36, 29, "noon", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Master of Go", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("12:00 - 'There's nobody here!' I insisted. 'It was yourself, Mrs. Linton: you knew it a while since.' 'Myself!' she gasped, 'and the clock is striking twelve! - Emily Brontë, Wuthering Heights "));
// DEBUG: (5, 5)
// DEBUG: Operating on 'There's
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on nobody
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on here!'
// DEBUG: 153
// DEBUG: (148, 5)
// DEBUG: Operating on I
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on insisted.
// DEBUG: ["'There's", 'nobody', "here!'", 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on 'It
// DEBUG: 42
// DEBUG: (37, 17)
// DEBUG: Operating on was
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on yourself,
// DEBUG: 128
// DEBUG: (123, 17)
// DEBUG: Operating on Mrs.
// DEBUG: 157
// DEBUG: (152, 17)
// DEBUG: Operating on Linton:
// DEBUG: 207
// DEBUG: (202, 17)
// DEBUG: Operating on you
// DEBUG: ['insisted.', "'It", 'was', 'yourself,', 'Mrs.', 'Linton:']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on knew
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on it
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on a
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on while
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on since.'
// DEBUG: 152
// DEBUG: (147, 29)
// DEBUG: Operating on 'Myself!'
// DEBUG: ['you', 'knew', 'it', 'a', 'while', "since.'"]
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on she
// DEBUG: 42
// DEBUG: (37, 41)
// DEBUG: Operating on gasped,
// DEBUG: 92
// DEBUG: (87, 41)
// DEBUG: Operating on 'and
// DEBUG: 121
// DEBUG: (116, 41)
// DEBUG: Operating on the
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on clock
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on is
// DEBUG: 194
// DEBUG: (189, 41)
// DEBUG: Operating on striking
// DEBUG: ["'Myself!'", 'she', 'gasped,', "'and", 'the', 'clock', 'is']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on TIMESTRING!
// DEBUG: Wrorking on the timestring
// DEBUG: 140
// DEBUG: ['twelve']
// DEBUG: drawing cursor (14, 53)
// DEBUG: ['- Wuthering Heights']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "'There's nobody here!' I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "insisted. 'It was yourself, Mrs. Linton:", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "you knew it a while since.'", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "'Myself!' she gasped, 'and the clock is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(14, 53, "twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- Wuthering Heights", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("12:00 - A cheap little clock on the wall struck twelve hurriedly, and served to begin the conversation. - Fyodor Dostoyevsky, The Brothers Karamazov "));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on cheap
// DEBUG: 54
// DEBUG: (49, 5)
// DEBUG: Operating on little
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on clock
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on on
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on the
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on wall
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on struck
// DEBUG: ['A', 'cheap', 'little', 'clock', 'on', 'the', 'wall']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on hurriedly,
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on and
// DEBUG: ['struck', 'TIMESTRING', 'hurriedly,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on served
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on to
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on begin
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on conversation.
// DEBUG: ['and', 'served', 'to', 'begin', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['twelve']
// DEBUG: drawing cursor (12, 17)
// DEBUG: ['- The Brothers Karamazov']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "A cheap little clock on the wall", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "struck TIMESTRING hurriedly,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "and served to begin the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(12, 17, "twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Brothers Karamazov", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("12:00 - He had saved [the republic] and it was now in the present, alive now and everywhere in the present, and the hovering faces brightened and blurred about him, became the sound of a canal in the morning, the look of some roofs in the noon sun, and the fragrance of a certain evening flower. Here he was, home at last. Behind him were the mountains and the Sleeping Woman in the sky, and before him, like smoky flames in the sunset, the whole beautiful beloved city. - Nick Joaquin, The Woman Who Had Two Navels "));
// DEBUG: (5, 5)
// DEBUG: Operating on He
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on had
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on saved
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on [the
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on republic]
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on and
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on it
// DEBUG: ['He', 'had', 'saved', '[the', 'republic]', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on was
// DEBUG: 35
// DEBUG: (30, 17)
// DEBUG: Operating on now
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on in
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on the
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on present,
// DEBUG: 151
// DEBUG: (146, 17)
// DEBUG: Operating on alive
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on now
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on and
// DEBUG: ['it', 'was', 'now', 'in', 'the', 'present,', 'alive', 'now']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on everywhere
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on in
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on the
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on present,
// DEBUG: 179
// DEBUG: (174, 29)
// DEBUG: Operating on and
// DEBUG: 201
// DEBUG: (196, 29)
// DEBUG: Operating on the
// DEBUG: ['and', 'everywhere', 'in', 'the', 'present,', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on hovering
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on faces
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on brightened
// DEBUG: 178
// DEBUG: (173, 41)
// DEBUG: Operating on and
// DEBUG: 200
// DEBUG: (195, 41)
// DEBUG: Operating on blurred
// DEBUG: ['the', 'hovering', 'faces', 'brightened', 'and']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on about
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on him,
// DEBUG: 83
// DEBUG: (78, 53)
// DEBUG: Operating on became
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on the
// DEBUG: 148
// DEBUG: (143, 53)
// DEBUG: Operating on sound
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on of
// DEBUG: 199
// DEBUG: (194, 53)
// DEBUG: Operating on a
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on canal
// DEBUG: ['blurred', 'about', 'him,', 'became', 'the', 'sound', 'of', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 65)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 65)
// DEBUG: Operating on morning,
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on the
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on look
// DEBUG: 161
// DEBUG: (156, 65)
// DEBUG: Operating on of
// DEBUG: 176
// DEBUG: (171, 65)
// DEBUG: Operating on some
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on roofs
// DEBUG: ['canal', 'in', 'the', 'morning,', 'the', 'look', 'of', 'some']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on in
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 77)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 153
// DEBUG: (148, 77)
// DEBUG: Operating on sun,
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on and
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on the
// DEBUG: ['roofs', 'in', 'the', 'TIMESTRING', 'sun,', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on fragrance
// DEBUG: 78
// DEBUG: (73, 89)
// DEBUG: Operating on of
// DEBUG: 93
// DEBUG: (88, 89)
// DEBUG: Operating on a
// DEBUG: 101
// DEBUG: (96, 89)
// DEBUG: Operating on certain
// DEBUG: 151
// DEBUG: (146, 89)
// DEBUG: Operating on evening
// DEBUG: 201
// DEBUG: (196, 89)
// DEBUG: Operating on flower.
// DEBUG: ['the', 'fragrance', 'of', 'a', 'certain', 'evening']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on Here
// DEBUG: 47
// DEBUG: (42, 101)
// DEBUG: Operating on he
// DEBUG: 62
// DEBUG: (57, 101)
// DEBUG: Operating on was,
// DEBUG: 91
// DEBUG: (86, 101)
// DEBUG: Operating on home
// DEBUG: 120
// DEBUG: (115, 101)
// DEBUG: Operating on at
// DEBUG: 135
// DEBUG: (130, 101)
// DEBUG: Operating on last.
// DEBUG: 171
// DEBUG: (166, 101)
// DEBUG: Operating on Behind
// DEBUG: ['flower.', 'Here', 'he', 'was,', 'home', 'at', 'last.']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on him
// DEBUG: 39
// DEBUG: (34, 113)
// DEBUG: Operating on were
// DEBUG: 68
// DEBUG: (63, 113)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 113)
// DEBUG: Operating on mountains
// DEBUG: 154
// DEBUG: (149, 113)
// DEBUG: Operating on and
// DEBUG: 176
// DEBUG: (171, 113)
// DEBUG: Operating on the
// DEBUG: 198
// DEBUG: (193, 113)
// DEBUG: Operating on Sleeping
// DEBUG: ['Behind', 'him', 'were', 'the', 'mountains', 'and', 'the']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on Woman
// DEBUG: 55
// DEBUG: (50, 125)
// DEBUG: Operating on in
// DEBUG: 70
// DEBUG: (65, 125)
// DEBUG: Operating on the
// DEBUG: 92
// DEBUG: (87, 125)
// DEBUG: Operating on sky,
// DEBUG: 121
// DEBUG: (116, 125)
// DEBUG: Operating on and
// DEBUG: 143
// DEBUG: (138, 125)
// DEBUG: Operating on before
// DEBUG: 186
// DEBUG: (181, 125)
// DEBUG: Operating on him,
// DEBUG: ['Sleeping', 'Woman', 'in', 'the', 'sky,', 'and', 'before']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (10, 137)
// DEBUG: Operating on like
// DEBUG: 44
// DEBUG: (39, 137)
// DEBUG: Operating on smoky
// DEBUG: 80
// DEBUG: (75, 137)
// DEBUG: Operating on flames
// DEBUG: 123
// DEBUG: (118, 137)
// DEBUG: Operating on in
// DEBUG: 138
// DEBUG: (133, 137)
// DEBUG: Operating on the
// DEBUG: 160
// DEBUG: (155, 137)
// DEBUG: Operating on sunset,
// DEBUG: 210
// DEBUG: (205, 137)
// DEBUG: Operating on the
// DEBUG: ['him,', 'like', 'smoky', 'flames', 'in', 'the', 'sunset,']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on whole
// DEBUG: 50
// DEBUG: (45, 149)
// DEBUG: Operating on beautiful
// DEBUG: 114
// DEBUG: (109, 149)
// DEBUG: Operating on beloved
// DEBUG: 164
// DEBUG: (159, 149)
// DEBUG: Operating on city.
// DEBUG: 200
// DEBUG: ['noon']
// DEBUG: drawing cursor (48, 77)
// DEBUG: ['- Nick Joaquin']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "He had saved [the republic] and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "it was now in the present, alive now", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "and everywhere in the present, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "the hovering faces brightened and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "blurred about him, became the sound of a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "canal in the morning, the look of some", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "roofs in the TIMESTRING sun, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "the fragrance of a certain evening", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "flower. Here he was, home at last.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "Behind him were the mountains and the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "Sleeping Woman in the sky, and before", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "him, like smoky flames in the sunset,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(48, 77, "noon", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Nick Joaquin", &Font12, WHITE, BLACK);
          return;
        case 4:
          Serial.println(F("12:00 - It was precisely twelve o’clock; twelve by Big Ben; whose stroke was wafted over the northern part of London; blent with that of other clocks, mixed in a thin ethereal way with the clouds and wisps of smoke, and died up there among the seagulls. - Virginia Woolf, Mrs Dalloway"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on precisely
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on TIMESTRING;
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'was', 'precisely']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on twelve
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on by
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on Big
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on Ben;
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on whose
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on stroke
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on was
// DEBUG: ['TIMESTRING;', 'twelve', 'by', 'Big', 'Ben;', 'whose', 'stroke']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on wafted
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on over
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on northern
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on part
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on of
// DEBUG: 209
// DEBUG: (204, 29)
// DEBUG: Operating on London;
// DEBUG: ['was', 'wafted', 'over', 'the', 'northern', 'part', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on blent
// DEBUG: 54
// DEBUG: (49, 41)
// DEBUG: Operating on with
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on that
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on of
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on other
// DEBUG: 163
// DEBUG: (158, 41)
// DEBUG: Operating on clocks,
// DEBUG: ['London;', 'blent', 'with', 'that', 'of', 'other']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on mixed
// DEBUG: 54
// DEBUG: (49, 53)
// DEBUG: Operating on in
// DEBUG: 69
// DEBUG: (64, 53)
// DEBUG: Operating on a
// DEBUG: 77
// DEBUG: (72, 53)
// DEBUG: Operating on thin
// DEBUG: 106
// DEBUG: (101, 53)
// DEBUG: Operating on ethereal
// DEBUG: 163
// DEBUG: (158, 53)
// DEBUG: Operating on way
// DEBUG: 185
// DEBUG: (180, 53)
// DEBUG: Operating on with
// DEBUG: ['clocks,', 'mixed', 'in', 'a', 'thin', 'ethereal', 'way']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on clouds
// DEBUG: 80
// DEBUG: (75, 65)
// DEBUG: Operating on and
// DEBUG: 102
// DEBUG: (97, 65)
// DEBUG: Operating on wisps
// DEBUG: 138
// DEBUG: (133, 65)
// DEBUG: Operating on of
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on smoke,
// DEBUG: 196
// DEBUG: (191, 65)
// DEBUG: Operating on and
// DEBUG: ['with', 'the', 'clouds', 'and', 'wisps', 'of', 'smoke,']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on died
// DEBUG: 43
// DEBUG: (38, 77)
// DEBUG: Operating on up
// DEBUG: 58
// DEBUG: (53, 77)
// DEBUG: Operating on there
// DEBUG: 94
// DEBUG: (89, 77)
// DEBUG: Operating on among
// DEBUG: 130
// DEBUG: (125, 77)
// DEBUG: Operating on the
// DEBUG: 152
// DEBUG: (147, 77)
// DEBUG: Operating on seagulls.
// DEBUG: ['and', 'died', 'up', 'there', 'among', 'the']
// DEBUG: drawing cursor (5, 77)
// DEBUG: ['twelve o’clock']
// DEBUG: drawing cursor (106, 5)
// DEBUG: ['- Mrs Dalloway']
// DEBUG: drawing cursor (109, 192)
          paint.Paint_DrawString_EN(5, 5, "It was precisely", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING; twelve by Big Ben; whose stroke", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "was wafted over the northern part of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "London; blent with that of other", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "clocks, mixed in a thin ethereal way", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "with the clouds and wisps of smoke,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "and died up there among the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(106, 5, "twelve o’clock", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(109, 192, "- Mrs Dalloway", &Font12, WHITE, BLACK);
          return;
        case 5:
          Serial.println(F("12:00 - Noon found him momentarily alone, while the family prepared lunch in the kitchen. The cracks in the ceiling widened into gaps. - Paul Harding, Tinkers"));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 110
// DEBUG: (105, 5)
// DEBUG: Operating on found
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on him
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on momentarily
// DEBUG: ['TIMESTRING', 'found', 'him']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on alone,
// DEBUG: 65
// DEBUG: (60, 17)
// DEBUG: Operating on while
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on the
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on family
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on prepared
// DEBUG: ['momentarily', 'alone,', 'while', 'the', 'family']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on lunch
// DEBUG: 55
// DEBUG: (50, 29)
// DEBUG: Operating on in
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on the
// DEBUG: 92
// DEBUG: (87, 29)
// DEBUG: Operating on kitchen.
// DEBUG: 149
// DEBUG: (144, 29)
// DEBUG: Operating on The
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on cracks
// DEBUG: ['prepared', 'lunch', 'in', 'the', 'kitchen.', 'The']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 41)
// DEBUG: Operating on ceiling
// DEBUG: 104
// DEBUG: (99, 41)
// DEBUG: Operating on widened
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on into
// DEBUG: 183
// DEBUG: (178, 41)
// DEBUG: Operating on gaps.
// DEBUG: ['cracks', 'in', 'the', 'ceiling', 'widened', 'into']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['Noon']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Paul Harding, Tinkers']
// DEBUG: drawing cursor (46, 192)
          paint.Paint_DrawString_EN(5, 5, "TIMESTRING found him", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "momentarily alone, while the family", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "prepared lunch in the kitchen. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "cracks in the ceiling widened into", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 5, "Noon", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(46, 192, "- Paul Harding, Tinkers", &Font12, WHITE, BLACK);
          return;
        case 6:
          Serial.println(F("12:00 - On Friday noon, July the twentieth, 1714, the finest bridge in all Peru broke and precipitated five travellers into the gulf below. - Thornton Wilder, The Bridge of San Luis Rey "));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on Friday
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 175
// DEBUG: (170, 5)
// DEBUG: Operating on July
// DEBUG: 204
// DEBUG: (199, 5)
// DEBUG: Operating on the
// DEBUG: ['On', 'Friday', 'TIMESTRING,', 'July']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on twentieth,
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on 1714,
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on the
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on finest
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on bridge
// DEBUG: ['the', 'twentieth,', '1714,', 'the', 'finest']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 29)
// DEBUG: Operating on all
// DEBUG: 54
// DEBUG: (49, 29)
// DEBUG: Operating on Peru
// DEBUG: 83
// DEBUG: (78, 29)
// DEBUG: Operating on broke
// DEBUG: 119
// DEBUG: (114, 29)
// DEBUG: Operating on and
// DEBUG: 141
// DEBUG: (136, 29)
// DEBUG: Operating on precipitated
// DEBUG: ['bridge', 'in', 'all', 'Peru', 'broke', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (18, 41)
// DEBUG: Operating on five
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on travellers
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on into
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on gulf
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on below.
// DEBUG: ['precipitated', 'five', 'travellers', 'into', 'the', 'gulf']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['noon']
// DEBUG: drawing cursor (63, 5)
// DEBUG: ['- The Bridge of San Luis Rey']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "On Friday TIMESTRING, July", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the twentieth, 1714, the finest", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "bridge in all Peru broke and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "precipitated five travellers into the gulf", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(63, 5, "noon", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- The Bridge of San Luis Rey", &Font12, WHITE, BLACK);
          return;
        case 7:
          Serial.println(F("12:00 - Roaring noon. In a well-fanned Forty-second Street cellar I met Gatsby for lunch. - F. Scott Fitzgerald, The Great Gatsby "));
// DEBUG: (5, 5)
// DEBUG: Operating on Roaring
// DEBUG: 60
// DEBUG: (55, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 167
// DEBUG: (162, 5)
// DEBUG: Operating on In
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on a
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on well-fanned
// DEBUG: ['Roaring', 'TIMESTRING.', 'In', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on Forty-second
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on Street
// DEBUG: 150
// DEBUG: (145, 17)
// DEBUG: Operating on cellar
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on I
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on met
// DEBUG: ['well-fanned', 'Forty-second', 'Street', 'cellar', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on Gatsby
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on for
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on lunch.
// DEBUG: 122
// DEBUG: ['noon']
// DEBUG: drawing cursor (55, 5)
// DEBUG: ['- The Great Gatsby']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "Roaring TIMESTRING. In a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "well-fanned Forty-second Street cellar I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(55, 5, "noon", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- The Great Gatsby", &Font12, WHITE, BLACK);
          return;
        case 8:
          Serial.println(F("12:00 - The Birds begun at Four o'clock - Their period for Dawn - A Music numerous as space - But neighboring as Noon - Emily Dickinson, The Birds begun at Four o'clock"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Birds
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on begun
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on at
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on Four
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on o'clock
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on -
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on Their
// DEBUG: ['The', 'Birds', 'begun', 'at', 'Four', "o'clock", '-']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on period
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on for
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on Dawn
// DEBUG: 110
// DEBUG: (105, 17)
// DEBUG: Operating on -
// DEBUG: 118
// DEBUG: (113, 17)
// DEBUG: Operating on A
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on Music
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on numerous
// DEBUG: ['Their', 'period', 'for', 'Dawn', '-', 'A', 'Music']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on as
// DEBUG: 34
// DEBUG: (29, 29)
// DEBUG: Operating on space
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on -
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on But
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on neighboring
// DEBUG: 178
// DEBUG: (173, 29)
// DEBUG: Operating on as
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['numerous', 'as', 'space', '-', 'But', 'neighboring', 'as']
// DEBUG: drawing cursor (5, 29)
// DEBUG: 109
// DEBUG: ['Noon']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['- Emily Dickinson']
// DEBUG: drawing cursor (88, 192)
          paint.Paint_DrawString_EN(5, 5, "The Birds begun at Four o'clock -", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Their period for Dawn - A Music", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "numerous as space - But neighboring as", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Noon", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(88, 192, "- Emily Dickinson", &Font12, WHITE, BLACK);
          return;
        case 9:
          Serial.println(F("12:00 - The Oxen Christmas Eve, and twelve of the clock. \"Now they are all on their knees,\" - Thomas Hardy, The Oxen "));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on Oxen
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on Christmas
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on Eve,
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on and
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on TIMESTRINGof
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'Oxen', 'Christmas', 'Eve,', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on clock.
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on \"Now
// DEBUG: ['TIMESTRINGof', 'the', 'clock.']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on they
// DEBUG: 45
// DEBUG: (40, 29)
// DEBUG: Operating on are
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on all
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on on
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on their
// DEBUG: 140
// DEBUG: (135, 29)
// DEBUG: Operating on knees,\"
// DEBUG: 197
// DEBUG: ['twelve ']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Thomas Hardy, The Oxen ']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "The Oxen Christmas Eve, and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRINGof the clock.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "twelve ", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Thomas Hardy, The Oxen ", &Font12, WHITE, BLACK);
          return;
        case 10:
          Serial.println(F("12:00 - Then came the stroke of noon, and all these working and professional people dispersed like a trampled anthill into all the streets and directions. The white bridge was swarming with nimble dots. And when you considered that each dot had a mouth with which it was now planning to eat lunch, you couldn't help bursting into laughter. - Robert Walser, The Tanners "));
// DEBUG: (5, 5)
// DEBUG: Operating on Then
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on came
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on the
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on stroke
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on of
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Then', 'came', 'the', 'stroke', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on all
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on these
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on working
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on and
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on professional
// DEBUG: ['TIMESTRING,', 'and', 'all', 'these', 'working', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (18, 29)
// DEBUG: Operating on people
// DEBUG: 66
// DEBUG: (61, 29)
// DEBUG: Operating on dispersed
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on like
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on a
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on trampled
// DEBUG: ['professional', 'people', 'dispersed', 'like', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on anthill
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on into
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on all
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on the
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on streets
// DEBUG: 192
// DEBUG: (187, 41)
// DEBUG: Operating on and
// DEBUG: ['trampled', 'anthill', 'into', 'all', 'the', 'streets']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on directions.
// DEBUG: 92
// DEBUG: (87, 53)
// DEBUG: Operating on The
// DEBUG: 114
// DEBUG: (109, 53)
// DEBUG: Operating on white
// DEBUG: 150
// DEBUG: (145, 53)
// DEBUG: Operating on bridge
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on was
// DEBUG: ['and', 'directions.', 'The', 'white', 'bridge']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on swarming
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on with
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on nimble
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on dots.
// DEBUG: 179
// DEBUG: (174, 65)
// DEBUG: Operating on And
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on when
// DEBUG: ['was', 'swarming', 'with', 'nimble', 'dots.', 'And']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on you
// DEBUG: 37
// DEBUG: (32, 77)
// DEBUG: Operating on considered
// DEBUG: 108
// DEBUG: (103, 77)
// DEBUG: Operating on that
// DEBUG: 137
// DEBUG: (132, 77)
// DEBUG: Operating on each
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on dot
// DEBUG: 188
// DEBUG: (183, 77)
// DEBUG: Operating on had
// DEBUG: 210
// DEBUG: (205, 77)
// DEBUG: Operating on a
// DEBUG: ['when', 'you', 'considered', 'that', 'each', 'dot', 'had']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (7, 89)
// DEBUG: Operating on mouth
// DEBUG: 48
// DEBUG: (43, 89)
// DEBUG: Operating on with
// DEBUG: 77
// DEBUG: (72, 89)
// DEBUG: Operating on which
// DEBUG: 113
// DEBUG: (108, 89)
// DEBUG: Operating on it
// DEBUG: 128
// DEBUG: (123, 89)
// DEBUG: Operating on was
// DEBUG: 150
// DEBUG: (145, 89)
// DEBUG: Operating on now
// DEBUG: 172
// DEBUG: (167, 89)
// DEBUG: Operating on planning
// DEBUG: ['a', 'mouth', 'with', 'which', 'it', 'was', 'now']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (14, 101)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 101)
// DEBUG: Operating on eat
// DEBUG: 56
// DEBUG: (51, 101)
// DEBUG: Operating on lunch,
// DEBUG: 99
// DEBUG: (94, 101)
// DEBUG: Operating on you
// DEBUG: 121
// DEBUG: (116, 101)
// DEBUG: Operating on couldn't
// DEBUG: 178
// DEBUG: (173, 101)
// DEBUG: Operating on help
// DEBUG: 207
// DEBUG: (202, 101)
// DEBUG: Operating on bursting
// DEBUG: ['planning', 'to', 'eat', 'lunch,', 'you', "couldn't", 'help']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (14, 113)
// DEBUG: Operating on into
// DEBUG: 48
// DEBUG: (43, 113)
// DEBUG: Operating on laughter.
// DEBUG: 112
// DEBUG: ['noon']
// DEBUG: drawing cursor (143, 5)
// DEBUG: ['- Robert Walser, The Tanners ']
// DEBUG: drawing cursor (4, 192)
          paint.Paint_DrawString_EN(5, 5, "Then came the stroke of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, and all these working and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "professional people dispersed like a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "trampled anthill into all the streets", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "and directions. The white bridge", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "was swarming with nimble dots. And", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "when you considered that each dot had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "a mouth with which it was now", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "planning to eat lunch, you couldn't help", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(143, 5, "noon", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(4, 192, "- Robert Walser, The Tanners ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 12:01 for 3 quotations:
    case 721:
      option = random(0, 3);
      Serial.print(F("3 options for 12:01. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("12:01 - And on all sides there were the clocks. Conrad noticed them immediately, at every street corner, over every archway, three quarters of the way up the sides of buildings, covering every conceivable angle of approach. Most of them were too high off the ground to be reached by anything less than a fireman's ladder and still retained their hands. All registered the same time: 12:01. Conrad looked at his wristwatch, noted that it was just 2:45. ‘‘They were driven by a master dock’’ Stacey told him. ‘‘When that stopped, they all ceased at the same moment. One minute after midnight, thirty-seven years ago.’’ - J.G. Ballard, Chronopolis "));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on on
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on all
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on sides
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on there
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on were
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on the
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on clocks.
// DEBUG: ['And', 'on', 'all', 'sides', 'there', 'were', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on Conrad
// DEBUG: 61
// DEBUG: (56, 17)
// DEBUG: Operating on noticed
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on them
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on immediately,
// DEBUG: ['clocks.', 'Conrad', 'noticed', 'them']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (18, 29)
// DEBUG: Operating on at
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on every
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on street
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on corner,
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on over
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on every
// DEBUG: ['immediately,', 'at', 'every', 'street', 'corner,', 'over']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on archway,
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on three
// DEBUG: 109
// DEBUG: (104, 41)
// DEBUG: Operating on quarters
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on of
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on the
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on way
// DEBUG: ['every', 'archway,', 'three', 'quarters', 'of', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on up
// DEBUG: 29
// DEBUG: (24, 53)
// DEBUG: Operating on the
// DEBUG: 51
// DEBUG: (46, 53)
// DEBUG: Operating on sides
// DEBUG: 87
// DEBUG: (82, 53)
// DEBUG: Operating on of
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on buildings,
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on covering
// DEBUG: ['way', 'up', 'the', 'sides', 'of', 'buildings,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on every
// DEBUG: 55
// DEBUG: (50, 65)
// DEBUG: Operating on conceivable
// DEBUG: 133
// DEBUG: (128, 65)
// DEBUG: Operating on angle
// DEBUG: 169
// DEBUG: (164, 65)
// DEBUG: Operating on of
// DEBUG: 184
// DEBUG: (179, 65)
// DEBUG: Operating on approach.
// DEBUG: ['covering', 'every', 'conceivable', 'angle', 'of']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on Most
// DEBUG: 49
// DEBUG: (44, 77)
// DEBUG: Operating on of
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on them
// DEBUG: 93
// DEBUG: (88, 77)
// DEBUG: Operating on were
// DEBUG: 122
// DEBUG: (117, 77)
// DEBUG: Operating on too
// DEBUG: 144
// DEBUG: (139, 77)
// DEBUG: Operating on high
// DEBUG: 173
// DEBUG: (168, 77)
// DEBUG: Operating on off
// DEBUG: 195
// DEBUG: (190, 77)
// DEBUG: Operating on the
// DEBUG: ['approach.', 'Most', 'of', 'them', 'were', 'too', 'high', 'off']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (9, 89)
// DEBUG: Operating on ground
// DEBUG: 57
// DEBUG: (52, 89)
// DEBUG: Operating on to
// DEBUG: 72
// DEBUG: (67, 89)
// DEBUG: Operating on be
// DEBUG: 87
// DEBUG: (82, 89)
// DEBUG: Operating on reached
// DEBUG: 137
// DEBUG: (132, 89)
// DEBUG: Operating on by
// DEBUG: 152
// DEBUG: (147, 89)
// DEBUG: Operating on anything
// DEBUG: 209
// DEBUG: (204, 89)
// DEBUG: Operating on less
// DEBUG: ['the', 'ground', 'to', 'be', 'reached', 'by', 'anything']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (10, 101)
// DEBUG: Operating on than
// DEBUG: 44
// DEBUG: (39, 101)
// DEBUG: Operating on a
// DEBUG: 52
// DEBUG: (47, 101)
// DEBUG: Operating on fireman's
// DEBUG: 116
// DEBUG: (111, 101)
// DEBUG: Operating on ladder
// DEBUG: 159
// DEBUG: (154, 101)
// DEBUG: Operating on and
// DEBUG: 181
// DEBUG: (176, 101)
// DEBUG: Operating on still
// DEBUG: ['less', 'than', 'a', "fireman's", 'ladder', 'and']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on retained
// DEBUG: 73
// DEBUG: (68, 113)
// DEBUG: Operating on their
// DEBUG: 109
// DEBUG: (104, 113)
// DEBUG: Operating on hands.
// DEBUG: 152
// DEBUG: (147, 113)
// DEBUG: Operating on All
// DEBUG: 174
// DEBUG: (169, 113)
// DEBUG: Operating on registered
// DEBUG: ['still', 'retained', 'their', 'hands.', 'All']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (16, 125)
// DEBUG: Operating on the
// DEBUG: 43
// DEBUG: (38, 125)
// DEBUG: Operating on same
// DEBUG: 72
// DEBUG: (67, 125)
// DEBUG: Operating on time:
// DEBUG: 108
// DEBUG: (103, 125)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['registered', 'the', 'same', 'time:']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (17, 137)
// DEBUG: Operating on Conrad
// DEBUG: 65
// DEBUG: (60, 137)
// DEBUG: Operating on looked
// DEBUG: 108
// DEBUG: (103, 137)
// DEBUG: Operating on at
// DEBUG: 123
// DEBUG: (118, 137)
// DEBUG: Operating on his
// DEBUG: 145
// DEBUG: (140, 137)
// DEBUG: Operating on wristwatch,
// DEBUG: ['TIMESTRING.', 'Conrad', 'looked', 'at', 'his']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (17, 149)
// DEBUG: Operating on noted
// DEBUG: 58
// DEBUG: (53, 149)
// DEBUG: Operating on that
// DEBUG: 87
// DEBUG: (82, 149)
// DEBUG: Operating on it
// DEBUG: 102
// DEBUG: (97, 149)
// DEBUG: Operating on was
// DEBUG: 124
// DEBUG: (119, 149)
// DEBUG: Operating on just
// DEBUG: 153
// DEBUG: (148, 149)
// DEBUG: Operating on 2:45.
// DEBUG: 189
// DEBUG: (184, 149)
// DEBUG: Operating on ‘‘They
// DEBUG: ['wristwatch,', 'noted', 'that', 'it', 'was', 'just', '2:45.']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (12, 161)
// DEBUG: Operating on were
// DEBUG: 46
// DEBUG: (41, 161)
// DEBUG: Operating on driven
// DEBUG: 89
// DEBUG: (84, 161)
// DEBUG: Operating on by
// DEBUG: 104
// DEBUG: (99, 161)
// DEBUG: Operating on a
// DEBUG: 112
// DEBUG: (107, 161)
// DEBUG: Operating on master
// DEBUG: 155
// DEBUG: (150, 161)
// DEBUG: Operating on dock’’
// DEBUG: 198
// DEBUG: (193, 161)
// DEBUG: Operating on Stacey
// DEBUG: ['‘‘They', 'were', 'driven', 'by', 'a', 'master', 'dock’’']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (12, 173)
// DEBUG: Operating on told
// DEBUG: 46
// DEBUG: (41, 173)
// DEBUG: Operating on him.
// DEBUG: 75
// DEBUG: (70, 173)
// DEBUG: Operating on ‘‘When
// DEBUG: 118
// DEBUG: (113, 173)
// DEBUG: Operating on that
// DEBUG: 147
// DEBUG: (142, 173)
// DEBUG: Operating on stopped,
// DEBUG: 204
// DEBUG: (199, 173)
// DEBUG: Operating on they
// DEBUG: ['Stacey', 'told', 'him.', '‘‘When', 'that', 'stopped,']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (10, 185)
// DEBUG: Operating on all
// DEBUG: 37
// DEBUG: (32, 185)
// DEBUG: Operating on ceased
// DEBUG: 80
// DEBUG: (75, 185)
// DEBUG: Operating on at
// DEBUG: 95
// DEBUG: (90, 185)
// DEBUG: Operating on the
// DEBUG: 117
// DEBUG: (112, 185)
// DEBUG: Operating on same
// DEBUG: 146
// DEBUG: (141, 185)
// DEBUG: Operating on moment.
// DEBUG: 196
// DEBUG: (191, 185)
// DEBUG: Operating on One
// DEBUG: ['they', 'all', 'ceased', 'at', 'the', 'same', 'moment.']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (9, 197)
// DEBUG: Operating on minute
// DEBUG: 57
// DEBUG: (52, 197)
// DEBUG: Operating on after
// DEBUG: 93
// DEBUG: (88, 197)
// DEBUG: Operating on midnight,
// DEBUG: 157
// DEBUG: (152, 197)
// DEBUG: Operating on thirty-seven
// DEBUG: ['One', 'minute', 'after', 'midnight,']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (18, 209)
// DEBUG: Operating on years
// DEBUG: 59
// DEBUG: (54, 209)
// DEBUG: Operating on ago.’’
// DEBUG: 102
// DEBUG: ['12:01']
// DEBUG: drawing cursor (103, 125)
// DEBUG: ['- J.G. Ballard, Chronopolis ']
// DEBUG: drawing cursor (11, 192)
          paint.Paint_DrawString_EN(5, 5, "And on all sides there were the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "clocks. Conrad noticed them", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "immediately, at every street corner, over", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "every archway, three quarters of the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "way up the sides of buildings,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "covering every conceivable angle of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "approach. Most of them were too high off", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "the ground to be reached by anything", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "less than a fireman's ladder and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "still retained their hands. All", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "registered the same time:", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "TIMESTRING. Conrad looked at his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "wristwatch, noted that it was just 2:45.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "‘‘They were driven by a master dock’’", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 173, "Stacey told him. ‘‘When that stopped,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 185, "they all ceased at the same moment.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 197, "One minute after midnight,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(103, 125, "12:01", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(11, 192, "- J.G. Ballard, Chronopolis ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("12:01 - It was the twelfth of December, the twelfth month. A was twelve. The electric clock/radio by his bedside table said 12:01. - Jonathan Trigell, Boy A"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on twelfth
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on of
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on December,
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on the
// DEBUG: ['It', 'was', 'the', 'twelfth', 'of', 'December,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on twelfth
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on month.
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on A
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on was
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on twelve.
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on The
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on electric
// DEBUG: ['the', 'twelfth', 'month.', 'A', 'was', 'twelve.', 'The']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on clock/radio
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on by
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on his
// DEBUG: 134
// DEBUG: (129, 29)
// DEBUG: Operating on bedside
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on table
// DEBUG: ['electric', 'clock/radio', 'by', 'his', 'bedside']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on said
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 159
// DEBUG: ['12:01']
// DEBUG: drawing cursor (40, 41)
// DEBUG: ['- Jonathan Trigell, Boy A']
// DEBUG: drawing cursor (32, 192)
          paint.Paint_DrawString_EN(5, 5, "It was the twelfth of December,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the twelfth month. A was twelve. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "electric clock/radio by his bedside", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(40, 41, "12:01", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(32, 192, "- Jonathan Trigell, Boy A", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("12:01 - It was the twelfth of December, the twelfth month. A was twelve. The electric clock/radio by his bedside table said 12:01. A was waiting for it to read 12:12, he hoped there would be some sense of cosmic rightness when it did. - Jonathan Trigell, Boy A "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on twelfth
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on of
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on December,
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on the
// DEBUG: ['It', 'was', 'the', 'twelfth', 'of', 'December,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on twelfth
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on month.
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on A
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on was
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on twelve.
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on The
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on electric
// DEBUG: ['the', 'twelfth', 'month.', 'A', 'was', 'twelve.', 'The']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on clock/radio
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on by
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on his
// DEBUG: 134
// DEBUG: (129, 29)
// DEBUG: Operating on bedside
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on table
// DEBUG: ['electric', 'clock/radio', 'by', 'his', 'bedside']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on said
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on A
// DEBUG: 167
// DEBUG: (162, 41)
// DEBUG: Operating on was
// DEBUG: 189
// DEBUG: (184, 41)
// DEBUG: Operating on waiting
// DEBUG: ['table', 'said', 'TIMESTRING.', 'A', 'was']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on for
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on it
// DEBUG: 55
// DEBUG: (50, 53)
// DEBUG: Operating on to
// DEBUG: 70
// DEBUG: (65, 53)
// DEBUG: Operating on read
// DEBUG: 99
// DEBUG: (94, 53)
// DEBUG: Operating on 12:12,
// DEBUG: 142
// DEBUG: (137, 53)
// DEBUG: Operating on he
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on hoped
// DEBUG: 193
// DEBUG: (188, 53)
// DEBUG: Operating on there
// DEBUG: ['waiting', 'for', 'it', 'to', 'read', '12:12,', 'he', 'hoped']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on would
// DEBUG: 52
// DEBUG: (47, 65)
// DEBUG: Operating on be
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on some
// DEBUG: 96
// DEBUG: (91, 65)
// DEBUG: Operating on sense
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on of
// DEBUG: 147
// DEBUG: (142, 65)
// DEBUG: Operating on cosmic
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on rightness
// DEBUG: ['there', 'would', 'be', 'some', 'sense', 'of', 'cosmic']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on when
// DEBUG: 49
// DEBUG: (44, 77)
// DEBUG: Operating on it
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on did.
// DEBUG: 93
// DEBUG: ['12:01']
// DEBUG: drawing cursor (40, 41)
// DEBUG: ['- Jonathan Trigell, Boy A ']
// DEBUG: drawing cursor (25, 192)
          paint.Paint_DrawString_EN(5, 5, "It was the twelfth of December,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the twelfth month. A was twelve. The", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "electric clock/radio by his bedside", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "table said TIMESTRING. A was", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "waiting for it to read 12:12, he hoped", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "there would be some sense of cosmic", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(40, 41, "12:01", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(25, 192, "- Jonathan Trigell, Boy A ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 12:02 for 1 quotations:
    case 722:
      Serial.println(F("Only one option for 12:02:"));
    Serial.println(F("12:02 - It had struck twelve o'clock two minutes and a quarter. The Baron's footman hastily seized a large goblet, and gasped with terror - Lewis Carroll, Crundle Castle"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on had
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on struck
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'had', 'struck']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (17, 29)
// DEBUG: Operating on The
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on Baron's
// DEBUG: 94
// DEBUG: (89, 29)
// DEBUG: Operating on footman
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on hastily
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on seized
// DEBUG: ['TIMESTRING.', 'The', "Baron's", 'footman', 'hastily']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on a
// DEBUG: 25
// DEBUG: (20, 41)
// DEBUG: Operating on large
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on goblet,
// DEBUG: 111
// DEBUG: (106, 41)
// DEBUG: Operating on and
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on gasped
// DEBUG: 176
// DEBUG: (171, 41)
// DEBUG: Operating on with
// DEBUG: 205
// DEBUG: (200, 41)
// DEBUG: Operating on terror
// DEBUG: ['seized', 'a', 'large', 'goblet,', 'and', 'gasped', 'with']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ["twelve o'clock two minutes and a quarter"]
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Crundle Castle']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "It had struck", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING. The Baron's footman hastily", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "seized a large goblet, and gasped with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "twelve o'clock two minutes and a quarter", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Crundle Castle", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:03 for 1 quotations:
    case 723:
      Serial.println(F("Only one option for 12:03:"));
    Serial.println(F("12:03 - At 12.03 the sun has already punched its ticket. Sinking, it stains the cobbles and stucco of the platz in a violin-coloured throb of light that you would have to be a stone not to find poignant. - Michael Chabon, The Yiddish Policemen's Union"));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on the
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on sun
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on has
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on already
// DEBUG: ['At', 'TIMESTRING', 'the', 'sun', 'has']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (13, 17)
// DEBUG: Operating on punched
// DEBUG: 68
// DEBUG: (63, 17)
// DEBUG: Operating on its
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on ticket.
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on Sinking,
// DEBUG: 197
// DEBUG: (192, 17)
// DEBUG: Operating on it
// DEBUG: ['already', 'punched', 'its', 'ticket.', 'Sinking,']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on stains
// DEBUG: 56
// DEBUG: (51, 29)
// DEBUG: Operating on the
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on cobbles
// DEBUG: 128
// DEBUG: (123, 29)
// DEBUG: Operating on and
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on stucco
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on of
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on the
// DEBUG: ['it', 'stains', 'the', 'cobbles', 'and', 'stucco', 'of']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on platz
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on in
// DEBUG: 65
// DEBUG: (60, 41)
// DEBUG: Operating on a
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on violin-coloured
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on throb
// DEBUG: ['the', 'platz', 'in', 'a', 'violin-coloured']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on of
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on light
// DEBUG: 67
// DEBUG: (62, 53)
// DEBUG: Operating on that
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on you
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on would
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on have
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on to
// DEBUG: 198
// DEBUG: (193, 53)
// DEBUG: Operating on be
// DEBUG: ['throb', 'of', 'light', 'that', 'you', 'would', 'have', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on a
// DEBUG: 21
// DEBUG: (16, 65)
// DEBUG: Operating on stone
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on not
// DEBUG: 79
// DEBUG: (74, 65)
// DEBUG: Operating on to
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on find
// DEBUG: 123
// DEBUG: (118, 65)
// DEBUG: Operating on poignant.
// DEBUG: 187
// DEBUG: ['12.03']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Michael Chabon']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING the sun has", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "already punched its ticket. Sinking,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "it stains the cobbles and stucco of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the platz in a violin-coloured", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "throb of light that you would have to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "12.03", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Michael Chabon", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:04 for 1 quotations:
    case 724:
      Serial.println(F("Only one option for 12:04:"));
    Serial.println(F("12:04 - Though by then it was by Tina's own desk clock 12.04pm I was always touched when, out of a morning's worth of repetition, secretaries continued to answer with good mornings for an hour or so into the afternoon - Nicholson Baker, The Mezzanine"));
// DEBUG: (5, 5)
// DEBUG: Operating on Though
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on by
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on then
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on it
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on was
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on by
// DEBUG: 149
// DEBUG: (144, 5)
// DEBUG: Operating on Tina's
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on own
// DEBUG: ['Though', 'by', 'then', 'it', 'was', 'by', "Tina's"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on desk
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on clock
// DEBUG: 79
// DEBUG: (74, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 200
// DEBUG: (195, 17)
// DEBUG: Operating on I
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on was
// DEBUG: ['own', 'desk', 'clock', 'TIMESTRING', 'I']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on always
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on touched
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on when,
// DEBUG: 143
// DEBUG: (138, 29)
// DEBUG: Operating on out
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on of
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on a
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on morning's
// DEBUG: ['was', 'always', 'touched', 'when,', 'out', 'of', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on worth
// DEBUG: 56
// DEBUG: (51, 41)
// DEBUG: Operating on of
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on repetition,
// DEBUG: 149
// DEBUG: (144, 41)
// DEBUG: Operating on secretaries
// DEBUG: ["morning's", 'worth', 'of', 'repetition,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on continued
// DEBUG: 86
// DEBUG: (81, 53)
// DEBUG: Operating on to
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on answer
// DEBUG: 144
// DEBUG: (139, 53)
// DEBUG: Operating on with
// DEBUG: 173
// DEBUG: (168, 53)
// DEBUG: Operating on good
// DEBUG: 202
// DEBUG: (197, 53)
// DEBUG: Operating on mornings
// DEBUG: ['secretaries', 'continued', 'to', 'answer', 'with', 'good']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on for
// DEBUG: 41
// DEBUG: (36, 65)
// DEBUG: Operating on an
// DEBUG: 56
// DEBUG: (51, 65)
// DEBUG: Operating on hour
// DEBUG: 85
// DEBUG: (80, 65)
// DEBUG: Operating on or
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on so
// DEBUG: 115
// DEBUG: (110, 65)
// DEBUG: Operating on into
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 65)
// DEBUG: Operating on afternoon
// DEBUG: ['mornings', 'for', 'an', 'hour', 'or', 'so', 'into', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['12.04pm']
// DEBUG: drawing cursor (74, 17)
// DEBUG: ['- The Mezzanine']
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "Though by then it was by Tina's", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "own desk clock TIMESTRING I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "was always touched when, out of a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "morning's worth of repetition,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "secretaries continued to answer with good", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "mornings for an hour or so into the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(74, 17, "12.04pm", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- The Mezzanine", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:05 for 0 quotations:
    case 725:
      Serial.println(F("No quotes for 12:05"));
      return;

    // Codegen for 12:06 for 1 quotations:
    case 726:
      Serial.println(F("Only one option for 12:06:"));
    Serial.println(F("12:06 - A few minutes' light around noon is all that you need to discover the error, and re-set the clock – provide that you bother to go up and make the observation. - Neal Stephenson, Odalisque: The Baroque Cycle #3 "));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on few
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on minutes'
// DEBUG: 97
// DEBUG: (92, 5)
// DEBUG: Operating on light
// DEBUG: 133
// DEBUG: (128, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['A', 'few', "minutes'", 'light']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on is
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on all
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on that
// DEBUG: 87
// DEBUG: (82, 17)
// DEBUG: Operating on you
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on need
// DEBUG: 138
// DEBUG: (133, 17)
// DEBUG: Operating on to
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on discover
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on the
// DEBUG: ['TIMESTRING', 'is', 'all', 'that', 'you', 'need', 'to', 'discover']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on error,
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on and
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on re-set
// DEBUG: 122
// DEBUG: (117, 29)
// DEBUG: Operating on the
// DEBUG: 144
// DEBUG: (139, 29)
// DEBUG: Operating on clock
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on –
// DEBUG: 188
// DEBUG: (183, 29)
// DEBUG: Operating on provide
// DEBUG: ['the', 'error,', 'and', 're-set', 'the', 'clock', '–']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on that
// DEBUG: 47
// DEBUG: (42, 41)
// DEBUG: Operating on you
// DEBUG: 69
// DEBUG: (64, 41)
// DEBUG: Operating on bother
// DEBUG: 112
// DEBUG: (107, 41)
// DEBUG: Operating on to
// DEBUG: 127
// DEBUG: (122, 41)
// DEBUG: Operating on go
// DEBUG: 142
// DEBUG: (137, 41)
// DEBUG: Operating on up
// DEBUG: 157
// DEBUG: (152, 41)
// DEBUG: Operating on and
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on make
// DEBUG: 208
// DEBUG: (203, 41)
// DEBUG: Operating on the
// DEBUG: ['provide', 'that', 'you', 'bother', 'to', 'go', 'up', 'and', 'make']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on observation.
// DEBUG: 99
// DEBUG: ['around noon']
// DEBUG: drawing cursor (128, 5)
// DEBUG: ['- Neal Stephenson']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "A few minutes' light", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING is all that you need to discover", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "the error, and re-set the clock –", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "provide that you bother to go up and make", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(128, 5, "around noon", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Neal Stephenson", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:07 for 1 quotations:
    case 727:
      Serial.println(F("Only one option for 12:07:"));
    Serial.println(F("12:07 - On a Monday Simon Hirsch was going to break his leg at seven minutes after 12, noon, and as soon as Satan told us the day before, Seppi went to betting with me that it would not happen, and soon they got excited and went to betting with me themselves. - Mark Twain, The Chronicle of Young Satan"));
// DEBUG: (5, 5)
// DEBUG: Operating on On
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on a
// DEBUG: 33
// DEBUG: (28, 5)
// DEBUG: Operating on Monday
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on Simon
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on Hirsch
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on was
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on going
// DEBUG: ['On', 'a', 'Monday', 'Simon', 'Hirsch', 'was']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on to
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on break
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on his
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on leg
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on at
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['going', 'to', 'break', 'his', 'leg', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on noon,
// DEBUG: 58
// DEBUG: (53, 41)
// DEBUG: Operating on and
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on as
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on soon
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on as
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on Satan
// DEBUG: 175
// DEBUG: (170, 41)
// DEBUG: Operating on told
// DEBUG: 204
// DEBUG: (199, 41)
// DEBUG: Operating on us
// DEBUG: ['TIMESTRING,', 'noon,', 'and', 'as', 'soon', 'as', 'Satan', 'told']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 53)
// DEBUG: Operating on day
// DEBUG: 57
// DEBUG: (52, 53)
// DEBUG: Operating on before,
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on Seppi
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on went
// DEBUG: 172
// DEBUG: (167, 53)
// DEBUG: Operating on to
// DEBUG: 187
// DEBUG: (182, 53)
// DEBUG: Operating on betting
// DEBUG: ['us', 'the', 'day', 'before,', 'Seppi', 'went', 'to']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on with
// DEBUG: 47
// DEBUG: (42, 65)
// DEBUG: Operating on me
// DEBUG: 62
// DEBUG: (57, 65)
// DEBUG: Operating on that
// DEBUG: 91
// DEBUG: (86, 65)
// DEBUG: Operating on it
// DEBUG: 106
// DEBUG: (101, 65)
// DEBUG: Operating on would
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on not
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on happen,
// DEBUG: ['betting', 'with', 'me', 'that', 'it', 'would', 'not']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on and
// DEBUG: 40
// DEBUG: (35, 77)
// DEBUG: Operating on soon
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on they
// DEBUG: 98
// DEBUG: (93, 77)
// DEBUG: Operating on got
// DEBUG: 120
// DEBUG: (115, 77)
// DEBUG: Operating on excited
// DEBUG: 170
// DEBUG: (165, 77)
// DEBUG: Operating on and
// DEBUG: 192
// DEBUG: (187, 77)
// DEBUG: Operating on went
// DEBUG: ['happen,', 'and', 'soon', 'they', 'got', 'excited', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on to
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on betting
// DEBUG: 80
// DEBUG: (75, 89)
// DEBUG: Operating on with
// DEBUG: 109
// DEBUG: (104, 89)
// DEBUG: Operating on me
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on themselves.
// DEBUG: 202
// DEBUG: ['seven minutes after 12']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Mark Twain']
// DEBUG: drawing cursor (123, 192)
    paint.Paint_DrawString_EN(5, 5, "On a Monday Simon Hirsch was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "going to break his leg at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING, noon, and as soon as Satan told", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "us the day before, Seppi went to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "betting with me that it would not", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "happen, and soon they got excited and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "seven minutes after 12", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(123, 192, "- Mark Twain", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:08 for 1 quotations:
    case 728:
      Serial.println(F("Only one option for 12:08:"));
    Serial.println(F("12:08 - When a clock struck noon in Washington, D.C., the time was 12:08 in Philadephia, 12:12 in new York, and 12:24 in Boston. - Matthew Goodman, Eighty Days"));
// DEBUG: (5, 5)
// DEBUG: Operating on When
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on a
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on clock
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on struck
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on noon
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on in
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on Washington,
// DEBUG: ['When', 'a', 'clock', 'struck', 'noon', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on D.C.,
// DEBUG: 58
// DEBUG: (53, 17)
// DEBUG: Operating on the
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on time
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on was
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Washington,', 'D.C.,', 'the', 'time', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on in
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on Philadephia,
// DEBUG: 121
// DEBUG: (116, 29)
// DEBUG: Operating on 12:12
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on in
// DEBUG: 172
// DEBUG: (167, 29)
// DEBUG: Operating on new
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on York,
// DEBUG: ['TIMESTRING', 'in', 'Philadephia,', '12:12', 'in', 'new']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on 12:24
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on in
// DEBUG: 89
// DEBUG: (84, 41)
// DEBUG: Operating on Boston.
// DEBUG: 139
// DEBUG: ['12:08']
// DEBUG: drawing cursor (126, 17)
// DEBUG: ['- Eighty Days']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "When a clock struck noon in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Washington, D.C., the time was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING in Philadephia, 12:12 in new", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(126, 17, "12:08", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Eighty Days", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:09 for 0 quotations:
    case 729:
      Serial.println(F("No quotes for 12:09"));
      return;

    // Codegen for 12:10 for 2 quotations:
    case 730:
      option = random(0, 2);
      Serial.print(F("2 options for 12:10. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("12:10 - Madame Dumas arrived at noon, and ten minutes later Trause handed her his ATM card and instructed her to go to the neighborhood Citibank near Sheridan Square and transfer forty thousand dollars from his savings account to his checking account. - Paul Auster, Oracle Night"));
// DEBUG: (5, 5)
// DEBUG: Operating on Madame
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on Dumas
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on arrived
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['Madame', 'Dumas', 'arrived', 'at']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on Trause
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on handed
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on her
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on his
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on ATM
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on card
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on and
// DEBUG: ['TIMESTRING', 'Trause', 'handed', 'her', 'his', 'ATM', 'card']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on instructed
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on her
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on to
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on go
// DEBUG: 137
// DEBUG: (132, 41)
// DEBUG: Operating on to
// DEBUG: 152
// DEBUG: (147, 41)
// DEBUG: Operating on the
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on neighborhood
// DEBUG: ['and', 'instructed', 'her', 'to', 'go', 'to', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (18, 53)
// DEBUG: Operating on Citibank
// DEBUG: 80
// DEBUG: (75, 53)
// DEBUG: Operating on near
// DEBUG: 109
// DEBUG: (104, 53)
// DEBUG: Operating on Sheridan
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on Square
// DEBUG: 209
// DEBUG: (204, 53)
// DEBUG: Operating on and
// DEBUG: ['neighborhood', 'Citibank', 'near', 'Sheridan', 'Square']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (9, 65)
// DEBUG: Operating on transfer
// DEBUG: 71
// DEBUG: (66, 65)
// DEBUG: Operating on forty
// DEBUG: 107
// DEBUG: (102, 65)
// DEBUG: Operating on thousand
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on dollars
// DEBUG: ['and', 'transfer', 'forty', 'thousand']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on from
// DEBUG: 47
// DEBUG: (42, 77)
// DEBUG: Operating on his
// DEBUG: 69
// DEBUG: (64, 77)
// DEBUG: Operating on savings
// DEBUG: 119
// DEBUG: (114, 77)
// DEBUG: Operating on account
// DEBUG: 169
// DEBUG: (164, 77)
// DEBUG: Operating on to
// DEBUG: 184
// DEBUG: (179, 77)
// DEBUG: Operating on his
// DEBUG: 206
// DEBUG: (201, 77)
// DEBUG: Operating on checking
// DEBUG: ['dollars', 'from', 'his', 'savings', 'account', 'to', 'his']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (14, 89)
// DEBUG: Operating on account.
// DEBUG: 76
// DEBUG: ['noon, and ten minutes later']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Paul Auster, Oracle Night']
// DEBUG: drawing cursor (18, 192)
          paint.Paint_DrawString_EN(5, 5, "Madame Dumas arrived at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "TIMESTRING Trause handed her his ATM card", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "and instructed her to go to the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "neighborhood Citibank near Sheridan Square", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "and transfer forty thousand", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "dollars from his savings account to his", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "noon, and ten minutes later", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(18, 192, "- Paul Auster, Oracle Night", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("12:10 - They paid for only one room and kept Einstein with them because they were not going to need privacy for lovemaking. Exhausted, Travis barely managed to kiss Nora before falling into a deep sleep. He dreamed of things with yellow eyes, misshapen heads, and crocodile mouths full of sharks’ teeth. He woke five hours later, at twelve-ten Thursday afternoon. - Dean Koontz, Watchers "));
// DEBUG: (5, 5)
// DEBUG: Operating on They
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on paid
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on for
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on only
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on one
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on room
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on and
// DEBUG: 192
// DEBUG: (187, 5)
// DEBUG: Operating on kept
// DEBUG: ['They', 'paid', 'for', 'only', 'one', 'room', 'and']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on Einstein
// DEBUG: 72
// DEBUG: (67, 17)
// DEBUG: Operating on with
// DEBUG: 101
// DEBUG: (96, 17)
// DEBUG: Operating on them
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on because
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on they
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on were
// DEBUG: ['kept', 'Einstein', 'with', 'them', 'because', 'they']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on not
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on going
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on to
// DEBUG: 88
// DEBUG: (83, 29)
// DEBUG: Operating on need
// DEBUG: 117
// DEBUG: (112, 29)
// DEBUG: Operating on privacy
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on for
// DEBUG: 189
// DEBUG: (184, 29)
// DEBUG: Operating on lovemaking.
// DEBUG: ['were', 'not', 'going', 'to', 'need', 'privacy', 'for']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on Exhausted,
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on Travis
// DEBUG: 136
// DEBUG: (131, 41)
// DEBUG: Operating on barely
// DEBUG: 179
// DEBUG: (174, 41)
// DEBUG: Operating on managed
// DEBUG: ['lovemaking.', 'Exhausted,', 'Travis', 'barely']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on to
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on kiss
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on Nora
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on before
// DEBUG: 134
// DEBUG: (129, 53)
// DEBUG: Operating on falling
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on into
// DEBUG: ['managed', 'to', 'kiss', 'Nora', 'before', 'falling']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 65)
// DEBUG: Operating on deep
// DEBUG: 52
// DEBUG: (47, 65)
// DEBUG: Operating on sleep.
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on He
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on dreamed
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on of
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on things
// DEBUG: ['into', 'a', 'deep', 'sleep.', 'He', 'dreamed', 'of']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on with
// DEBUG: 46
// DEBUG: (41, 77)
// DEBUG: Operating on yellow
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on eyes,
// DEBUG: 125
// DEBUG: (120, 77)
// DEBUG: Operating on misshapen
// DEBUG: 189
// DEBUG: (184, 77)
// DEBUG: Operating on heads,
// DEBUG: ['things', 'with', 'yellow', 'eyes,', 'misshapen']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 89)
// DEBUG: Operating on crocodile
// DEBUG: 103
// DEBUG: (98, 89)
// DEBUG: Operating on mouths
// DEBUG: 146
// DEBUG: (141, 89)
// DEBUG: Operating on full
// DEBUG: 175
// DEBUG: (170, 89)
// DEBUG: Operating on of
// DEBUG: 190
// DEBUG: (185, 89)
// DEBUG: Operating on sharks’
// DEBUG: ['heads,', 'and', 'crocodile', 'mouths', 'full', 'of']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on teeth.
// DEBUG: 61
// DEBUG: (56, 101)
// DEBUG: Operating on He
// DEBUG: 76
// DEBUG: (71, 101)
// DEBUG: Operating on woke
// DEBUG: 105
// DEBUG: (100, 101)
// DEBUG: Operating on five
// DEBUG: 134
// DEBUG: (129, 101)
// DEBUG: Operating on hours
// DEBUG: 170
// DEBUG: (165, 101)
// DEBUG: Operating on later,
// DEBUG: ['sharks’', 'teeth.', 'He', 'woke', 'five', 'hours']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on at
// DEBUG: 32
// DEBUG: (27, 113)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 174
// DEBUG: (169, 113)
// DEBUG: Operating on Thursday
// DEBUG: ['later,', 'at', 'TIMESTRING']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on afternoon.
// DEBUG: 90
// DEBUG: ['twelve-ten']
// DEBUG: drawing cursor (27, 113)
// DEBUG: ['- Dean Koontz, Watchers ']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "They paid for only one room and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "kept Einstein with them because they", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "were not going to need privacy for", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "lovemaking. Exhausted, Travis barely", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "managed to kiss Nora before falling", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "into a deep sleep. He dreamed of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "things with yellow eyes, misshapen", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "heads, and crocodile mouths full of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "sharks’ teeth. He woke five hours", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "later, at TIMESTRING", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(27, 113, "twelve-ten", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Dean Koontz, Watchers ", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 12:11 for 1 quotations:
    case 731:
      Serial.println(F("Only one option for 12:11:"));
    Serial.println(F("12:11 - At 12:11 there was a knock on the door. It was Terry, A could tell. He hadn't known Terry long, but there was something calmer, more patient, that separated Terry's knocks from the rest of the staff. He knocked from genuine politeness, not formality. \"Come in,\" A said, although the lock was on the other side. Terry did. \"It's your mother,\" he said. \"There's no easy way to say this.\" Though he had just used the easiest, because A now knew the rest. A’s face froze, as it tried to catch up, as it tried to register the news. Then it crumpled, and while he considered this fresh blow, the tears came. - Jonathan Trigell, Boy A "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on there
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on was
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on a
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on knock
// DEBUG: ['At', 'TIMESTRING', 'there', 'was', 'a']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on on
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on the
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on door.
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on It
// DEBUG: 104
// DEBUG: (99, 17)
// DEBUG: Operating on was
// DEBUG: 126
// DEBUG: (121, 17)
// DEBUG: Operating on Terry,
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on A
// DEBUG: 177
// DEBUG: (172, 17)
// DEBUG: Operating on could
// DEBUG: ['knock', 'on', 'the', 'door.', 'It', 'was', 'Terry,', 'A']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on tell.
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on He
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on hadn't
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on known
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on Terry
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on long,
// DEBUG: ['could', 'tell.', 'He', "hadn't", 'known', 'Terry']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on but
// DEBUG: 38
// DEBUG: (33, 41)
// DEBUG: Operating on there
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on was
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on something
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on calmer,
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on more
// DEBUG: ['long,', 'but', 'there', 'was', 'something', 'calmer,']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on patient,
// DEBUG: 72
// DEBUG: (67, 53)
// DEBUG: Operating on that
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on separated
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on Terry's
// DEBUG: ['more', 'patient,', 'that', 'separated']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on knocks
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on from
// DEBUG: 90
// DEBUG: (85, 65)
// DEBUG: Operating on the
// DEBUG: 112
// DEBUG: (107, 65)
// DEBUG: Operating on rest
// DEBUG: 141
// DEBUG: (136, 65)
// DEBUG: Operating on of
// DEBUG: 156
// DEBUG: (151, 65)
// DEBUG: Operating on the
// DEBUG: 178
// DEBUG: (173, 65)
// DEBUG: Operating on staff.
// DEBUG: ["Terry's", 'knocks', 'from', 'the', 'rest', 'of', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on He
// DEBUG: 32
// DEBUG: (27, 77)
// DEBUG: Operating on knocked
// DEBUG: 82
// DEBUG: (77, 77)
// DEBUG: Operating on from
// DEBUG: 111
// DEBUG: (106, 77)
// DEBUG: Operating on genuine
// DEBUG: 161
// DEBUG: (156, 77)
// DEBUG: Operating on politeness,
// DEBUG: ['staff.', 'He', 'knocked', 'from', 'genuine']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (17, 89)
// DEBUG: Operating on not
// DEBUG: 44
// DEBUG: (39, 89)
// DEBUG: Operating on formality.
// DEBUG: 115
// DEBUG: (110, 89)
// DEBUG: Operating on \"Come
// DEBUG: 158
// DEBUG: (153, 89)
// DEBUG: Operating on in,\"
// DEBUG: 194
// DEBUG: (189, 89)
// DEBUG: Operating on A
// DEBUG: 202
// DEBUG: (197, 89)
// DEBUG: Operating on said,
// DEBUG: ['politeness,', 'not', 'formality.', '\\"Come', 'in,\\"', 'A']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on although
// DEBUG: 73
// DEBUG: (68, 101)
// DEBUG: Operating on the
// DEBUG: 95
// DEBUG: (90, 101)
// DEBUG: Operating on lock
// DEBUG: 124
// DEBUG: (119, 101)
// DEBUG: Operating on was
// DEBUG: 146
// DEBUG: (141, 101)
// DEBUG: Operating on on
// DEBUG: 161
// DEBUG: (156, 101)
// DEBUG: Operating on the
// DEBUG: 183
// DEBUG: (178, 101)
// DEBUG: Operating on other
// DEBUG: ['said,', 'although', 'the', 'lock', 'was', 'on', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (11, 113)
// DEBUG: Operating on side.
// DEBUG: 52
// DEBUG: (47, 113)
// DEBUG: Operating on Terry
// DEBUG: 88
// DEBUG: (83, 113)
// DEBUG: Operating on did.
// DEBUG: 117
// DEBUG: (112, 113)
// DEBUG: Operating on \"It's
// DEBUG: 160
// DEBUG: (155, 113)
// DEBUG: Operating on your
// DEBUG: 189
// DEBUG: (184, 113)
// DEBUG: Operating on mother,\"
// DEBUG: ['other', 'side.', 'Terry', 'did.', '\\"It\'s', 'your']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (15, 125)
// DEBUG: Operating on he
// DEBUG: 35
// DEBUG: (30, 125)
// DEBUG: Operating on said.
// DEBUG: 71
// DEBUG: (66, 125)
// DEBUG: Operating on \"There's
// DEBUG: 135
// DEBUG: (130, 125)
// DEBUG: Operating on no
// DEBUG: 150
// DEBUG: (145, 125)
// DEBUG: Operating on easy
// DEBUG: 179
// DEBUG: (174, 125)
// DEBUG: Operating on way
// DEBUG: 201
// DEBUG: (196, 125)
// DEBUG: Operating on to
// DEBUG: ['mother,\\"', 'he', 'said.', '\\"There\'s', 'no', 'easy', 'way']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (8, 137)
// DEBUG: Operating on say
// DEBUG: 35
// DEBUG: (30, 137)
// DEBUG: Operating on this.\"
// DEBUG: 85
// DEBUG: (80, 137)
// DEBUG: Operating on Though
// DEBUG: 128
// DEBUG: (123, 137)
// DEBUG: Operating on he
// DEBUG: 143
// DEBUG: (138, 137)
// DEBUG: Operating on had
// DEBUG: 165
// DEBUG: (160, 137)
// DEBUG: Operating on just
// DEBUG: 194
// DEBUG: (189, 137)
// DEBUG: Operating on used
// DEBUG: ['to', 'say', 'this.\\"', 'Though', 'he', 'had', 'just']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (10, 149)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 149)
// DEBUG: Operating on easiest,
// DEBUG: 94
// DEBUG: (89, 149)
// DEBUG: Operating on because
// DEBUG: 144
// DEBUG: (139, 149)
// DEBUG: Operating on A
// DEBUG: 152
// DEBUG: (147, 149)
// DEBUG: Operating on now
// DEBUG: 174
// DEBUG: (169, 149)
// DEBUG: Operating on knew
// DEBUG: 203
// DEBUG: (198, 149)
// DEBUG: Operating on the
// DEBUG: ['used', 'the', 'easiest,', 'because', 'A', 'now', 'knew']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (9, 161)
// DEBUG: Operating on rest.
// DEBUG: 50
// DEBUG: (45, 161)
// DEBUG: Operating on A’s
// DEBUG: 72
// DEBUG: (67, 161)
// DEBUG: Operating on face
// DEBUG: 101
// DEBUG: (96, 161)
// DEBUG: Operating on froze,
// DEBUG: 144
// DEBUG: (139, 161)
// DEBUG: Operating on as
// DEBUG: 159
// DEBUG: (154, 161)
// DEBUG: Operating on it
// DEBUG: 174
// DEBUG: (169, 161)
// DEBUG: Operating on tried
// DEBUG: 210
// DEBUG: (205, 161)
// DEBUG: Operating on to
// DEBUG: ['the', 'rest.', 'A’s', 'face', 'froze,', 'as', 'it', 'tried']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (8, 173)
// DEBUG: Operating on catch
// DEBUG: 49
// DEBUG: (44, 173)
// DEBUG: Operating on up,
// DEBUG: 71
// DEBUG: (66, 173)
// DEBUG: Operating on as
// DEBUG: 86
// DEBUG: (81, 173)
// DEBUG: Operating on it
// DEBUG: 101
// DEBUG: (96, 173)
// DEBUG: Operating on tried
// DEBUG: 137
// DEBUG: (132, 173)
// DEBUG: Operating on to
// DEBUG: 152
// DEBUG: (147, 173)
// DEBUG: Operating on register
// DEBUG: 209
// DEBUG: (204, 173)
// DEBUG: Operating on the
// DEBUG: ['to', 'catch', 'up,', 'as', 'it', 'tried', 'to', 'register']
// DEBUG: drawing cursor (5, 173)
// DEBUG: (9, 185)
// DEBUG: Operating on news.
// DEBUG: 50
// DEBUG: (45, 185)
// DEBUG: Operating on Then
// DEBUG: 79
// DEBUG: (74, 185)
// DEBUG: Operating on it
// DEBUG: 94
// DEBUG: (89, 185)
// DEBUG: Operating on crumpled,
// DEBUG: 158
// DEBUG: (153, 185)
// DEBUG: Operating on and
// DEBUG: 180
// DEBUG: (175, 185)
// DEBUG: Operating on while
// DEBUG: ['the', 'news.', 'Then', 'it', 'crumpled,', 'and']
// DEBUG: drawing cursor (5, 185)
// DEBUG: (11, 197)
// DEBUG: Operating on he
// DEBUG: 31
// DEBUG: (26, 197)
// DEBUG: Operating on considered
// DEBUG: 102
// DEBUG: (97, 197)
// DEBUG: Operating on this
// DEBUG: 131
// DEBUG: (126, 197)
// DEBUG: Operating on fresh
// DEBUG: 167
// DEBUG: (162, 197)
// DEBUG: Operating on blow,
// DEBUG: 203
// DEBUG: (198, 197)
// DEBUG: Operating on the
// DEBUG: ['while', 'he', 'considered', 'this', 'fresh', 'blow,']
// DEBUG: drawing cursor (5, 197)
// DEBUG: (9, 209)
// DEBUG: Operating on tears
// DEBUG: 50
// DEBUG: (45, 209)
// DEBUG: Operating on came.
// DEBUG: 86
// DEBUG: ['12:11']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Jonathan Trigell, Boy A ']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "At TIMESTRING there was a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "knock on the door. It was Terry, A", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "could tell. He hadn't known Terry", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "long, but there was something calmer,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "more patient, that separated", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "Terry's knocks from the rest of the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "staff. He knocked from genuine", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "politeness, not formality. \"Come in,\" A", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "said, although the lock was on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "other side. Terry did. \"It's your", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 125, "mother,\" he said. \"There's no easy way", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 137, "to say this.\" Though he had just", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 149, "used the easiest, because A now knew", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 161, "the rest. A’s face froze, as it tried", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 173, "to catch up, as it tried to register", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 185, "the news. Then it crumpled, and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 197, "while he considered this fresh blow,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(20, 5, "12:11", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Jonathan Trigell, Boy A ", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:12 for 1 quotations:
    case 732:
      Serial.println(F("Only one option for 12:12:"));
    Serial.println(F("12:12 - It was the twelfth of December, the twelfth month. A was twelve. The electric clock/radio by his bedside table said 12:01. A was waiting for it to read 12:12, he hoped there would be some sense of cosmic rightness when it did. - Jonathan Trigell, Boy A"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on was
// DEBUG: 47
// DEBUG: (42, 5)
// DEBUG: Operating on the
// DEBUG: 69
// DEBUG: (64, 5)
// DEBUG: Operating on twelfth
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on of
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on December,
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on the
// DEBUG: ['It', 'was', 'the', 'twelfth', 'of', 'December,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on twelfth
// DEBUG: 64
// DEBUG: (59, 17)
// DEBUG: Operating on month.
// DEBUG: 107
// DEBUG: (102, 17)
// DEBUG: Operating on A
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on was
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on twelve.
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on The
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on electric
// DEBUG: ['the', 'twelfth', 'month.', 'A', 'was', 'twelve.', 'The']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on clock/radio
// DEBUG: 97
// DEBUG: (92, 29)
// DEBUG: Operating on by
// DEBUG: 112
// DEBUG: (107, 29)
// DEBUG: Operating on his
// DEBUG: 134
// DEBUG: (129, 29)
// DEBUG: Operating on bedside
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on table
// DEBUG: ['electric', 'clock/radio', 'by', 'his', 'bedside']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on said
// DEBUG: 45
// DEBUG: (40, 41)
// DEBUG: Operating on 12:01.
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on A
// DEBUG: 96
// DEBUG: (91, 41)
// DEBUG: Operating on was
// DEBUG: 118
// DEBUG: (113, 41)
// DEBUG: Operating on waiting
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on for
// DEBUG: 190
// DEBUG: (185, 41)
// DEBUG: Operating on it
// DEBUG: 205
// DEBUG: (200, 41)
// DEBUG: Operating on to
// DEBUG: ['table', 'said', '12:01.', 'A', 'was', 'waiting', 'for', 'it']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on read
// DEBUG: 42
// DEBUG: (37, 53)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: 156
// DEBUG: (151, 53)
// DEBUG: Operating on he
// DEBUG: 171
// DEBUG: (166, 53)
// DEBUG: Operating on hoped
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on there
// DEBUG: ['to', 'read', 'TIMESTRING,', 'he', 'hoped']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (11, 65)
// DEBUG: Operating on would
// DEBUG: 52
// DEBUG: (47, 65)
// DEBUG: Operating on be
// DEBUG: 67
// DEBUG: (62, 65)
// DEBUG: Operating on some
// DEBUG: 96
// DEBUG: (91, 65)
// DEBUG: Operating on sense
// DEBUG: 132
// DEBUG: (127, 65)
// DEBUG: Operating on of
// DEBUG: 147
// DEBUG: (142, 65)
// DEBUG: Operating on cosmic
// DEBUG: 190
// DEBUG: (185, 65)
// DEBUG: Operating on rightness
// DEBUG: ['there', 'would', 'be', 'some', 'sense', 'of', 'cosmic']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on when
// DEBUG: 49
// DEBUG: (44, 77)
// DEBUG: Operating on it
// DEBUG: 64
// DEBUG: (59, 77)
// DEBUG: Operating on did.
// DEBUG: 93
// DEBUG: ['12:12']
// DEBUG: drawing cursor (37, 53)
// DEBUG: ['- Jonathan Trigell, Boy A']
// DEBUG: drawing cursor (32, 192)
    paint.Paint_DrawString_EN(5, 5, "It was the twelfth of December,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "the twelfth month. A was twelve. The", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "electric clock/radio by his bedside", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "table said 12:01. A was waiting for it", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "to read TIMESTRING, he hoped", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "there would be some sense of cosmic", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(37, 53, "12:12", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(32, 192, "- Jonathan Trigell, Boy A", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:13 for 0 quotations:
    case 733:
      Serial.println(F("No quotes for 12:13"));
      return;

    // Codegen for 12:14 for 1 quotations:
    case 734:
      Serial.println(F("Only one option for 12:14:"));
    Serial.println(F("12:14 - She left London on the twelve-fourteen from Paddington, arriving at Bristol (where she had to change) at two-fifty. - Agatha Christie, The Plymouth Express"));
// DEBUG: (5, 5)
// DEBUG: Operating on She
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on left
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on London
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on on
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on the
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['She', 'left', 'London', 'on', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on from
// DEBUG: ['TIMESTRING']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on Paddington,
// DEBUG: 93
// DEBUG: (88, 29)
// DEBUG: Operating on arriving
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on at
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on Bristol
// DEBUG: ['from', 'Paddington,', 'arriving', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on (where
// DEBUG: 61
// DEBUG: (56, 41)
// DEBUG: Operating on she
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on had
// DEBUG: 105
// DEBUG: (100, 41)
// DEBUG: Operating on to
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on change)
// DEBUG: 170
// DEBUG: (165, 41)
// DEBUG: Operating on at
// DEBUG: 185
// DEBUG: (180, 41)
// DEBUG: Operating on two-fifty.
// DEBUG: ['Bristol', '(where', 'she', 'had', 'to', 'change)', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['twelve-fourteen']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- The Plymouth Express']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "She left London on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "from Paddington, arriving at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Bristol (where she had to change) at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "twelve-fourteen", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- The Plymouth Express", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:15 for 2 quotations:
    case 735:
      option = random(0, 2);
      Serial.print(F("2 options for 12:15. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("12:15 - Very well, dear,' she said. 'I caught the 10.20 to Eastnor, which isn't a bad train, if you ever want to go down there. I arrived at a quarter past twelve, and went straight up to the house--you've never seen the house, of course? It's quite charming--and told the butler that I wanted to see Mr Ford on business. I had taken the precaution to find out that he was not there. He is at Droitwich.' - P.G. Wodehouse, The Little Nugget "));
// DEBUG: (5, 5)
// DEBUG: Operating on Very
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on well,
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on dear,'
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on she
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on said.
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on 'I
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on caught
// DEBUG: ['Very', 'well,', "dear,'", 'she', 'said.', "'I"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on the
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on 10.20
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on to
// DEBUG: 90
// DEBUG: (85, 17)
// DEBUG: Operating on Eastnor,
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on which
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on isn't
// DEBUG: ['caught', 'the', '10.20', 'to', 'Eastnor,', 'which']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on a
// DEBUG: 24
// DEBUG: (19, 29)
// DEBUG: Operating on bad
// DEBUG: 46
// DEBUG: (41, 29)
// DEBUG: Operating on train,
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on if
// DEBUG: 104
// DEBUG: (99, 29)
// DEBUG: Operating on you
// DEBUG: 126
// DEBUG: (121, 29)
// DEBUG: Operating on ever
// DEBUG: 155
// DEBUG: (150, 29)
// DEBUG: Operating on want
// DEBUG: 184
// DEBUG: (179, 29)
// DEBUG: Operating on to
// DEBUG: 199
// DEBUG: (194, 29)
// DEBUG: Operating on go
// DEBUG: ["isn't", 'a', 'bad', 'train,', 'if', 'you', 'ever', 'want', 'to']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on down
// DEBUG: 42
// DEBUG: (37, 41)
// DEBUG: Operating on there.
// DEBUG: 85
// DEBUG: (80, 41)
// DEBUG: Operating on I
// DEBUG: 93
// DEBUG: (88, 41)
// DEBUG: Operating on arrived
// DEBUG: 143
// DEBUG: (138, 41)
// DEBUG: Operating on at
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on a
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['go', 'down', 'there.', 'I', 'arrived', 'at', 'a']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on and
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on went
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on straight
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on up
// DEBUG: 145
// DEBUG: (140, 65)
// DEBUG: Operating on to
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on the
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on house--you've
// DEBUG: ['TIMESTRING,', 'and', 'went', 'straight', 'up', 'to', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (19, 77)
// DEBUG: Operating on never
// DEBUG: 60
// DEBUG: (55, 77)
// DEBUG: Operating on seen
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on the
// DEBUG: 111
// DEBUG: (106, 77)
// DEBUG: Operating on house,
// DEBUG: 154
// DEBUG: (149, 77)
// DEBUG: Operating on of
// DEBUG: 169
// DEBUG: (164, 77)
// DEBUG: Operating on course?
// DEBUG: ["house--you've", 'never', 'seen', 'the', 'house,', 'of']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (13, 89)
// DEBUG: Operating on It's
// DEBUG: 47
// DEBUG: (42, 89)
// DEBUG: Operating on quite
// DEBUG: 83
// DEBUG: (78, 89)
// DEBUG: Operating on charming--and
// DEBUG: 175
// DEBUG: (170, 89)
// DEBUG: Operating on told
// DEBUG: 204
// DEBUG: (199, 89)
// DEBUG: Operating on the
// DEBUG: ['course?', "It's", 'quite', 'charming--and', 'told']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on butler
// DEBUG: 57
// DEBUG: (52, 101)
// DEBUG: Operating on that
// DEBUG: 86
// DEBUG: (81, 101)
// DEBUG: Operating on I
// DEBUG: 94
// DEBUG: (89, 101)
// DEBUG: Operating on wanted
// DEBUG: 137
// DEBUG: (132, 101)
// DEBUG: Operating on to
// DEBUG: 152
// DEBUG: (147, 101)
// DEBUG: Operating on see
// DEBUG: 174
// DEBUG: (169, 101)
// DEBUG: Operating on Mr
// DEBUG: 189
// DEBUG: (184, 101)
// DEBUG: Operating on Ford
// DEBUG: ['the', 'butler', 'that', 'I', 'wanted', 'to', 'see', 'Mr']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on on
// DEBUG: 30
// DEBUG: (25, 113)
// DEBUG: Operating on business.
// DEBUG: 94
// DEBUG: (89, 113)
// DEBUG: Operating on I
// DEBUG: 102
// DEBUG: (97, 113)
// DEBUG: Operating on had
// DEBUG: 124
// DEBUG: (119, 113)
// DEBUG: Operating on taken
// DEBUG: 160
// DEBUG: (155, 113)
// DEBUG: Operating on the
// DEBUG: 182
// DEBUG: (177, 113)
// DEBUG: Operating on precaution
// DEBUG: ['Ford', 'on', 'business.', 'I', 'had', 'taken', 'the']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (16, 125)
// DEBUG: Operating on to
// DEBUG: 36
// DEBUG: (31, 125)
// DEBUG: Operating on find
// DEBUG: 65
// DEBUG: (60, 125)
// DEBUG: Operating on out
// DEBUG: 87
// DEBUG: (82, 125)
// DEBUG: Operating on that
// DEBUG: 116
// DEBUG: (111, 125)
// DEBUG: Operating on he
// DEBUG: 131
// DEBUG: (126, 125)
// DEBUG: Operating on was
// DEBUG: 153
// DEBUG: (148, 125)
// DEBUG: Operating on not
// DEBUG: 175
// DEBUG: (170, 125)
// DEBUG: Operating on there.
// DEBUG: ['precaution', 'to', 'find', 'out', 'that', 'he', 'was', 'not']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (12, 137)
// DEBUG: Operating on He
// DEBUG: 32
// DEBUG: (27, 137)
// DEBUG: Operating on is
// DEBUG: 47
// DEBUG: (42, 137)
// DEBUG: Operating on at
// DEBUG: 62
// DEBUG: (57, 137)
// DEBUG: Operating on Droitwich.'
// DEBUG: 140
// DEBUG: ['quarter past twelve']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- The Little Nugget']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "Very well, dear,' she said. 'I", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "caught the 10.20 to Eastnor, which", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "isn't a bad train, if you ever want to", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "go down there. I arrived at a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "TIMESTRING, and went straight up to the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "house--you've never seen the house, of", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "course? It's quite charming--and told", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "the butler that I wanted to see Mr", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "Ford on business. I had taken the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "precaution to find out that he was not", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "quarter past twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- The Little Nugget", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("12:15 - What shall I think of that's liberating and refreshing? I'm in the mood when I open my window at night and look at the stars. Unfortunately it's 12.15 on a grey dull day, the aeroplanes are active - Virginia Woolf, A Writer's Diary: Being Extracts from the Diary of Virgina Woolf"));
// DEBUG: (5, 5)
// DEBUG: Operating on What
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on shall
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on I
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on think
// DEBUG: 119
// DEBUG: (114, 5)
// DEBUG: Operating on of
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on that's
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on liberating
// DEBUG: ['What', 'shall', 'I', 'think', 'of', "that's"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (16, 17)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 17)
// DEBUG: Operating on refreshing?
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on I'm
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on in
// DEBUG: 158
// DEBUG: (153, 17)
// DEBUG: Operating on the
// DEBUG: 180
// DEBUG: (175, 17)
// DEBUG: Operating on mood
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on when
// DEBUG: ['liberating', 'and', 'refreshing?', "I'm", 'in', 'the', 'mood']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on I
// DEBUG: 23
// DEBUG: (18, 29)
// DEBUG: Operating on open
// DEBUG: 52
// DEBUG: (47, 29)
// DEBUG: Operating on my
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on window
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on at
// DEBUG: 125
// DEBUG: (120, 29)
// DEBUG: Operating on night
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on and
// DEBUG: 183
// DEBUG: (178, 29)
// DEBUG: Operating on look
// DEBUG: ['when', 'I', 'open', 'my', 'window', 'at', 'night', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on at
// DEBUG: 30
// DEBUG: (25, 41)
// DEBUG: Operating on the
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on stars.
// DEBUG: 95
// DEBUG: (90, 41)
// DEBUG: Operating on Unfortunately
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on it's
// DEBUG: ['look', 'at', 'the', 'stars.', 'Unfortunately']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 122
// DEBUG: (117, 53)
// DEBUG: Operating on on
// DEBUG: 137
// DEBUG: (132, 53)
// DEBUG: Operating on a
// DEBUG: 145
// DEBUG: (140, 53)
// DEBUG: Operating on grey
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on dull
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on day,
// DEBUG: ["it's", 'TIMESTRING', 'on', 'a', 'grey', 'dull']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on the
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on aeroplanes
// DEBUG: 108
// DEBUG: (103, 65)
// DEBUG: Operating on are
// DEBUG: 130
// DEBUG: (125, 65)
// DEBUG: Operating on active
// DEBUG: 173
// DEBUG: ['12.15']
// DEBUG: drawing cursor (10, 53)
// DEBUG: ['- Virginia Woolf']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "What shall I think of that's", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "liberating and refreshing? I'm in the mood", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "when I open my window at night and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "look at the stars. Unfortunately", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "it's TIMESTRING on a grey dull", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(10, 53, "12.15", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- Virginia Woolf", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 12:16 for 0 quotations:
    case 736:
      Serial.println(F("No quotes for 12:16"));
      return;

    // Codegen for 12:17 for 1 quotations:
    case 737:
      Serial.println(F("Only one option for 12:17:"));
    Serial.println(F("12:17 - Kava ordered two glasses of coffee for himself and his beloved and some cake. When the pair left, exactly seventeen minutes after twelve, the club began to buzz with excitement. - Isaac Bashevis Singer, Vanvild Kava"));
// DEBUG: (5, 5)
// DEBUG: Operating on Kava
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on ordered
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on two
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on glasses
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on of
// DEBUG: 176
// DEBUG: (171, 5)
// DEBUG: Operating on coffee
// DEBUG: ['Kava', 'ordered', 'two', 'glasses', 'of']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on for
// DEBUG: 39
// DEBUG: (34, 17)
// DEBUG: Operating on himself
// DEBUG: 89
// DEBUG: (84, 17)
// DEBUG: Operating on and
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on his
// DEBUG: 133
// DEBUG: (128, 17)
// DEBUG: Operating on beloved
// DEBUG: 183
// DEBUG: (178, 17)
// DEBUG: Operating on and
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on some
// DEBUG: ['coffee', 'for', 'himself', 'and', 'his', 'beloved', 'and']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on cake.
// DEBUG: 51
// DEBUG: (46, 29)
// DEBUG: Operating on When
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on the
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on pair
// DEBUG: 131
// DEBUG: (126, 29)
// DEBUG: Operating on left,
// DEBUG: 167
// DEBUG: (162, 29)
// DEBUG: Operating on exactly
// DEBUG: ['some', 'cake.', 'When', 'the', 'pair', 'left,']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['exactly']
// DEBUG: drawing cursor (5, 41)
// DEBUG: []
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on the
// DEBUG: 44
// DEBUG: (39, 65)
// DEBUG: Operating on club
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on began
// DEBUG: 109
// DEBUG: (104, 65)
// DEBUG: Operating on to
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on buzz
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on with
// DEBUG: 182
// DEBUG: (177, 65)
// DEBUG: Operating on excitement.
// DEBUG: ['TIMESTRING,', 'the', 'club', 'began', 'to', 'buzz', 'with']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['seventeen minutes after twelve']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- Vanvild Kava']
// DEBUG: drawing cursor (109, 192)
    paint.Paint_DrawString_EN(5, 5, "Kava ordered two glasses of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "coffee for himself and his beloved and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "some cake. When the pair left,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "exactly", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "TIMESTRING, the club began to buzz with", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "seventeen minutes after twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(109, 192, "- Vanvild Kava", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:18 for 0 quotations:
    case 738:
      Serial.println(F("No quotes for 12:18"));
      return;

    // Codegen for 12:19 for 0 quotations:
    case 739:
      Serial.println(F("No quotes for 12:19"));
      return;

    // Codegen for 12:20 for 2 quotations:
    case 740:
      option = random(0, 2);
      Serial.print(F("2 options for 12:20. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("12:20 - By twelve-twenty in the afternoon, Vince was seated in a rattan chair with comfortable yellow and green cushions at a table by the windows in that same restaurant. He’d spotted Haines on entering. The doctor was at another window table, three away from Vince, half-screened by a potted palm. Haines was eating shrimp and drinking margaritas with a stunning blonde. She was wearing white slacks and a gaily striped tube-top, and half the men in the place were staring at her. - Dean Koontz, Watchers "));
// DEBUG: (5, 5)
// DEBUG: Operating on By
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 188
// DEBUG: (183, 5)
// DEBUG: Operating on in
// DEBUG: 203
// DEBUG: (198, 5)
// DEBUG: Operating on the
// DEBUG: ['By', 'TIMESTRING', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on afternoon,
// DEBUG: 85
// DEBUG: (80, 17)
// DEBUG: Operating on Vince
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on was
// DEBUG: 143
// DEBUG: (138, 17)
// DEBUG: Operating on seated
// DEBUG: 186
// DEBUG: (181, 17)
// DEBUG: Operating on in
// DEBUG: 201
// DEBUG: (196, 17)
// DEBUG: Operating on a
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on rattan
// DEBUG: ['the', 'afternoon,', 'Vince', 'was', 'seated', 'in', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on chair
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on with
// DEBUG: 82
// DEBUG: (77, 29)
// DEBUG: Operating on comfortable
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on yellow
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on and
// DEBUG: ['rattan', 'chair', 'with', 'comfortable', 'yellow']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on green
// DEBUG: 50
// DEBUG: (45, 41)
// DEBUG: Operating on cushions
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on at
// DEBUG: 122
// DEBUG: (117, 41)
// DEBUG: Operating on a
// DEBUG: 130
// DEBUG: (125, 41)
// DEBUG: Operating on table
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on by
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on the
// DEBUG: 203
// DEBUG: (198, 41)
// DEBUG: Operating on windows
// DEBUG: ['and', 'green', 'cushions', 'at', 'a', 'table', 'by', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on in
// DEBUG: 33
// DEBUG: (28, 53)
// DEBUG: Operating on that
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on same
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on restaurant.
// DEBUG: 169
// DEBUG: (164, 53)
// DEBUG: Operating on He’d
// DEBUG: 198
// DEBUG: (193, 53)
// DEBUG: Operating on spotted
// DEBUG: ['windows', 'in', 'that', 'same', 'restaurant.', 'He’d']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on Haines
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on on
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on entering.
// DEBUG: 140
// DEBUG: (135, 65)
// DEBUG: Operating on The
// DEBUG: 162
// DEBUG: (157, 65)
// DEBUG: Operating on doctor
// DEBUG: 205
// DEBUG: (200, 65)
// DEBUG: Operating on was
// DEBUG: ['spotted', 'Haines', 'on', 'entering.', 'The', 'doctor']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on at
// DEBUG: 29
// DEBUG: (24, 77)
// DEBUG: Operating on another
// DEBUG: 79
// DEBUG: (74, 77)
// DEBUG: Operating on window
// DEBUG: 122
// DEBUG: (117, 77)
// DEBUG: Operating on table,
// DEBUG: 165
// DEBUG: (160, 77)
// DEBUG: Operating on three
// DEBUG: 201
// DEBUG: (196, 77)
// DEBUG: Operating on away
// DEBUG: ['was', 'at', 'another', 'window', 'table,', 'three']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on from
// DEBUG: 44
// DEBUG: (39, 89)
// DEBUG: Operating on Vince,
// DEBUG: 87
// DEBUG: (82, 89)
// DEBUG: Operating on half-screened
// DEBUG: 179
// DEBUG: (174, 89)
// DEBUG: Operating on by
// DEBUG: 194
// DEBUG: (189, 89)
// DEBUG: Operating on a
// DEBUG: 202
// DEBUG: (197, 89)
// DEBUG: Operating on potted
// DEBUG: ['away', 'from', 'Vince,', 'half-screened', 'by', 'a']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (12, 101)
// DEBUG: Operating on palm.
// DEBUG: 53
// DEBUG: (48, 101)
// DEBUG: Operating on Haines
// DEBUG: 96
// DEBUG: (91, 101)
// DEBUG: Operating on was
// DEBUG: 118
// DEBUG: (113, 101)
// DEBUG: Operating on eating
// DEBUG: 161
// DEBUG: (156, 101)
// DEBUG: Operating on shrimp
// DEBUG: 204
// DEBUG: (199, 101)
// DEBUG: Operating on and
// DEBUG: ['potted', 'palm.', 'Haines', 'was', 'eating', 'shrimp']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (9, 113)
// DEBUG: Operating on drinking
// DEBUG: 71
// DEBUG: (66, 113)
// DEBUG: Operating on margaritas
// DEBUG: 142
// DEBUG: (137, 113)
// DEBUG: Operating on with
// DEBUG: 171
// DEBUG: (166, 113)
// DEBUG: Operating on a
// DEBUG: 179
// DEBUG: (174, 113)
// DEBUG: Operating on stunning
// DEBUG: ['and', 'drinking', 'margaritas', 'with', 'a']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on blonde.
// DEBUG: 69
// DEBUG: (64, 125)
// DEBUG: Operating on She
// DEBUG: 91
// DEBUG: (86, 125)
// DEBUG: Operating on was
// DEBUG: 113
// DEBUG: (108, 125)
// DEBUG: Operating on wearing
// DEBUG: 163
// DEBUG: (158, 125)
// DEBUG: Operating on white
// DEBUG: 199
// DEBUG: (194, 125)
// DEBUG: Operating on slacks
// DEBUG: ['stunning', 'blonde.', 'She', 'was', 'wearing', 'white']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (12, 137)
// DEBUG: Operating on and
// DEBUG: 39
// DEBUG: (34, 137)
// DEBUG: Operating on a
// DEBUG: 47
// DEBUG: (42, 137)
// DEBUG: Operating on gaily
// DEBUG: 83
// DEBUG: (78, 137)
// DEBUG: Operating on striped
// DEBUG: 133
// DEBUG: (128, 137)
// DEBUG: Operating on tube-top,
// DEBUG: 197
// DEBUG: (192, 137)
// DEBUG: Operating on and
// DEBUG: ['slacks', 'and', 'a', 'gaily', 'striped', 'tube-top,']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (9, 149)
// DEBUG: Operating on half
// DEBUG: 43
// DEBUG: (38, 149)
// DEBUG: Operating on the
// DEBUG: 65
// DEBUG: (60, 149)
// DEBUG: Operating on men
// DEBUG: 87
// DEBUG: (82, 149)
// DEBUG: Operating on in
// DEBUG: 102
// DEBUG: (97, 149)
// DEBUG: Operating on the
// DEBUG: 124
// DEBUG: (119, 149)
// DEBUG: Operating on place
// DEBUG: 160
// DEBUG: (155, 149)
// DEBUG: Operating on were
// DEBUG: 189
// DEBUG: (184, 149)
// DEBUG: Operating on staring
// DEBUG: ['and', 'half', 'the', 'men', 'in', 'the', 'place', 'were']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (13, 161)
// DEBUG: Operating on at
// DEBUG: 33
// DEBUG: (28, 161)
// DEBUG: Operating on her.
// DEBUG: 62
// DEBUG: ['twelve-twenty']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Dean Koontz, Watchers ']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "By TIMESTRING in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "the afternoon, Vince was seated in a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "rattan chair with comfortable yellow", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "and green cushions at a table by the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "windows in that same restaurant. He’d", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "spotted Haines on entering. The doctor", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "was at another window table, three", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "away from Vince, half-screened by a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "potted palm. Haines was eating shrimp", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "and drinking margaritas with a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "stunning blonde. She was wearing white", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "slacks and a gaily striped tube-top,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "and half the men in the place were", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "twelve-twenty", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Dean Koontz, Watchers ", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("12:20 - It is 12:20 in New York a Friday three days after Bastille day, yes it is 1959 and I go get a shoeshine because I will get off the 4:19 in Easthampton at 7:15 and then go straight to dinner and I don’t know the people who will feed me - Frank O'Hara, The Day Lady Died"));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on is
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on in
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on New
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on York
// DEBUG: ['It', 'is', 'TIMESTRING', 'in', 'New']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on a
// DEBUG: 23
// DEBUG: (18, 17)
// DEBUG: Operating on Friday
// DEBUG: 66
// DEBUG: (61, 17)
// DEBUG: Operating on three
// DEBUG: 102
// DEBUG: (97, 17)
// DEBUG: Operating on days
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on after
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on Bastille
// DEBUG: ['York', 'a', 'Friday', 'three', 'days', 'after']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (14, 29)
// DEBUG: Operating on day,
// DEBUG: 48
// DEBUG: (43, 29)
// DEBUG: Operating on yes
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on it
// DEBUG: 85
// DEBUG: (80, 29)
// DEBUG: Operating on is
// DEBUG: 100
// DEBUG: (95, 29)
// DEBUG: Operating on 1959
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on and
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on I
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on go
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on get
// DEBUG: 196
// DEBUG: (191, 29)
// DEBUG: Operating on a
// DEBUG: 204
// DEBUG: (199, 29)
// DEBUG: Operating on shoeshine
// DEBUG: ['Bastille', 'day,', 'yes', 'it', 'is', '1959', 'and', 'I', 'go', 'get', 'a']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on because
// DEBUG: 70
// DEBUG: (65, 41)
// DEBUG: Operating on I
// DEBUG: 78
// DEBUG: (73, 41)
// DEBUG: Operating on will
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on get
// DEBUG: 129
// DEBUG: (124, 41)
// DEBUG: Operating on off
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on the
// DEBUG: 173
// DEBUG: (168, 41)
// DEBUG: Operating on 4:19
// DEBUG: 202
// DEBUG: (197, 41)
// DEBUG: Operating on in
// DEBUG: ['shoeshine', 'because', 'I', 'will', 'get', 'off', 'the', '4:19']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (8, 53)
// DEBUG: Operating on Easthampton
// DEBUG: 91
// DEBUG: (86, 53)
// DEBUG: Operating on at
// DEBUG: 106
// DEBUG: (101, 53)
// DEBUG: Operating on 7:15
// DEBUG: 135
// DEBUG: (130, 53)
// DEBUG: Operating on and
// DEBUG: 157
// DEBUG: (152, 53)
// DEBUG: Operating on then
// DEBUG: 186
// DEBUG: (181, 53)
// DEBUG: Operating on go
// DEBUG: 201
// DEBUG: (196, 53)
// DEBUG: Operating on straight
// DEBUG: ['in', 'Easthampton', 'at', '7:15', 'and', 'then', 'go']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on to
// DEBUG: 34
// DEBUG: (29, 65)
// DEBUG: Operating on dinner
// DEBUG: 77
// DEBUG: (72, 65)
// DEBUG: Operating on and
// DEBUG: 99
// DEBUG: (94, 65)
// DEBUG: Operating on I
// DEBUG: 107
// DEBUG: (102, 65)
// DEBUG: Operating on don’t
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on know
// DEBUG: 172
// DEBUG: (167, 65)
// DEBUG: Operating on the
// DEBUG: 194
// DEBUG: (189, 65)
// DEBUG: Operating on people
// DEBUG: ['straight', 'to', 'dinner', 'and', 'I', 'don’t', 'know', 'the']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (12, 77)
// DEBUG: Operating on who
// DEBUG: 39
// DEBUG: (34, 77)
// DEBUG: Operating on will
// DEBUG: 68
// DEBUG: (63, 77)
// DEBUG: Operating on feed
// DEBUG: 97
// DEBUG: (92, 77)
// DEBUG: Operating on me
// DEBUG: 112
// DEBUG: ['12:20']
// DEBUG: drawing cursor (35, 5)
// DEBUG: ['- The Day Lady Died']
// DEBUG: drawing cursor (74, 192)
          paint.Paint_DrawString_EN(5, 5, "It is TIMESTRING in New", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "York a Friday three days after", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Bastille day, yes it is 1959 and I go get a", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "shoeshine because I will get off the 4:19", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "in Easthampton at 7:15 and then go", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "straight to dinner and I don’t know the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(35, 5, "12:20", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(74, 192, "- The Day Lady Died", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 12:21 for 1 quotations:
    case 741:
      Serial.println(F("Only one option for 12:21:"));
    Serial.println(F("12:21 - Jake think of something. PLEASE! Twelve twenty-one. - Stephen King, 11/22/63"));
// DEBUG: (5, 5)
// DEBUG: Operating on Jake
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on think
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on of
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on something.
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on PLEASE!
// DEBUG: 211
// DEBUG: (206, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Jake', 'think', 'of', 'something.', 'PLEASE!']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 207
// DEBUG: ['Twelve twenty-one']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Stephen King, 11/22/63']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "Jake think of something. PLEASE!", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Twelve twenty-one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Stephen King, 11/22/63", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:22 for 1 quotations:
    case 742:
      Serial.println(F("Only one option for 12:22:"));
    Serial.println(F("12:22 - By twenty-two minutes past twelve we leave, much too soon for our desires, this delightful spot, where the pilgrims are in the habit of bathing who come to visit the Jordan. - Félicien de Saulcy, Narrative of a Journey round the Dead Sea and in the Bible lands in 1850 and 1851"));
// DEBUG: (5, 5)
// DEBUG: Operating on By
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['By']
// DEBUG: drawing cursor (5, 5)
// DEBUG: []
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on we
// DEBUG: 36
// DEBUG: (31, 29)
// DEBUG: Operating on leave,
// DEBUG: 79
// DEBUG: (74, 29)
// DEBUG: Operating on much
// DEBUG: 108
// DEBUG: (103, 29)
// DEBUG: Operating on too
// DEBUG: 130
// DEBUG: (125, 29)
// DEBUG: Operating on soon
// DEBUG: 159
// DEBUG: (154, 29)
// DEBUG: Operating on for
// DEBUG: 181
// DEBUG: (176, 29)
// DEBUG: Operating on our
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on desires,
// DEBUG: ['TIMESTRING', 'we', 'leave,', 'much', 'too', 'soon', 'for', 'our']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on this
// DEBUG: 48
// DEBUG: (43, 41)
// DEBUG: Operating on delightful
// DEBUG: 119
// DEBUG: (114, 41)
// DEBUG: Operating on spot,
// DEBUG: 155
// DEBUG: (150, 41)
// DEBUG: Operating on where
// DEBUG: 191
// DEBUG: (186, 41)
// DEBUG: Operating on the
// DEBUG: ['desires,', 'this', 'delightful', 'spot,', 'where']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on pilgrims
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on are
// DEBUG: 93
// DEBUG: (88, 53)
// DEBUG: Operating on in
// DEBUG: 108
// DEBUG: (103, 53)
// DEBUG: Operating on the
// DEBUG: 130
// DEBUG: (125, 53)
// DEBUG: Operating on habit
// DEBUG: 166
// DEBUG: (161, 53)
// DEBUG: Operating on of
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on bathing
// DEBUG: ['the', 'pilgrims', 'are', 'in', 'the', 'habit', 'of']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (13, 65)
// DEBUG: Operating on who
// DEBUG: 40
// DEBUG: (35, 65)
// DEBUG: Operating on come
// DEBUG: 69
// DEBUG: (64, 65)
// DEBUG: Operating on to
// DEBUG: 84
// DEBUG: (79, 65)
// DEBUG: Operating on visit
// DEBUG: 120
// DEBUG: (115, 65)
// DEBUG: Operating on the
// DEBUG: 142
// DEBUG: (137, 65)
// DEBUG: Operating on Jordan.
// DEBUG: 192
// DEBUG: ['twenty-two minutes past twelve']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Félicien de Saulcy']
// DEBUG: drawing cursor (67, 192)
    paint.Paint_DrawString_EN(5, 5, "By", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "TIMESTRING we leave, much too soon for our", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "desires, this delightful spot, where", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "the pilgrims are in the habit of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "twenty-two minutes past twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(67, 192, "- Félicien de Saulcy", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:23 for 0 quotations:
    case 743:
      Serial.println(F("No quotes for 12:23"));
      return;

    // Codegen for 12:24 for 1 quotations:
    case 744:
      Serial.println(F("Only one option for 12:24:"));
    Serial.println(F("12:24 - 12:24 My legs are in total agony. I've been kneeling on hard tiles, cleaning the bath, for what seems like hours. There are little ridges where the tiles have dug into my knees, and I'm boiling hot and the cleaning chemicals are making me cough. All I want is a rest. But I can't stop for a moment. I am so behind ... - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on My
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on legs
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on are
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on in
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on total
// DEBUG: ['TIMESTRING', 'My', 'legs', 'are', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on agony.
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on I've
// DEBUG: 88
// DEBUG: (83, 17)
// DEBUG: Operating on been
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on kneeling
// DEBUG: 174
// DEBUG: (169, 17)
// DEBUG: Operating on on
// DEBUG: 189
// DEBUG: (184, 17)
// DEBUG: Operating on hard
// DEBUG: ['total', 'agony.', "I've", 'been', 'kneeling', 'on']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on tiles,
// DEBUG: 58
// DEBUG: (53, 29)
// DEBUG: Operating on cleaning
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on the
// DEBUG: 137
// DEBUG: (132, 29)
// DEBUG: Operating on bath,
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on for
// DEBUG: 195
// DEBUG: (190, 29)
// DEBUG: Operating on what
// DEBUG: ['hard', 'tiles,', 'cleaning', 'the', 'bath,', 'for']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (10, 41)
// DEBUG: Operating on seems
// DEBUG: 51
// DEBUG: (46, 41)
// DEBUG: Operating on like
// DEBUG: 80
// DEBUG: (75, 41)
// DEBUG: Operating on hours.
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on There
// DEBUG: 159
// DEBUG: (154, 41)
// DEBUG: Operating on are
// DEBUG: 181
// DEBUG: (176, 41)
// DEBUG: Operating on little
// DEBUG: ['what', 'seems', 'like', 'hours.', 'There', 'are']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on ridges
// DEBUG: 60
// DEBUG: (55, 53)
// DEBUG: Operating on where
// DEBUG: 96
// DEBUG: (91, 53)
// DEBUG: Operating on the
// DEBUG: 118
// DEBUG: (113, 53)
// DEBUG: Operating on tiles
// DEBUG: 154
// DEBUG: (149, 53)
// DEBUG: Operating on have
// DEBUG: 183
// DEBUG: (178, 53)
// DEBUG: Operating on dug
// DEBUG: 205
// DEBUG: (200, 53)
// DEBUG: Operating on into
// DEBUG: ['little', 'ridges', 'where', 'the', 'tiles', 'have', 'dug']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on my
// DEBUG: 30
// DEBUG: (25, 65)
// DEBUG: Operating on knees,
// DEBUG: 73
// DEBUG: (68, 65)
// DEBUG: Operating on and
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on I'm
// DEBUG: 117
// DEBUG: (112, 65)
// DEBUG: Operating on boiling
// DEBUG: 167
// DEBUG: (162, 65)
// DEBUG: Operating on hot
// DEBUG: 189
// DEBUG: (184, 65)
// DEBUG: Operating on and
// DEBUG: 211
// DEBUG: (206, 65)
// DEBUG: Operating on the
// DEBUG: ['into', 'my', 'knees,', 'and', "I'm", 'boiling', 'hot', 'and']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (9, 77)
// DEBUG: Operating on cleaning
// DEBUG: 71
// DEBUG: (66, 77)
// DEBUG: Operating on chemicals
// DEBUG: 135
// DEBUG: (130, 77)
// DEBUG: Operating on are
// DEBUG: 157
// DEBUG: (152, 77)
// DEBUG: Operating on making
// DEBUG: 200
// DEBUG: (195, 77)
// DEBUG: Operating on me
// DEBUG: ['the', 'cleaning', 'chemicals', 'are', 'making']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on cough.
// DEBUG: 56
// DEBUG: (51, 89)
// DEBUG: Operating on All
// DEBUG: 78
// DEBUG: (73, 89)
// DEBUG: Operating on I
// DEBUG: 86
// DEBUG: (81, 89)
// DEBUG: Operating on want
// DEBUG: 115
// DEBUG: (110, 89)
// DEBUG: Operating on is
// DEBUG: 130
// DEBUG: (125, 89)
// DEBUG: Operating on a
// DEBUG: 138
// DEBUG: (133, 89)
// DEBUG: Operating on rest.
// DEBUG: 174
// DEBUG: (169, 89)
// DEBUG: Operating on But
// DEBUG: 196
// DEBUG: (191, 89)
// DEBUG: Operating on I
// DEBUG: 204
// DEBUG: (199, 89)
// DEBUG: Operating on can't
// DEBUG: ['me', 'cough.', 'All', 'I', 'want', 'is', 'a', 'rest.', 'But', 'I']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (11, 101)
// DEBUG: Operating on stop
// DEBUG: 45
// DEBUG: (40, 101)
// DEBUG: Operating on for
// DEBUG: 67
// DEBUG: (62, 101)
// DEBUG: Operating on a
// DEBUG: 75
// DEBUG: (70, 101)
// DEBUG: Operating on moment.
// DEBUG: 125
// DEBUG: (120, 101)
// DEBUG: Operating on I
// DEBUG: 133
// DEBUG: (128, 101)
// DEBUG: Operating on am
// DEBUG: 148
// DEBUG: (143, 101)
// DEBUG: Operating on so
// DEBUG: 163
// DEBUG: (158, 101)
// DEBUG: Operating on behind
// DEBUG: 206
// DEBUG: (201, 101)
// DEBUG: Operating on ...
// DEBUG: ["can't", 'stop', 'for', 'a', 'moment.', 'I', 'am', 'so', 'behind']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['12:24']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "TIMESTRING My legs are in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "total agony. I've been kneeling on", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "hard tiles, cleaning the bath, for", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "what seems like hours. There are", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "little ridges where the tiles have dug", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "into my knees, and I'm boiling hot and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "the cleaning chemicals are making", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "me cough. All I want is a rest. But I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "can't stop for a moment. I am so behind", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 5, "12:24", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:25 for 1 quotations:
    case 745:
      Serial.println(F("Only one option for 12:25:"));
    Serial.println(F("12:25 - Boys, do it now. God's time is 12.25. - James Joyce, Ulysses"));
// DEBUG: (5, 5)
// DEBUG: Operating on Boys,
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on do
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on it
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on now.
// DEBUG: 105
// DEBUG: (100, 5)
// DEBUG: Operating on God's
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on time
// DEBUG: 170
// DEBUG: (165, 5)
// DEBUG: Operating on is
// DEBUG: 185
// DEBUG: (180, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Boys,', 'do', 'it', 'now.', "God's", 'time', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 123
// DEBUG: ['12.25']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- James Joyce, Ulysses']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "Boys, do it now. God's time is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "12.25", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- James Joyce, Ulysses", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:26 for 1 quotations:
    case 746:
      Serial.println(F("Only one option for 12:26:"));
    Serial.println(F("12:26 - 12.25pm. 26. 27. Every time Billy saved a shot he looked heartbroken - Barry Hines, A Kestrel For a Knave"));
// DEBUG: (5, 5)
// DEBUG: Operating on 12.25pm.
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 160
// DEBUG: (155, 5)
// DEBUG: Operating on 27.
// DEBUG: 182
// DEBUG: (177, 5)
// DEBUG: Operating on Every
// DEBUG: ['12.25pm.', 'TIMESTRING', '27.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on time
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on Billy
// DEBUG: 81
// DEBUG: (76, 17)
// DEBUG: Operating on saved
// DEBUG: 117
// DEBUG: (112, 17)
// DEBUG: Operating on a
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on shot
// DEBUG: 154
// DEBUG: (149, 17)
// DEBUG: Operating on he
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on looked
// DEBUG: ['Every', 'time', 'Billy', 'saved', 'a', 'shot', 'he']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on heartbroken
// DEBUG: 95
// DEBUG: ['26.']
// DEBUG: drawing cursor (62, 5)
// DEBUG: ['- A Kestrel For a Knave']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "12.25pm. TIMESTRING 27.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "Every time Billy saved a shot he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(62, 5, "26.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- A Kestrel For a Knave", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:27 for 0 quotations:
    case 747:
      Serial.println(F("No quotes for 12:27"));
      return;

    // Codegen for 12:28 for 1 quotations:
    case 748:
      Serial.println(F("Only one option for 12:28:"));
    Serial.println(F("12:28 - The DRINK CHEER-UP COFFEE wall clock read 12.28. - Stephen King, 11/22/63"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on DRINK
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on CHEER-UP
// DEBUG: 125
// DEBUG: (120, 5)
// DEBUG: Operating on COFFEE
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on wall
// DEBUG: 197
// DEBUG: (192, 5)
// DEBUG: Operating on clock
// DEBUG: ['The', 'DRINK', 'CHEER-UP', 'COFFEE', 'wall']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on read
// DEBUG: 45
// DEBUG: (40, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 159
// DEBUG: ['12.28']
// DEBUG: drawing cursor (40, 17)
// DEBUG: ['- Stephen King, 11/22/63']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "The DRINK CHEER-UP COFFEE wall", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(40, 17, "12.28", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- Stephen King, 11/22/63", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:29 for 0 quotations:
    case 749:
      Serial.println(F("No quotes for 12:29"));
      return;

    // Codegen for 12:30 for 4 quotations:
    case 750:
      option = random(0, 4);
      Serial.print(F("4 options for 12:30. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("12:30 - You'll never believe this but (in Spain) they are two hours late for ever meal - two hours Fanny - (can we lunch at half-past twelve today?) - Nancy Mitford, Love in a Cold Climate "));
// DEBUG: (5, 5)
// DEBUG: Operating on You'll
// DEBUG: 53
// DEBUG: (48, 5)
// DEBUG: Operating on never
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on believe
// DEBUG: 139
// DEBUG: (134, 5)
// DEBUG: Operating on this
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on but
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on (in
// DEBUG: ["You'll", 'never', 'believe', 'this', 'but']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on Spain)
// DEBUG: 57
// DEBUG: (52, 17)
// DEBUG: Operating on they
// DEBUG: 86
// DEBUG: (81, 17)
// DEBUG: Operating on are
// DEBUG: 108
// DEBUG: (103, 17)
// DEBUG: Operating on two
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on hours
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on late
// DEBUG: 195
// DEBUG: (190, 17)
// DEBUG: Operating on for
// DEBUG: ['(in', 'Spain)', 'they', 'are', 'two', 'hours', 'late']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on ever
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on meal
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on -
// DEBUG: 80
// DEBUG: (75, 29)
// DEBUG: Operating on two
// DEBUG: 102
// DEBUG: (97, 29)
// DEBUG: Operating on hours
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on Fanny
// DEBUG: 174
// DEBUG: (169, 29)
// DEBUG: Operating on -
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on (can
// DEBUG: 211
// DEBUG: (206, 29)
// DEBUG: Operating on we
// DEBUG: ['for', 'ever', 'meal', '-', 'two', 'hours', 'Fanny', '-', '(can']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (8, 41)
// DEBUG: Operating on lunch
// DEBUG: 49
// DEBUG: (44, 41)
// DEBUG: Operating on at
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['we', 'lunch', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on today?)
// DEBUG: 71
// DEBUG: ['half-past twelve']
// DEBUG: drawing cursor (59, 41)
// DEBUG: ['- Love in a Cold Climate']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "You'll never believe this but", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "(in Spain) they are two hours late", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "for ever meal - two hours Fanny - (can", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "we lunch at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(59, 41, "half-past twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- Love in a Cold Climate", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("12:30 - 12.30 p.m. Lunch - Mark Haddon, The Curious Incident of the Dog in the Night-time "));
// DEBUG: (5, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 152
// DEBUG: (147, 5)
// DEBUG: Operating on Lunch
// DEBUG: 188
// DEBUG: ['12.30 p.m.']
// DEBUG: drawing cursor (5, 5)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
          paint.Paint_DrawString_EN(5, 5, "12.30 p.m.", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
          return;
        case 2:
          Serial.println(F("12:30 - At half past twelve, when Catherine’s anxious attention to the weather was over and she could no longer claim any merit from its amendment, the sky began voluntarily to clear. A gleam of sunshine took her quite by surprise; she looked round; the clouds were parting, and she instantly returned to the window to watch over and encourage the happy appearance. Ten minutes more made it certain that a bright afternoon would succeed, and justified the opinion of Mrs. Allen, who had “always thought it would clear up.” - Jane Austen, Northanger Abbey "));
// DEBUG: (5, 5)
// DEBUG: Operating on At
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['At']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on when
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on Catherine’s
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on anxious
// DEBUG: 179
// DEBUG: (174, 17)
// DEBUG: Operating on attention
// DEBUG: ['TIMESTRING,', 'when', 'Catherine’s', 'anxious']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on to
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on the
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on weather
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on was
// DEBUG: 129
// DEBUG: (124, 29)
// DEBUG: Operating on over
// DEBUG: 158
// DEBUG: (153, 29)
// DEBUG: Operating on and
// DEBUG: 180
// DEBUG: (175, 29)
// DEBUG: Operating on she
// DEBUG: 202
// DEBUG: (197, 29)
// DEBUG: Operating on could
// DEBUG: ['attention', 'to', 'the', 'weather', 'was', 'over', 'and', 'she']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (11, 41)
// DEBUG: Operating on no
// DEBUG: 31
// DEBUG: (26, 41)
// DEBUG: Operating on longer
// DEBUG: 74
// DEBUG: (69, 41)
// DEBUG: Operating on claim
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on any
// DEBUG: 132
// DEBUG: (127, 41)
// DEBUG: Operating on merit
// DEBUG: 168
// DEBUG: (163, 41)
// DEBUG: Operating on from
// DEBUG: 197
// DEBUG: (192, 41)
// DEBUG: Operating on its
// DEBUG: ['could', 'no', 'longer', 'claim', 'any', 'merit', 'from']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on amendment,
// DEBUG: 85
// DEBUG: (80, 53)
// DEBUG: Operating on the
// DEBUG: 107
// DEBUG: (102, 53)
// DEBUG: Operating on sky
// DEBUG: 129
// DEBUG: (124, 53)
// DEBUG: Operating on began
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on voluntarily
// DEBUG: ['its', 'amendment,', 'the', 'sky', 'began']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (17, 65)
// DEBUG: Operating on to
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on clear.
// DEBUG: 80
// DEBUG: (75, 65)
// DEBUG: Operating on A
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on gleam
// DEBUG: 124
// DEBUG: (119, 65)
// DEBUG: Operating on of
// DEBUG: 139
// DEBUG: (134, 65)
// DEBUG: Operating on sunshine
// DEBUG: 196
// DEBUG: (191, 65)
// DEBUG: Operating on took
// DEBUG: ['voluntarily', 'to', 'clear.', 'A', 'gleam', 'of', 'sunshine']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on her
// DEBUG: 37
// DEBUG: (32, 77)
// DEBUG: Operating on quite
// DEBUG: 73
// DEBUG: (68, 77)
// DEBUG: Operating on by
// DEBUG: 88
// DEBUG: (83, 77)
// DEBUG: Operating on surprise;
// DEBUG: 152
// DEBUG: (147, 77)
// DEBUG: Operating on she
// DEBUG: 174
// DEBUG: (169, 77)
// DEBUG: Operating on looked
// DEBUG: ['took', 'her', 'quite', 'by', 'surprise;', 'she']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on round;
// DEBUG: 60
// DEBUG: (55, 89)
// DEBUG: Operating on the
// DEBUG: 82
// DEBUG: (77, 89)
// DEBUG: Operating on clouds
// DEBUG: 125
// DEBUG: (120, 89)
// DEBUG: Operating on were
// DEBUG: 154
// DEBUG: (149, 89)
// DEBUG: Operating on parting,
// DEBUG: 211
// DEBUG: (206, 89)
// DEBUG: Operating on and
// DEBUG: ['looked', 'round;', 'the', 'clouds', 'were', 'parting,']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on she
// DEBUG: 36
// DEBUG: (31, 101)
// DEBUG: Operating on instantly
// DEBUG: 100
// DEBUG: (95, 101)
// DEBUG: Operating on returned
// DEBUG: 157
// DEBUG: (152, 101)
// DEBUG: Operating on to
// DEBUG: 172
// DEBUG: (167, 101)
// DEBUG: Operating on the
// DEBUG: 194
// DEBUG: (189, 101)
// DEBUG: Operating on window
// DEBUG: ['and', 'she', 'instantly', 'returned', 'to', 'the']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (12, 113)
// DEBUG: Operating on to
// DEBUG: 32
// DEBUG: (27, 113)
// DEBUG: Operating on watch
// DEBUG: 68
// DEBUG: (63, 113)
// DEBUG: Operating on over
// DEBUG: 97
// DEBUG: (92, 113)
// DEBUG: Operating on and
// DEBUG: 119
// DEBUG: (114, 113)
// DEBUG: Operating on encourage
// DEBUG: 183
// DEBUG: (178, 113)
// DEBUG: Operating on the
// DEBUG: 205
// DEBUG: (200, 113)
// DEBUG: Operating on happy
// DEBUG: ['window', 'to', 'watch', 'over', 'and', 'encourage', 'the']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (11, 125)
// DEBUG: Operating on appearance.
// DEBUG: 94
// DEBUG: (89, 125)
// DEBUG: Operating on Ten
// DEBUG: 116
// DEBUG: (111, 125)
// DEBUG: Operating on minutes
// DEBUG: 166
// DEBUG: (161, 125)
// DEBUG: Operating on more
// DEBUG: 195
// DEBUG: (190, 125)
// DEBUG: Operating on made
// DEBUG: ['happy', 'appearance.', 'Ten', 'minutes', 'more']
// DEBUG: drawing cursor (5, 125)
// DEBUG: (10, 137)
// DEBUG: Operating on it
// DEBUG: 30
// DEBUG: (25, 137)
// DEBUG: Operating on certain
// DEBUG: 80
// DEBUG: (75, 137)
// DEBUG: Operating on that
// DEBUG: 109
// DEBUG: (104, 137)
// DEBUG: Operating on a
// DEBUG: 117
// DEBUG: (112, 137)
// DEBUG: Operating on bright
// DEBUG: 160
// DEBUG: (155, 137)
// DEBUG: Operating on afternoon
// DEBUG: ['made', 'it', 'certain', 'that', 'a', 'bright']
// DEBUG: drawing cursor (5, 137)
// DEBUG: (15, 149)
// DEBUG: Operating on would
// DEBUG: 56
// DEBUG: (51, 149)
// DEBUG: Operating on succeed,
// DEBUG: 113
// DEBUG: (108, 149)
// DEBUG: Operating on and
// DEBUG: 135
// DEBUG: (130, 149)
// DEBUG: Operating on justified
// DEBUG: 199
// DEBUG: (194, 149)
// DEBUG: Operating on the
// DEBUG: ['afternoon', 'would', 'succeed,', 'and', 'justified']
// DEBUG: drawing cursor (5, 149)
// DEBUG: (9, 161)
// DEBUG: Operating on opinion
// DEBUG: 64
// DEBUG: (59, 161)
// DEBUG: Operating on of
// DEBUG: 79
// DEBUG: (74, 161)
// DEBUG: Operating on Mrs.
// DEBUG: 108
// DEBUG: (103, 161)
// DEBUG: Operating on Allen,
// DEBUG: 151
// DEBUG: (146, 161)
// DEBUG: Operating on who
// DEBUG: 173
// DEBUG: (168, 161)
// DEBUG: Operating on had
// DEBUG: 195
// DEBUG: (190, 161)
// DEBUG: Operating on “always
// DEBUG: ['the', 'opinion', 'of', 'Mrs.', 'Allen,', 'who', 'had']
// DEBUG: drawing cursor (5, 161)
// DEBUG: (13, 173)
// DEBUG: Operating on thought
// DEBUG: 68
// DEBUG: (63, 173)
// DEBUG: Operating on it
// DEBUG: 83
// DEBUG: (78, 173)
// DEBUG: Operating on would
// DEBUG: 119
// DEBUG: (114, 173)
// DEBUG: Operating on clear
// DEBUG: 155
// DEBUG: (150, 173)
// DEBUG: Operating on up.”
// DEBUG: 184
// DEBUG: ['half past twelve']
// DEBUG: drawing cursor (20, 5)
// DEBUG: ['- Northanger Abbey']
// DEBUG: drawing cursor (81, 192)
          paint.Paint_DrawString_EN(5, 5, "At", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "TIMESTRING, when Catherine’s anxious", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "attention to the weather was over and she", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "could no longer claim any merit from", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "its amendment, the sky began", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "voluntarily to clear. A gleam of sunshine", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "took her quite by surprise; she", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "looked round; the clouds were parting,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 101, "and she instantly returned to the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 113, "window to watch over and encourage the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 125, "happy appearance. Ten minutes more", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 137, "made it certain that a bright", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 149, "afternoon would succeed, and justified", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 161, "the opinion of Mrs. Allen, who had", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(20, 5, "half past twelve", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(81, 192, "- Northanger Abbey", &Font12, WHITE, BLACK);
          return;
        case 3:
          Serial.println(F("12:30 - Tuesday, 12.30pm… Baker, California… Into the Ballantine Ale now, zombie drunk and nervous. I recognize this feeling: three or four days of booze, drugs, sun, no sleep and burned out adrenalin reserves – a giddy, quavering sort of high that means the crash is coming. But when? How much longer? - Hunter S. Thompson, Fear and Loathing in Las Vegas"));
// DEBUG: (5, 5)
// DEBUG: Operating on Tuesday,
// DEBUG: 67
// DEBUG: (62, 5)
// DEBUG: Operating on TIMESTRING…
// DEBUG: Wrorking on the timestring
// DEBUG: 195
// DEBUG: (190, 5)
// DEBUG: Operating on Baker,
// DEBUG: ['Tuesday,', 'TIMESTRING…']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on California…
// DEBUG: 95
// DEBUG: (90, 17)
// DEBUG: Operating on Into
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on Ballantine
// DEBUG: ['Baker,', 'California…', 'Into', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (16, 29)
// DEBUG: Operating on Ale
// DEBUG: 43
// DEBUG: (38, 29)
// DEBUG: Operating on now,
// DEBUG: 72
// DEBUG: (67, 29)
// DEBUG: Operating on zombie
// DEBUG: 115
// DEBUG: (110, 29)
// DEBUG: Operating on drunk
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on and
// DEBUG: 173
// DEBUG: (168, 29)
// DEBUG: Operating on nervous.
// DEBUG: ['Ballantine', 'Ale', 'now,', 'zombie', 'drunk', 'and']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (14, 41)
// DEBUG: Operating on I
// DEBUG: 27
// DEBUG: (22, 41)
// DEBUG: Operating on recognize
// DEBUG: 91
// DEBUG: (86, 41)
// DEBUG: Operating on this
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on feeling:
// DEBUG: 177
// DEBUG: (172, 41)
// DEBUG: Operating on three
// DEBUG: ['nervous.', 'I', 'recognize', 'this', 'feeling:']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on or
// DEBUG: 31
// DEBUG: (26, 53)
// DEBUG: Operating on four
// DEBUG: 60
// DEBUG: (55, 53)
// DEBUG: Operating on days
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on of
// DEBUG: 104
// DEBUG: (99, 53)
// DEBUG: Operating on booze,
// DEBUG: 147
// DEBUG: (142, 53)
// DEBUG: Operating on drugs,
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on sun,
// DEBUG: ['three', 'or', 'four', 'days', 'of', 'booze,', 'drugs,']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on no
// DEBUG: 30
// DEBUG: (25, 65)
// DEBUG: Operating on sleep
// DEBUG: 66
// DEBUG: (61, 65)
// DEBUG: Operating on and
// DEBUG: 88
// DEBUG: (83, 65)
// DEBUG: Operating on burned
// DEBUG: 131
// DEBUG: (126, 65)
// DEBUG: Operating on out
// DEBUG: 153
// DEBUG: (148, 65)
// DEBUG: Operating on adrenalin
// DEBUG: ['sun,', 'no', 'sleep', 'and', 'burned', 'out']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (15, 77)
// DEBUG: Operating on reserves
// DEBUG: 77
// DEBUG: (72, 77)
// DEBUG: Operating on –
// DEBUG: 85
// DEBUG: (80, 77)
// DEBUG: Operating on a
// DEBUG: 93
// DEBUG: (88, 77)
// DEBUG: Operating on giddy,
// DEBUG: 136
// DEBUG: (131, 77)
// DEBUG: Operating on quavering
// DEBUG: 200
// DEBUG: (195, 77)
// DEBUG: Operating on sort
// DEBUG: ['adrenalin', 'reserves', '–', 'a', 'giddy,', 'quavering']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on of
// DEBUG: 30
// DEBUG: (25, 89)
// DEBUG: Operating on high
// DEBUG: 59
// DEBUG: (54, 89)
// DEBUG: Operating on that
// DEBUG: 88
// DEBUG: (83, 89)
// DEBUG: Operating on means
// DEBUG: 124
// DEBUG: (119, 89)
// DEBUG: Operating on the
// DEBUG: 146
// DEBUG: (141, 89)
// DEBUG: Operating on crash
// DEBUG: 182
// DEBUG: (177, 89)
// DEBUG: Operating on is
// DEBUG: 197
// DEBUG: (192, 89)
// DEBUG: Operating on coming.
// DEBUG: ['sort', 'of', 'high', 'that', 'means', 'the', 'crash', 'is']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on But
// DEBUG: 40
// DEBUG: (35, 101)
// DEBUG: Operating on when?
// DEBUG: 76
// DEBUG: (71, 101)
// DEBUG: Operating on How
// DEBUG: 98
// DEBUG: (93, 101)
// DEBUG: Operating on much
// DEBUG: 127
// DEBUG: (122, 101)
// DEBUG: Operating on longer?
// DEBUG: 177
// DEBUG: ['12.30pm']
// DEBUG: drawing cursor (62, 5)
// DEBUG: ['- Hunter S. Thompson']
// DEBUG: drawing cursor (67, 192)
          paint.Paint_DrawString_EN(5, 5, "Tuesday, TIMESTRING…", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "Baker, California… Into the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "Ballantine Ale now, zombie drunk and", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "nervous. I recognize this feeling:", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "three or four days of booze, drugs,", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "sun, no sleep and burned out", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "adrenalin reserves – a giddy, quavering", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "sort of high that means the crash is", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(62, 5, "12.30pm", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(67, 192, "- Hunter S. Thompson", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 12:31 for 0 quotations:
    case 751:
      Serial.println(F("No quotes for 12:31"));
      return;

    // Codegen for 12:32 for 2 quotations:
    case 752:
      option = random(0, 2);
      Serial.print(F("2 options for 12:32. Picking option "));
      Serial.print(option);
      Serial.println(":");
      switch (option) {
        case 0:
          Serial.println(F("12:32 - 12:30 What is wrong with this bleach bottle? Which way is the nozzle pointing, anyway? I'm turning it round in confusion, peering at the arrows on the plastic ... Why won't anything come out? OK, I'm going to squeeze it really, really hard- That nearly got my eye. 12:32 FUCK. What has it done to my HAIR? - Sophie Kinsella, The Undomestic Goddess "));
// DEBUG: (5, 5)
// DEBUG: Operating on 12:30
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on What
// DEBUG: 75
// DEBUG: (70, 5)
// DEBUG: Operating on is
// DEBUG: 90
// DEBUG: (85, 5)
// DEBUG: Operating on wrong
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on with
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on this
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on bleach
// DEBUG: ['12:30', 'What', 'is', 'wrong', 'with', 'this']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on bottle?
// DEBUG: 67
// DEBUG: (62, 17)
// DEBUG: Operating on Which
// DEBUG: 103
// DEBUG: (98, 17)
// DEBUG: Operating on way
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on is
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on the
// DEBUG: 162
// DEBUG: (157, 17)
// DEBUG: Operating on nozzle
// DEBUG: 205
// DEBUG: (200, 17)
// DEBUG: Operating on pointing,
// DEBUG: ['bleach', 'bottle?', 'Which', 'way', 'is', 'the', 'nozzle']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (15, 29)
// DEBUG: Operating on anyway?
// DEBUG: 70
// DEBUG: (65, 29)
// DEBUG: Operating on I'm
// DEBUG: 92
// DEBUG: (87, 29)
// DEBUG: Operating on turning
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on it
// DEBUG: 157
// DEBUG: (152, 29)
// DEBUG: Operating on round
// DEBUG: 193
// DEBUG: (188, 29)
// DEBUG: Operating on in
// DEBUG: 208
// DEBUG: (203, 29)
// DEBUG: Operating on confusion,
// DEBUG: ['pointing,', 'anyway?', "I'm", 'turning', 'it', 'round', 'in']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on peering
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on at
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on arrows
// DEBUG: 151
// DEBUG: (146, 41)
// DEBUG: Operating on on
// DEBUG: 166
// DEBUG: (161, 41)
// DEBUG: Operating on the
// DEBUG: 188
// DEBUG: (183, 41)
// DEBUG: Operating on plastic
// DEBUG: ['confusion,', 'peering', 'at', 'the', 'arrows', 'on', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (13, 53)
// DEBUG: Operating on ...
// DEBUG: 40
// DEBUG: (35, 53)
// DEBUG: Operating on Why
// DEBUG: 62
// DEBUG: (57, 53)
// DEBUG: Operating on won't
// DEBUG: 98
// DEBUG: (93, 53)
// DEBUG: Operating on anything
// DEBUG: 155
// DEBUG: (150, 53)
// DEBUG: Operating on come
// DEBUG: 184
// DEBUG: (179, 53)
// DEBUG: Operating on out?
// DEBUG: ['plastic', '...', 'Why', "won't", 'anything', 'come']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on OK,
// DEBUG: 37
// DEBUG: (32, 65)
// DEBUG: Operating on I'm
// DEBUG: 59
// DEBUG: (54, 65)
// DEBUG: Operating on going
// DEBUG: 95
// DEBUG: (90, 65)
// DEBUG: Operating on to
// DEBUG: 110
// DEBUG: (105, 65)
// DEBUG: Operating on squeeze
// DEBUG: 160
// DEBUG: (155, 65)
// DEBUG: Operating on it
// DEBUG: 175
// DEBUG: (170, 65)
// DEBUG: Operating on really,
// DEBUG: ['out?', 'OK,', "I'm", 'going', 'to', 'squeeze', 'it']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (13, 77)
// DEBUG: Operating on really
// DEBUG: 61
// DEBUG: (56, 77)
// DEBUG: Operating on hard-
// DEBUG: 97
// DEBUG: (92, 77)
// DEBUG: Operating on That
// DEBUG: 126
// DEBUG: (121, 77)
// DEBUG: Operating on nearly
// DEBUG: 169
// DEBUG: (164, 77)
// DEBUG: Operating on got
// DEBUG: 191
// DEBUG: (186, 77)
// DEBUG: Operating on my
// DEBUG: 206
// DEBUG: (201, 77)
// DEBUG: Operating on eye.
// DEBUG: ['really,', 'really', 'hard-', 'That', 'nearly', 'got', 'my']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (10, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 122
// DEBUG: (117, 89)
// DEBUG: Operating on FUCK.
// DEBUG: 158
// DEBUG: (153, 89)
// DEBUG: Operating on What
// DEBUG: 187
// DEBUG: (182, 89)
// DEBUG: Operating on has
// DEBUG: 209
// DEBUG: (204, 89)
// DEBUG: Operating on it
// DEBUG: ['eye.', 'TIMESTRING', 'FUCK.', 'What', 'has']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (8, 101)
// DEBUG: Operating on done
// DEBUG: 42
// DEBUG: (37, 101)
// DEBUG: Operating on to
// DEBUG: 57
// DEBUG: (52, 101)
// DEBUG: Operating on my
// DEBUG: 72
// DEBUG: (67, 101)
// DEBUG: Operating on HAIR?
// DEBUG: 108
// DEBUG: ['12:32']
// DEBUG: drawing cursor (10, 89)
// DEBUG: ['- The Undomestic Goddess']
// DEBUG: drawing cursor (39, 192)
          paint.Paint_DrawString_EN(5, 5, "12:30 What is wrong with this", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "bleach bottle? Which way is the nozzle", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "pointing, anyway? I'm turning it round in", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "confusion, peering at the arrows on the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "plastic ... Why won't anything come", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 65, "out? OK, I'm going to squeeze it", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 77, "really, really hard- That nearly got my", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 89, "eye. TIMESTRING FUCK. What has", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(10, 89, "12:32", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(39, 192, "- The Undomestic Goddess", &Font12, WHITE, BLACK);
          return;
        case 1:
          Serial.println(F("12:32 - A chutney-biting brigadier named Boyd-Boyd fixed an appointment on the 'phone with Oxted, at Hornborough Station, for the twelve thirty-two. He was to deliver the goods. - Stacy Aumonier, Extremely Entertaining Short Stories"));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on chutney-biting
// DEBUG: 117
// DEBUG: (112, 5)
// DEBUG: Operating on brigadier
// DEBUG: 181
// DEBUG: (176, 5)
// DEBUG: Operating on named
// DEBUG: ['A', 'chutney-biting', 'brigadier']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on Boyd-Boyd
// DEBUG: 80
// DEBUG: (75, 17)
// DEBUG: Operating on fixed
// DEBUG: 116
// DEBUG: (111, 17)
// DEBUG: Operating on an
// DEBUG: 131
// DEBUG: (126, 17)
// DEBUG: Operating on appointment
// DEBUG: 209
// DEBUG: (204, 17)
// DEBUG: Operating on on
// DEBUG: ['named', 'Boyd-Boyd', 'fixed', 'an', 'appointment']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on 'phone
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on with
// DEBUG: 107
// DEBUG: (102, 29)
// DEBUG: Operating on Oxted,
// DEBUG: 150
// DEBUG: (145, 29)
// DEBUG: Operating on at
// DEBUG: 165
// DEBUG: (160, 29)
// DEBUG: Operating on Hornborough
// DEBUG: ['on', 'the', "'phone", 'with', 'Oxted,', 'at']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on Station,
// DEBUG: 79
// DEBUG: (74, 41)
// DEBUG: Operating on for
// DEBUG: 101
// DEBUG: (96, 41)
// DEBUG: Operating on the
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['Hornborough', 'Station,', 'for', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: 207
// DEBUG: (202, 53)
// DEBUG: Operating on He
// DEBUG: ['TIMESTRING.']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on was
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on to
// DEBUG: 50
// DEBUG: (45, 65)
// DEBUG: Operating on deliver
// DEBUG: 100
// DEBUG: (95, 65)
// DEBUG: Operating on the
// DEBUG: 122
// DEBUG: (117, 65)
// DEBUG: Operating on goods.
// DEBUG: 165
// DEBUG: ['twelve thirty-two']
// DEBUG: drawing cursor (5, 53)
// DEBUG: ['- Stacy Aumonier']
// DEBUG: drawing cursor (95, 192)
          paint.Paint_DrawString_EN(5, 5, "A chutney-biting brigadier", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 17, "named Boyd-Boyd fixed an appointment", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 29, "on the 'phone with Oxted, at", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 41, "Hornborough Station, for the", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "TIMESTRING.", &Font12, WHITE, BLACK);
          paint.Paint_DrawString_EN(5, 53, "twelve thirty-two", &Font12, BLACK, WHITE);
          paint.Paint_DrawString_EN(95, 192, "- Stacy Aumonier", &Font12, WHITE, BLACK);
          return;
      } // end switch (option)

    // Codegen for 12:33 for 1 quotations:
    case 753:
      Serial.println(F("Only one option for 12:33:"));
    Serial.println(F("12:33 - It's 12.33 now and I could do it, the station is just down that side road there. - Dorothy L. Sayers, Five Red Herrings"));
// DEBUG: (5, 5)
// DEBUG: Operating on It's
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on now
// DEBUG: 168
// DEBUG: (163, 5)
// DEBUG: Operating on and
// DEBUG: 190
// DEBUG: (185, 5)
// DEBUG: Operating on I
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on could
// DEBUG: ["It's", 'TIMESTRING', 'now', 'and', 'I']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on do
// DEBUG: 31
// DEBUG: (26, 17)
// DEBUG: Operating on it,
// DEBUG: 53
// DEBUG: (48, 17)
// DEBUG: Operating on the
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on station
// DEBUG: 125
// DEBUG: (120, 17)
// DEBUG: Operating on is
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on just
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on down
// DEBUG: 198
// DEBUG: (193, 17)
// DEBUG: Operating on that
// DEBUG: ['could', 'do', 'it,', 'the', 'station', 'is', 'just', 'down']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on side
// DEBUG: 44
// DEBUG: (39, 29)
// DEBUG: Operating on road
// DEBUG: 73
// DEBUG: (68, 29)
// DEBUG: Operating on there.
// DEBUG: 116
// DEBUG: ['12.33']
// DEBUG: drawing cursor (34, 5)
// DEBUG: ['- Five Red Herrings']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "It's TIMESTRING now and I", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "could do it, the station is just down", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(34, 5, "12.33", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Five Red Herrings", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:34 for 0 quotations:
    case 754:
      Serial.println(F("No quotes for 12:34"));
      return;

    // Codegen for 12:35 for 1 quotations:
    case 755:
      Serial.println(F("Only one option for 12:35:"));
    Serial.println(F("12:35 - As surely as Apthorpe was marked for early promotion, Trimmer was marked for ignominy. That morning he had appeared at the precise time stated in orders. Everyone else had been waiting five minutes and Colour Sergeant Cork called out the marker just as Trimmer appeared. So it was twelve-thirty-five when they were dismissed. - Evelyn Waugh, Men At Arms"));
// DEBUG: (5, 5)
// DEBUG: Operating on As
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on surely
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on as
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on Apthorpe
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on was
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on marked
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on for
// DEBUG: ['As', 'surely', 'as', 'Apthorpe', 'was', 'marked']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on early
// DEBUG: 50
// DEBUG: (45, 17)
// DEBUG: Operating on promotion,
// DEBUG: 121
// DEBUG: (116, 17)
// DEBUG: Operating on Trimmer
// DEBUG: 171
// DEBUG: (166, 17)
// DEBUG: Operating on was
// DEBUG: 193
// DEBUG: (188, 17)
// DEBUG: Operating on marked
// DEBUG: ['for', 'early', 'promotion,', 'Trimmer', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on for
// DEBUG: 39
// DEBUG: (34, 29)
// DEBUG: Operating on ignominy.
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on That
// DEBUG: 132
// DEBUG: (127, 29)
// DEBUG: Operating on morning
// DEBUG: 182
// DEBUG: (177, 29)
// DEBUG: Operating on he
// DEBUG: 197
// DEBUG: (192, 29)
// DEBUG: Operating on had
// DEBUG: ['marked', 'for', 'ignominy.', 'That', 'morning', 'he']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on appeared
// DEBUG: 71
// DEBUG: (66, 41)
// DEBUG: Operating on at
// DEBUG: 86
// DEBUG: (81, 41)
// DEBUG: Operating on the
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on precise
// DEBUG: 158
// DEBUG: (153, 41)
// DEBUG: Operating on time
// DEBUG: 187
// DEBUG: (182, 41)
// DEBUG: Operating on stated
// DEBUG: ['had', 'appeared', 'at', 'the', 'precise', 'time']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (12, 53)
// DEBUG: Operating on in
// DEBUG: 32
// DEBUG: (27, 53)
// DEBUG: Operating on orders.
// DEBUG: 82
// DEBUG: (77, 53)
// DEBUG: Operating on Everyone
// DEBUG: 139
// DEBUG: (134, 53)
// DEBUG: Operating on else
// DEBUG: 168
// DEBUG: (163, 53)
// DEBUG: Operating on had
// DEBUG: 190
// DEBUG: (185, 53)
// DEBUG: Operating on been
// DEBUG: ['stated', 'in', 'orders.', 'Everyone', 'else', 'had']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on waiting
// DEBUG: 65
// DEBUG: (60, 65)
// DEBUG: Operating on five
// DEBUG: 94
// DEBUG: (89, 65)
// DEBUG: Operating on minutes
// DEBUG: 144
// DEBUG: (139, 65)
// DEBUG: Operating on and
// DEBUG: 166
// DEBUG: (161, 65)
// DEBUG: Operating on Colour
// DEBUG: 209
// DEBUG: (204, 65)
// DEBUG: Operating on Sergeant
// DEBUG: ['been', 'waiting', 'five', 'minutes', 'and', 'Colour']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (14, 77)
// DEBUG: Operating on Cork
// DEBUG: 48
// DEBUG: (43, 77)
// DEBUG: Operating on called
// DEBUG: 91
// DEBUG: (86, 77)
// DEBUG: Operating on out
// DEBUG: 113
// DEBUG: (108, 77)
// DEBUG: Operating on the
// DEBUG: 135
// DEBUG: (130, 77)
// DEBUG: Operating on marker
// DEBUG: 178
// DEBUG: (173, 77)
// DEBUG: Operating on just
// DEBUG: 207
// DEBUG: (202, 77)
// DEBUG: Operating on as
// DEBUG: ['Sergeant', 'Cork', 'called', 'out', 'the', 'marker', 'just']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (8, 89)
// DEBUG: Operating on Trimmer
// DEBUG: 63
// DEBUG: (58, 89)
// DEBUG: Operating on appeared.
// DEBUG: 127
// DEBUG: (122, 89)
// DEBUG: Operating on So
// DEBUG: 142
// DEBUG: (137, 89)
// DEBUG: Operating on it
// DEBUG: 157
// DEBUG: (152, 89)
// DEBUG: Operating on was
// DEBUG: 179
// DEBUG: (174, 89)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['as', 'Trimmer', 'appeared.', 'So', 'it', 'was']
// DEBUG: drawing cursor (5, 89)
// DEBUG: 207
// DEBUG: (202, 101)
// DEBUG: Operating on when
// DEBUG: ['TIMESTRING']
// DEBUG: drawing cursor (5, 101)
// DEBUG: (10, 113)
// DEBUG: Operating on they
// DEBUG: 44
// DEBUG: (39, 113)
// DEBUG: Operating on were
// DEBUG: 73
// DEBUG: (68, 113)
// DEBUG: Operating on dismissed.
// DEBUG: 144
// DEBUG: ['twelve-thirty-five']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- Evelyn Waugh, Men At Arms']
// DEBUG: drawing cursor (18, 192)
    paint.Paint_DrawString_EN(5, 5, "As surely as Apthorpe was marked", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "for early promotion, Trimmer was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "marked for ignominy. That morning he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "had appeared at the precise time", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "stated in orders. Everyone else had", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "been waiting five minutes and Colour", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "Sergeant Cork called out the marker just", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "as Trimmer appeared. So it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "twelve-thirty-five", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(18, 192, "- Evelyn Waugh, Men At Arms", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:36 for 0 quotations:
    case 756:
      Serial.println(F("No quotes for 12:36"));
      return;

    // Codegen for 12:37 for 0 quotations:
    case 757:
      Serial.println(F("No quotes for 12:37"));
      return;

    // Codegen for 12:38 for 0 quotations:
    case 758:
      Serial.println(F("No quotes for 12:38"));
      return;

    // Codegen for 12:39 for 1 quotations:
    case 759:
      Serial.println(F("Only one option for 12:39:"));
    Serial.println(F("12:39 - Next, he remembered that the morrow of Christmas would be the twenty-seventh day of the moon, and that consequently high water would be at twenty-one minutes past three, the half-ebb at a quarter past seven, low water at thirty-three minutes past nine, and half flood at thirty-nine minutes past twelve. - Victor Hugo, The Toilers of the Sea"));
// DEBUG: (5, 5)
// DEBUG: Operating on Next,
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on he
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on remembered
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on that
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on the
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on morrow
// DEBUG: ['Next,', 'he', 'remembered', 'that', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on of
// DEBUG: 32
// DEBUG: (27, 17)
// DEBUG: Operating on Christmas
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on would
// DEBUG: 132
// DEBUG: (127, 17)
// DEBUG: Operating on be
// DEBUG: 147
// DEBUG: (142, 17)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on twenty-seventh
// DEBUG: ['morrow', 'of', 'Christmas', 'would', 'be', 'the']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (20, 29)
// DEBUG: Operating on day
// DEBUG: 47
// DEBUG: (42, 29)
// DEBUG: Operating on of
// DEBUG: 62
// DEBUG: (57, 29)
// DEBUG: Operating on the
// DEBUG: 84
// DEBUG: (79, 29)
// DEBUG: Operating on moon,
// DEBUG: 120
// DEBUG: (115, 29)
// DEBUG: Operating on and
// DEBUG: 142
// DEBUG: (137, 29)
// DEBUG: Operating on that
// DEBUG: 171
// DEBUG: (166, 29)
// DEBUG: Operating on consequently
// DEBUG: ['twenty-seventh', 'day', 'of', 'the', 'moon,', 'and', 'that']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (18, 41)
// DEBUG: Operating on high
// DEBUG: 52
// DEBUG: (47, 41)
// DEBUG: Operating on water
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on would
// DEBUG: 124
// DEBUG: (119, 41)
// DEBUG: Operating on be
// DEBUG: 139
// DEBUG: (134, 41)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 41)
// DEBUG: Operating on twenty-one
// DEBUG: ['consequently', 'high', 'water', 'would', 'be', 'at']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (16, 53)
// DEBUG: Operating on minutes
// DEBUG: 71
// DEBUG: (66, 53)
// DEBUG: Operating on past
// DEBUG: 100
// DEBUG: (95, 53)
// DEBUG: Operating on three,
// DEBUG: 143
// DEBUG: (138, 53)
// DEBUG: Operating on the
// DEBUG: 165
// DEBUG: (160, 53)
// DEBUG: Operating on half-ebb
// DEBUG: ['twenty-one', 'minutes', 'past', 'three,', 'the']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (14, 65)
// DEBUG: Operating on at
// DEBUG: 34
// DEBUG: (29, 65)
// DEBUG: Operating on a
// DEBUG: 42
// DEBUG: (37, 65)
// DEBUG: Operating on quarter
// DEBUG: 92
// DEBUG: (87, 65)
// DEBUG: Operating on past
// DEBUG: 121
// DEBUG: (116, 65)
// DEBUG: Operating on seven,
// DEBUG: 164
// DEBUG: (159, 65)
// DEBUG: Operating on low
// DEBUG: 186
// DEBUG: (181, 65)
// DEBUG: Operating on water
// DEBUG: ['half-ebb', 'at', 'a', 'quarter', 'past', 'seven,', 'low']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (11, 77)
// DEBUG: Operating on at
// DEBUG: 31
// DEBUG: (26, 77)
// DEBUG: Operating on thirty-three
// DEBUG: 116
// DEBUG: (111, 77)
// DEBUG: Operating on minutes
// DEBUG: 166
// DEBUG: (161, 77)
// DEBUG: Operating on past
// DEBUG: 195
// DEBUG: (190, 77)
// DEBUG: Operating on nine,
// DEBUG: ['water', 'at', 'thirty-three', 'minutes', 'past']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (11, 89)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 89)
// DEBUG: Operating on half
// DEBUG: 67
// DEBUG: (62, 89)
// DEBUG: Operating on flood
// DEBUG: 103
// DEBUG: (98, 89)
// DEBUG: Operating on at
// DEBUG: 118
// DEBUG: (113, 89)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['nine,', 'and', 'half', 'flood', 'at']
// DEBUG: drawing cursor (5, 89)
// DEBUG: []
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['thirty-nine minutes past twelve']
// DEBUG: drawing cursor (5, 101)
// DEBUG: ['- The Toilers of the Sea']
// DEBUG: drawing cursor (39, 192)
    paint.Paint_DrawString_EN(5, 5, "Next, he remembered that the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "morrow of Christmas would be the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "twenty-seventh day of the moon, and that", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "consequently high water would be at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "twenty-one minutes past three, the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "half-ebb at a quarter past seven, low", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "water at thirty-three minutes past", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "nine, and half flood at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "thirty-nine minutes past twelve", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(39, 192, "- The Toilers of the Sea", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:40 for 1 quotations:
    case 760:
      Serial.println(F("Only one option for 12:40:"));
    Serial.println(F("12:40 - A little ormolu clock in the outer corridor indicated twenty minutes to one. The car was due at one-fifteen. Thirty-five minutes: oh, to escape for only that brief period! - Stacy Aumonier, Extremely Entertaining Short Stories (The Octave of Jealousy)"));
// DEBUG: (5, 5)
// DEBUG: Operating on A
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on little
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on ormolu
// DEBUG: 104
// DEBUG: (99, 5)
// DEBUG: Operating on clock
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on in
// DEBUG: 155
// DEBUG: (150, 5)
// DEBUG: Operating on the
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on outer
// DEBUG: ['A', 'little', 'ormolu', 'clock', 'in', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on corridor
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on indicated
// DEBUG: 137
// DEBUG: (132, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['outer', 'corridor', 'indicated']
// DEBUG: drawing cursor (5, 17)
// DEBUG: []
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on The
// DEBUG: 44
// DEBUG: (39, 41)
// DEBUG: Operating on car
// DEBUG: 66
// DEBUG: (61, 41)
// DEBUG: Operating on was
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on due
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on at
// DEBUG: 125
// DEBUG: (120, 41)
// DEBUG: Operating on one-fifteen.
// DEBUG: 210
// DEBUG: (205, 41)
// DEBUG: Operating on Thirty-five
// DEBUG: ['TIMESTRING.', 'The', 'car', 'was', 'due', 'at', 'one-fifteen.']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (17, 53)
// DEBUG: Operating on minutes:
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on oh,
// DEBUG: 101
// DEBUG: (96, 53)
// DEBUG: Operating on to
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on escape
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on for
// DEBUG: 181
// DEBUG: (176, 53)
// DEBUG: Operating on only
// DEBUG: 210
// DEBUG: (205, 53)
// DEBUG: Operating on that
// DEBUG: ['Thirty-five', 'minutes:', 'oh,', 'to', 'escape', 'for', 'only']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (10, 65)
// DEBUG: Operating on brief
// DEBUG: 51
// DEBUG: (46, 65)
// DEBUG: Operating on period!
// DEBUG: 101
// DEBUG: ['twenty minutes to one']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Stacy Aumonier']
// DEBUG: drawing cursor (95, 192)
    paint.Paint_DrawString_EN(5, 5, "A little ormolu clock in the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "outer corridor indicated", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "TIMESTRING. The car was due at one-fifteen.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "Thirty-five minutes: oh, to escape for only", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "twenty minutes to one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(95, 192, "- Stacy Aumonier", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:41 for 0 quotations:
    case 761:
      Serial.println(F("No quotes for 12:41"));
      return;

    // Codegen for 12:42 for 1 quotations:
    case 762:
      Serial.println(F("Only one option for 12:42:"));
    Serial.println(F("12:42 - The butt had been growing warm in her fingers; now the glowing end stung her skin. She crushed the cigarette out and stood, brushing ash from her black skirt. It was eighteen minutes to one. She went to the house phone and called his room. The telephone rang and rang, but there was no answer. - Herman Wouk, Marjorie Morningstar"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on butt
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on had
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on been
// DEBUG: 112
// DEBUG: (107, 5)
// DEBUG: Operating on growing
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on warm
// DEBUG: 191
// DEBUG: (186, 5)
// DEBUG: Operating on in
// DEBUG: 206
// DEBUG: (201, 5)
// DEBUG: Operating on her
// DEBUG: ['The', 'butt', 'had', 'been', 'growing', 'warm', 'in']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on fingers;
// DEBUG: 71
// DEBUG: (66, 17)
// DEBUG: Operating on now
// DEBUG: 93
// DEBUG: (88, 17)
// DEBUG: Operating on the
// DEBUG: 115
// DEBUG: (110, 17)
// DEBUG: Operating on glowing
// DEBUG: 165
// DEBUG: (160, 17)
// DEBUG: Operating on end
// DEBUG: 187
// DEBUG: (182, 17)
// DEBUG: Operating on stung
// DEBUG: ['her', 'fingers;', 'now', 'the', 'glowing', 'end']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (11, 29)
// DEBUG: Operating on her
// DEBUG: 38
// DEBUG: (33, 29)
// DEBUG: Operating on skin.
// DEBUG: 74
// DEBUG: (69, 29)
// DEBUG: Operating on She
// DEBUG: 96
// DEBUG: (91, 29)
// DEBUG: Operating on crushed
// DEBUG: 146
// DEBUG: (141, 29)
// DEBUG: Operating on the
// DEBUG: 168
// DEBUG: (163, 29)
// DEBUG: Operating on cigarette
// DEBUG: ['stung', 'her', 'skin.', 'She', 'crushed', 'the']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (15, 41)
// DEBUG: Operating on out
// DEBUG: 42
// DEBUG: (37, 41)
// DEBUG: Operating on and
// DEBUG: 64
// DEBUG: (59, 41)
// DEBUG: Operating on stood,
// DEBUG: 107
// DEBUG: (102, 41)
// DEBUG: Operating on brushing
// DEBUG: 164
// DEBUG: (159, 41)
// DEBUG: Operating on ash
// DEBUG: 186
// DEBUG: (181, 41)
// DEBUG: Operating on from
// DEBUG: ['cigarette', 'out', 'and', 'stood,', 'brushing', 'ash']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (10, 53)
// DEBUG: Operating on her
// DEBUG: 37
// DEBUG: (32, 53)
// DEBUG: Operating on black
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on skirt.
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on It
// DEBUG: 131
// DEBUG: (126, 53)
// DEBUG: Operating on was
// DEBUG: 153
// DEBUG: (148, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['from', 'her', 'black', 'skirt.', 'It', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: []
// DEBUG: drawing cursor (5, 65)
// DEBUG: (17, 77)
// DEBUG: Operating on She
// DEBUG: 44
// DEBUG: (39, 77)
// DEBUG: Operating on went
// DEBUG: 73
// DEBUG: (68, 77)
// DEBUG: Operating on to
// DEBUG: 88
// DEBUG: (83, 77)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 77)
// DEBUG: Operating on house
// DEBUG: 146
// DEBUG: (141, 77)
// DEBUG: Operating on phone
// DEBUG: 182
// DEBUG: (177, 77)
// DEBUG: Operating on and
// DEBUG: 204
// DEBUG: (199, 77)
// DEBUG: Operating on called
// DEBUG: ['TIMESTRING.', 'She', 'went', 'to', 'the', 'house', 'phone', 'and']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (12, 89)
// DEBUG: Operating on his
// DEBUG: 39
// DEBUG: (34, 89)
// DEBUG: Operating on room.
// DEBUG: 75
// DEBUG: (70, 89)
// DEBUG: Operating on The
// DEBUG: 97
// DEBUG: (92, 89)
// DEBUG: Operating on telephone
// DEBUG: 161
// DEBUG: (156, 89)
// DEBUG: Operating on rang
// DEBUG: 190
// DEBUG: (185, 89)
// DEBUG: Operating on and
// DEBUG: ['called', 'his', 'room.', 'The', 'telephone', 'rang']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (9, 101)
// DEBUG: Operating on rang,
// DEBUG: 50
// DEBUG: (45, 101)
// DEBUG: Operating on but
// DEBUG: 72
// DEBUG: (67, 101)
// DEBUG: Operating on there
// DEBUG: 108
// DEBUG: (103, 101)
// DEBUG: Operating on was
// DEBUG: 130
// DEBUG: (125, 101)
// DEBUG: Operating on no
// DEBUG: 145
// DEBUG: (140, 101)
// DEBUG: Operating on answer.
// DEBUG: 195
// DEBUG: ['eighteen minutes to one']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- Marjorie Morningstar']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "The butt had been growing warm in", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "her fingers; now the glowing end", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "stung her skin. She crushed the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "cigarette out and stood, brushing ash", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "from her black skirt. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "TIMESTRING. She went to the house phone and", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "called his room. The telephone rang", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "eighteen minutes to one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Marjorie Morningstar", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:43 for 1 quotations:
    case 763:
      Serial.println(F("Only one option for 12:43:"));
    Serial.println(F("12:43 - Died five minutes ago, you say? he asked. His eye went to the watch on his wrist. Twelve-forty-three, he wrote on the blotter. - Agatha Christie, A Pocket Full of Rye"));
// DEBUG: (5, 5)
// DEBUG: Operating on Died
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on five
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on minutes
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on ago,
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on you
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on say?
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on he
// DEBUG: ['Died', 'five', 'minutes', 'ago,', 'you', 'say?']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (8, 17)
// DEBUG: Operating on asked.
// DEBUG: 56
// DEBUG: (51, 17)
// DEBUG: Operating on His
// DEBUG: 78
// DEBUG: (73, 17)
// DEBUG: Operating on eye
// DEBUG: 100
// DEBUG: (95, 17)
// DEBUG: Operating on went
// DEBUG: 129
// DEBUG: (124, 17)
// DEBUG: Operating on to
// DEBUG: 144
// DEBUG: (139, 17)
// DEBUG: Operating on the
// DEBUG: 166
// DEBUG: (161, 17)
// DEBUG: Operating on watch
// DEBUG: 202
// DEBUG: (197, 17)
// DEBUG: Operating on on
// DEBUG: ['he', 'asked.', 'His', 'eye', 'went', 'to', 'the', 'watch']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on his
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on wrist.
// DEBUG: 78
// DEBUG: (73, 29)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['on', 'his', 'wrist.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (17, 41)
// DEBUG: Operating on he
// DEBUG: 37
// DEBUG: (32, 41)
// DEBUG: Operating on wrote
// DEBUG: 73
// DEBUG: (68, 41)
// DEBUG: Operating on on
// DEBUG: 88
// DEBUG: (83, 41)
// DEBUG: Operating on the
// DEBUG: 110
// DEBUG: (105, 41)
// DEBUG: Operating on blotter.
// DEBUG: 167
// DEBUG: ['Twelve-forty-three']
// DEBUG: drawing cursor (73, 29)
// DEBUG: ['- A Pocket Full of Rye']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "Died five minutes ago, you say?", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "he asked. His eye went to the watch", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "on his wrist.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(73, 29, "Twelve-forty-three", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- A Pocket Full of Rye", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:44 for 1 quotations:
    case 764:
      Serial.println(F("Only one option for 12:44:"));
    Serial.println(F("12:44 - It is around quarter to one. No sunlight comes into the room now through the windows at right. Outside the day is fine but increasingly sultry, with a faint haziness in the air which softens the glare of the sun. - Eugene O'Neil, Long Day's Journey Into Night "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on is
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on No
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on sunlight
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on comes
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on into
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on the
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on room
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on now
// DEBUG: ['TIMESTRING.', 'No', 'sunlight', 'comes', 'into', 'the', 'room']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on through
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on the
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on windows
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on at
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on right.
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on Outside
// DEBUG: ['now', 'through', 'the', 'windows', 'at', 'right.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on day
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on is
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on fine
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on but
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on increasingly
// DEBUG: ['Outside', 'the', 'day', 'is', 'fine', 'but']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (18, 53)
// DEBUG: Operating on sultry,
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on with
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on a
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on faint
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on haziness
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on in
// DEBUG: ['increasingly', 'sultry,', 'with', 'a', 'faint', 'haziness']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on air
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on which
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on softens
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on the
// DEBUG: 165
// DEBUG: (160, 65)
// DEBUG: Operating on glare
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on of
// DEBUG: ['in', 'the', 'air', 'which', 'softens', 'the', 'glare']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 77)
// DEBUG: Operating on sun.
// DEBUG: 64
// DEBUG: ['around quarter to one']
// DEBUG: drawing cursor (35, 5)
// DEBUG: ["- Eugene O'Neil"]
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "It is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. No sunlight comes into the room", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "now through the windows at right.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Outside the day is fine but", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "increasingly sultry, with a faint haziness", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "in the air which softens the glare", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(35, 5, "around quarter to one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Eugene O'Neil", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:45 for 1 quotations:
    case 765:
      Serial.println(F("Only one option for 12:45:"));
    Serial.println(F("12:45 - Look out for D. He has just now, 12:45, come from Carfax hurriedly and hastened towards the South. He seems to be going the round and may want to see you: Mina - Bram Stoker, Dracula "));
// DEBUG: (5, 5)
// DEBUG: Operating on Look
// DEBUG: 39
// DEBUG: (34, 5)
// DEBUG: Operating on out
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on for
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on D.
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on He
// DEBUG: 113
// DEBUG: (108, 5)
// DEBUG: Operating on has
// DEBUG: 135
// DEBUG: (130, 5)
// DEBUG: Operating on just
// DEBUG: 164
// DEBUG: (159, 5)
// DEBUG: Operating on now,
// DEBUG: 193
// DEBUG: (188, 5)
// DEBUG: Operating on TIMESTRING,
// DEBUG: Wrorking on the timestring
// DEBUG: ['Look', 'out', 'for', 'D.', 'He', 'has', 'just', 'now,']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 123
// DEBUG: (118, 17)
// DEBUG: Operating on come
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on from
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on Carfax
// DEBUG: ['TIMESTRING,', 'come', 'from']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on hurriedly
// DEBUG: 81
// DEBUG: (76, 29)
// DEBUG: Operating on and
// DEBUG: 103
// DEBUG: (98, 29)
// DEBUG: Operating on hastened
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on towards
// DEBUG: 210
// DEBUG: (205, 29)
// DEBUG: Operating on the
// DEBUG: ['Carfax', 'hurriedly', 'and', 'hastened', 'towards']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (9, 41)
// DEBUG: Operating on South.
// DEBUG: 57
// DEBUG: (52, 41)
// DEBUG: Operating on He
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on seems
// DEBUG: 108
// DEBUG: (103, 41)
// DEBUG: Operating on to
// DEBUG: 123
// DEBUG: (118, 41)
// DEBUG: Operating on be
// DEBUG: 138
// DEBUG: (133, 41)
// DEBUG: Operating on going
// DEBUG: 174
// DEBUG: (169, 41)
// DEBUG: Operating on the
// DEBUG: 196
// DEBUG: (191, 41)
// DEBUG: Operating on round
// DEBUG: ['the', 'South.', 'He', 'seems', 'to', 'be', 'going', 'the']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (11, 53)
// DEBUG: Operating on and
// DEBUG: 38
// DEBUG: (33, 53)
// DEBUG: Operating on may
// DEBUG: 60
// DEBUG: (55, 53)
// DEBUG: Operating on want
// DEBUG: 89
// DEBUG: (84, 53)
// DEBUG: Operating on to
// DEBUG: 104
// DEBUG: (99, 53)
// DEBUG: Operating on see
// DEBUG: 126
// DEBUG: (121, 53)
// DEBUG: Operating on you:
// DEBUG: 155
// DEBUG: (150, 53)
// DEBUG: Operating on Mina
// DEBUG: 184
// DEBUG: ['12:45']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Bram Stoker, Dracula ']
// DEBUG: drawing cursor (46, 192)
    paint.Paint_DrawString_EN(5, 5, "Look out for D. He has just now,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING, come from", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Carfax hurriedly and hastened towards", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "the South. He seems to be going the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "12:45", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(46, 192, "- Bram Stoker, Dracula ", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:46 for 1 quotations:
    case 766:
      Serial.println(F("Only one option for 12:46:"));
    Serial.println(F("12:46 - It is around quarter to one. No sunlight comes into the room now through the windows at right. Outside the day is fine but increasingly sultry, with a faint haziness in the air which softens the glare of the sun. - Eugene O'Neil, Long Day's Journey Into Night "));
// DEBUG: (5, 5)
// DEBUG: Operating on It
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on is
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['It', 'is']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (17, 17)
// DEBUG: Operating on No
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on sunlight
// DEBUG: 94
// DEBUG: (89, 17)
// DEBUG: Operating on comes
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on into
// DEBUG: 159
// DEBUG: (154, 17)
// DEBUG: Operating on the
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on room
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on now
// DEBUG: ['TIMESTRING.', 'No', 'sunlight', 'comes', 'into', 'the', 'room']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (9, 29)
// DEBUG: Operating on through
// DEBUG: 64
// DEBUG: (59, 29)
// DEBUG: Operating on the
// DEBUG: 86
// DEBUG: (81, 29)
// DEBUG: Operating on windows
// DEBUG: 136
// DEBUG: (131, 29)
// DEBUG: Operating on at
// DEBUG: 151
// DEBUG: (146, 29)
// DEBUG: Operating on right.
// DEBUG: 194
// DEBUG: (189, 29)
// DEBUG: Operating on Outside
// DEBUG: ['now', 'through', 'the', 'windows', 'at', 'right.']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on the
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on day
// DEBUG: 62
// DEBUG: (57, 41)
// DEBUG: Operating on is
// DEBUG: 77
// DEBUG: (72, 41)
// DEBUG: Operating on fine
// DEBUG: 106
// DEBUG: (101, 41)
// DEBUG: Operating on but
// DEBUG: 128
// DEBUG: (123, 41)
// DEBUG: Operating on increasingly
// DEBUG: ['Outside', 'the', 'day', 'is', 'fine', 'but']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (18, 53)
// DEBUG: Operating on sultry,
// DEBUG: 73
// DEBUG: (68, 53)
// DEBUG: Operating on with
// DEBUG: 102
// DEBUG: (97, 53)
// DEBUG: Operating on a
// DEBUG: 110
// DEBUG: (105, 53)
// DEBUG: Operating on faint
// DEBUG: 146
// DEBUG: (141, 53)
// DEBUG: Operating on haziness
// DEBUG: 203
// DEBUG: (198, 53)
// DEBUG: Operating on in
// DEBUG: ['increasingly', 'sultry,', 'with', 'a', 'faint', 'haziness']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (8, 65)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 65)
// DEBUG: Operating on air
// DEBUG: 57
// DEBUG: (52, 65)
// DEBUG: Operating on which
// DEBUG: 93
// DEBUG: (88, 65)
// DEBUG: Operating on softens
// DEBUG: 143
// DEBUG: (138, 65)
// DEBUG: Operating on the
// DEBUG: 165
// DEBUG: (160, 65)
// DEBUG: Operating on glare
// DEBUG: 201
// DEBUG: (196, 65)
// DEBUG: Operating on of
// DEBUG: ['in', 'the', 'air', 'which', 'softens', 'the', 'glare']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (8, 77)
// DEBUG: Operating on the
// DEBUG: 35
// DEBUG: (30, 77)
// DEBUG: Operating on sun.
// DEBUG: 64
// DEBUG: ['around quarter to one']
// DEBUG: drawing cursor (35, 5)
// DEBUG: ["- Eugene O'Neil"]
// DEBUG: drawing cursor (102, 192)
    paint.Paint_DrawString_EN(5, 5, "It is", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING. No sunlight comes into the room", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "now through the windows at right.", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Outside the day is fine but", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "increasingly sultry, with a faint haziness", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "in the air which softens the glare", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(35, 5, "around quarter to one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(102, 192, "- Eugene O'Neil", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:47 for 0 quotations:
    case 767:
      Serial.println(F("No quotes for 12:47"));
      return;

    // Codegen for 12:48 for 0 quotations:
    case 768:
      Serial.println(F("No quotes for 12:48"));
      return;

    // Codegen for 12:49 for 1 quotations:
    case 769:
      Serial.println(F("Only one option for 12:49:"));
    Serial.println(F("12:49 - The first victim of the Krefeld raid died at 12:49 hours Double British Summer Time at B Flight, but it wasn't due to carelessness. - Len Deighton, Bomber"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on first
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on victim
// DEBUG: 111
// DEBUG: (106, 5)
// DEBUG: Operating on of
// DEBUG: 126
// DEBUG: (121, 5)
// DEBUG: Operating on the
// DEBUG: 148
// DEBUG: (143, 5)
// DEBUG: Operating on Krefeld
// DEBUG: 198
// DEBUG: (193, 5)
// DEBUG: Operating on raid
// DEBUG: ['The', 'first', 'victim', 'of', 'the', 'Krefeld']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on died
// DEBUG: 44
// DEBUG: (39, 17)
// DEBUG: Operating on at
// DEBUG: 59
// DEBUG: (54, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: 208
// DEBUG: (203, 17)
// DEBUG: Operating on Double
// DEBUG: ['raid', 'died', 'at', 'TIMESTRING']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on British
// DEBUG: 67
// DEBUG: (62, 29)
// DEBUG: Operating on Summer
// DEBUG: 110
// DEBUG: (105, 29)
// DEBUG: Operating on Time
// DEBUG: 139
// DEBUG: (134, 29)
// DEBUG: Operating on at
// DEBUG: 154
// DEBUG: (149, 29)
// DEBUG: Operating on B
// DEBUG: 162
// DEBUG: (157, 29)
// DEBUG: Operating on Flight,
// DEBUG: ['Double', 'British', 'Summer', 'Time', 'at', 'B']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (13, 41)
// DEBUG: Operating on but
// DEBUG: 40
// DEBUG: (35, 41)
// DEBUG: Operating on it
// DEBUG: 55
// DEBUG: (50, 41)
// DEBUG: Operating on wasn't
// DEBUG: 98
// DEBUG: (93, 41)
// DEBUG: Operating on due
// DEBUG: 120
// DEBUG: (115, 41)
// DEBUG: Operating on to
// DEBUG: 135
// DEBUG: (130, 41)
// DEBUG: Operating on carelessness.
// DEBUG: ['Flight,', 'but', 'it', "wasn't", 'due', 'to']
// DEBUG: drawing cursor (5, 41)
// DEBUG: ['12:49 hours']
// DEBUG: drawing cursor (54, 17)
// DEBUG: ['- Len Deighton, Bomber']
// DEBUG: drawing cursor (53, 192)
    paint.Paint_DrawString_EN(5, 5, "The first victim of the Krefeld", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "raid died at TIMESTRING", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "Double British Summer Time at B", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "Flight, but it wasn't due to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(54, 17, "12:49 hours", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(53, 192, "- Len Deighton, Bomber", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:50 for 1 quotations:
    case 770:
      Serial.println(F("Only one option for 12:50:"));
    Serial.println(F("12:50 - So presently Bert was sent up to the top of the house to look at a church clock which was visible therefrom, and when he came down he reported that it was ten minutes to one. - Robert Tressell, The Ragged Trousered Philanthropists"));
// DEBUG: (5, 5)
// DEBUG: Operating on So
// DEBUG: 25
// DEBUG: (20, 5)
// DEBUG: Operating on presently
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on Bert
// DEBUG: 118
// DEBUG: (113, 5)
// DEBUG: Operating on was
// DEBUG: 140
// DEBUG: (135, 5)
// DEBUG: Operating on sent
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on up
// DEBUG: 184
// DEBUG: (179, 5)
// DEBUG: Operating on to
// DEBUG: 199
// DEBUG: (194, 5)
// DEBUG: Operating on the
// DEBUG: ['So', 'presently', 'Bert', 'was', 'sent', 'up', 'to']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (9, 17)
// DEBUG: Operating on top
// DEBUG: 36
// DEBUG: (31, 17)
// DEBUG: Operating on of
// DEBUG: 51
// DEBUG: (46, 17)
// DEBUG: Operating on the
// DEBUG: 73
// DEBUG: (68, 17)
// DEBUG: Operating on house
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on to
// DEBUG: 124
// DEBUG: (119, 17)
// DEBUG: Operating on look
// DEBUG: 153
// DEBUG: (148, 17)
// DEBUG: Operating on at
// DEBUG: 168
// DEBUG: (163, 17)
// DEBUG: Operating on a
// DEBUG: 176
// DEBUG: (171, 17)
// DEBUG: Operating on church
// DEBUG: ['the', 'top', 'of', 'the', 'house', 'to', 'look', 'at', 'a']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (12, 29)
// DEBUG: Operating on clock
// DEBUG: 53
// DEBUG: (48, 29)
// DEBUG: Operating on which
// DEBUG: 89
// DEBUG: (84, 29)
// DEBUG: Operating on was
// DEBUG: 111
// DEBUG: (106, 29)
// DEBUG: Operating on visible
// DEBUG: 161
// DEBUG: (156, 29)
// DEBUG: Operating on therefrom,
// DEBUG: ['church', 'clock', 'which', 'was', 'visible']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (16, 41)
// DEBUG: Operating on and
// DEBUG: 43
// DEBUG: (38, 41)
// DEBUG: Operating on when
// DEBUG: 72
// DEBUG: (67, 41)
// DEBUG: Operating on he
// DEBUG: 87
// DEBUG: (82, 41)
// DEBUG: Operating on came
// DEBUG: 116
// DEBUG: (111, 41)
// DEBUG: Operating on down
// DEBUG: 145
// DEBUG: (140, 41)
// DEBUG: Operating on he
// DEBUG: 160
// DEBUG: (155, 41)
// DEBUG: Operating on reported
// DEBUG: ['therefrom,', 'and', 'when', 'he', 'came', 'down', 'he']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (14, 53)
// DEBUG: Operating on that
// DEBUG: 48
// DEBUG: (43, 53)
// DEBUG: Operating on it
// DEBUG: 63
// DEBUG: (58, 53)
// DEBUG: Operating on was
// DEBUG: 85
// DEBUG: (80, 53)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['reported', 'that', 'it', 'was']
// DEBUG: drawing cursor (5, 53)
// DEBUG: []
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['ten minutes to one']
// DEBUG: drawing cursor (5, 65)
// DEBUG: ['- Robert Tressell']
// DEBUG: drawing cursor (88, 192)
    paint.Paint_DrawString_EN(5, 5, "So presently Bert was sent up to", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "the top of the house to look at a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "church clock which was visible", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "therefrom, and when he came down he", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "reported that it was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "ten minutes to one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(88, 192, "- Robert Tressell", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:51 for 0 quotations:
    case 771:
      Serial.println(F("No quotes for 12:51"));
      return;

    // Codegen for 12:52 for 1 quotations:
    case 772:
      Serial.println(F("Only one option for 12:52:"));
    Serial.println(F("12:52 - The nightclub stood on the junction, flamboyant, still. It was 12.52. - Rupert Thomson, Dreams of Leaving"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on nightclub
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on stood
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on on
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on the
// DEBUG: 169
// DEBUG: (164, 5)
// DEBUG: Operating on junction,
// DEBUG: ['The', 'nightclub', 'stood', 'on', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (15, 17)
// DEBUG: Operating on flamboyant,
// DEBUG: 98
// DEBUG: (93, 17)
// DEBUG: Operating on still.
// DEBUG: 141
// DEBUG: (136, 17)
// DEBUG: Operating on It
// DEBUG: 156
// DEBUG: (151, 17)
// DEBUG: Operating on was
// DEBUG: 178
// DEBUG: (173, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: ['junction,', 'flamboyant,', 'still.', 'It', 'was']
// DEBUG: drawing cursor (5, 17)
// DEBUG: 123
// DEBUG: ['12.52']
// DEBUG: drawing cursor (5, 29)
// DEBUG: ['- Dreams of Leaving']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "The nightclub stood on the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "junction, flamboyant, still. It was", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "12.52", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Dreams of Leaving", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:53 for 1 quotations:
    case 773:
      Serial.println(F("Only one option for 12:53:"));
    Serial.println(F("12:53 - Aboot twelve miles. We ought tae pass her at Pinmore. She's due there at 12:53. - Dorothy L. Sayers, Five Red Herrings"));
// DEBUG: (5, 5)
// DEBUG: Operating on Aboot
// DEBUG: 46
// DEBUG: (41, 5)
// DEBUG: Operating on twelve
// DEBUG: 89
// DEBUG: (84, 5)
// DEBUG: Operating on miles.
// DEBUG: 132
// DEBUG: (127, 5)
// DEBUG: Operating on We
// DEBUG: 147
// DEBUG: (142, 5)
// DEBUG: Operating on ought
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on tae
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on pass
// DEBUG: ['Aboot', 'twelve', 'miles.', 'We', 'ought', 'tae']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (10, 17)
// DEBUG: Operating on her
// DEBUG: 37
// DEBUG: (32, 17)
// DEBUG: Operating on at
// DEBUG: 52
// DEBUG: (47, 17)
// DEBUG: Operating on Pinmore.
// DEBUG: 109
// DEBUG: (104, 17)
// DEBUG: Operating on She's
// DEBUG: 145
// DEBUG: (140, 17)
// DEBUG: Operating on due
// DEBUG: 167
// DEBUG: (162, 17)
// DEBUG: Operating on there
// DEBUG: 203
// DEBUG: (198, 17)
// DEBUG: Operating on at
// DEBUG: ['pass', 'her', 'at', 'Pinmore.', "She's", 'due', 'there']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 127
// DEBUG: ['12:53']
// DEBUG: drawing cursor (8, 29)
// DEBUG: ['- Five Red Herrings']
// DEBUG: drawing cursor (74, 192)
    paint.Paint_DrawString_EN(5, 5, "Aboot twelve miles. We ought tae", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "pass her at Pinmore. She's due there", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(8, 29, "12:53", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(74, 192, "- Five Red Herrings", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:54 for 1 quotations:
    case 774:
      Serial.println(F("Only one option for 12:54:"));
    Serial.println(F("12:54 - I listen to the different boats' horns, hoping to learn what kind of boat I'm hearing and what the signal means: is the boat leaving or entering the harbor; is it the ferry, or a whale-watching boat, or a fishing boat? At 5:33 pm there is a blast of two deep, resonant notes a major third apart. On another day there is the same blast at 12:54 pm. On another, exactly 8:00 am. - Lydia Davis, Varieties of Disturbance"));
// DEBUG: (5, 5)
// DEBUG: Operating on I
// DEBUG: 18
// DEBUG: (13, 5)
// DEBUG: Operating on listen
// DEBUG: 61
// DEBUG: (56, 5)
// DEBUG: Operating on to
// DEBUG: 76
// DEBUG: (71, 5)
// DEBUG: Operating on the
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on different
// DEBUG: 162
// DEBUG: (157, 5)
// DEBUG: Operating on boats'
// DEBUG: 205
// DEBUG: (200, 5)
// DEBUG: Operating on horns,
// DEBUG: ['I', 'listen', 'to', 'the', 'different', "boats'"]
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on hoping
// DEBUG: 60
// DEBUG: (55, 17)
// DEBUG: Operating on to
// DEBUG: 75
// DEBUG: (70, 17)
// DEBUG: Operating on learn
// DEBUG: 111
// DEBUG: (106, 17)
// DEBUG: Operating on what
// DEBUG: 140
// DEBUG: (135, 17)
// DEBUG: Operating on kind
// DEBUG: 169
// DEBUG: (164, 17)
// DEBUG: Operating on of
// DEBUG: 184
// DEBUG: (179, 17)
// DEBUG: Operating on boat
// DEBUG: ['horns,', 'hoping', 'to', 'learn', 'what', 'kind', 'of']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (10, 29)
// DEBUG: Operating on I'm
// DEBUG: 37
// DEBUG: (32, 29)
// DEBUG: Operating on hearing
// DEBUG: 87
// DEBUG: (82, 29)
// DEBUG: Operating on and
// DEBUG: 109
// DEBUG: (104, 29)
// DEBUG: Operating on what
// DEBUG: 138
// DEBUG: (133, 29)
// DEBUG: Operating on the
// DEBUG: 160
// DEBUG: (155, 29)
// DEBUG: Operating on signal
// DEBUG: 203
// DEBUG: (198, 29)
// DEBUG: Operating on means:
// DEBUG: ['boat', "I'm", 'hearing', 'and', 'what', 'the', 'signal']
// DEBUG: drawing cursor (5, 29)
// DEBUG: (12, 41)
// DEBUG: Operating on is
// DEBUG: 32
// DEBUG: (27, 41)
// DEBUG: Operating on the
// DEBUG: 54
// DEBUG: (49, 41)
// DEBUG: Operating on boat
// DEBUG: 83
// DEBUG: (78, 41)
// DEBUG: Operating on leaving
// DEBUG: 133
// DEBUG: (128, 41)
// DEBUG: Operating on or
// DEBUG: 148
// DEBUG: (143, 41)
// DEBUG: Operating on entering
// DEBUG: 205
// DEBUG: (200, 41)
// DEBUG: Operating on the
// DEBUG: ['means:', 'is', 'the', 'boat', 'leaving', 'or', 'entering']
// DEBUG: drawing cursor (5, 41)
// DEBUG: (9, 53)
// DEBUG: Operating on harbor;
// DEBUG: 64
// DEBUG: (59, 53)
// DEBUG: Operating on is
// DEBUG: 79
// DEBUG: (74, 53)
// DEBUG: Operating on it
// DEBUG: 94
// DEBUG: (89, 53)
// DEBUG: Operating on the
// DEBUG: 116
// DEBUG: (111, 53)
// DEBUG: Operating on ferry,
// DEBUG: 159
// DEBUG: (154, 53)
// DEBUG: Operating on or
// DEBUG: 174
// DEBUG: (169, 53)
// DEBUG: Operating on a
// DEBUG: 182
// DEBUG: (177, 53)
// DEBUG: Operating on whale-watching
// DEBUG: ['the', 'harbor;', 'is', 'it', 'the', 'ferry,', 'or', 'a']
// DEBUG: drawing cursor (5, 53)
// DEBUG: (20, 65)
// DEBUG: Operating on boat,
// DEBUG: 61
// DEBUG: (56, 65)
// DEBUG: Operating on or
// DEBUG: 76
// DEBUG: (71, 65)
// DEBUG: Operating on a
// DEBUG: 84
// DEBUG: (79, 65)
// DEBUG: Operating on fishing
// DEBUG: 134
// DEBUG: (129, 65)
// DEBUG: Operating on boat?
// DEBUG: 170
// DEBUG: (165, 65)
// DEBUG: Operating on At
// DEBUG: 185
// DEBUG: (180, 65)
// DEBUG: Operating on 5:33
// DEBUG: ['whale-watching', 'boat,', 'or', 'a', 'fishing', 'boat?', 'At']
// DEBUG: drawing cursor (5, 65)
// DEBUG: (10, 77)
// DEBUG: Operating on pm
// DEBUG: 30
// DEBUG: (25, 77)
// DEBUG: Operating on there
// DEBUG: 66
// DEBUG: (61, 77)
// DEBUG: Operating on is
// DEBUG: 81
// DEBUG: (76, 77)
// DEBUG: Operating on a
// DEBUG: 89
// DEBUG: (84, 77)
// DEBUG: Operating on blast
// DEBUG: 125
// DEBUG: (120, 77)
// DEBUG: Operating on of
// DEBUG: 140
// DEBUG: (135, 77)
// DEBUG: Operating on two
// DEBUG: 162
// DEBUG: (157, 77)
// DEBUG: Operating on deep,
// DEBUG: 198
// DEBUG: (193, 77)
// DEBUG: Operating on resonant
// DEBUG: ['5:33', 'pm', 'there', 'is', 'a', 'blast', 'of', 'two', 'deep,']
// DEBUG: drawing cursor (5, 77)
// DEBUG: (14, 89)
// DEBUG: Operating on notes
// DEBUG: 55
// DEBUG: (50, 89)
// DEBUG: Operating on a
// DEBUG: 63
// DEBUG: (58, 89)
// DEBUG: Operating on major
// DEBUG: 99
// DEBUG: (94, 89)
// DEBUG: Operating on third
// DEBUG: 135
// DEBUG: (130, 89)
// DEBUG: Operating on apart.
// DEBUG: 178
// DEBUG: (173, 89)
// DEBUG: Operating on On
// DEBUG: 193
// DEBUG: (188, 89)
// DEBUG: Operating on another
// DEBUG: ['resonant', 'notes', 'a', 'major', 'third', 'apart.', 'On']
// DEBUG: drawing cursor (5, 89)
// DEBUG: (13, 101)
// DEBUG: Operating on day
// DEBUG: 40
// DEBUG: (35, 101)
// DEBUG: Operating on there
// DEBUG: 76
// DEBUG: (71, 101)
// DEBUG: Operating on is
// DEBUG: 91
// DEBUG: (86, 101)
// DEBUG: Operating on the
// DEBUG: 113
// DEBUG: (108, 101)
// DEBUG: Operating on same
// DEBUG: 142
// DEBUG: (137, 101)
// DEBUG: Operating on blast
// DEBUG: 178
// DEBUG: (173, 101)
// DEBUG: Operating on at
// DEBUG: 193
// DEBUG: (188, 101)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['another', 'day', 'there', 'is', 'the', 'same', 'blast', 'at']
// DEBUG: drawing cursor (5, 101)
// DEBUG: 144
// DEBUG: (139, 113)
// DEBUG: Operating on On
// DEBUG: 159
// DEBUG: (154, 113)
// DEBUG: Operating on another,
// DEBUG: ['TIMESTRING', 'On']
// DEBUG: drawing cursor (5, 113)
// DEBUG: (14, 125)
// DEBUG: Operating on exactly
// DEBUG: 69
// DEBUG: (64, 125)
// DEBUG: Operating on 8:00
// DEBUG: 98
// DEBUG: (93, 125)
// DEBUG: Operating on am.
// DEBUG: 120
// DEBUG: ['12:54 pm.']
// DEBUG: drawing cursor (5, 113)
// DEBUG: ['- Varieties of Disturbance']
// DEBUG: drawing cursor (25, 192)
    paint.Paint_DrawString_EN(5, 5, "I listen to the different boats'", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "horns, hoping to learn what kind of", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 29, "boat I'm hearing and what the signal", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 41, "means: is the boat leaving or entering", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 53, "the harbor; is it the ferry, or a", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 65, "whale-watching boat, or a fishing boat? At", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 77, "5:33 pm there is a blast of two deep,", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 89, "resonant notes a major third apart. On", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 101, "another day there is the same blast at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "TIMESTRING On", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 113, "12:54 pm.", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(25, 192, "- Varieties of Disturbance", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:55 for 1 quotations:
    case 775:
      Serial.println(F("Only one option for 12:55:"));
    Serial.println(F("12:55 - The inspector glanced at the clock. Five to one. A busy morning. - Ngaio Marsh, A Man Lay Dead"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on inspector
// DEBUG: 96
// DEBUG: (91, 5)
// DEBUG: Operating on glanced
// DEBUG: 146
// DEBUG: (141, 5)
// DEBUG: Operating on at
// DEBUG: 161
// DEBUG: (156, 5)
// DEBUG: Operating on the
// DEBUG: 183
// DEBUG: (178, 5)
// DEBUG: Operating on clock.
// DEBUG: ['The', 'inspector', 'glanced', 'at', 'the']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (12, 17)
// DEBUG: Operating on TIMESTRING.
// DEBUG: Wrorking on the timestring
// DEBUG: 173
// DEBUG: (168, 17)
// DEBUG: Operating on A
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on busy
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on morning.
// DEBUG: ['clock.', 'TIMESTRING.', 'A', 'busy']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['Five to one']
// DEBUG: drawing cursor (12, 17)
// DEBUG: ['- Ngaio Marsh, A Man Lay Dead']
// DEBUG: drawing cursor (4, 192)
    paint.Paint_DrawString_EN(5, 5, "The inspector glanced at the", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "clock. TIMESTRING. A busy", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(12, 17, "Five to one", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(4, 192, "- Ngaio Marsh, A Man Lay Dead", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:56 for 0 quotations:
    case 776:
      Serial.println(F("No quotes for 12:56"));
      return;

    // Codegen for 12:57 for 0 quotations:
    case 777:
      Serial.println(F("No quotes for 12:57"));
      return;

    // Codegen for 12:58 for 1 quotations:
    case 778:
      Serial.println(F("Only one option for 12:58:"));
    Serial.println(F("12:58 - The watch on my wrist showed 12.58pm I'd have time to hit the morgue. - Ilona Andrews, Magic Bites"));
// DEBUG: (5, 5)
// DEBUG: Operating on The
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on watch
// DEBUG: 68
// DEBUG: (63, 5)
// DEBUG: Operating on on
// DEBUG: 83
// DEBUG: (78, 5)
// DEBUG: Operating on my
// DEBUG: 98
// DEBUG: (93, 5)
// DEBUG: Operating on wrist
// DEBUG: 134
// DEBUG: (129, 5)
// DEBUG: Operating on showed
// DEBUG: 177
// DEBUG: (172, 5)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['The', 'watch', 'on', 'my', 'wrist', 'showed']
// DEBUG: drawing cursor (5, 5)
// DEBUG: 130
// DEBUG: (125, 17)
// DEBUG: Operating on I'd
// DEBUG: 152
// DEBUG: (147, 17)
// DEBUG: Operating on have
// DEBUG: 181
// DEBUG: (176, 17)
// DEBUG: Operating on time
// DEBUG: 210
// DEBUG: (205, 17)
// DEBUG: Operating on to
// DEBUG: ['TIMESTRING', "I'd", 'have', 'time']
// DEBUG: drawing cursor (5, 17)
// DEBUG: (8, 29)
// DEBUG: Operating on hit
// DEBUG: 35
// DEBUG: (30, 29)
// DEBUG: Operating on the
// DEBUG: 57
// DEBUG: (52, 29)
// DEBUG: Operating on morgue.
// DEBUG: 107
// DEBUG: ['12.58pm']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['- Ilona Andrews, Magic Bites']
// DEBUG: drawing cursor (11, 192)
    paint.Paint_DrawString_EN(5, 5, "The watch on my wrist showed", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "TIMESTRING I'd have time", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "12.58pm", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(11, 192, "- Ilona Andrews, Magic Bites", &Font12, WHITE, BLACK);
      return;

    // Codegen for 12:59 for 1 quotations:
    case 779:
      Serial.println(F("Only one option for 12:59:"));
    Serial.println(F("12:59 - And I had been looking at my watch since the train had started at 12.59pm - Mark Haddon, The Curious Incident of the Dog in the Night-Time"));
// DEBUG: (5, 5)
// DEBUG: Operating on And
// DEBUG: 32
// DEBUG: (27, 5)
// DEBUG: Operating on I
// DEBUG: 40
// DEBUG: (35, 5)
// DEBUG: Operating on had
// DEBUG: 62
// DEBUG: (57, 5)
// DEBUG: Operating on been
// DEBUG: 91
// DEBUG: (86, 5)
// DEBUG: Operating on looking
// DEBUG: 141
// DEBUG: (136, 5)
// DEBUG: Operating on at
// DEBUG: 156
// DEBUG: (151, 5)
// DEBUG: Operating on my
// DEBUG: 171
// DEBUG: (166, 5)
// DEBUG: Operating on watch
// DEBUG: 207
// DEBUG: (202, 5)
// DEBUG: Operating on since
// DEBUG: ['And', 'I', 'had', 'been', 'looking', 'at', 'my', 'watch']
// DEBUG: drawing cursor (5, 5)
// DEBUG: (11, 17)
// DEBUG: Operating on the
// DEBUG: 38
// DEBUG: (33, 17)
// DEBUG: Operating on train
// DEBUG: 74
// DEBUG: (69, 17)
// DEBUG: Operating on had
// DEBUG: 96
// DEBUG: (91, 17)
// DEBUG: Operating on started
// DEBUG: 146
// DEBUG: (141, 17)
// DEBUG: Operating on at
// DEBUG: 161
// DEBUG: (156, 17)
// DEBUG: Operating on TIMESTRING
// DEBUG: Wrorking on the timestring
// DEBUG: ['since', 'the', 'train', 'had', 'started', 'at']
// DEBUG: drawing cursor (5, 17)
// DEBUG: ['12.59pm']
// DEBUG: drawing cursor (156, 17)
// DEBUG: ['- Mark Haddon']
// DEBUG: drawing cursor (116, 192)
    paint.Paint_DrawString_EN(5, 5, "And I had been looking at my watch", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(5, 17, "since the train had started at", &Font12, WHITE, BLACK);
    paint.Paint_DrawString_EN(156, 17, "12.59pm", &Font12, BLACK, WHITE);
    paint.Paint_DrawString_EN(116, 192, "- Mark Haddon", &Font12, WHITE, BLACK);
      return;

  } // end switch (minute)

} // end print_minute()
